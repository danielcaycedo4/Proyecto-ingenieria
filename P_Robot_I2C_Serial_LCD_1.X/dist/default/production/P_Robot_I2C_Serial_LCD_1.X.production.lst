

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 16 17:02:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 12/02/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4550 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  002B06                     __pidataCOMRAM:
   105                           	callstack 0
   106                           
   107                           ;initializer for _servos
   108  002B06  0005               	dw	5
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	callstack 0
   113  000800  00                 	db	0
   114  000801                     _dpowers:
   115                           	callstack 0
   116  000801  0001               	dw	1
   117  000803  000A               	dw	10
   118  000805  0064               	dw	100
   119  000807  03E8               	dw	1000
   120  000809  2710               	dw	10000
   121  00080B                     __end_of_dpowers:
   122                           	callstack 0
   123  0000                     _LATDbits	set	3980
   124  0000                     _SSPBUF	set	4041
   125  0000                     _TXREG	set	4013
   126  0000                     _RCREG	set	4014
   127  0000                     _TXSTA	set	4012
   128  0000                     _RCSTA	set	4011
   129  0000                     _SPBRG	set	4015
   130  0000                     _TRISCbits	set	3988
   131  0000                     _SSPADD	set	4040
   132  0000                     _SSPCON2	set	4037
   133  0000                     _SSPCON1	set	4038
   134  0000                     _SSPSTAT	set	4039
   135  0000                     _LATE	set	3981
   136  0000                     _LATD	set	3980
   137  0000                     _TRISE	set	3990
   138  0000                     _TRISD	set	3989
   139  0000                     _TRISBbits	set	3987
   140  0000                     _ADCON1	set	4033
   141  0000                     _OSCCON	set	4051
   142  0000                     _LATE0	set	31848
   143  0000                     _LATE1	set	31849
   144  0000                     _ACKEN	set	32300
   145  0000                     _ACKDT	set	32301
   146  0000                     _RCEN	set	32299
   147  0000                     _RSEN	set	32297
   148  0000                     _PEN	set	32298
   149  0000                     _SEN	set	32296
   150  0000                     _TXIF	set	31988
   151  0000                     _RCIF	set	31989
   152  0000                     _RCIE	set	31981
   153  0000                     _PEIE	set	32662
   154  0000                     _GIE	set	32663
   155  00080B                     STR_7:
   156  00080B  20                 	db	32
   157  00080C  45                 	db	69	;'E'
   158  00080D  6C                 	db	108	;'l'
   159  00080E  20                 	db	32
   160  00080F  63                 	db	99	;'c'
   161  000810  61                 	db	97	;'a'
   162  000811  72                 	db	114	;'r'
   163  000812  61                 	db	97	;'a'
   164  000813  63                 	db	99	;'c'
   165  000814  74                 	db	116	;'t'
   166  000815  65                 	db	101	;'e'
   167  000816  72                 	db	114	;'r'
   168  000817  20                 	db	32
   169  000818  72                 	db	114	;'r'
   170  000819  65                 	db	101	;'e'
   171  00081A  63                 	db	99	;'c'
   172  00081B  69                 	db	105	;'i'
   173  00081C  62                 	db	98	;'b'
   174  00081D  69                 	db	105	;'i'
   175  00081E  64                 	db	100	;'d'
   176  00081F  6F                 	db	111	;'o'
   177  000820  20                 	db	32
   178  000821  66                 	db	102	;'f'
   179  000822  75                 	db	117	;'u'
   180  000823  65                 	db	101	;'e'
   181  000824  3A                 	db	58	;':'
   182  000825  20                 	db	32
   183  000826  25                 	db	37
   184  000827  63                 	db	99	;'c'
   185  000828  00                 	db	0
   186  000829                     STR_5:
   187  000829  58                 	db	88	;'X'
   188  00082A  25                 	db	37
   189  00082B  63                 	db	99	;'c'
   190  00082C  25                 	db	37
   191  00082D  63                 	db	99	;'c'
   192  00082E  25                 	db	37
   193  00082F  63                 	db	99	;'c'
   194  000830  20                 	db	32
   195  000831  59                 	db	89	;'Y'
   196  000832  25                 	db	37
   197  000833  63                 	db	99	;'c'
   198  000834  25                 	db	37
   199  000835  63                 	db	99	;'c'
   200  000836  25                 	db	37
   201  000837  63                 	db	99	;'c'
   202  000838  20                 	db	32
   203  000839  5A                 	db	90	;'Z'
   204  00083A  25                 	db	37
   205  00083B  63                 	db	99	;'c'
   206  00083C  25                 	db	37
   207  00083D  63                 	db	99	;'c'
   208  00083E  25                 	db	37
   209  00083F  63                 	db	99	;'c'
   210  000840  00                 	db	0
   211  000841                     STR_4:
   212  000841  61                 	db	97	;'a'
   213  000842  6E                 	db	110	;'n'
   214  000843  67                 	db	103	;'g'
   215  000844  75                 	db	117	;'u'
   216  000845  6C                 	db	108	;'l'
   217  000846  6F                 	db	111	;'o'
   218  000847  20                 	db	32
   219  000848  61                 	db	97	;'a'
   220  000849  74                 	db	116	;'t'
   221  00084A  6F                 	db	111	;'o'
   222  00084B  69                 	db	105	;'i'
   223  00084C  20                 	db	32
   224  00084D  25                 	db	37
   225  00084E  64                 	db	100	;'d'
   226  00084F  20                 	db	32
   227  000850  0A                 	db	10
   228  000851  00                 	db	0
   229  000852                     STR_3:
   230  000852  61                 	db	97	;'a'
   231  000853  6E                 	db	110	;'n'
   232  000854  67                 	db	103	;'g'
   233  000855  75                 	db	117	;'u'
   234  000856  6C                 	db	108	;'l'
   235  000857  6F                 	db	111	;'o'
   236  000858  20                 	db	32
   237  000859  7A                 	db	122	;'z'
   238  00085A  20                 	db	32
   239  00085B  25                 	db	37
   240  00085C  63                 	db	99	;'c'
   241  00085D  20                 	db	32
   242  00085E  0A                 	db	10
   243  00085F  00                 	db	0
   244  000860                     STR_10:
   245  000860  20                 	db	32
   246  000861  41                 	db	65	;'A'
   247  000862  6E                 	db	110	;'n'
   248  000863  67                 	db	103	;'g'
   249  000864  75                 	db	117	;'u'
   250  000865  6C                 	db	108	;'l'
   251  000866  6F                 	db	111	;'o'
   252  000867  3A                 	db	58	;':'
   253  000868  20                 	db	32
   254  000869  25                 	db	37
   255  00086A  64                 	db	100	;'d'
   256  00086B  20                 	db	32
   257  00086C  0A                 	db	10
   258  00086D  00                 	db	0
   259  00086E                     STR_9:
   260  00086E  20                 	db	32
   261  00086F  53                 	db	83	;'S'
   262  000870  65                 	db	101	;'e'
   263  000871  72                 	db	114	;'r'
   264  000872  76                 	db	118	;'v'
   265  000873  6F                 	db	111	;'o'
   266  000874  3A                 	db	58	;':'
   267  000875  20                 	db	32
   268  000876  25                 	db	37
   269  000877  64                 	db	100	;'d'
   270  000878  20                 	db	32
   271  000879  0A                 	db	10
   272  00087A  00                 	db	0
   273  00087B                     STR_8:
   274  00087B  44                 	db	68	;'D'
   275  00087C  61                 	db	97	;'a'
   276  00087D  74                 	db	116	;'t'
   277  00087E  6F                 	db	111	;'o'
   278  00087F  3A                 	db	58	;':'
   279  000880  20                 	db	32
   280  000881  25                 	db	37
   281  000882  63                 	db	99	;'c'
   282  000883  00                 	db	0
   283  000884                     STR_1:
   284  000884  53                 	db	83	;'S'
   285  000885  65                 	db	101	;'e'
   286  000886  74                 	db	116	;'t'
   287  000887  74                 	db	116	;'t'
   288  000888  69                 	db	105	;'i'
   289  000889  6E                 	db	110	;'n'
   290  00088A  67                 	db	103	;'g'
   291  00088B  73                 	db	115	;'s'
   292  00088C  00                 	db	0
   293  00088D  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298  0028C8                     __pcinit:
   299                           	callstack 0
   300  0028C8                     start_initialization:
   301                           	callstack 0
   302  0028C8                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Initialize objects allocated to COMRAM (2 bytes)
   306                           ; load TBLPTR registers with __pidataCOMRAM
   307  0028C8  0E06               	movlw	low __pidataCOMRAM
   308  0028CA  6EF6               	movwf	tblptrl,c
   309  0028CC  0E2B               	movlw	high __pidataCOMRAM
   310  0028CE  6EF7               	movwf	tblptrh,c
   311  0028D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   312  0028D2  6EF8               	movwf	tblptru,c
   313  0028D4  0009               	tblrd		*+	;fetch initializer
   314  0028D6  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   315  0028DA  0009               	tblrd		*+	;fetch initializer
   316  0028DC  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   317                           
   318                           ; Clear objects allocated to BANK0 (115 bytes)
   319  0028E0  EE00  F060         	lfsr	0,__pbssBANK0
   320  0028E4  0E73               	movlw	115
   321  0028E6                     clear_0:
   322  0028E6  6AEE               	clrf	postinc0,c
   323  0028E8  06E8               	decf	wreg,f,c
   324  0028EA  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to COMRAM (34 bytes)
   327  0028EC  EE00  F03B         	lfsr	0,__pbssCOMRAM
   328  0028F0  0E22               	movlw	34
   329  0028F2                     clear_1:
   330  0028F2  6AEE               	clrf	postinc0,c
   331  0028F4  06E8               	decf	wreg,f,c
   332  0028F6  E1FD               	bnz	clear_1
   333  0028F8                     end_of_initialization:
   334                           	callstack 0
   335  0028F8                     __end_of__initialization:
   336                           	callstack 0
   337  0028F8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   338  0028FA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   339  0028FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   340  0028FE  6EF8               	movwf	tblptru,c
   341  002900  0100               	movlb	0
   342  002902  EF63  F015         	goto	_main	;jump to C main() function
   343                           
   344                           	psect	bssCOMRAM
   345  00003B                     __pbssCOMRAM:
   346                           	callstack 0
   347  00003B                     _coordinate:
   348                           	callstack 0
   349  00003B                     	ds	9
   350  000044                     _coor:
   351                           	callstack 0
   352  000044                     	ds	2
   353  000046                     _Angle:
   354                           	callstack 0
   355  000046                     	ds	2
   356  000048                     _z:
   357                           	callstack 0
   358  000048                     	ds	2
   359  00004A                     _DriverPin:
   360                           	callstack 0
   361  00004A                     	ds	2
   362  00004C                     _dato:
   363                           	callstack 0
   364  00004C                     	ds	2
   365  00004E                     _pos:
   366                           	callstack 0
   367  00004E                     	ds	2
   368  000050                     _i:
   369                           	callstack 0
   370  000050                     	ds	2
   371  000052                     _count2:
   372                           	callstack 0
   373  000052                     	ds	2
   374  000054                     _count1:
   375                           	callstack 0
   376  000054                     	ds	2
   377  000056                     _count:
   378                           	callstack 0
   379  000056                     	ds	2
   380  000058                     _d:
   381                           	callstack 0
   382  000058                     	ds	1
   383  000059                     _flag:
   384                           	callstack 0
   385  000059                     	ds	1
   386  00005A                     _angle:
   387                           	callstack 0
   388  00005A                     	ds	3
   389                           
   390                           	psect	dataCOMRAM
   391  00005D                     __pdataCOMRAM:
   392                           	callstack 0
   393  00005D                     _servos:
   394                           	callstack 0
   395  00005D                     	ds	2
   396                           
   397                           	psect	bssBANK0
   398  000060                     __pbssBANK0:
   399                           	callstack 0
   400  000060                     _angle_servos:
   401                           	callstack 0
   402  000060                     	ds	12
   403  00006C                     _Coordinate:
   404                           	callstack 0
   405  00006C                     	ds	2
   406  00006E                     _Coordinate_z:
   407                           	callstack 0
   408  00006E                     	ds	2
   409  000070                     _Coordinate_x:
   410                           	callstack 0
   411  000070                     	ds	2
   412  000072                     _Coordinate_y:
   413                           	callstack 0
   414  000072                     	ds	2
   415  000074                     _texto_LCD:
   416                           	callstack 0
   417  000074                     	ds	40
   418  00009C                     _text:
   419                           	callstack 0
   420  00009C                     	ds	40
   421  0000C4                     _data2:
   422                           	callstack 0
   423  0000C4                     	ds	4
   424  0000C8                     _coordinate_x:
   425                           	callstack 0
   426  0000C8                     	ds	3
   427  0000CB                     _coordinate_y:
   428                           	callstack 0
   429  0000CB                     	ds	3
   430  0000CE                     _coordinate_z:
   431                           	callstack 0
   432  0000CE                     	ds	3
   433  0000D1                     _d1:
   434                           	callstack 0
   435  0000D1                     	ds	1
   436  0000D2                     _data1:
   437                           	callstack 0
   438  0000D2                     	ds	1
   439                           
   440                           	psect	cstackBANK0
   441  0000D3                     __pcstackBANK0:
   442                           	callstack 0
   443  0000D3                     ??_readyI2C:
   444  0000D3                     ??_LCD:
   445  0000D3                     ?_strlen:
   446                           	callstack 0
   447  0000D3                     ?___lwdiv:
   448                           	callstack 0
   449  0000D3                     ?___fladd:
   450                           	callstack 0
   451  0000D3                     ?___fldiv:
   452                           	callstack 0
   453  0000D3                     ?___fltol:
   454                           	callstack 0
   455  0000D3                     ___lwdiv@dividend:
   456                           	callstack 0
   457  0000D3                     strlen@s:
   458                           	callstack 0
   459  0000D3                     ___flge@ff1:
   460                           	callstack 0
   461  0000D3                     ___fltol@f1:
   462                           	callstack 0
   463  0000D3                     ___fladd@b:
   464                           	callstack 0
   465  0000D3                     ___fldiv@b:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x0
   469  0000D3                     	ds	1
   470  0000D4                     sendI2C@data:
   471                           	callstack 0
   472  0000D4                     receiveI2C@flag:
   473                           	callstack 0
   474  0000D4                     LCD@data:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x1
   478  0000D4                     	ds	1
   479  0000D5                     writeI2C@Register:
   480                           	callstack 0
   481  0000D5                     receiveI2C@buffer:
   482                           	callstack 0
   483  0000D5                     SettingsLCD@word:
   484                           	callstack 0
   485  0000D5                     WriteLCD@word:
   486                           	callstack 0
   487  0000D5                     ___lwdiv@divisor:
   488                           	callstack 0
   489  0000D5                     strlen@cp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2
   493  0000D5                     	ds	1
   494  0000D6                     readI2C@Register:
   495                           	callstack 0
   496  0000D6                     writeI2C@Data:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x3
   500  0000D6                     	ds	1
   501  0000D7                     ??___fltol:
   502  0000D7                     readI2C@Data:
   503                           	callstack 0
   504  0000D7                     ___lwdiv@quotient:
   505                           	callstack 0
   506  0000D7                     ___flge@ff2:
   507                           	callstack 0
   508  0000D7                     ___fladd@a:
   509                           	callstack 0
   510  0000D7                     ___fldiv@a:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x4
   514  0000D7                     	ds	1
   515  0000D8                     writeI2C@bytes:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x5
   519  0000D8                     	ds	1
   520  0000D9                     ___lwdiv@counter:
   521                           	callstack 0
   522  0000D9                     readI2C@bytes:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x6
   526  0000D9                     	ds	1
   527  0000DA                     ??_writeI2C:
   528  0000DA                     ?___lwmod:
   529                           	callstack 0
   530  0000DA                     ___lwmod@dividend:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x7
   534  0000DA                     	ds	1
   535  0000DB                     ??___fladd:
   536  0000DB                     ??___fldiv:
   537  0000DB                     ??_readI2C:
   538  0000DB                     ??___flge:
   539  0000DB                     ___fltol@sign1:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x8
   543  0000DB                     	ds	1
   544  0000DC                     writeI2C@Address:
   545                           	callstack 0
   546  0000DC                     ___fltol@exp1:
   547                           	callstack 0
   548  0000DC                     ___lwmod@divisor:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x9
   552  0000DC                     	ds	1
   553  0000DD                     readI2C@Address:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0xA
   557  0000DD                     	ds	1
   558  0000DE                     ___lwmod@counter:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0xB
   562  0000DE                     	ds	1
   563  0000DF                     ?_sprintf:
   564                           	callstack 0
   565  0000DF                     ___fladd@signs:
   566                           	callstack 0
   567  0000DF                     sprintf@sp:
   568                           	callstack 0
   569  0000DF                     ___fldiv@rem:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0xC
   573  0000DF                     	ds	1
   574  0000E0                     ___fladd@aexp:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xD
   578  0000E0                     	ds	1
   579  0000E1                     ___fladd@bexp:
   580                           	callstack 0
   581  0000E1                     sprintf@f:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xE
   585  0000E1                     	ds	1
   586  0000E2                     ___fladd@grs:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0xF
   590  0000E2                     	ds	1
   591  0000E3                     ??_sprintf:
   592  0000E3                     ?___flsub:
   593                           	callstack 0
   594  0000E3                     ___fldiv@sign:
   595                           	callstack 0
   596  0000E3                     ___flsub@b:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x10
   600  0000E3                     	ds	1
   601  0000E4                     sprintf@flag:
   602                           	callstack 0
   603  0000E4                     ___fldiv@new_exp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x11
   607  0000E4                     	ds	1
   608  0000E5                     sprintf@prec:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x12
   612  0000E5                     	ds	1
   613  0000E6                     sprintf@ap:
   614                           	callstack 0
   615  0000E6                     ___fldiv@grs:
   616                           	callstack 0
   617                           
   618                           ; 4 bytes @ 0x13
   619  0000E6                     	ds	1
   620  0000E7                     ___flsub@a:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x14
   624  0000E7                     	ds	1
   625  0000E8                     sprintf@val:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x15
   629  0000E8                     	ds	2
   630  0000EA                     sprintf@c:
   631                           	callstack 0
   632  0000EA                     ___fldiv@bexp:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x17
   636  0000EA                     	ds	1
   637  0000EB                     ___fldiv@aexp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x18
   641  0000EB                     	ds	1
   642  0000EC                     setPWMFreq@freq:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x19
   646  0000EC                     	ds	4
   647  0000F0                     ??_setPWMFreq:
   648                           
   649                           ; 1 bytes @ 0x1D
   650  0000F0                     	ds	1
   651  0000F1                     setPWMFreq@prescale:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x1E
   655  0000F1                     	ds	1
   656  0000F2                     setPWMFreq@newmode:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1F
   660  0000F2                     	ds	1
   661  0000F3                     setPWMFreq@prescaleval:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x20
   665  0000F3                     	ds	4
   666  0000F7                     ??_settings:
   667                           
   668                           ; 1 bytes @ 0x24
   669  0000F7                     	ds	2
   670  0000F9                     
   671                           ; 1 bytes @ 0x26
   672                           
   673                           	psect	cstackCOMRAM
   674  000001                     __pcstackCOMRAM:
   675                           	callstack 0
   676  000001                     ??_isdigit:
   677  000001                     ??i2_readyI2C:
   678  000001                     ??i2_LCD:
   679  000001                     ?___awdiv:
   680                           	callstack 0
   681  000001                     ?i2___lwdiv:
   682                           	callstack 0
   683  000001                     ?i2_strlen:
   684                           	callstack 0
   685  000001                     ___awdiv@dividend:
   686                           	callstack 0
   687  000001                     i2___lwdiv@dividend:
   688                           	callstack 0
   689  000001                     i2strlen@s:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x0
   693  000001                     	ds	1
   694  000002                     _isdigit$853:
   695                           	callstack 0
   696  000002                     i2sendI2C@data:
   697                           	callstack 0
   698  000002                     i2LCD@data:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x1
   702  000002                     	ds	1
   703  000003                     isdigit@c:
   704                           	callstack 0
   705  000003                     i2writeI2C@Register:
   706                           	callstack 0
   707  000003                     i2SettingsLCD@word:
   708                           	callstack 0
   709  000003                     i2WriteLCD@word:
   710                           	callstack 0
   711  000003                     ___awdiv@divisor:
   712                           	callstack 0
   713  000003                     i2___lwdiv@divisor:
   714                           	callstack 0
   715  000003                     i2strlen@cp:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x2
   719  000003                     	ds	1
   720  000004                     i2writeI2C@Data:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x3
   724  000004                     	ds	1
   725  000005                     ___awdiv@counter:
   726                           	callstack 0
   727  000005                     i2___lwdiv@quotient:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x4
   731  000005                     	ds	1
   732  000006                     ___awdiv@sign:
   733                           	callstack 0
   734  000006                     i2writeI2C@bytes:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x5
   738  000006                     	ds	1
   739  000007                     i2___lwdiv@counter:
   740                           	callstack 0
   741  000007                     ___awdiv@quotient:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x6
   745  000007                     	ds	1
   746  000008                     ??i2_writeI2C:
   747  000008                     ?i2___lwmod:
   748                           	callstack 0
   749  000008                     i2___lwmod@dividend:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x7
   753  000008                     	ds	1
   754  000009                     ?___wmul:
   755                           	callstack 0
   756  000009                     ___wmul@multiplier:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x8
   760  000009                     	ds	1
   761  00000A                     i2writeI2C@Address:
   762                           	callstack 0
   763  00000A                     i2___lwmod@divisor:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x9
   767  00000A                     	ds	1
   768  00000B                     ___wmul@multiplicand:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xA
   772  00000B                     	ds	1
   773  00000C                     i2___lwmod@counter:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0xB
   777  00000C                     	ds	1
   778  00000D                     ?i2_sprintf:
   779                           	callstack 0
   780  00000D                     ___wmul@product:
   781                           	callstack 0
   782  00000D                     i2sprintf@sp:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0xC
   786  00000D                     	ds	2
   787  00000F                     ?_atoi:
   788                           	callstack 0
   789  00000F                     ?_map:
   790                           	callstack 0
   791  00000F                     map@x:
   792                           	callstack 0
   793  00000F                     atoi@s:
   794                           	callstack 0
   795  00000F                     i2sprintf@f:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0xE
   799  00000F                     	ds	2
   800  000011                     ??_atoi:
   801  000011                     map@In_Min:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x10
   805  000011                     	ds	2
   806  000013                     atoi@sign:
   807                           	callstack 0
   808  000013                     map@In_Max:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x12
   812  000013                     	ds	1
   813  000014                     atoi@a:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x13
   817  000014                     	ds	1
   818  000015                     map@Out_Min:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x14
   822  000015                     	ds	2
   823  000017                     map@Out_Max:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x16
   827  000017                     	ds	2
   828  000019                     
   829                           ; 1 bytes @ 0x18
   830  000019                     	ds	10
   831  000023                     ??i2_sprintf:
   832                           
   833                           ; 1 bytes @ 0x22
   834  000023                     	ds	1
   835  000024                     i2sprintf@flag:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x23
   839  000024                     	ds	1
   840  000025                     i2sprintf@prec:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x24
   844  000025                     	ds	1
   845  000026                     i2sprintf@ap:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x25
   849  000026                     	ds	2
   850  000028                     i2sprintf@val:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x27
   854  000028                     	ds	2
   855  00002A                     i2sprintf@c:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x29
   859  00002A                     	ds	1
   860  00002B                     mover_servo@servo:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x2A
   864  00002B                     	ds	2
   865  00002D                     mover_servo@angulo:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x2C
   869  00002D                     	ds	2
   870  00002F                     ??_mover_servo:
   871                           
   872                           ; 1 bytes @ 0x2E
   873  00002F                     	ds	2
   874  000031                     ??_algoritm:
   875                           
   876                           ; 1 bytes @ 0x30
   877  000031                     	ds	2
   878  000033                     ??_receive:
   879                           
   880                           ; 1 bytes @ 0x32
   881  000033                     	ds	8
   882                           
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 85 in file "Main.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         0       0       0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels required when called:   11
   908 ;; This function calls:
   909 ;;		_settings
   910 ;; This function is called by:
   911 ;;		Startup code after reset
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text0
   916  002AC6                     __ptext0:
   917                           	callstack 0
   918  002AC6                     _main:
   919                           	callstack 20
   920  002AC6                     
   921                           ;Main.c: 86: settings();
   922  002AC6  EC83  F00D         	call	_settings	;wreg free
   923  002ACA                     l163:
   924  002ACA  EF65  F015         	goto	l163
   925  002ACE  EF07  F000         	goto	start
   926  002AD2                     __end_of_main:
   927                           	callstack 0
   928                           
   929 ;; *************** function _settings *****************
   930 ;; Defined at:
   931 ;;		line 98 in file "Main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   945 ;;      Params:         0       0       0       0       0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0
   947 ;;      Temps:          0       2       0       0       0       0       0       0       0
   948 ;;      Totals:         0       2       0       0       0       0       0       0       0
   949 ;;Total ram usage:        2 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:   10
   952 ;; This function calls:
   953 ;;		_PrintDataLCD
   954 ;;		_SettingsLCD
   955 ;;		_setPWMFreq
   956 ;;		_sprintf
   957 ;;		_start
   958 ;;		_writeI2C
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text1
   965  001B06                     __ptext1:
   966                           	callstack 0
   967  001B06                     _settings:
   968                           	callstack 20
   969  001B06                     
   970                           ;Main.c: 99: OSCCON = 0x72;
   971  001B06  0E72               	movlw	114
   972  001B08  6ED3               	movwf	211,c	;volatile
   973                           
   974                           ;Main.c: 100: ADCON1 = 0x0F;
   975  001B0A  0E0F               	movlw	15
   976  001B0C  6EC1               	movwf	193,c	;volatile
   977  001B0E                     
   978                           ;Main.c: 101: TRISBbits.RB7=1;
   979  001B0E  8E93               	bsf	147,7,c	;volatile
   980  001B10                     
   981                           ;Main.c: 102: TRISBbits.RB6=0;
   982  001B10  9C93               	bcf	147,6,c	;volatile
   983                           
   984                           ;Main.c: 103: OSCCON = 0x72;
   985  001B12  0E72               	movlw	114
   986  001B14  6ED3               	movwf	211,c	;volatile
   987                           
   988                           ;Main.c: 104: ADCON1 = 0x0F;
   989  001B16  0E0F               	movlw	15
   990  001B18  6EC1               	movwf	193,c	;volatile
   991                           
   992                           ;Main.c: 105: TRISD = 0;
   993  001B1A  0E00               	movlw	0
   994  001B1C  6E95               	movwf	149,c	;volatile
   995                           
   996                           ;Main.c: 106: TRISE = 0;
   997  001B1E  0E00               	movlw	0
   998  001B20  6E96               	movwf	150,c	;volatile
   999                           
  1000                           ;Main.c: 107: LATD = 0;
  1001  001B22  0E00               	movlw	0
  1002  001B24  6E8C               	movwf	140,c	;volatile
  1003                           
  1004                           ;Main.c: 108: LATE = 0;
  1005  001B26  0E00               	movlw	0
  1006  001B28  6E8D               	movwf	141,c	;volatile
  1007  001B2A                     
  1008                           ;Main.c: 110: TRISBbits.RB0=1;
  1009  001B2A  8093               	bsf	147,0,c	;volatile
  1010  001B2C                     
  1011                           ;Main.c: 111: TRISBbits.RB1=1;
  1012  001B2C  8293               	bsf	147,1,c	;volatile
  1013                           
  1014                           ;Main.c: 112: SSPSTAT = 0x80;
  1015  001B2E  0E80               	movlw	128
  1016  001B30  6EC7               	movwf	199,c	;volatile
  1017                           
  1018                           ;Main.c: 113: SSPCON1 = 0x28;
  1019  001B32  0E28               	movlw	40
  1020  001B34  6EC6               	movwf	198,c	;volatile
  1021                           
  1022                           ;Main.c: 114: SSPCON2 = 0x00;
  1023  001B36  0E00               	movlw	0
  1024  001B38  6EC5               	movwf	197,c	;volatile
  1025                           
  1026                           ;Main.c: 115: SSPADD = 0x13;
  1027  001B3A  0E13               	movlw	19
  1028  001B3C  6EC8               	movwf	200,c	;volatile
  1029  001B3E                     
  1030                           ;Main.c: 117: TRISCbits.TRISC6 = 0;
  1031  001B3E  9C94               	bcf	148,6,c	;volatile
  1032  001B40                     
  1033                           ;Main.c: 118: TRISCbits.TRISC7 = 1;
  1034  001B40  8E94               	bsf	148,7,c	;volatile
  1035                           
  1036                           ;Main.c: 119: SPBRG = 0x0C;
  1037  001B42  0E0C               	movlw	12
  1038  001B44  6EAF               	movwf	175,c	;volatile
  1039                           
  1040                           ;Main.c: 120: RCSTA = 0x90;
  1041  001B46  0E90               	movlw	144
  1042  001B48  6EAB               	movwf	171,c	;volatile
  1043                           
  1044                           ;Main.c: 121: TXSTA = 0x20;
  1045  001B4A  0E20               	movlw	32
  1046  001B4C  6EAC               	movwf	172,c	;volatile
  1047  001B4E                     
  1048                           ;Main.c: 123: writeI2C(0x80, 0x00,0x80,1);
  1049  001B4E  0E00               	movlw	0
  1050  001B50  0100               	movlb	0	; () banked
  1051  001B52  6FD5               	movwf	writeI2C@Register& (0+255),b
  1052  001B54  0E80               	movlw	128
  1053  001B56  6FD6               	movwf	writeI2C@Data& (0+255),b
  1054  001B58  0E00               	movlw	0
  1055  001B5A  6FD7               	movwf	(writeI2C@Data+1)& (0+255),b
  1056  001B5C  0E00               	movlw	0
  1057  001B5E  6FD9               	movwf	(writeI2C@bytes+1)& (0+255),b
  1058  001B60  0E01               	movlw	1
  1059  001B62  6FD8               	movwf	writeI2C@bytes& (0+255),b
  1060  001B64  0E80               	movlw	128
  1061  001B66  EC27  F012         	call	_writeI2C
  1062  001B6A                     
  1063                           ;Main.c: 124: _delay((unsigned long)((10)*(8000000/4000.0)));
  1064  001B6A  0E1A               	movlw	26
  1065  001B6C  0100               	movlb	0	; () banked
  1066  001B6E  6FF7               	movwf	??_settings& (0+255),b
  1067  001B70  0EF8               	movlw	248
  1068  001B72                     u3297:
  1069  001B72  2EE8               	decfsz	wreg,f,c
  1070  001B74  D7FE               	bra	u3297
  1071  001B76  2FF7               	decfsz	??_settings& (0+255),f,b
  1072  001B78  D7FC               	bra	u3297
  1073  001B7A  F000               	nop	
  1074  001B7C                     
  1075                           ;Main.c: 126: setPWMFreq(1000);
  1076  001B7C  0E00               	movlw	0
  1077  001B7E  0100               	movlb	0	; () banked
  1078  001B80  6FEC               	movwf	setPWMFreq@freq& (0+255),b
  1079  001B82  0E00               	movlw	0
  1080  001B84  6FED               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1081  001B86  0E7A               	movlw	122
  1082  001B88  6FEE               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1083  001B8A  0E44               	movlw	68
  1084  001B8C  6FEF               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1085  001B8E  EC5C  F00A         	call	_setPWMFreq	;wreg free
  1086  001B92                     
  1087                           ;Main.c: 128: setPWMFreq(50);
  1088  001B92  0E00               	movlw	0
  1089  001B94  0100               	movlb	0	; () banked
  1090  001B96  6FEC               	movwf	setPWMFreq@freq& (0+255),b
  1091  001B98  0E00               	movlw	0
  1092  001B9A  6FED               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1093  001B9C  0E48               	movlw	72
  1094  001B9E  6FEE               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1095  001BA0  0E42               	movlw	66
  1096  001BA2  6FEF               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1097  001BA4  EC5C  F00A         	call	_setPWMFreq	;wreg free
  1098  001BA8                     
  1099                           ;Main.c: 129: _delay((unsigned long)((300)*(8000000/4000.0)));
  1100  001BA8  0E04               	movlw	4
  1101  001BAA  0100               	movlb	0	; () banked
  1102  001BAC  6FF8               	movwf	(??_settings+1)& (0+255),b
  1103  001BAE  0E0C               	movlw	12
  1104  001BB0  6FF7               	movwf	??_settings& (0+255),b
  1105  001BB2  0E33               	movlw	51
  1106  001BB4                     u3307:
  1107  001BB4  2EE8               	decfsz	wreg,f,c
  1108  001BB6  D7FE               	bra	u3307
  1109  001BB8  2FF7               	decfsz	??_settings& (0+255),f,b
  1110  001BBA  D7FC               	bra	u3307
  1111  001BBC  2FF8               	decfsz	(??_settings+1)& (0+255),f,b
  1112  001BBE  D7FA               	bra	u3307
  1113  001BC0  D000               	nop2	
  1114  001BC2                     
  1115                           ;Main.c: 131: SettingsLCD(0x02);
  1116  001BC2  0E02               	movlw	2
  1117  001BC4  EC38  F015         	call	_SettingsLCD
  1118  001BC8                     
  1119                           ;Main.c: 132: SettingsLCD(0x06);
  1120  001BC8  0E06               	movlw	6
  1121  001BCA  EC38  F015         	call	_SettingsLCD
  1122  001BCE                     
  1123                           ;Main.c: 133: SettingsLCD(0x0F);
  1124  001BCE  0E0F               	movlw	15
  1125  001BD0  EC38  F015         	call	_SettingsLCD
  1126  001BD4                     
  1127                           ;Main.c: 134: SettingsLCD(0x28);
  1128  001BD4  0E28               	movlw	40
  1129  001BD6  EC38  F015         	call	_SettingsLCD
  1130  001BDA                     
  1131                           ;Main.c: 135: SettingsLCD(0x01);
  1132  001BDA  0E01               	movlw	1
  1133  001BDC  EC38  F015         	call	_SettingsLCD
  1134  001BE0                     
  1135                           ;Main.c: 137: GIE = 1;
  1136  001BE0  8EF2               	bsf	4082,7,c	;volatile
  1137  001BE2                     
  1138                           ;Main.c: 138: PEIE = 1;
  1139  001BE2  8CF2               	bsf	4082,6,c	;volatile
  1140  001BE4                     
  1141                           ;Main.c: 139: RCIE = 1;
  1142  001BE4  8A9D               	bsf	3997,5,c	;volatile
  1143  001BE6                     
  1144                           ;Main.c: 140: RCIF = 0;
  1145  001BE6  9A9E               	bcf	3998,5,c	;volatile
  1146  001BE8                     
  1147                           ;Main.c: 142: sprintf(text,"Settings");
  1148  001BE8  0E9C               	movlw	low _text
  1149  001BEA  0100               	movlb	0	; () banked
  1150  001BEC  6FDF               	movwf	sprintf@sp& (0+255),b
  1151  001BEE  0E00               	movlw	high _text
  1152  001BF0  6FE0               	movwf	(sprintf@sp+1)& (0+255),b
  1153  001BF2  0E84               	movlw	low STR_1
  1154  001BF4  6FE1               	movwf	sprintf@f& (0+255),b
  1155  001BF6  0E08               	movlw	high STR_1
  1156  001BF8  6FE2               	movwf	(sprintf@f+1)& (0+255),b
  1157  001BFA  ECBC  F00B         	call	_sprintf	;wreg free
  1158  001BFE                     
  1159                           ;Main.c: 143: sprintf(texto_LCD,"Settings");
  1160  001BFE  0E74               	movlw	low _texto_LCD
  1161  001C00  0100               	movlb	0	; () banked
  1162  001C02  6FDF               	movwf	sprintf@sp& (0+255),b
  1163  001C04  0E00               	movlw	high _texto_LCD
  1164  001C06  6FE0               	movwf	(sprintf@sp+1)& (0+255),b
  1165  001C08  0E84               	movlw	low STR_1
  1166  001C0A  6FE1               	movwf	sprintf@f& (0+255),b
  1167  001C0C  0E08               	movlw	high STR_1
  1168  001C0E  6FE2               	movwf	(sprintf@f+1)& (0+255),b
  1169  001C10  ECBC  F00B         	call	_sprintf	;wreg free
  1170  001C14                     
  1171                           ;Main.c: 144: PrintDataLCD();
  1172  001C14  ECA2  F013         	call	_PrintDataLCD	;wreg free
  1173  001C18                     
  1174                           ;Main.c: 145: start();
  1175  001C18  EC77  F013         	call	_start	;wreg free
  1176  001C1C  0012               	return		;funcret
  1177  001C1E                     __end_of_settings:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _start *****************
  1181 ;; Defined at:
  1182 ;;		line 379 in file "Main.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1196 ;;      Params:         0       0       0       0       0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    7
  1203 ;; This function calls:
  1204 ;;		_strlen
  1205 ;; This function is called by:
  1206 ;;		_settings
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text2
  1211  0026EE                     __ptext2:
  1212                           	callstack 0
  1213  0026EE                     _start:
  1214                           	callstack 22
  1215  0026EE                     
  1216                           ;Main.c: 380: for(i=0;i<=strlen(text);i++){
  1217  0026EE  0E00               	movlw	0
  1218  0026F0  6E51               	movwf	(_i+1)^0,c
  1219  0026F2  0E00               	movlw	0
  1220  0026F4  6E50               	movwf	_i^0,c
  1221  0026F6  EF8E  F013         	goto	l3347
  1222  0026FA                     l228:
  1223  0026FA  A89E               	btfss	3998,4,c	;volatile
  1224  0026FC  EF82  F013         	goto	u2991
  1225  002700  EF84  F013         	goto	u2990
  1226  002704                     u2991:
  1227  002704  EF7D  F013         	goto	l228
  1228  002708                     u2990:
  1229  002708                     
  1230                           ;Main.c: 382: TXREG = text[i];
  1231  002708  0E9C               	movlw	low _text
  1232  00270A  2450               	addwf	_i^0,w,c
  1233  00270C  6ED9               	movwf	fsr2l,c
  1234  00270E  0E00               	movlw	high _text
  1235  002710  2051               	addwfc	(_i+1)^0,w,c
  1236  002712  6EDA               	movwf	fsr2h,c
  1237  002714  50DF               	movf	indf2,w,c
  1238  002716  6EAD               	movwf	173,c	;volatile
  1239  002718  4A50               	infsnz	_i^0,f,c
  1240  00271A  2A51               	incf	(_i+1)^0,f,c
  1241  00271C                     l3347:
  1242  00271C  0E9C               	movlw	low _text
  1243  00271E  0100               	movlb	0	; () banked
  1244  002720  6FD3               	movwf	strlen@s& (0+255),b
  1245  002722  0E00               	movlw	high _text
  1246  002724  6FD4               	movwf	(strlen@s+1)& (0+255),b
  1247  002726  EC83  F014         	call	_strlen	;wreg free
  1248  00272A  5050               	movf	_i^0,w,c
  1249  00272C  0100               	movlb	0	; () banked
  1250  00272E  5DD3               	subwf	?_strlen& (0+255),w,b
  1251  002730  5051               	movf	(_i+1)^0,w,c
  1252  002732  59D4               	subwfb	(?_strlen+1)& (0+255),w,b
  1253  002734  B0D8               	btfsc	status,0,c
  1254  002736  EF9F  F013         	goto	u3001
  1255  00273A  EFA1  F013         	goto	u3000
  1256  00273E                     u3001:
  1257  00273E  EF7D  F013         	goto	l228
  1258  002742                     u3000:
  1259  002742                     
  1260                           ; BSR set to: 0
  1261  002742  0012               	return		;funcret
  1262  002744                     __end_of_start:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _sprintf *****************
  1266 ;; Defined at:
  1267 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  1270 ;;		 -> texto_LCD(40), text(40), 
  1271 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  1272 ;;		 -> STR_10(14), STR_9(13), STR_8(9), STR_7(30), 
  1273 ;;		 -> STR_6(24), STR_5(24), STR_4(17), STR_3(14), 
  1274 ;;		 -> STR_2(9), STR_1(9), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  tmpval          4    0        struct .
  1277 ;;  cp              3    0        PTR const unsigned char 
  1278 ;;  val             2   21[BANK0 ] unsigned int 
  1279 ;;  ap              2   19[BANK0 ] PTR void [1]
  1280 ;;		 -> ?_sprintf(2), 
  1281 ;;  len             2    0        unsigned int 
  1282 ;;  c               1   23[BANK0 ] unsigned char 
  1283 ;;  prec            1   18[BANK0 ] char 
  1284 ;;  flag            1   17[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2   12[BANK0 ] int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1294 ;;      Params:         0       4       0       0       0       0       0       0       0
  1295 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1296 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1297 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1298 ;;Total ram usage:       12 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    7
  1301 ;; This function calls:
  1302 ;;		___lwdiv
  1303 ;;		___lwmod
  1304 ;; This function is called by:
  1305 ;;		_settings
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text3
  1310  001778                     __ptext3:
  1311                           	callstack 0
  1312  001778                     _sprintf:
  1313                           	callstack 22
  1314  001778                     
  1315                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1316  001778  0EE3               	movlw	low (?_sprintf+4)
  1317  00177A  0100               	movlb	0	; () banked
  1318  00177C  6FE6               	movwf	sprintf@ap& (0+255),b
  1319  00177E  0E00               	movlw	high (?_sprintf+4)
  1320  001780  6FE7               	movwf	(sprintf@ap+1)& (0+255),b
  1321                           
  1322                           ;doprnt.c: 553: while((c = *f++)) {
  1323  001782  EF89  F00C         	goto	l3325
  1324  001786                     l3265:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;doprnt.c: 555: if(c != '%')
  1328  001786  0E25               	movlw	37
  1329  001788  19EA               	xorwf	sprintf@c& (0+255),w,b
  1330  00178A  B4D8               	btfsc	status,2,c
  1331  00178C  EFCA  F00B         	goto	u2911
  1332  001790  EFCC  F00B         	goto	u2910
  1333  001794                     u2911:
  1334  001794  EFD6  F00B         	goto	l3271
  1335  001798                     u2910:
  1336  001798                     l3267:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1340  001798  C0DF  FFD9         	movff	sprintf@sp,fsr2l
  1341  00179C  C0E0  FFDA         	movff	sprintf@sp+1,fsr2h
  1342  0017A0  C0EA  FFDF         	movff	sprintf@c,indf2
  1343  0017A4                     
  1344                           ; BSR set to: 0
  1345  0017A4  4BDF               	infsnz	sprintf@sp& (0+255),f,b
  1346  0017A6  2BE0               	incf	(sprintf@sp+1)& (0+255),f,b
  1347                           
  1348                           ;doprnt.c: 559: continue;
  1349  0017A8  EF89  F00C         	goto	l3325
  1350  0017AC                     l3271:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1354  0017AC  0E00               	movlw	0
  1355  0017AE  6FE4               	movwf	sprintf@flag& (0+255),b
  1356                           
  1357                           ;doprnt.c: 661: switch(c = *f++) {
  1358  0017B0  EFE6  F00B         	goto	l3283
  1359  0017B4                     l3273:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  1363  0017B4  C0E6  FFD9         	movff	sprintf@ap,fsr2l
  1364  0017B8  C0E7  FFDA         	movff	sprintf@ap+1,fsr2h
  1365  0017BC  50DF               	movf	indf2,w,c
  1366  0017BE  6FEA               	movwf	sprintf@c& (0+255),b
  1367  0017C0                     
  1368                           ; BSR set to: 0
  1369  0017C0  0E02               	movlw	2
  1370  0017C2  27E6               	addwf	sprintf@ap& (0+255),f,b
  1371  0017C4  0E00               	movlw	0
  1372  0017C6  23E7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1373  0017C8  EFCC  F00B         	goto	l3267
  1374  0017CC                     l3283:
  1375                           
  1376                           ; BSR set to: 0
  1377  0017CC  C0E1  FFF6         	movff	sprintf@f,tblptrl
  1378  0017D0  C0E2  FFF7         	movff	sprintf@f+1,tblptrh
  1379  0017D4  4BE1               	infsnz	sprintf@f& (0+255),f,b
  1380  0017D6  2BE2               	incf	(sprintf@f+1)& (0+255),f,b
  1381  0017D8                     	if	0	;tblptru may be non-zero
  1382  0017D8                     	endif
  1383  0017D8                     	if	0	;tblptru may be non-zero
  1384  0017D8                     	endif
  1385  0017D8  0008               	tblrd		*
  1386  0017DA  CFF5 F0EA          	movff	tablat,sprintf@c
  1387  0017DE  51EA               	movf	sprintf@c& (0+255),w,b
  1388                           
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 4, Range of values is 0 to 105
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte           13     7 (average)
  1394                           ;	Chosen strategy is simple_byte
  1395  0017E0  0A00               	xorlw	0	; case 0
  1396  0017E2  B4D8               	btfsc	status,2,c
  1397  0017E4  EF9A  F00C         	goto	l3327
  1398  0017E8  0A63               	xorlw	99	; case 99
  1399  0017EA  B4D8               	btfsc	status,2,c
  1400  0017EC  EFDA  F00B         	goto	l3273
  1401  0017F0  0A07               	xorlw	7	; case 100
  1402  0017F2  B4D8               	btfsc	status,2,c
  1403  0017F4  EF02  F00C         	goto	l3285
  1404  0017F8  0A0D               	xorlw	13	; case 105
  1405  0017FA  B4D8               	btfsc	status,2,c
  1406  0017FC  EF02  F00C         	goto	l3285
  1407  001800  EFCC  F00B         	goto	l3267
  1408  001804                     l3285:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1412  001804  C0E6  FFD9         	movff	sprintf@ap,fsr2l
  1413  001808  C0E7  FFDA         	movff	sprintf@ap+1,fsr2h
  1414  00180C  CFDE F0E8          	movff	postinc2,sprintf@val
  1415  001810  CFDD F0E9          	movff	postdec2,sprintf@val+1
  1416  001814                     
  1417                           ; BSR set to: 0
  1418  001814  0E02               	movlw	2
  1419  001816  27E6               	addwf	sprintf@ap& (0+255),f,b
  1420  001818  0E00               	movlw	0
  1421  00181A  23E7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1422  00181C                     
  1423                           ; BSR set to: 0
  1424                           ;doprnt.c: 1287: if((int)val < 0) {
  1425  00181C  BFE9               	btfsc	(sprintf@val+1)& (0+255),7,b
  1426  00181E  EF15  F00C         	goto	u2920
  1427  001822  EF13  F00C         	goto	u2921
  1428  001826                     u2921:
  1429  001826  EF1B  F00C         	goto	l3295
  1430  00182A                     u2920:
  1431  00182A                     
  1432                           ; BSR set to: 0
  1433                           ;doprnt.c: 1288: flag |= 0x03;
  1434  00182A  0E03               	movlw	3
  1435  00182C  13E4               	iorwf	sprintf@flag& (0+255),f,b
  1436  00182E                     
  1437                           ; BSR set to: 0
  1438                           ;doprnt.c: 1289: val = -val;
  1439  00182E  6DE8               	negf	sprintf@val& (0+255),b
  1440  001830  1FE9               	comf	(sprintf@val+1)& (0+255),f,b
  1441  001832  B0D8               	btfsc	status,0,c
  1442  001834  2BE9               	incf	(sprintf@val+1)& (0+255),f,b
  1443  001836                     l3295:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1447  001836  0E01               	movlw	1
  1448  001838  6FEA               	movwf	sprintf@c& (0+255),b
  1449  00183A                     l3301:
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;doprnt.c: 1332: if(val < dpowers[c])
  1453  00183A  51EA               	movf	sprintf@c& (0+255),w,b
  1454  00183C  0D02               	mullw	2
  1455  00183E  0E01               	movlw	low _dpowers
  1456  001840  24F3               	addwf	243,w,c
  1457  001842  6EF6               	movwf	tblptrl,c
  1458  001844  0E08               	movlw	high _dpowers
  1459  001846  20F4               	addwfc	244,w,c
  1460  001848  6EF7               	movwf	tblptrh,c
  1461  00184A                     	if	0	;There are less than 3 active tblptr bytes
  1462  00184A                     	endif
  1463  00184A  0009               	tblrd		*+
  1464  00184C  50F5               	movf	tablat,w,c
  1465  00184E  5DE8               	subwf	sprintf@val& (0+255),w,b
  1466  001850  0009               	tblrd		*+
  1467  001852  50F5               	movf	tablat,w,c
  1468  001854  59E9               	subwfb	(sprintf@val+1)& (0+255),w,b
  1469  001856  B0D8               	btfsc	status,0,c
  1470  001858  EF30  F00C         	goto	u2931
  1471  00185C  EF32  F00C         	goto	u2930
  1472  001860                     u2931:
  1473  001860  EF34  F00C         	goto	l3305
  1474  001864                     u2930:
  1475  001864  EF3E  F00C         	goto	l3309
  1476  001868                     l3305:
  1477                           
  1478                           ; BSR set to: 0
  1479  001868  2BEA               	incf	sprintf@c& (0+255),f,b
  1480  00186A                     
  1481                           ; BSR set to: 0
  1482  00186A  0E05               	movlw	5
  1483  00186C  19EA               	xorwf	sprintf@c& (0+255),w,b
  1484  00186E  A4D8               	btfss	status,2,c
  1485  001870  EF3C  F00C         	goto	u2941
  1486  001874  EF3E  F00C         	goto	u2940
  1487  001878                     u2941:
  1488  001878  EF1D  F00C         	goto	l3301
  1489  00187C                     u2940:
  1490  00187C                     l3309:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1494  00187C  C0E4  F0E3         	movff	sprintf@flag,??_sprintf
  1495  001880  0E03               	movlw	3
  1496  001882  17E3               	andwf	??_sprintf& (0+255),f,b
  1497  001884  B4D8               	btfsc	status,2,c
  1498  001886  EF47  F00C         	goto	u2951
  1499  00188A  EF49  F00C         	goto	u2950
  1500  00188E                     u2951:
  1501  00188E  EF51  F00C         	goto	l3315
  1502  001892                     u2950:
  1503  001892                     
  1504                           ; BSR set to: 0
  1505                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  1506  001892  C0DF  FFD9         	movff	sprintf@sp,fsr2l
  1507  001896  C0E0  FFDA         	movff	sprintf@sp+1,fsr2h
  1508  00189A  0E2D               	movlw	45
  1509  00189C  6EDF               	movwf	indf2,c
  1510  00189E                     
  1511                           ; BSR set to: 0
  1512  00189E  4BDF               	infsnz	sprintf@sp& (0+255),f,b
  1513  0018A0  2BE0               	incf	(sprintf@sp+1)& (0+255),f,b
  1514  0018A2                     l3315:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1518  0018A2  C0EA  F0E5         	movff	sprintf@c,sprintf@prec
  1519                           
  1520                           ;doprnt.c: 1500: while(prec--) {
  1521  0018A6  EF80  F00C         	goto	l3323
  1522  0018AA                     l3317:
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1526  0018AA  51E5               	movf	sprintf@prec& (0+255),w,b
  1527  0018AC  0D02               	mullw	2
  1528  0018AE  0E01               	movlw	low _dpowers
  1529  0018B0  24F3               	addwf	243,w,c
  1530  0018B2  6EF6               	movwf	tblptrl,c
  1531  0018B4  0E08               	movlw	high _dpowers
  1532  0018B6  20F4               	addwfc	244,w,c
  1533  0018B8  6EF7               	movwf	tblptrh,c
  1534  0018BA                     	if	0	;There are less than 3 active tblptr bytes
  1535  0018BA                     	endif
  1536  0018BA  0009               	tblrd		*+
  1537  0018BC  CFF5 F0D5          	movff	tablat,___lwdiv@divisor
  1538  0018C0  000A               	tblrd		*-
  1539  0018C2  CFF5 F0D6          	movff	tablat,___lwdiv@divisor+1
  1540  0018C6  C0E8  F0D3         	movff	sprintf@val,___lwdiv@dividend
  1541  0018CA  C0E9  F0D4         	movff	sprintf@val+1,___lwdiv@dividend+1
  1542  0018CE  EC65  F012         	call	___lwdiv	;wreg free
  1543  0018D2  C0D3  F0DA         	movff	?___lwdiv,___lwmod@dividend
  1544  0018D6  C0D4  F0DB         	movff	?___lwdiv+1,___lwmod@dividend+1
  1545  0018DA  0E00               	movlw	0
  1546  0018DC  0100               	movlb	0	; () banked
  1547  0018DE  6FDD               	movwf	(___lwmod@divisor+1)& (0+255),b
  1548  0018E0  0E0A               	movlw	10
  1549  0018E2  6FDC               	movwf	___lwmod@divisor& (0+255),b
  1550  0018E4  EC12  F013         	call	___lwmod	;wreg free
  1551  0018E8  0100               	movlb	0	; () banked
  1552  0018EA  51DA               	movf	?___lwmod& (0+255),w,b
  1553  0018EC  0F30               	addlw	48
  1554  0018EE  6FEA               	movwf	sprintf@c& (0+255),b
  1555  0018F0                     
  1556                           ; BSR set to: 0
  1557                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1558  0018F0  C0DF  FFD9         	movff	sprintf@sp,fsr2l
  1559  0018F4  C0E0  FFDA         	movff	sprintf@sp+1,fsr2h
  1560  0018F8  C0EA  FFDF         	movff	sprintf@c,indf2
  1561  0018FC                     
  1562                           ; BSR set to: 0
  1563  0018FC  4BDF               	infsnz	sprintf@sp& (0+255),f,b
  1564  0018FE  2BE0               	incf	(sprintf@sp+1)& (0+255),f,b
  1565  001900                     l3323:
  1566                           
  1567                           ; BSR set to: 0
  1568  001900  07E5               	decf	sprintf@prec& (0+255),f,b
  1569  001902  29E5               	incf	sprintf@prec& (0+255),w,b
  1570  001904  A4D8               	btfss	status,2,c
  1571  001906  EF87  F00C         	goto	u2961
  1572  00190A  EF89  F00C         	goto	u2960
  1573  00190E                     u2961:
  1574  00190E  EF55  F00C         	goto	l3317
  1575  001912                     u2960:
  1576  001912                     l3325:
  1577                           
  1578                           ; BSR set to: 0
  1579  001912  C0E1  FFF6         	movff	sprintf@f,tblptrl
  1580  001916  C0E2  FFF7         	movff	sprintf@f+1,tblptrh
  1581  00191A  4BE1               	infsnz	sprintf@f& (0+255),f,b
  1582  00191C  2BE2               	incf	(sprintf@f+1)& (0+255),f,b
  1583  00191E                     	if	0	;tblptru may be non-zero
  1584  00191E                     	endif
  1585  00191E                     	if	0	;tblptru may be non-zero
  1586  00191E                     	endif
  1587  00191E  0008               	tblrd		*
  1588  001920  CFF5 F0EA          	movff	tablat,sprintf@c
  1589  001924  51EA               	movf	sprintf@c& (0+255),w,b
  1590  001926  A4D8               	btfss	status,2,c
  1591  001928  EF98  F00C         	goto	u2971
  1592  00192C  EF9A  F00C         	goto	u2970
  1593  001930                     u2971:
  1594  001930  EFC3  F00B         	goto	l3265
  1595  001934                     u2970:
  1596  001934                     l3327:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;doprnt.c: 1564: *sp = 0;
  1600  001934  C0DF  FFD9         	movff	sprintf@sp,fsr2l
  1601  001938  C0E0  FFDA         	movff	sprintf@sp+1,fsr2h
  1602  00193C  0E00               	movlw	0
  1603  00193E  6EDF               	movwf	indf2,c
  1604  001940                     
  1605                           ; BSR set to: 0
  1606  001940  0012               	return		;funcret
  1607  001942                     __end_of_sprintf:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function ___lwmod *****************
  1611 ;; Defined at:
  1612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  dividend        2    7[BANK0 ] unsigned int 
  1615 ;;  divisor         2    9[BANK0 ] unsigned int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  counter         1   11[BANK0 ] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2    7[BANK0 ] unsigned int 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       4       0       0       0       0       0       0       0
  1628 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        5 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    6
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_sprintf
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text4
  1642  002624                     __ptext4:
  1643                           	callstack 0
  1644  002624                     ___lwmod:
  1645                           	callstack 22
  1646  002624  0100               	movlb	0	; () banked
  1647  002626  51DC               	movf	___lwmod@divisor& (0+255),w,b
  1648  002628  11DD               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1649  00262A  B4D8               	btfsc	status,2,c
  1650  00262C  EF1A  F013         	goto	u2731
  1651  002630  EF1C  F013         	goto	u2730
  1652  002634                     u2731:
  1653  002634  EF40  F013         	goto	l829
  1654  002638                     u2730:
  1655  002638                     
  1656                           ; BSR set to: 0
  1657  002638  0E01               	movlw	1
  1658  00263A  6FDE               	movwf	___lwmod@counter& (0+255),b
  1659  00263C  EF24  F013         	goto	l3109
  1660  002640                     l3107:
  1661                           
  1662                           ; BSR set to: 0
  1663  002640  90D8               	bcf	status,0,c
  1664  002642  37DC               	rlcf	___lwmod@divisor& (0+255),f,b
  1665  002644  37DD               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1666  002646  2BDE               	incf	___lwmod@counter& (0+255),f,b
  1667  002648                     l3109:
  1668                           
  1669                           ; BSR set to: 0
  1670  002648  AFDD               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1671  00264A  EF29  F013         	goto	u2741
  1672  00264E  EF2B  F013         	goto	u2740
  1673  002652                     u2741:
  1674  002652  EF20  F013         	goto	l3107
  1675  002656                     u2740:
  1676  002656                     l3111:
  1677                           
  1678                           ; BSR set to: 0
  1679  002656  51DC               	movf	___lwmod@divisor& (0+255),w,b
  1680  002658  5DDA               	subwf	___lwmod@dividend& (0+255),w,b
  1681  00265A  51DD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1682  00265C  59DB               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1683  00265E  A0D8               	btfss	status,0,c
  1684  002660  EF34  F013         	goto	u2751
  1685  002664  EF36  F013         	goto	u2750
  1686  002668                     u2751:
  1687  002668  EF3A  F013         	goto	l3115
  1688  00266C                     u2750:
  1689  00266C                     
  1690                           ; BSR set to: 0
  1691  00266C  51DC               	movf	___lwmod@divisor& (0+255),w,b
  1692  00266E  5FDA               	subwf	___lwmod@dividend& (0+255),f,b
  1693  002670  51DD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1694  002672  5BDB               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1695  002674                     l3115:
  1696                           
  1697                           ; BSR set to: 0
  1698  002674  90D8               	bcf	status,0,c
  1699  002676  33DD               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1700  002678  33DC               	rrcf	___lwmod@divisor& (0+255),f,b
  1701  00267A                     
  1702                           ; BSR set to: 0
  1703  00267A  2FDE               	decfsz	___lwmod@counter& (0+255),f,b
  1704  00267C  EF2B  F013         	goto	l3111
  1705  002680                     l829:
  1706                           
  1707                           ; BSR set to: 0
  1708  002680  C0DA  F0DA         	movff	___lwmod@dividend,?___lwmod
  1709  002684  C0DB  F0DB         	movff	___lwmod@dividend+1,?___lwmod+1
  1710  002688                     
  1711                           ; BSR set to: 0
  1712  002688  0012               	return		;funcret
  1713  00268A                     __end_of___lwmod:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function ___lwdiv *****************
  1717 ;; Defined at:
  1718 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  dividend        2    0[BANK0 ] unsigned int 
  1721 ;;  divisor         2    2[BANK0 ] unsigned int 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  quotient        2    4[BANK0 ] unsigned int 
  1724 ;;  counter         1    6[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2    0[BANK0 ] unsigned int 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1734 ;;      Params:         0       4       0       0       0       0       0       0       0
  1735 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1737 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1738 ;;Total ram usage:        7 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    6
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_sprintf
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text5
  1749  0024CA                     __ptext5:
  1750                           	callstack 0
  1751  0024CA                     ___lwdiv:
  1752                           	callstack 22
  1753  0024CA  0E00               	movlw	0
  1754  0024CC  0100               	movlb	0	; () banked
  1755  0024CE  6FD8               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1756  0024D0  0E00               	movlw	0
  1757  0024D2  6FD7               	movwf	___lwdiv@quotient& (0+255),b
  1758  0024D4                     
  1759                           ; BSR set to: 0
  1760  0024D4  51D5               	movf	___lwdiv@divisor& (0+255),w,b
  1761  0024D6  11D6               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1762  0024D8  B4D8               	btfsc	status,2,c
  1763  0024DA  EF71  F012         	goto	u2701
  1764  0024DE  EF73  F012         	goto	u2700
  1765  0024E2                     u2701:
  1766  0024E2  EF9B  F012         	goto	l819
  1767  0024E6                     u2700:
  1768  0024E6                     
  1769                           ; BSR set to: 0
  1770  0024E6  0E01               	movlw	1
  1771  0024E8  6FD9               	movwf	___lwdiv@counter& (0+255),b
  1772  0024EA  EF7B  F012         	goto	l3089
  1773  0024EE                     l3087:
  1774                           
  1775                           ; BSR set to: 0
  1776  0024EE  90D8               	bcf	status,0,c
  1777  0024F0  37D5               	rlcf	___lwdiv@divisor& (0+255),f,b
  1778  0024F2  37D6               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1779  0024F4  2BD9               	incf	___lwdiv@counter& (0+255),f,b
  1780  0024F6                     l3089:
  1781                           
  1782                           ; BSR set to: 0
  1783  0024F6  AFD6               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1784  0024F8  EF80  F012         	goto	u2711
  1785  0024FC  EF82  F012         	goto	u2710
  1786  002500                     u2711:
  1787  002500  EF77  F012         	goto	l3087
  1788  002504                     u2710:
  1789  002504                     l3091:
  1790                           
  1791                           ; BSR set to: 0
  1792  002504  90D8               	bcf	status,0,c
  1793  002506  37D7               	rlcf	___lwdiv@quotient& (0+255),f,b
  1794  002508  37D8               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1795  00250A                     
  1796                           ; BSR set to: 0
  1797  00250A  51D5               	movf	___lwdiv@divisor& (0+255),w,b
  1798  00250C  5DD3               	subwf	___lwdiv@dividend& (0+255),w,b
  1799  00250E  51D6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1800  002510  59D4               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1801  002512  A0D8               	btfss	status,0,c
  1802  002514  EF8E  F012         	goto	u2721
  1803  002518  EF90  F012         	goto	u2720
  1804  00251C                     u2721:
  1805  00251C  EF95  F012         	goto	l3099
  1806  002520                     u2720:
  1807  002520                     
  1808                           ; BSR set to: 0
  1809  002520  51D5               	movf	___lwdiv@divisor& (0+255),w,b
  1810  002522  5FD3               	subwf	___lwdiv@dividend& (0+255),f,b
  1811  002524  51D6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1812  002526  5BD4               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1813  002528                     
  1814                           ; BSR set to: 0
  1815  002528  81D7               	bsf	___lwdiv@quotient& (0+255),0,b
  1816  00252A                     l3099:
  1817                           
  1818                           ; BSR set to: 0
  1819  00252A  90D8               	bcf	status,0,c
  1820  00252C  33D6               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1821  00252E  33D5               	rrcf	___lwdiv@divisor& (0+255),f,b
  1822  002530                     
  1823                           ; BSR set to: 0
  1824  002530  2FD9               	decfsz	___lwdiv@counter& (0+255),f,b
  1825  002532  EF82  F012         	goto	l3091
  1826  002536                     l819:
  1827                           
  1828                           ; BSR set to: 0
  1829  002536  C0D7  F0D3         	movff	___lwdiv@quotient,?___lwdiv
  1830  00253A  C0D8  F0D4         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1831  00253E                     
  1832                           ; BSR set to: 0
  1833  00253E  0012               	return		;funcret
  1834  002540                     __end_of___lwdiv:
  1835                           	callstack 0
  1836                           
  1837 ;; *************** function _setPWMFreq *****************
  1838 ;; Defined at:
  1839 ;;		line 466 in file "Main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  freq            4   25[BANK0 ] float 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  prescaleval     4   32[BANK0 ] float 
  1844 ;;  newmode         1   31[BANK0 ] unsigned char 
  1845 ;;  prescale        1   30[BANK0 ] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1855 ;;      Params:         0       4       0       0       0       0       0       0       0
  1856 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1857 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1858 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1859 ;;Total ram usage:       11 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    9
  1862 ;; This function calls:
  1863 ;;		___fladd
  1864 ;;		___fldiv
  1865 ;;		___flge
  1866 ;;		___flsub
  1867 ;;		___fltol
  1868 ;;		_readI2C
  1869 ;;		_writeI2C
  1870 ;; This function is called by:
  1871 ;;		_settings
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text6
  1876  0014B8                     __ptext6:
  1877                           	callstack 0
  1878  0014B8                     _setPWMFreq:
  1879                           	callstack 20
  1880  0014B8                     
  1881                           ;Main.c: 468: if (freq < 1) freq = 1;
  1882  0014B8  C0EC  F0D3         	movff	setPWMFreq@freq,___flge@ff1
  1883  0014BC  C0ED  F0D4         	movff	setPWMFreq@freq+1,___flge@ff1+1
  1884  0014C0  C0EE  F0D5         	movff	setPWMFreq@freq+2,___flge@ff1+2
  1885  0014C4  C0EF  F0D6         	movff	setPWMFreq@freq+3,___flge@ff1+3
  1886  0014C8  0E00               	movlw	0
  1887  0014CA  0100               	movlb	0	; () banked
  1888  0014CC  6FD7               	movwf	___flge@ff2& (0+255),b
  1889  0014CE  0E00               	movlw	0
  1890  0014D0  6FD8               	movwf	(___flge@ff2+1)& (0+255),b
  1891  0014D2  0E80               	movlw	128
  1892  0014D4  6FD9               	movwf	(___flge@ff2+2)& (0+255),b
  1893  0014D6  0E3F               	movlw	63
  1894  0014D8  6FDA               	movwf	(___flge@ff2+3)& (0+255),b
  1895  0014DA  EC1F  F00F         	call	___flge	;wreg free
  1896  0014DE  0100               	movlb	0	; () banked
  1897  0014E0  B0D8               	btfsc	status,0,c
  1898  0014E2  EF75  F00A         	goto	u2871
  1899  0014E6  EF77  F00A         	goto	u2870
  1900  0014EA                     u2871:
  1901  0014EA  EF7F  F00A         	goto	l3225
  1902  0014EE                     u2870:
  1903  0014EE                     
  1904                           ; BSR set to: 0
  1905  0014EE  0E00               	movlw	0
  1906  0014F0  6FEC               	movwf	setPWMFreq@freq& (0+255),b
  1907  0014F2  0E00               	movlw	0
  1908  0014F4  6FED               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1909  0014F6  0E80               	movlw	128
  1910  0014F8  6FEE               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1911  0014FA  0E3F               	movlw	63
  1912  0014FC  6FEF               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1913  0014FE                     l3225:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;Main.c: 469: if (freq > 3500) freq = 3500;
  1917  0014FE  0E00               	movlw	0
  1918  001500  6FD3               	movwf	___flge@ff1& (0+255),b
  1919  001502  0EC0               	movlw	192
  1920  001504  6FD4               	movwf	(___flge@ff1+1)& (0+255),b
  1921  001506  0E5A               	movlw	90
  1922  001508  6FD5               	movwf	(___flge@ff1+2)& (0+255),b
  1923  00150A  0E45               	movlw	69
  1924  00150C  6FD6               	movwf	(___flge@ff1+3)& (0+255),b
  1925  00150E  C0EC  F0D7         	movff	setPWMFreq@freq,___flge@ff2
  1926  001512  C0ED  F0D8         	movff	setPWMFreq@freq+1,___flge@ff2+1
  1927  001516  C0EE  F0D9         	movff	setPWMFreq@freq+2,___flge@ff2+2
  1928  00151A  C0EF  F0DA         	movff	setPWMFreq@freq+3,___flge@ff2+3
  1929  00151E  EC1F  F00F         	call	___flge	;wreg free
  1930  001522  0100               	movlb	0	; () banked
  1931  001524  B0D8               	btfsc	status,0,c
  1932  001526  EF97  F00A         	goto	u2881
  1933  00152A  EF99  F00A         	goto	u2880
  1934  00152E                     u2881:
  1935  00152E  EFA1  F00A         	goto	l274
  1936  001532                     u2880:
  1937  001532                     
  1938                           ; BSR set to: 0
  1939  001532  0E00               	movlw	0
  1940  001534  6FEC               	movwf	setPWMFreq@freq& (0+255),b
  1941  001536  0EC0               	movlw	192
  1942  001538  6FED               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1943  00153A  0E5A               	movlw	90
  1944  00153C  6FEE               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1945  00153E  0E45               	movlw	69
  1946  001540  6FEF               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1947  001542                     l274:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;Main.c: 474: float prescaleval = 26075000;
  1951  001542  0EBC               	movlw	188
  1952  001544  6FF3               	movwf	setPWMFreq@prescaleval& (0+255),b
  1953  001546  0EEF               	movlw	239
  1954  001548  6FF4               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1955  00154A  0EC6               	movlw	198
  1956  00154C  6FF5               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1957  00154E  0E4B               	movlw	75
  1958  001550  6FF6               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1959  001552                     
  1960                           ; BSR set to: 0
  1961                           ;Main.c: 475: prescaleval /= freq;
  1962  001552  C0F3  F0D3         	movff	setPWMFreq@prescaleval,___fldiv@b
  1963  001556  C0F4  F0D4         	movff	setPWMFreq@prescaleval+1,___fldiv@b+1
  1964  00155A  C0F5  F0D5         	movff	setPWMFreq@prescaleval+2,___fldiv@b+2
  1965  00155E  C0F6  F0D6         	movff	setPWMFreq@prescaleval+3,___fldiv@b+3
  1966  001562  C0EC  F0D7         	movff	setPWMFreq@freq,___fldiv@a
  1967  001566  C0ED  F0D8         	movff	setPWMFreq@freq+1,___fldiv@a+1
  1968  00156A  C0EE  F0D9         	movff	setPWMFreq@freq+2,___fldiv@a+2
  1969  00156E  C0EF  F0DA         	movff	setPWMFreq@freq+3,___fldiv@a+3
  1970  001572  EC8E  F008         	call	___fldiv	;wreg free
  1971  001576  C0D3  F0F3         	movff	?___fldiv,setPWMFreq@prescaleval
  1972  00157A  C0D4  F0F4         	movff	?___fldiv+1,setPWMFreq@prescaleval+1
  1973  00157E  C0D5  F0F5         	movff	?___fldiv+2,setPWMFreq@prescaleval+2
  1974  001582  C0D6  F0F6         	movff	?___fldiv+3,setPWMFreq@prescaleval+3
  1975  001586                     
  1976                           ;Main.c: 477: prescaleval += 2048;
  1977  001586  C0F3  F0D3         	movff	setPWMFreq@prescaleval,___fladd@b
  1978  00158A  C0F4  F0D4         	movff	setPWMFreq@prescaleval+1,___fladd@b+1
  1979  00158E  C0F5  F0D5         	movff	setPWMFreq@prescaleval+2,___fladd@b+2
  1980  001592  C0F6  F0D6         	movff	setPWMFreq@prescaleval+3,___fladd@b+3
  1981  001596  0E00               	movlw	0
  1982  001598  0100               	movlb	0	; () banked
  1983  00159A  6FD7               	movwf	___fladd@a& (0+255),b
  1984  00159C  0E00               	movlw	0
  1985  00159E  6FD8               	movwf	(___fladd@a+1)& (0+255),b
  1986  0015A0  0E00               	movlw	0
  1987  0015A2  6FD9               	movwf	(___fladd@a+2)& (0+255),b
  1988  0015A4  0E45               	movlw	69
  1989  0015A6  6FDA               	movwf	(___fladd@a+3)& (0+255),b
  1990  0015A8  EC47  F004         	call	___fladd	;wreg free
  1991  0015AC  C0D3  F0F3         	movff	?___fladd,setPWMFreq@prescaleval
  1992  0015B0  C0D4  F0F4         	movff	?___fladd+1,setPWMFreq@prescaleval+1
  1993  0015B4  C0D5  F0F5         	movff	?___fladd+2,setPWMFreq@prescaleval+2
  1994  0015B8  C0D6  F0F6         	movff	?___fladd+3,setPWMFreq@prescaleval+3
  1995  0015BC                     
  1996                           ;Main.c: 478: prescaleval /= 4096;
  1997  0015BC  C0F3  F0D3         	movff	setPWMFreq@prescaleval,___fldiv@b
  1998  0015C0  C0F4  F0D4         	movff	setPWMFreq@prescaleval+1,___fldiv@b+1
  1999  0015C4  C0F5  F0D5         	movff	setPWMFreq@prescaleval+2,___fldiv@b+2
  2000  0015C8  C0F6  F0D6         	movff	setPWMFreq@prescaleval+3,___fldiv@b+3
  2001  0015CC  0E00               	movlw	0
  2002  0015CE  0100               	movlb	0	; () banked
  2003  0015D0  6FD7               	movwf	___fldiv@a& (0+255),b
  2004  0015D2  0E00               	movlw	0
  2005  0015D4  6FD8               	movwf	(___fldiv@a+1)& (0+255),b
  2006  0015D6  0E80               	movlw	128
  2007  0015D8  6FD9               	movwf	(___fldiv@a+2)& (0+255),b
  2008  0015DA  0E45               	movlw	69
  2009  0015DC  6FDA               	movwf	(___fldiv@a+3)& (0+255),b
  2010  0015DE  EC8E  F008         	call	___fldiv	;wreg free
  2011  0015E2  C0D3  F0F3         	movff	?___fldiv,setPWMFreq@prescaleval
  2012  0015E6  C0D4  F0F4         	movff	?___fldiv+1,setPWMFreq@prescaleval+1
  2013  0015EA  C0D5  F0F5         	movff	?___fldiv+2,setPWMFreq@prescaleval+2
  2014  0015EE  C0D6  F0F6         	movff	?___fldiv+3,setPWMFreq@prescaleval+3
  2015  0015F2                     
  2016                           ;Main.c: 479: prescaleval -= 1;
  2017  0015F2  C0F3  F0E3         	movff	setPWMFreq@prescaleval,___flsub@b
  2018  0015F6  C0F4  F0E4         	movff	setPWMFreq@prescaleval+1,___flsub@b+1
  2019  0015FA  C0F5  F0E5         	movff	setPWMFreq@prescaleval+2,___flsub@b+2
  2020  0015FE  C0F6  F0E6         	movff	setPWMFreq@prescaleval+3,___flsub@b+3
  2021  001602  0E00               	movlw	0
  2022  001604  0100               	movlb	0	; () banked
  2023  001606  6FE7               	movwf	___flsub@a& (0+255),b
  2024  001608  0E00               	movlw	0
  2025  00160A  6FE8               	movwf	(___flsub@a+1)& (0+255),b
  2026  00160C  0E80               	movlw	128
  2027  00160E  6FE9               	movwf	(___flsub@a+2)& (0+255),b
  2028  001610  0E3F               	movlw	63
  2029  001612  6FEA               	movwf	(___flsub@a+3)& (0+255),b
  2030  001614  EC1F  F014         	call	___flsub	;wreg free
  2031  001618  C0E3  F0F3         	movff	?___flsub,setPWMFreq@prescaleval
  2032  00161C  C0E4  F0F4         	movff	?___flsub+1,setPWMFreq@prescaleval+1
  2033  001620  C0E5  F0F5         	movff	?___flsub+2,setPWMFreq@prescaleval+2
  2034  001624  C0E6  F0F6         	movff	?___flsub+3,setPWMFreq@prescaleval+3
  2035  001628                     
  2036                           ;Main.c: 480: if (prescaleval < 3) prescaleval = 3;
  2037  001628  C0F3  F0D3         	movff	setPWMFreq@prescaleval,___flge@ff1
  2038  00162C  C0F4  F0D4         	movff	setPWMFreq@prescaleval+1,___flge@ff1+1
  2039  001630  C0F5  F0D5         	movff	setPWMFreq@prescaleval+2,___flge@ff1+2
  2040  001634  C0F6  F0D6         	movff	setPWMFreq@prescaleval+3,___flge@ff1+3
  2041  001638  0E00               	movlw	0
  2042  00163A  0100               	movlb	0	; () banked
  2043  00163C  6FD7               	movwf	___flge@ff2& (0+255),b
  2044  00163E  0E00               	movlw	0
  2045  001640  6FD8               	movwf	(___flge@ff2+1)& (0+255),b
  2046  001642  0E40               	movlw	64
  2047  001644  6FD9               	movwf	(___flge@ff2+2)& (0+255),b
  2048  001646  0E40               	movlw	64
  2049  001648  6FDA               	movwf	(___flge@ff2+3)& (0+255),b
  2050  00164A  EC1F  F00F         	call	___flge	;wreg free
  2051  00164E  0100               	movlb	0	; () banked
  2052  001650  B0D8               	btfsc	status,0,c
  2053  001652  EF2D  F00B         	goto	u2891
  2054  001656  EF2F  F00B         	goto	u2890
  2055  00165A                     u2891:
  2056  00165A  EF37  F00B         	goto	l3241
  2057  00165E                     u2890:
  2058  00165E                     
  2059                           ; BSR set to: 0
  2060  00165E  0E00               	movlw	0
  2061  001660  6FF3               	movwf	setPWMFreq@prescaleval& (0+255),b
  2062  001662  0E00               	movlw	0
  2063  001664  6FF4               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  2064  001666  0E40               	movlw	64
  2065  001668  6FF5               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  2066  00166A  0E40               	movlw	64
  2067  00166C  6FF6               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  2068  00166E                     l3241:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;Main.c: 481: if (prescaleval > 255) prescaleval = 255;
  2072  00166E  0E00               	movlw	0
  2073  001670  6FD3               	movwf	___flge@ff1& (0+255),b
  2074  001672  0E00               	movlw	0
  2075  001674  6FD4               	movwf	(___flge@ff1+1)& (0+255),b
  2076  001676  0E7F               	movlw	127
  2077  001678  6FD5               	movwf	(___flge@ff1+2)& (0+255),b
  2078  00167A  0E43               	movlw	67
  2079  00167C  6FD6               	movwf	(___flge@ff1+3)& (0+255),b
  2080  00167E  C0F3  F0D7         	movff	setPWMFreq@prescaleval,___flge@ff2
  2081  001682  C0F4  F0D8         	movff	setPWMFreq@prescaleval+1,___flge@ff2+1
  2082  001686  C0F5  F0D9         	movff	setPWMFreq@prescaleval+2,___flge@ff2+2
  2083  00168A  C0F6  F0DA         	movff	setPWMFreq@prescaleval+3,___flge@ff2+3
  2084  00168E  EC1F  F00F         	call	___flge	;wreg free
  2085  001692  0100               	movlb	0	; () banked
  2086  001694  B0D8               	btfsc	status,0,c
  2087  001696  EF4F  F00B         	goto	u2901
  2088  00169A  EF51  F00B         	goto	u2900
  2089  00169E                     u2901:
  2090  00169E  EF59  F00B         	goto	l3245
  2091  0016A2                     u2900:
  2092  0016A2                     
  2093                           ; BSR set to: 0
  2094  0016A2  0E00               	movlw	0
  2095  0016A4  6FF3               	movwf	setPWMFreq@prescaleval& (0+255),b
  2096  0016A6  0E00               	movlw	0
  2097  0016A8  6FF4               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  2098  0016AA  0E7F               	movlw	127
  2099  0016AC  6FF5               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  2100  0016AE  0E43               	movlw	67
  2101  0016B0  6FF6               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  2102  0016B2                     l3245:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;Main.c: 482: unsigned char prescale = (unsigned char) prescaleval;
  2106  0016B2  C0F3  F0D3         	movff	setPWMFreq@prescaleval,___fltol@f1
  2107  0016B6  C0F4  F0D4         	movff	setPWMFreq@prescaleval+1,___fltol@f1+1
  2108  0016BA  C0F5  F0D5         	movff	setPWMFreq@prescaleval+2,___fltol@f1+2
  2109  0016BE  C0F6  F0D6         	movff	setPWMFreq@prescaleval+3,___fltol@f1+3
  2110  0016C2  EC9B  F00E         	call	___fltol	;wreg free
  2111  0016C6  0100               	movlb	0	; () banked
  2112  0016C8  51D3               	movf	?___fltol& (0+255),w,b
  2113  0016CA  6FF1               	movwf	setPWMFreq@prescale& (0+255),b
  2114  0016CC                     
  2115                           ; BSR set to: 0
  2116                           ;Main.c: 483: readI2C(0x80, 0x00, &data1, 1);
  2117  0016CC  0E00               	movlw	0
  2118  0016CE  6FD6               	movwf	readI2C@Register& (0+255),b
  2119  0016D0  0ED2               	movlw	low _data1
  2120  0016D2  6FD7               	movwf	readI2C@Data& (0+255),b
  2121  0016D4  0E00               	movlw	high _data1
  2122  0016D6  6FD8               	movwf	(readI2C@Data+1)& (0+255),b
  2123  0016D8  0E00               	movlw	0
  2124  0016DA  6FDA               	movwf	(readI2C@bytes+1)& (0+255),b
  2125  0016DC  0E01               	movlw	1
  2126  0016DE  6FD9               	movwf	readI2C@bytes& (0+255),b
  2127  0016E0  0E80               	movlw	128
  2128  0016E2  EC13  F010         	call	_readI2C
  2129  0016E6                     
  2130                           ;Main.c: 485: unsigned char newmode = (data1 & ~0x80) | 0x10;
  2131  0016E6  0100               	movlb	0	; () banked
  2132  0016E8  51D2               	movf	_data1& (0+255),w,b
  2133  0016EA  0B7F               	andlw	127
  2134  0016EC  0910               	iorlw	16
  2135  0016EE  6FF2               	movwf	setPWMFreq@newmode& (0+255),b
  2136  0016F0                     
  2137                           ; BSR set to: 0
  2138                           ;Main.c: 486: writeI2C(0x80, 0x00, &newmode,1);
  2139  0016F0  0E00               	movlw	0
  2140  0016F2  6FD5               	movwf	writeI2C@Register& (0+255),b
  2141  0016F4  0EF2               	movlw	low setPWMFreq@newmode
  2142  0016F6  6FD6               	movwf	writeI2C@Data& (0+255),b
  2143  0016F8  0E00               	movlw	high setPWMFreq@newmode
  2144  0016FA  6FD7               	movwf	(writeI2C@Data+1)& (0+255),b
  2145  0016FC  0E00               	movlw	0
  2146  0016FE  6FD9               	movwf	(writeI2C@bytes+1)& (0+255),b
  2147  001700  0E01               	movlw	1
  2148  001702  6FD8               	movwf	writeI2C@bytes& (0+255),b
  2149  001704  0E80               	movlw	128
  2150  001706  EC27  F012         	call	_writeI2C
  2151  00170A                     
  2152                           ;Main.c: 487: writeI2C(0x80, 0xFE, &prescale,1);
  2153  00170A  0EFE               	movlw	254
  2154  00170C  0100               	movlb	0	; () banked
  2155  00170E  6FD5               	movwf	writeI2C@Register& (0+255),b
  2156  001710  0EF1               	movlw	low setPWMFreq@prescale
  2157  001712  6FD6               	movwf	writeI2C@Data& (0+255),b
  2158  001714  0E00               	movlw	high setPWMFreq@prescale
  2159  001716  6FD7               	movwf	(writeI2C@Data+1)& (0+255),b
  2160  001718  0E00               	movlw	0
  2161  00171A  6FD9               	movwf	(writeI2C@bytes+1)& (0+255),b
  2162  00171C  0E01               	movlw	1
  2163  00171E  6FD8               	movwf	writeI2C@bytes& (0+255),b
  2164  001720  0E80               	movlw	128
  2165  001722  EC27  F012         	call	_writeI2C
  2166  001726                     
  2167                           ;Main.c: 488: writeI2C(0x80, 0x00, &data1,1);
  2168  001726  0E00               	movlw	0
  2169  001728  0100               	movlb	0	; () banked
  2170  00172A  6FD5               	movwf	writeI2C@Register& (0+255),b
  2171  00172C  0ED2               	movlw	low _data1
  2172  00172E  6FD6               	movwf	writeI2C@Data& (0+255),b
  2173  001730  0E00               	movlw	high _data1
  2174  001732  6FD7               	movwf	(writeI2C@Data+1)& (0+255),b
  2175  001734  0E00               	movlw	0
  2176  001736  6FD9               	movwf	(writeI2C@bytes+1)& (0+255),b
  2177  001738  0E01               	movlw	1
  2178  00173A  6FD8               	movwf	writeI2C@bytes& (0+255),b
  2179  00173C  0E80               	movlw	128
  2180  00173E  EC27  F012         	call	_writeI2C
  2181  001742                     
  2182                           ;Main.c: 489: _delay((unsigned long)((5)*(8000000/4000.0)));
  2183  001742  0E0D               	movlw	13
  2184  001744  0100               	movlb	0	; () banked
  2185  001746  6FF0               	movwf	??_setPWMFreq& (0+255),b
  2186  001748  0EFB               	movlw	251
  2187  00174A                     u3317:
  2188  00174A  2EE8               	decfsz	wreg,f,c
  2189  00174C  D7FE               	bra	u3317
  2190  00174E  2FF0               	decfsz	??_setPWMFreq& (0+255),f,b
  2191  001750  D7FC               	bra	u3317
  2192  001752  D000               	nop2	
  2193  001754                     
  2194                           ;Main.c: 491: d1=(data1 | 0x80 | 0x20);
  2195  001754  0100               	movlb	0	; () banked
  2196  001756  51D2               	movf	_data1& (0+255),w,b
  2197  001758  09A0               	iorlw	160
  2198  00175A  6FD1               	movwf	_d1& (0+255),b
  2199  00175C                     
  2200                           ; BSR set to: 0
  2201                           ;Main.c: 492: writeI2C(0x80, 0x00, &d1, 1);
  2202  00175C  0E00               	movlw	0
  2203  00175E  6FD5               	movwf	writeI2C@Register& (0+255),b
  2204  001760  0ED1               	movlw	low _d1
  2205  001762  6FD6               	movwf	writeI2C@Data& (0+255),b
  2206  001764  0E00               	movlw	high _d1
  2207  001766  6FD7               	movwf	(writeI2C@Data+1)& (0+255),b
  2208  001768  0E00               	movlw	0
  2209  00176A  6FD9               	movwf	(writeI2C@bytes+1)& (0+255),b
  2210  00176C  0E01               	movlw	1
  2211  00176E  6FD8               	movwf	writeI2C@bytes& (0+255),b
  2212  001770  0E80               	movlw	128
  2213  001772  EC27  F012         	call	_writeI2C
  2214  001776  0012               	return		;funcret
  2215  001778                     __end_of_setPWMFreq:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _writeI2C *****************
  2219 ;; Defined at:
  2220 ;;		line 391 in file "Main.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  Address         1    wreg     unsigned char 
  2223 ;;  Register        1    2[BANK0 ] unsigned char 
  2224 ;;  Data            2    3[BANK0 ] PTR unsigned char 
  2225 ;;		 -> data2(4), d1(1), setPWMFreq@newmode(1), data1(1), 
  2226 ;;		 -> setPWMFreq@prescale(1), RAM(2047), 
  2227 ;;  bytes           2    5[BANK0 ] int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  Address         1    9[BANK0 ] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2239 ;;      Params:         0       5       0       0       0       0       0       0       0
  2240 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2241 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2242 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2243 ;;Total ram usage:        8 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    8
  2246 ;; This function calls:
  2247 ;;		_sendI2C
  2248 ;;		_startI2C
  2249 ;;		_stopI2C
  2250 ;; This function is called by:
  2251 ;;		_settings
  2252 ;;		_setPWMFreq
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text7
  2257  00244E                     __ptext7:
  2258                           	callstack 0
  2259  00244E                     _writeI2C:
  2260                           	callstack 21
  2261                           
  2262                           ;incstack = 0
  2263                           ;writeI2C@Address stored from wreg
  2264  00244E  0100               	movlb	0	; () banked
  2265  002450  6FDC               	movwf	writeI2C@Address& (0+255),b
  2266  002452                     
  2267                           ;Main.c: 392: startI2C();
  2268  002452  EC73  F015         	call	_startI2C	;wreg free
  2269                           
  2270                           ;Main.c: 393: sendI2C(Address);
  2271  002456  0100               	movlb	0	; () banked
  2272  002458  51DC               	movf	writeI2C@Address& (0+255),w,b
  2273  00245A  EC5C  F015         	call	_sendI2C
  2274                           
  2275                           ;Main.c: 394: sendI2C(Register);
  2276  00245E  0100               	movlb	0	; () banked
  2277  002460  51D5               	movf	writeI2C@Register& (0+255),w,b
  2278  002462  EC5C  F015         	call	_sendI2C
  2279  002466                     
  2280                           ;Main.c: 395: for(i=0;i<bytes;i++){
  2281  002466  0E00               	movlw	0
  2282  002468  6E51               	movwf	(_i+1)^0,c
  2283  00246A  0E00               	movlw	0
  2284  00246C  6E50               	movwf	_i^0,c
  2285  00246E  EF45  F012         	goto	l2793
  2286  002472                     l2787:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;Main.c: 396: sendI2C(*Data);
  2290  002472  C0D6  FFD9         	movff	writeI2C@Data,fsr2l
  2291  002476  C0D7  FFDA         	movff	writeI2C@Data+1,fsr2h
  2292  00247A  50DF               	movf	indf2,w,c
  2293  00247C  EC5C  F015         	call	_sendI2C
  2294  002480                     
  2295                           ;Main.c: 397: Data++;
  2296  002480  0100               	movlb	0	; () banked
  2297  002482  4BD6               	infsnz	writeI2C@Data& (0+255),f,b
  2298  002484  2BD7               	incf	(writeI2C@Data+1)& (0+255),f,b
  2299  002486                     
  2300                           ; BSR set to: 0
  2301  002486  4A50               	infsnz	_i^0,f,c
  2302  002488  2A51               	incf	(_i+1)^0,f,c
  2303  00248A                     l2793:
  2304  00248A  0100               	movlb	0	; () banked
  2305  00248C  51D8               	movf	writeI2C@bytes& (0+255),w,b
  2306  00248E  5C50               	subwf	_i^0,w,c
  2307  002490  5051               	movf	(_i+1)^0,w,c
  2308  002492  0A80               	xorlw	128
  2309  002494  6FDA               	movwf	??_writeI2C& (0+255),b
  2310  002496  51D9               	movf	(writeI2C@bytes+1)& (0+255),w,b
  2311  002498  0A80               	xorlw	128
  2312  00249A  59DA               	subwfb	??_writeI2C& (0+255),w,b
  2313  00249C  A0D8               	btfss	status,0,c
  2314  00249E  EF53  F012         	goto	u2251
  2315  0024A2  EF55  F012         	goto	u2250
  2316  0024A6                     u2251:
  2317  0024A6  EF39  F012         	goto	l2787
  2318  0024AA                     u2250:
  2319  0024AA                     
  2320                           ; BSR set to: 0
  2321                           ;Main.c: 398: };Main.c: 399: stopI2C();
  2322  0024AA  EC6F  F015         	call	_stopI2C	;wreg free
  2323  0024AE                     
  2324                           ;Main.c: 400: _delay((unsigned long)((100)*(8000000/4000.0)));
  2325  0024AE  0E02               	movlw	2
  2326  0024B0  0100               	movlb	0	; () banked
  2327  0024B2  6FDB               	movwf	(??_writeI2C+1)& (0+255),b
  2328  0024B4  0E04               	movlw	4
  2329  0024B6  6FDA               	movwf	??_writeI2C& (0+255),b
  2330  0024B8  0EBA               	movlw	186
  2331  0024BA                     u3327:
  2332  0024BA  2EE8               	decfsz	wreg,f,c
  2333  0024BC  D7FE               	bra	u3327
  2334  0024BE  2FDA               	decfsz	??_writeI2C& (0+255),f,b
  2335  0024C0  D7FC               	bra	u3327
  2336  0024C2  2FDB               	decfsz	(??_writeI2C+1)& (0+255),f,b
  2337  0024C4  D7FA               	bra	u3327
  2338  0024C6  F000               	nop	
  2339  0024C8  0012               	return		;funcret
  2340  0024CA                     __end_of_writeI2C:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _readI2C *****************
  2344 ;; Defined at:
  2345 ;;		line 423 in file "Main.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  Address         1    wreg     unsigned char 
  2348 ;;  Register        1    3[BANK0 ] unsigned char 
  2349 ;;  Data            2    4[BANK0 ] PTR unsigned char 
  2350 ;;		 -> data1(1), 
  2351 ;;  bytes           2    6[BANK0 ] int 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  Address         1   10[BANK0 ] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2363 ;;      Params:         0       5       0       0       0       0       0       0       0
  2364 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2365 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2366 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2367 ;;Total ram usage:        8 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    8
  2370 ;; This function calls:
  2371 ;;		_receiveI2C
  2372 ;;		_repeatedStart
  2373 ;;		_sendI2C
  2374 ;;		_startI2C
  2375 ;;		_stopI2C
  2376 ;; This function is called by:
  2377 ;;		_setPWMFreq
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text8
  2382  002026                     __ptext8:
  2383                           	callstack 0
  2384  002026                     _readI2C:
  2385                           	callstack 20
  2386                           
  2387                           ;incstack = 0
  2388                           ;readI2C@Address stored from wreg
  2389  002026  0100               	movlb	0	; () banked
  2390  002028  6FDD               	movwf	readI2C@Address& (0+255),b
  2391  00202A                     
  2392                           ;Main.c: 424: startI2C();
  2393  00202A  EC73  F015         	call	_startI2C	;wreg free
  2394                           
  2395                           ;Main.c: 425: sendI2C(Address);
  2396  00202E  0100               	movlb	0	; () banked
  2397  002030  51DD               	movf	readI2C@Address& (0+255),w,b
  2398  002032  EC5C  F015         	call	_sendI2C
  2399                           
  2400                           ;Main.c: 426: sendI2C(Register);
  2401  002036  0100               	movlb	0	; () banked
  2402  002038  51D6               	movf	readI2C@Register& (0+255),w,b
  2403  00203A  EC5C  F015         	call	_sendI2C
  2404                           
  2405                           ;Main.c: 427: repeatedStart();
  2406  00203E  EC77  F015         	call	_repeatedStart	;wreg free
  2407                           
  2408                           ;Main.c: 428: sendI2C(Address|0x01);
  2409  002042  0100               	movlb	0	; () banked
  2410  002044  51DD               	movf	readI2C@Address& (0+255),w,b
  2411  002046  0901               	iorlw	1
  2412  002048  EC5C  F015         	call	_sendI2C
  2413  00204C                     
  2414                           ;Main.c: 430: for(i=0;i<bytes;i++){
  2415  00204C  0E00               	movlw	0
  2416  00204E  6E51               	movwf	(_i+1)^0,c
  2417  002050  0E00               	movlw	0
  2418  002052  6E50               	movwf	_i^0,c
  2419  002054  EF55  F010         	goto	l2857
  2420  002058                     l2845:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;Main.c: 431: if(i+1 == bytes){
  2424  002058  0E01               	movlw	1
  2425  00205A  2450               	addwf	_i^0,w,c
  2426  00205C  6FDB               	movwf	??_readI2C& (0+255),b
  2427  00205E  0E00               	movlw	0
  2428  002060  2051               	addwfc	(_i+1)^0,w,c
  2429  002062  6FDC               	movwf	(??_readI2C+1)& (0+255),b
  2430  002064  51D9               	movf	readI2C@bytes& (0+255),w,b
  2431  002066  19DB               	xorwf	??_readI2C& (0+255),w,b
  2432  002068  E107               	bnz	u2331
  2433  00206A  51DA               	movf	(readI2C@bytes+1)& (0+255),w,b
  2434  00206C  19DC               	xorwf	(??_readI2C+1)& (0+255),w,b
  2435  00206E  A4D8               	btfss	status,2,c
  2436  002070  EF3C  F010         	goto	u2331
  2437  002074  EF3E  F010         	goto	u2330
  2438  002078                     u2331:
  2439  002078  EF48  F010         	goto	l2849
  2440  00207C                     u2330:
  2441  00207C                     
  2442                           ; BSR set to: 0
  2443                           ;Main.c: 432: *Data = receiveI2C(1);
  2444  00207C  0E01               	movlw	1
  2445  00207E  ECA0  F014         	call	_receiveI2C
  2446  002082  C0D7  FFD9         	movff	readI2C@Data,fsr2l
  2447  002086  C0D8  FFDA         	movff	readI2C@Data+1,fsr2h
  2448  00208A  6EDF               	movwf	indf2,c
  2449                           
  2450                           ;Main.c: 433: }
  2451  00208C  EF50  F010         	goto	l2855
  2452  002090                     l2849:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;Main.c: 434: else{;Main.c: 435: *Data = receiveI2C(0);
  2456  002090  0E00               	movlw	0
  2457  002092  ECA0  F014         	call	_receiveI2C
  2458  002096  C0D7  FFD9         	movff	readI2C@Data,fsr2l
  2459  00209A  C0D8  FFDA         	movff	readI2C@Data+1,fsr2h
  2460  00209E  6EDF               	movwf	indf2,c
  2461  0020A0                     l2855:
  2462                           
  2463                           ;Main.c: 439: };Main.c: 440: Data++;
  2464  0020A0  0100               	movlb	0	; () banked
  2465  0020A2  4BD7               	infsnz	readI2C@Data& (0+255),f,b
  2466  0020A4  2BD8               	incf	(readI2C@Data+1)& (0+255),f,b
  2467  0020A6  4A50               	infsnz	_i^0,f,c
  2468  0020A8  2A51               	incf	(_i+1)^0,f,c
  2469  0020AA                     l2857:
  2470  0020AA  0100               	movlb	0	; () banked
  2471  0020AC  51D9               	movf	readI2C@bytes& (0+255),w,b
  2472  0020AE  5C50               	subwf	_i^0,w,c
  2473  0020B0  5051               	movf	(_i+1)^0,w,c
  2474  0020B2  0A80               	xorlw	128
  2475  0020B4  6FDB               	movwf	??_readI2C& (0+255),b
  2476  0020B6  51DA               	movf	(readI2C@bytes+1)& (0+255),w,b
  2477  0020B8  0A80               	xorlw	128
  2478  0020BA  59DB               	subwfb	??_readI2C& (0+255),w,b
  2479  0020BC  A0D8               	btfss	status,0,c
  2480  0020BE  EF63  F010         	goto	u2341
  2481  0020C2  EF65  F010         	goto	u2340
  2482  0020C6                     u2341:
  2483  0020C6  EF2C  F010         	goto	l2845
  2484  0020CA                     u2340:
  2485  0020CA                     
  2486                           ; BSR set to: 0
  2487                           ;Main.c: 441: };Main.c: 443: stopI2C();
  2488  0020CA  EC6F  F015         	call	_stopI2C	;wreg free
  2489  0020CE                     
  2490                           ;Main.c: 444: _delay((unsigned long)((100)*(8000000/4000.0)));
  2491  0020CE  0E02               	movlw	2
  2492  0020D0  0100               	movlb	0	; () banked
  2493  0020D2  6FDC               	movwf	(??_readI2C+1)& (0+255),b
  2494  0020D4  0E04               	movlw	4
  2495  0020D6  6FDB               	movwf	??_readI2C& (0+255),b
  2496  0020D8  0EBA               	movlw	186
  2497  0020DA                     u3337:
  2498  0020DA  2EE8               	decfsz	wreg,f,c
  2499  0020DC  D7FE               	bra	u3337
  2500  0020DE  2FDB               	decfsz	??_readI2C& (0+255),f,b
  2501  0020E0  D7FC               	bra	u3337
  2502  0020E2  2FDC               	decfsz	(??_readI2C+1)& (0+255),f,b
  2503  0020E4  D7FA               	bra	u3337
  2504  0020E6  F000               	nop	
  2505  0020E8  0012               	return		;funcret
  2506  0020EA                     __end_of_readI2C:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _stopI2C *****************
  2510 ;; Defined at:
  2511 ;;		line 417 in file "Main.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    7
  2532 ;; This function calls:
  2533 ;;		_readyI2C
  2534 ;; This function is called by:
  2535 ;;		_writeI2C
  2536 ;;		_readI2C
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text9
  2541  002ADE                     __ptext9:
  2542                           	callstack 0
  2543  002ADE                     _stopI2C:
  2544                           	callstack 21
  2545  002ADE                     
  2546                           ;Main.c: 419: readyI2C();
  2547  002ADE  ECF0  F014         	call	_readyI2C	;wreg free
  2548  002AE2                     
  2549                           ;Main.c: 420: PEN = 1;
  2550  002AE2  84C5               	bsf	4037,2,c	;volatile
  2551  002AE4  0012               	return		;funcret
  2552  002AE6                     __end_of_stopI2C:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _startI2C *****************
  2556 ;; Defined at:
  2557 ;;		line 403 in file "Main.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    7
  2578 ;; This function calls:
  2579 ;;		_readyI2C
  2580 ;; This function is called by:
  2581 ;;		_writeI2C
  2582 ;;		_readI2C
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text10
  2587  002AE6                     __ptext10:
  2588                           	callstack 0
  2589  002AE6                     _startI2C:
  2590                           	callstack 21
  2591  002AE6                     
  2592                           ;Main.c: 404: readyI2C();
  2593  002AE6  ECF0  F014         	call	_readyI2C	;wreg free
  2594  002AEA                     
  2595                           ;Main.c: 405: SEN = 1;
  2596  002AEA  80C5               	bsf	4037,0,c	;volatile
  2597  002AEC  0012               	return		;funcret
  2598  002AEE                     __end_of_startI2C:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _sendI2C *****************
  2602 ;; Defined at:
  2603 ;;		line 412 in file "Main.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  data            1    wreg     unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  data            1    1[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2617 ;;      Params:         0       0       0       0       0       0       0       0       0
  2618 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2620 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    7
  2624 ;; This function calls:
  2625 ;;		_readyI2C
  2626 ;; This function is called by:
  2627 ;;		_writeI2C
  2628 ;;		_readI2C
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text11
  2633  002AB8                     __ptext11:
  2634                           	callstack 0
  2635  002AB8                     _sendI2C:
  2636                           	callstack 21
  2637                           
  2638                           ;incstack = 0
  2639                           ;sendI2C@data stored from wreg
  2640  002AB8  0100               	movlb	0	; () banked
  2641  002ABA  6FD4               	movwf	sendI2C@data& (0+255),b
  2642  002ABC                     
  2643                           ;Main.c: 413: readyI2C();
  2644  002ABC  ECF0  F014         	call	_readyI2C	;wreg free
  2645  002AC0                     
  2646                           ;Main.c: 414: SSPBUF = data;
  2647  002AC0  C0D4  FFC9         	movff	sendI2C@data,4041	;volatile
  2648  002AC4  0012               	return		;funcret
  2649  002AC6                     __end_of_sendI2C:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _repeatedStart *****************
  2653 ;; Defined at:
  2654 ;;		line 447 in file "Main.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2668 ;;      Params:         0       0       0       0       0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2671 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    7
  2675 ;; This function calls:
  2676 ;;		_readyI2C
  2677 ;; This function is called by:
  2678 ;;		_readI2C
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text12
  2683  002AEE                     __ptext12:
  2684                           	callstack 0
  2685  002AEE                     _repeatedStart:
  2686                           	callstack 20
  2687  002AEE                     
  2688                           ;Main.c: 448: readyI2C();
  2689  002AEE  ECF0  F014         	call	_readyI2C	;wreg free
  2690  002AF2                     
  2691                           ;Main.c: 449: RSEN = 1;
  2692  002AF2  82C5               	bsf	4037,1,c	;volatile
  2693  002AF4  0012               	return		;funcret
  2694  002AF6                     __end_of_repeatedStart:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _receiveI2C *****************
  2698 ;; Defined at:
  2699 ;;		line 452 in file "Main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  flag            1    wreg     unsigned char 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  flag            1    1[BANK0 ] unsigned char 
  2704 ;;  buffer          1    2[BANK0 ] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      unsigned char 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    7
  2721 ;; This function calls:
  2722 ;;		_readyI2C
  2723 ;; This function is called by:
  2724 ;;		_readI2C
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text13
  2729  002940                     __ptext13:
  2730                           	callstack 0
  2731  002940                     _receiveI2C:
  2732                           	callstack 20
  2733                           
  2734                           ;incstack = 0
  2735                           ;receiveI2C@flag stored from wreg
  2736  002940  0100               	movlb	0	; () banked
  2737  002942  6FD4               	movwf	receiveI2C@flag& (0+255),b
  2738  002944                     
  2739                           ;Main.c: 453: unsigned char buffer;;Main.c: 454: readyI2C();
  2740  002944  ECF0  F014         	call	_readyI2C	;wreg free
  2741  002948                     
  2742                           ;Main.c: 455: RCEN = 1;
  2743  002948  86C5               	bsf	4037,3,c	;volatile
  2744                           
  2745                           ;Main.c: 456: readyI2C();
  2746  00294A  ECF0  F014         	call	_readyI2C	;wreg free
  2747  00294E                     
  2748                           ;Main.c: 457: buffer = SSPBUF;
  2749  00294E  CFC9 F0D5          	movff	4041,receiveI2C@buffer	;volatile
  2750                           
  2751                           ;Main.c: 458: readyI2C();
  2752  002952  ECF0  F014         	call	_readyI2C	;wreg free
  2753  002956                     
  2754                           ;Main.c: 459: ACKDT = flag==1? 1 : 0;
  2755  002956  0100               	movlb	0	; () banked
  2756  002958  05D4               	decf	receiveI2C@flag& (0+255),w,b
  2757  00295A  B4D8               	btfsc	status,2,c
  2758  00295C  EFB2  F014         	goto	u1691
  2759  002960  EFB5  F014         	goto	u1690
  2760  002964                     u1691:
  2761  002964  8AC5               	bsf	4037,5,c	;volatile
  2762  002966  EFB6  F014         	goto	u1705
  2763  00296A                     u1690:
  2764  00296A  9AC5               	bcf	4037,5,c	;volatile
  2765  00296C                     u1705:
  2766  00296C                     
  2767                           ;Main.c: 460: ACKEN = 1;
  2768  00296C  88C5               	bsf	4037,4,c	;volatile
  2769  00296E                     
  2770                           ;Main.c: 461: readyI2C();
  2771  00296E  ECF0  F014         	call	_readyI2C	;wreg free
  2772  002972                     
  2773                           ;Main.c: 462: return buffer;
  2774  002972  0100               	movlb	0	; () banked
  2775  002974  51D5               	movf	receiveI2C@buffer& (0+255),w,b
  2776  002976                     
  2777                           ; BSR set to: 0
  2778  002976  0012               	return		;funcret
  2779  002978                     __end_of_receiveI2C:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _readyI2C *****************
  2783 ;; Defined at:
  2784 ;;		line 408 in file "Main.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2801 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        1 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    6
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_startI2C
  2809 ;;		_sendI2C
  2810 ;;		_stopI2C
  2811 ;;		_repeatedStart
  2812 ;;		_receiveI2C
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text14
  2817  0029E0                     __ptext14:
  2818                           	callstack 0
  2819  0029E0                     _readyI2C:
  2820                           	callstack 21
  2821  0029E0                     l2361:
  2822  0029E0  CFC5 F0D3          	movff	4037,??_readyI2C	;volatile
  2823  0029E4  0E1F               	movlw	31
  2824  0029E6  0100               	movlb	0	; () banked
  2825  0029E8  17D3               	andwf	??_readyI2C& (0+255),f,b
  2826  0029EA  A4D8               	btfss	status,2,c
  2827  0029EC  EFFA  F014         	goto	u1651
  2828  0029F0  EFFC  F014         	goto	u1650
  2829  0029F4                     u1651:
  2830  0029F4  EFF0  F014         	goto	l2361
  2831  0029F8                     u1650:
  2832  0029F8                     
  2833                           ; BSR set to: 0
  2834  0029F8  B4C7               	btfsc	199,2,c	;volatile
  2835  0029FA  EF01  F015         	goto	u1661
  2836  0029FE  EF03  F015         	goto	u1660
  2837  002A02                     u1661:
  2838  002A02  EFF0  F014         	goto	l2361
  2839  002A06                     u1660:
  2840  002A06                     
  2841                           ; BSR set to: 0
  2842  002A06  0012               	return		;funcret
  2843  002A08                     __end_of_readyI2C:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function ___fltol *****************
  2847 ;; Defined at:
  2848 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  f1              4    0[BANK0 ] void 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  exp1            1    9[BANK0 ] unsigned char 
  2853 ;;  sign1           1    8[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  4    0[BANK0 ] long 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       4       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2866 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2867 ;;Total ram usage:       10 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    6
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_setPWMFreq
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text15
  2878  001D36                     __ptext15:
  2879                           	callstack 0
  2880  001D36                     ___fltol:
  2881                           	callstack 22
  2882  001D36  0100               	movlb	0	; () banked
  2883  001D38  35D5               	rlcf	(___fltol@f1+2)& (0+255),w,b
  2884  001D3A  35D6               	rlcf	(___fltol@f1+3)& (0+255),w,b
  2885  001D3C  6FDC               	movwf	___fltol@exp1& (0+255),b
  2886  001D3E  51DC               	movf	___fltol@exp1& (0+255),w,b
  2887  001D40  A4D8               	btfss	status,2,c
  2888  001D42  EFA5  F00E         	goto	u2631
  2889  001D46  EFA7  F00E         	goto	u2630
  2890  001D4A                     u2631:
  2891  001D4A  EFB1  F00E         	goto	l3043
  2892  001D4E                     u2630:
  2893  001D4E                     l3039:
  2894                           
  2895                           ; BSR set to: 0
  2896  001D4E  0E00               	movlw	0
  2897  001D50  6FD3               	movwf	?___fltol& (0+255),b
  2898  001D52  0E00               	movlw	0
  2899  001D54  6FD4               	movwf	(?___fltol+1)& (0+255),b
  2900  001D56  0E00               	movlw	0
  2901  001D58  6FD5               	movwf	(?___fltol+2)& (0+255),b
  2902  001D5A  0E00               	movlw	0
  2903  001D5C  6FD6               	movwf	(?___fltol+3)& (0+255),b
  2904  001D5E  EF1E  F00F         	goto	l629
  2905  001D62                     l3043:
  2906                           
  2907                           ; BSR set to: 0
  2908  001D62  C0D3  F0D7         	movff	___fltol@f1,??___fltol
  2909  001D66  C0D4  F0D8         	movff	___fltol@f1+1,??___fltol+1
  2910  001D6A  C0D5  F0D9         	movff	___fltol@f1+2,??___fltol+2
  2911  001D6E  C0D6  F0DA         	movff	___fltol@f1+3,??___fltol+3
  2912  001D72  0E20               	movlw	32
  2913  001D74  EFC1  F00E         	goto	u2640
  2914  001D78                     u2645:
  2915  001D78  90D8               	bcf	status,0,c
  2916  001D7A  33DA               	rrcf	(??___fltol+3)& (0+255),f,b
  2917  001D7C  33D9               	rrcf	(??___fltol+2)& (0+255),f,b
  2918  001D7E  33D8               	rrcf	(??___fltol+1)& (0+255),f,b
  2919  001D80  33D7               	rrcf	??___fltol& (0+255),f,b
  2920  001D82                     u2640:
  2921  001D82  2EE8               	decfsz	wreg,f,c
  2922  001D84  EFBC  F00E         	goto	u2645
  2923  001D88  51D7               	movf	??___fltol& (0+255),w,b
  2924  001D8A  6FDB               	movwf	___fltol@sign1& (0+255),b
  2925  001D8C                     
  2926                           ; BSR set to: 0
  2927  001D8C  8FD5               	bsf	(___fltol@f1+2)& (0+255),7,b
  2928  001D8E                     
  2929                           ; BSR set to: 0
  2930  001D8E  0EFF               	movlw	255
  2931  001D90  17D3               	andwf	___fltol@f1& (0+255),f,b
  2932  001D92  0EFF               	movlw	255
  2933  001D94  17D4               	andwf	(___fltol@f1+1)& (0+255),f,b
  2934  001D96  0EFF               	movlw	255
  2935  001D98  17D5               	andwf	(___fltol@f1+2)& (0+255),f,b
  2936  001D9A  0E00               	movlw	0
  2937  001D9C  17D6               	andwf	(___fltol@f1+3)& (0+255),f,b
  2938  001D9E                     
  2939                           ; BSR set to: 0
  2940  001D9E  0E96               	movlw	150
  2941  001DA0  5FDC               	subwf	___fltol@exp1& (0+255),f,b
  2942  001DA2                     
  2943                           ; BSR set to: 0
  2944  001DA2  BFDC               	btfsc	___fltol@exp1& (0+255),7,b
  2945  001DA4  EFD8  F00E         	goto	u2650
  2946  001DA8  EFD6  F00E         	goto	u2651
  2947  001DAC                     u2651:
  2948  001DAC  EFEE  F00E         	goto	l3063
  2949  001DB0                     u2650:
  2950  001DB0                     
  2951                           ; BSR set to: 0
  2952  001DB0  51DC               	movf	___fltol@exp1& (0+255),w,b
  2953  001DB2  0A80               	xorlw	128
  2954  001DB4  0F97               	addlw	151
  2955  001DB6  B0D8               	btfsc	status,0,c
  2956  001DB8  EFE0  F00E         	goto	u2661
  2957  001DBC  EFE2  F00E         	goto	u2660
  2958  001DC0                     u2661:
  2959  001DC0  EFE4  F00E         	goto	l3059
  2960  001DC4                     u2660:
  2961  001DC4  EFA7  F00E         	goto	l3039
  2962  001DC8                     l3059:
  2963                           
  2964                           ; BSR set to: 0
  2965  001DC8  90D8               	bcf	status,0,c
  2966  001DCA  33D6               	rrcf	(___fltol@f1+3)& (0+255),f,b
  2967  001DCC  33D5               	rrcf	(___fltol@f1+2)& (0+255),f,b
  2968  001DCE  33D4               	rrcf	(___fltol@f1+1)& (0+255),f,b
  2969  001DD0  33D3               	rrcf	___fltol@f1& (0+255),f,b
  2970  001DD2                     
  2971                           ; BSR set to: 0
  2972  001DD2  3FDC               	incfsz	___fltol@exp1& (0+255),f,b
  2973  001DD4  EFE4  F00E         	goto	l3059
  2974  001DD8  EF06  F00F         	goto	l3073
  2975  001DDC                     l3063:
  2976                           
  2977                           ; BSR set to: 0
  2978  001DDC  0E1F               	movlw	31
  2979  001DDE  65DC               	cpfsgt	___fltol@exp1& (0+255),b
  2980  001DE0  EFF4  F00E         	goto	u2671
  2981  001DE4  EFF6  F00E         	goto	u2670
  2982  001DE8                     u2671:
  2983  001DE8  EFFE  F00E         	goto	l3071
  2984  001DEC                     u2670:
  2985  001DEC  EFA7  F00E         	goto	l3039
  2986  001DF0                     l3069:
  2987                           
  2988                           ; BSR set to: 0
  2989  001DF0  90D8               	bcf	status,0,c
  2990  001DF2  37D3               	rlcf	___fltol@f1& (0+255),f,b
  2991  001DF4  37D4               	rlcf	(___fltol@f1+1)& (0+255),f,b
  2992  001DF6  37D5               	rlcf	(___fltol@f1+2)& (0+255),f,b
  2993  001DF8  37D6               	rlcf	(___fltol@f1+3)& (0+255),f,b
  2994  001DFA  07DC               	decf	___fltol@exp1& (0+255),f,b
  2995  001DFC                     l3071:
  2996                           
  2997                           ; BSR set to: 0
  2998  001DFC  51DC               	movf	___fltol@exp1& (0+255),w,b
  2999  001DFE  A4D8               	btfss	status,2,c
  3000  001E00  EF04  F00F         	goto	u2681
  3001  001E04  EF06  F00F         	goto	u2680
  3002  001E08                     u2681:
  3003  001E08  EFF8  F00E         	goto	l3069
  3004  001E0C                     u2680:
  3005  001E0C                     l3073:
  3006                           
  3007                           ; BSR set to: 0
  3008  001E0C  51DB               	movf	___fltol@sign1& (0+255),w,b
  3009  001E0E  B4D8               	btfsc	status,2,c
  3010  001E10  EF0C  F00F         	goto	u2691
  3011  001E14  EF0E  F00F         	goto	u2690
  3012  001E18                     u2691:
  3013  001E18  EF16  F00F         	goto	l3077
  3014  001E1C                     u2690:
  3015  001E1C                     
  3016                           ; BSR set to: 0
  3017  001E1C  1FD6               	comf	(___fltol@f1+3)& (0+255),f,b
  3018  001E1E  1FD5               	comf	(___fltol@f1+2)& (0+255),f,b
  3019  001E20  1FD4               	comf	(___fltol@f1+1)& (0+255),f,b
  3020  001E22  6DD3               	negf	___fltol@f1& (0+255),b
  3021  001E24  0E00               	movlw	0
  3022  001E26  23D4               	addwfc	(___fltol@f1+1)& (0+255),f,b
  3023  001E28  23D5               	addwfc	(___fltol@f1+2)& (0+255),f,b
  3024  001E2A  23D6               	addwfc	(___fltol@f1+3)& (0+255),f,b
  3025  001E2C                     l3077:
  3026                           
  3027                           ; BSR set to: 0
  3028  001E2C  C0D3  F0D3         	movff	___fltol@f1,?___fltol
  3029  001E30  C0D4  F0D4         	movff	___fltol@f1+1,?___fltol+1
  3030  001E34  C0D5  F0D5         	movff	___fltol@f1+2,?___fltol+2
  3031  001E38  C0D6  F0D6         	movff	___fltol@f1+3,?___fltol+3
  3032  001E3C                     l629:
  3033                           
  3034                           ; BSR set to: 0
  3035  001E3C  0012               	return		;funcret
  3036  001E3E                     __end_of___fltol:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function ___flsub *****************
  3040 ;; Defined at:
  3041 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  b               4   16[BANK0 ] long 
  3044 ;;  a               4   20[BANK0 ] long 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  4   16[BANK0 ] long 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         0       8       0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        8 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    7
  3063 ;; This function calls:
  3064 ;;		___fladd
  3065 ;; This function is called by:
  3066 ;;		_setPWMFreq
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text16
  3071  00283E                     __ptext16:
  3072                           	callstack 0
  3073  00283E                     ___flsub:
  3074                           	callstack 21
  3075  00283E  0E00               	movlw	0
  3076  002840  0100               	movlb	0	; () banked
  3077  002842  1BE7               	xorwf	___flsub@a& (0+255),f,b
  3078  002844  0E00               	movlw	0
  3079  002846  1BE8               	xorwf	(___flsub@a+1)& (0+255),f,b
  3080  002848  0E00               	movlw	0
  3081  00284A  1BE9               	xorwf	(___flsub@a+2)& (0+255),f,b
  3082  00284C  0E80               	movlw	128
  3083  00284E  1BEA               	xorwf	(___flsub@a+3)& (0+255),f,b
  3084  002850                     
  3085                           ; BSR set to: 0
  3086  002850  C0E3  F0D3         	movff	___flsub@b,___fladd@b
  3087  002854  C0E4  F0D4         	movff	___flsub@b+1,___fladd@b+1
  3088  002858  C0E5  F0D5         	movff	___flsub@b+2,___fladd@b+2
  3089  00285C  C0E6  F0D6         	movff	___flsub@b+3,___fladd@b+3
  3090  002860  C0E7  F0D7         	movff	___flsub@a,___fladd@a
  3091  002864  C0E8  F0D8         	movff	___flsub@a+1,___fladd@a+1
  3092  002868  C0E9  F0D9         	movff	___flsub@a+2,___fladd@a+2
  3093  00286C  C0EA  F0DA         	movff	___flsub@a+3,___fladd@a+3
  3094  002870  EC47  F004         	call	___fladd	;wreg free
  3095  002874  C0D3  F0E3         	movff	?___fladd,?___flsub
  3096  002878  C0D4  F0E4         	movff	?___fladd+1,?___flsub+1
  3097  00287C  C0D5  F0E5         	movff	?___fladd+2,?___flsub+2
  3098  002880  C0D6  F0E6         	movff	?___fladd+3,?___flsub+3
  3099  002884  0012               	return		;funcret
  3100  002886                     __end_of___flsub:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function ___fladd *****************
  3104 ;; Defined at:
  3105 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  b               4    0[BANK0 ] long 
  3108 ;;  a               4    4[BANK0 ] long 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  grs             1   15[BANK0 ] unsigned char 
  3111 ;;  bexp            1   14[BANK0 ] unsigned char 
  3112 ;;  aexp            1   13[BANK0 ] unsigned char 
  3113 ;;  signs           1   12[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  4    0[BANK0 ] unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3123 ;;      Params:         0       8       0       0       0       0       0       0       0
  3124 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3125 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3126 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3127 ;;Total ram usage:       16 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    6
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_setPWMFreq
  3134 ;;		___flsub
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text17
  3139  00088E                     __ptext17:
  3140                           	callstack 0
  3141  00088E                     ___fladd:
  3142                           	callstack 21
  3143  00088E  0100               	movlb	0	; () banked
  3144  000890  51D6               	movf	(___fladd@b+3)& (0+255),w,b
  3145  000892  0B80               	andlw	128
  3146  000894  6FDF               	movwf	___fladd@signs& (0+255),b
  3147  000896  51D6               	movf	(___fladd@b+3)& (0+255),w,b
  3148  000898  25D6               	addwf	(___fladd@b+3)& (0+255),w,b
  3149  00089A  6FE1               	movwf	___fladd@bexp& (0+255),b
  3150  00089C                     
  3151                           ; BSR set to: 0
  3152  00089C  AFD5               	btfss	(___fladd@b+2)& (0+255),7,b
  3153  00089E  EF53  F004         	goto	u1711
  3154  0008A2  EF55  F004         	goto	u1710
  3155  0008A6                     u1711:
  3156  0008A6  EF56  F004         	goto	l2463
  3157  0008AA                     u1710:
  3158  0008AA                     
  3159                           ; BSR set to: 0
  3160  0008AA  81E1               	bsf	___fladd@bexp& (0+255),0,b
  3161  0008AC                     l2463:
  3162                           
  3163                           ; BSR set to: 0
  3164  0008AC  51E1               	movf	___fladd@bexp& (0+255),w,b
  3165  0008AE  B4D8               	btfsc	status,2,c
  3166  0008B0  EF5C  F004         	goto	u1721
  3167  0008B4  EF5E  F004         	goto	u1720
  3168  0008B8                     u1721:
  3169  0008B8  EF73  F004         	goto	l2473
  3170  0008BC                     u1720:
  3171  0008BC                     
  3172                           ; BSR set to: 0
  3173  0008BC  29E1               	incf	___fladd@bexp& (0+255),w,b
  3174  0008BE  A4D8               	btfss	status,2,c
  3175  0008C0  EF64  F004         	goto	u1731
  3176  0008C4  EF66  F004         	goto	u1730
  3177  0008C8                     u1731:
  3178  0008C8  EF6E  F004         	goto	l2469
  3179  0008CC                     u1730:
  3180  0008CC                     
  3181                           ; BSR set to: 0
  3182  0008CC  0E00               	movlw	0
  3183  0008CE  6FD3               	movwf	___fladd@b& (0+255),b
  3184  0008D0  0E00               	movlw	0
  3185  0008D2  6FD4               	movwf	(___fladd@b+1)& (0+255),b
  3186  0008D4  0E00               	movlw	0
  3187  0008D6  6FD5               	movwf	(___fladd@b+2)& (0+255),b
  3188  0008D8  0E00               	movlw	0
  3189  0008DA  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3190  0008DC                     l2469:
  3191                           
  3192                           ; BSR set to: 0
  3193  0008DC  8FD5               	bsf	(___fladd@b+2)& (0+255),7,b
  3194  0008DE                     
  3195                           ; BSR set to: 0
  3196  0008DE  0E00               	movlw	0
  3197  0008E0  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3198  0008E2  EF7B  F004         	goto	l2475
  3199  0008E6                     l2473:
  3200                           
  3201                           ; BSR set to: 0
  3202  0008E6  0E00               	movlw	0
  3203  0008E8  6FD3               	movwf	___fladd@b& (0+255),b
  3204  0008EA  0E00               	movlw	0
  3205  0008EC  6FD4               	movwf	(___fladd@b+1)& (0+255),b
  3206  0008EE  0E00               	movlw	0
  3207  0008F0  6FD5               	movwf	(___fladd@b+2)& (0+255),b
  3208  0008F2  0E00               	movlw	0
  3209  0008F4  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3210  0008F6                     l2475:
  3211                           
  3212                           ; BSR set to: 0
  3213  0008F6  51DA               	movf	(___fladd@a+3)& (0+255),w,b
  3214  0008F8  0B80               	andlw	128
  3215  0008FA  6FE0               	movwf	___fladd@aexp& (0+255),b
  3216  0008FC                     
  3217                           ; BSR set to: 0
  3218  0008FC  51DF               	movf	___fladd@signs& (0+255),w,b
  3219  0008FE  19E0               	xorwf	___fladd@aexp& (0+255),w,b
  3220  000900  B4D8               	btfsc	status,2,c
  3221  000902  EF85  F004         	goto	u1741
  3222  000906  EF87  F004         	goto	u1740
  3223  00090A                     u1741:
  3224  00090A  EF88  F004         	goto	l2481
  3225  00090E                     u1740:
  3226  00090E                     
  3227                           ; BSR set to: 0
  3228  00090E  8DDF               	bsf	___fladd@signs& (0+255),6,b
  3229  000910                     l2481:
  3230                           
  3231                           ; BSR set to: 0
  3232  000910  51DA               	movf	(___fladd@a+3)& (0+255),w,b
  3233  000912  25DA               	addwf	(___fladd@a+3)& (0+255),w,b
  3234  000914  6FE0               	movwf	___fladd@aexp& (0+255),b
  3235  000916                     
  3236                           ; BSR set to: 0
  3237  000916  AFD9               	btfss	(___fladd@a+2)& (0+255),7,b
  3238  000918  EF90  F004         	goto	u1751
  3239  00091C  EF92  F004         	goto	u1750
  3240  000920                     u1751:
  3241  000920  EF93  F004         	goto	l2487
  3242  000924                     u1750:
  3243  000924                     
  3244                           ; BSR set to: 0
  3245  000924  81E0               	bsf	___fladd@aexp& (0+255),0,b
  3246  000926                     l2487:
  3247                           
  3248                           ; BSR set to: 0
  3249  000926  51E0               	movf	___fladd@aexp& (0+255),w,b
  3250  000928  B4D8               	btfsc	status,2,c
  3251  00092A  EF99  F004         	goto	u1761
  3252  00092E  EF9B  F004         	goto	u1760
  3253  000932                     u1761:
  3254  000932  EFB0  F004         	goto	l2497
  3255  000936                     u1760:
  3256  000936                     
  3257                           ; BSR set to: 0
  3258  000936  29E0               	incf	___fladd@aexp& (0+255),w,b
  3259  000938  A4D8               	btfss	status,2,c
  3260  00093A  EFA1  F004         	goto	u1771
  3261  00093E  EFA3  F004         	goto	u1770
  3262  000942                     u1771:
  3263  000942  EFAB  F004         	goto	l2493
  3264  000946                     u1770:
  3265  000946                     
  3266                           ; BSR set to: 0
  3267  000946  0E00               	movlw	0
  3268  000948  6FD7               	movwf	___fladd@a& (0+255),b
  3269  00094A  0E00               	movlw	0
  3270  00094C  6FD8               	movwf	(___fladd@a+1)& (0+255),b
  3271  00094E  0E00               	movlw	0
  3272  000950  6FD9               	movwf	(___fladd@a+2)& (0+255),b
  3273  000952  0E00               	movlw	0
  3274  000954  6FDA               	movwf	(___fladd@a+3)& (0+255),b
  3275  000956                     l2493:
  3276                           
  3277                           ; BSR set to: 0
  3278  000956  8FD9               	bsf	(___fladd@a+2)& (0+255),7,b
  3279  000958                     
  3280                           ; BSR set to: 0
  3281  000958  0E00               	movlw	0
  3282  00095A  6FDA               	movwf	(___fladd@a+3)& (0+255),b
  3283  00095C  EFB8  F004         	goto	l2499
  3284  000960                     l2497:
  3285                           
  3286                           ; BSR set to: 0
  3287  000960  0E00               	movlw	0
  3288  000962  6FD7               	movwf	___fladd@a& (0+255),b
  3289  000964  0E00               	movlw	0
  3290  000966  6FD8               	movwf	(___fladd@a+1)& (0+255),b
  3291  000968  0E00               	movlw	0
  3292  00096A  6FD9               	movwf	(___fladd@a+2)& (0+255),b
  3293  00096C  0E00               	movlw	0
  3294  00096E  6FDA               	movwf	(___fladd@a+3)& (0+255),b
  3295  000970                     l2499:
  3296                           
  3297                           ; BSR set to: 0
  3298  000970  51E1               	movf	___fladd@bexp& (0+255),w,b
  3299  000972  5DE0               	subwf	___fladd@aexp& (0+255),w,b
  3300  000974  B0D8               	btfsc	status,0,c
  3301  000976  EFBF  F004         	goto	u1781
  3302  00097A  EFC1  F004         	goto	u1780
  3303  00097E                     u1781:
  3304  00097E  EFE8  F004         	goto	l2535
  3305  000982                     u1780:
  3306  000982                     
  3307                           ; BSR set to: 0
  3308  000982  ADDF               	btfss	___fladd@signs& (0+255),6,b
  3309  000984  EFC6  F004         	goto	u1791
  3310  000988  EFC8  F004         	goto	u1790
  3311  00098C                     u1791:
  3312  00098C  EFCA  F004         	goto	l2505
  3313  000990                     u1790:
  3314  000990                     
  3315                           ; BSR set to: 0
  3316  000990  0E80               	movlw	128
  3317  000992  1BDF               	xorwf	___fladd@signs& (0+255),f,b
  3318  000994                     l2505:
  3319                           
  3320                           ; BSR set to: 0
  3321  000994  C0E1  F0E2         	movff	___fladd@bexp,___fladd@grs
  3322  000998                     
  3323                           ; BSR set to: 0
  3324  000998  C0E0  F0E1         	movff	___fladd@aexp,___fladd@bexp
  3325  00099C                     
  3326                           ; BSR set to: 0
  3327  00099C  C0E2  F0E0         	movff	___fladd@grs,___fladd@aexp
  3328  0009A0                     
  3329                           ; BSR set to: 0
  3330  0009A0  C0D3  F0E2         	movff	___fladd@b,___fladd@grs
  3331  0009A4                     
  3332                           ; BSR set to: 0
  3333  0009A4  C0D7  F0D3         	movff	___fladd@a,___fladd@b
  3334  0009A8                     
  3335                           ; BSR set to: 0
  3336  0009A8  C0E2  F0D7         	movff	___fladd@grs,___fladd@a
  3337  0009AC                     
  3338                           ; BSR set to: 0
  3339  0009AC  C0D4  F0E2         	movff	___fladd@b+1,___fladd@grs
  3340  0009B0                     
  3341                           ; BSR set to: 0
  3342  0009B0  C0D8  F0D4         	movff	___fladd@a+1,___fladd@b+1
  3343  0009B4                     
  3344                           ; BSR set to: 0
  3345  0009B4  C0E2  F0D8         	movff	___fladd@grs,___fladd@a+1
  3346  0009B8                     
  3347                           ; BSR set to: 0
  3348  0009B8  C0D5  F0E2         	movff	___fladd@b+2,___fladd@grs
  3349  0009BC                     
  3350                           ; BSR set to: 0
  3351  0009BC  C0D9  F0D5         	movff	___fladd@a+2,___fladd@b+2
  3352  0009C0                     
  3353                           ; BSR set to: 0
  3354  0009C0  C0E2  F0D9         	movff	___fladd@grs,___fladd@a+2
  3355  0009C4                     
  3356                           ; BSR set to: 0
  3357  0009C4  C0D6  F0E2         	movff	___fladd@b+3,___fladd@grs
  3358  0009C8                     
  3359                           ; BSR set to: 0
  3360  0009C8  C0DA  F0D6         	movff	___fladd@a+3,___fladd@b+3
  3361  0009CC                     
  3362                           ; BSR set to: 0
  3363  0009CC  C0E2  F0DA         	movff	___fladd@grs,___fladd@a+3
  3364  0009D0                     l2535:
  3365                           
  3366                           ; BSR set to: 0
  3367  0009D0  0E00               	movlw	0
  3368  0009D2  6FE2               	movwf	___fladd@grs& (0+255),b
  3369  0009D4                     
  3370                           ; BSR set to: 0
  3371  0009D4  51E1               	movf	___fladd@bexp& (0+255),w,b
  3372  0009D6  C0E0  F0DB         	movff	___fladd@aexp,??___fladd
  3373  0009DA  6BDC               	clrf	(??___fladd+1)& (0+255),b
  3374  0009DC  5FDB               	subwf	??___fladd& (0+255),f,b
  3375  0009DE  0E00               	movlw	0
  3376  0009E0  5BDC               	subwfb	(??___fladd+1)& (0+255),f,b
  3377  0009E2  BFDC               	btfsc	(??___fladd+1)& (0+255),7,b
  3378  0009E4  EFFD  F004         	goto	u1801
  3379  0009E8  51DC               	movf	(??___fladd+1)& (0+255),w,b
  3380  0009EA  E109               	bnz	u1800
  3381  0009EC  0E1A               	movlw	26
  3382  0009EE  5DDB               	subwf	??___fladd& (0+255),w,b
  3383  0009F0  A0D8               	btfss	status,0,c
  3384  0009F2  EFFD  F004         	goto	u1801
  3385  0009F6  EFFF  F004         	goto	u1800
  3386  0009FA                     u1801:
  3387  0009FA  EF36  F005         	goto	l857
  3388  0009FE                     u1800:
  3389  0009FE                     
  3390                           ; BSR set to: 0
  3391  0009FE  51D3               	movf	___fladd@b& (0+255),w,b
  3392  000A00  11D4               	iorwf	(___fladd@b+1)& (0+255),w,b
  3393  000A02  11D5               	iorwf	(___fladd@b+2)& (0+255),w,b
  3394  000A04  11D6               	iorwf	(___fladd@b+3)& (0+255),w,b
  3395  000A06  A4D8               	btfss	status,2,c
  3396  000A08  EF08  F005         	goto	u1811
  3397  000A0C  EF0B  F005         	goto	u1810
  3398  000A10                     u1811:
  3399  000A10  0E01               	movlw	1
  3400  000A12  EF0C  F005         	goto	u1820
  3401  000A16                     u1810:
  3402  000A16  0E00               	movlw	0
  3403  000A18                     u1820:
  3404  000A18  6FE2               	movwf	___fladd@grs& (0+255),b
  3405  000A1A                     
  3406                           ; BSR set to: 0
  3407  000A1A  0E00               	movlw	0
  3408  000A1C  6FD3               	movwf	___fladd@b& (0+255),b
  3409  000A1E  0E00               	movlw	0
  3410  000A20  6FD4               	movwf	(___fladd@b+1)& (0+255),b
  3411  000A22  0E00               	movlw	0
  3412  000A24  6FD5               	movwf	(___fladd@b+2)& (0+255),b
  3413  000A26  0E00               	movlw	0
  3414  000A28  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3415  000A2A                     
  3416                           ; BSR set to: 0
  3417  000A2A  C0E0  F0E1         	movff	___fladd@aexp,___fladd@bexp
  3418  000A2E  EF3F  F005         	goto	l856
  3419  000A32                     l858:
  3420                           
  3421                           ; BSR set to: 0
  3422  000A32  A1E2               	btfss	___fladd@grs& (0+255),0,b
  3423  000A34  EF1E  F005         	goto	u1831
  3424  000A38  EF20  F005         	goto	u1830
  3425  000A3C                     u1831:
  3426  000A3C  EF26  F005         	goto	l2547
  3427  000A40                     u1830:
  3428  000A40                     
  3429                           ; BSR set to: 0
  3430  000A40  90D8               	bcf	status,0,c
  3431  000A42  31E2               	rrcf	___fladd@grs& (0+255),w,b
  3432  000A44  0901               	iorlw	1
  3433  000A46  6FE2               	movwf	___fladd@grs& (0+255),b
  3434  000A48  EF28  F005         	goto	l2549
  3435  000A4C                     l2547:
  3436                           
  3437                           ; BSR set to: 0
  3438  000A4C  90D8               	bcf	status,0,c
  3439  000A4E  33E2               	rrcf	___fladd@grs& (0+255),f,b
  3440  000A50                     l2549:
  3441                           
  3442                           ; BSR set to: 0
  3443  000A50  A1D3               	btfss	___fladd@b& (0+255),0,b
  3444  000A52  EF2D  F005         	goto	u1841
  3445  000A56  EF2F  F005         	goto	u1840
  3446  000A5A                     u1841:
  3447  000A5A  EF30  F005         	goto	l2553
  3448  000A5E                     u1840:
  3449  000A5E                     
  3450                           ; BSR set to: 0
  3451  000A5E  8FE2               	bsf	___fladd@grs& (0+255),7,b
  3452  000A60                     l2553:
  3453                           
  3454                           ; BSR set to: 0
  3455  000A60  35D6               	rlcf	(___fladd@b+3)& (0+255),w,b
  3456  000A62  33D6               	rrcf	(___fladd@b+3)& (0+255),f,b
  3457  000A64  33D5               	rrcf	(___fladd@b+2)& (0+255),f,b
  3458  000A66  33D4               	rrcf	(___fladd@b+1)& (0+255),f,b
  3459  000A68  33D3               	rrcf	___fladd@b& (0+255),f,b
  3460  000A6A                     
  3461                           ; BSR set to: 0
  3462  000A6A  2BE1               	incf	___fladd@bexp& (0+255),f,b
  3463  000A6C                     l857:
  3464                           
  3465                           ; BSR set to: 0
  3466  000A6C  51E0               	movf	___fladd@aexp& (0+255),w,b
  3467  000A6E  5DE1               	subwf	___fladd@bexp& (0+255),w,b
  3468  000A70  A0D8               	btfss	status,0,c
  3469  000A72  EF3D  F005         	goto	u1851
  3470  000A76  EF3F  F005         	goto	u1850
  3471  000A7A                     u1851:
  3472  000A7A  EF19  F005         	goto	l858
  3473  000A7E                     u1850:
  3474  000A7E                     l856:
  3475                           
  3476                           ; BSR set to: 0
  3477  000A7E  BDDF               	btfsc	___fladd@signs& (0+255),6,b
  3478  000A80  EF44  F005         	goto	u1861
  3479  000A84  EF46  F005         	goto	u1860
  3480  000A88                     u1861:
  3481  000A88  EF86  F005         	goto	l2581
  3482  000A8C                     u1860:
  3483  000A8C                     
  3484                           ; BSR set to: 0
  3485  000A8C  51E1               	movf	___fladd@bexp& (0+255),w,b
  3486  000A8E  A4D8               	btfss	status,2,c
  3487  000A90  EF4C  F005         	goto	u1871
  3488  000A94  EF4E  F005         	goto	u1870
  3489  000A98                     u1871:
  3490  000A98  EF58  F005         	goto	l2563
  3491  000A9C                     u1870:
  3492  000A9C                     
  3493                           ; BSR set to: 0
  3494  000A9C  0E00               	movlw	0
  3495  000A9E  6FD3               	movwf	?___fladd& (0+255),b
  3496  000AA0  0E00               	movlw	0
  3497  000AA2  6FD4               	movwf	(?___fladd+1)& (0+255),b
  3498  000AA4  0E00               	movlw	0
  3499  000AA6  6FD5               	movwf	(?___fladd+2)& (0+255),b
  3500  000AA8  0E00               	movlw	0
  3501  000AAA  6FD6               	movwf	(?___fladd+3)& (0+255),b
  3502  000AAC  EFA7  F006         	goto	l865
  3503  000AB0                     l2563:
  3504                           
  3505                           ; BSR set to: 0
  3506  000AB0  51D7               	movf	___fladd@a& (0+255),w,b
  3507  000AB2  27D3               	addwf	___fladd@b& (0+255),f,b
  3508  000AB4  51D8               	movf	(___fladd@a+1)& (0+255),w,b
  3509  000AB6  23D4               	addwfc	(___fladd@b+1)& (0+255),f,b
  3510  000AB8  51D9               	movf	(___fladd@a+2)& (0+255),w,b
  3511  000ABA  23D5               	addwfc	(___fladd@b+2)& (0+255),f,b
  3512  000ABC  51DA               	movf	(___fladd@a+3)& (0+255),w,b
  3513  000ABE  23D6               	addwfc	(___fladd@b+3)& (0+255),f,b
  3514  000AC0                     
  3515                           ; BSR set to: 0
  3516  000AC0  A1D6               	btfss	(___fladd@b+3)& (0+255),0,b
  3517  000AC2  EF65  F005         	goto	u1881
  3518  000AC6  EF67  F005         	goto	u1880
  3519  000ACA                     u1881:
  3520  000ACA  EF13  F006         	goto	l2617
  3521  000ACE                     u1880:
  3522  000ACE                     
  3523                           ; BSR set to: 0
  3524  000ACE  A1E2               	btfss	___fladd@grs& (0+255),0,b
  3525  000AD0  EF6C  F005         	goto	u1891
  3526  000AD4  EF6E  F005         	goto	u1890
  3527  000AD8                     u1891:
  3528  000AD8  EF74  F005         	goto	l2571
  3529  000ADC                     u1890:
  3530  000ADC                     
  3531                           ; BSR set to: 0
  3532  000ADC  90D8               	bcf	status,0,c
  3533  000ADE  31E2               	rrcf	___fladd@grs& (0+255),w,b
  3534  000AE0  0901               	iorlw	1
  3535  000AE2  6FE2               	movwf	___fladd@grs& (0+255),b
  3536  000AE4  EF76  F005         	goto	l2573
  3537  000AE8                     l2571:
  3538                           
  3539                           ; BSR set to: 0
  3540  000AE8  90D8               	bcf	status,0,c
  3541  000AEA  33E2               	rrcf	___fladd@grs& (0+255),f,b
  3542  000AEC                     l2573:
  3543                           
  3544                           ; BSR set to: 0
  3545  000AEC  A1D3               	btfss	___fladd@b& (0+255),0,b
  3546  000AEE  EF7B  F005         	goto	u1901
  3547  000AF2  EF7D  F005         	goto	u1900
  3548  000AF6                     u1901:
  3549  000AF6  EF7E  F005         	goto	l2577
  3550  000AFA                     u1900:
  3551  000AFA                     
  3552                           ; BSR set to: 0
  3553  000AFA  8FE2               	bsf	___fladd@grs& (0+255),7,b
  3554  000AFC                     l2577:
  3555                           
  3556                           ; BSR set to: 0
  3557  000AFC  35D6               	rlcf	(___fladd@b+3)& (0+255),w,b
  3558  000AFE  33D6               	rrcf	(___fladd@b+3)& (0+255),f,b
  3559  000B00  33D5               	rrcf	(___fladd@b+2)& (0+255),f,b
  3560  000B02  33D4               	rrcf	(___fladd@b+1)& (0+255),f,b
  3561  000B04  33D3               	rrcf	___fladd@b& (0+255),f,b
  3562  000B06                     
  3563                           ; BSR set to: 0
  3564  000B06  2BE1               	incf	___fladd@bexp& (0+255),f,b
  3565  000B08  EF13  F006         	goto	l2617
  3566  000B0C                     l2581:
  3567                           
  3568                           ; BSR set to: 0
  3569  000B0C  51D7               	movf	___fladd@a& (0+255),w,b
  3570  000B0E  5DD3               	subwf	___fladd@b& (0+255),w,b
  3571  000B10  51D8               	movf	(___fladd@a+1)& (0+255),w,b
  3572  000B12  59D4               	subwfb	(___fladd@b+1)& (0+255),w,b
  3573  000B14  51D9               	movf	(___fladd@a+2)& (0+255),w,b
  3574  000B16  59D5               	subwfb	(___fladd@b+2)& (0+255),w,b
  3575  000B18  51D6               	movf	(___fladd@b+3)& (0+255),w,b
  3576  000B1A  0A80               	xorlw	128
  3577  000B1C  6FDB               	movwf	??___fladd& (0+255),b
  3578  000B1E  51DA               	movf	(___fladd@a+3)& (0+255),w,b
  3579  000B20  0A80               	xorlw	128
  3580  000B22  59DB               	subwfb	??___fladd& (0+255),w,b
  3581  000B24  B0D8               	btfsc	status,0,c
  3582  000B26  EF97  F005         	goto	u1911
  3583  000B2A  EF99  F005         	goto	u1910
  3584  000B2E                     u1911:
  3585  000B2E  EFC4  F005         	goto	l2591
  3586  000B32                     u1910:
  3587  000B32                     
  3588                           ; BSR set to: 0
  3589  000B32  51D3               	movf	___fladd@b& (0+255),w,b
  3590  000B34  5DD7               	subwf	___fladd@a& (0+255),w,b
  3591  000B36  6FDB               	movwf	??___fladd& (0+255),b
  3592  000B38  51D4               	movf	(___fladd@b+1)& (0+255),w,b
  3593  000B3A  59D8               	subwfb	(___fladd@a+1)& (0+255),w,b
  3594  000B3C  6FDC               	movwf	(??___fladd+1)& (0+255),b
  3595  000B3E  51D5               	movf	(___fladd@b+2)& (0+255),w,b
  3596  000B40  59D9               	subwfb	(___fladd@a+2)& (0+255),w,b
  3597  000B42  6FDD               	movwf	(??___fladd+2)& (0+255),b
  3598  000B44  51D6               	movf	(___fladd@b+3)& (0+255),w,b
  3599  000B46  59DA               	subwfb	(___fladd@a+3)& (0+255),w,b
  3600  000B48  6FDE               	movwf	(??___fladd+3)& (0+255),b
  3601  000B4A  0EFF               	movlw	255
  3602  000B4C  25DB               	addwf	??___fladd& (0+255),w,b
  3603  000B4E  6FD3               	movwf	___fladd@b& (0+255),b
  3604  000B50  0EFF               	movlw	255
  3605  000B52  21DC               	addwfc	(??___fladd+1)& (0+255),w,b
  3606  000B54  6FD4               	movwf	(___fladd@b+1)& (0+255),b
  3607  000B56  0EFF               	movlw	255
  3608  000B58  21DD               	addwfc	(??___fladd+2)& (0+255),w,b
  3609  000B5A  6FD5               	movwf	(___fladd@b+2)& (0+255),b
  3610  000B5C  0EFF               	movlw	255
  3611  000B5E  21DE               	addwfc	(??___fladd+3)& (0+255),w,b
  3612  000B60  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3613  000B62  0E80               	movlw	128
  3614  000B64  1BDF               	xorwf	___fladd@signs& (0+255),f,b
  3615  000B66                     
  3616                           ; BSR set to: 0
  3617  000B66  6DE2               	negf	___fladd@grs& (0+255),b
  3618  000B68                     
  3619                           ; BSR set to: 0
  3620  000B68  51E2               	movf	___fladd@grs& (0+255),w,b
  3621  000B6A  A4D8               	btfss	status,2,c
  3622  000B6C  EFBA  F005         	goto	u1921
  3623  000B70  EFBC  F005         	goto	u1920
  3624  000B74                     u1921:
  3625  000B74  EFCC  F005         	goto	l873
  3626  000B78                     u1920:
  3627  000B78                     
  3628                           ; BSR set to: 0
  3629  000B78  0E01               	movlw	1
  3630  000B7A  27D3               	addwf	___fladd@b& (0+255),f,b
  3631  000B7C  0E00               	movlw	0
  3632  000B7E  23D4               	addwfc	(___fladd@b+1)& (0+255),f,b
  3633  000B80  23D5               	addwfc	(___fladd@b+2)& (0+255),f,b
  3634  000B82  23D6               	addwfc	(___fladd@b+3)& (0+255),f,b
  3635  000B84  EFCC  F005         	goto	l873
  3636  000B88                     l2591:
  3637                           
  3638                           ; BSR set to: 0
  3639  000B88  51D7               	movf	___fladd@a& (0+255),w,b
  3640  000B8A  5FD3               	subwf	___fladd@b& (0+255),f,b
  3641  000B8C  51D8               	movf	(___fladd@a+1)& (0+255),w,b
  3642  000B8E  5BD4               	subwfb	(___fladd@b+1)& (0+255),f,b
  3643  000B90  51D9               	movf	(___fladd@a+2)& (0+255),w,b
  3644  000B92  5BD5               	subwfb	(___fladd@b+2)& (0+255),f,b
  3645  000B94  51DA               	movf	(___fladd@a+3)& (0+255),w,b
  3646  000B96  5BD6               	subwfb	(___fladd@b+3)& (0+255),f,b
  3647  000B98                     l873:
  3648                           
  3649                           ; BSR set to: 0
  3650  000B98  51D3               	movf	___fladd@b& (0+255),w,b
  3651  000B9A  11D4               	iorwf	(___fladd@b+1)& (0+255),w,b
  3652  000B9C  11D5               	iorwf	(___fladd@b+2)& (0+255),w,b
  3653  000B9E  11D6               	iorwf	(___fladd@b+3)& (0+255),w,b
  3654  000BA0  A4D8               	btfss	status,2,c
  3655  000BA2  EFD5  F005         	goto	u1931
  3656  000BA6  EFD7  F005         	goto	u1930
  3657  000BAA                     u1931:
  3658  000BAA  EF0C  F006         	goto	l2615
  3659  000BAE                     u1930:
  3660  000BAE                     
  3661                           ; BSR set to: 0
  3662  000BAE  51E2               	movf	___fladd@grs& (0+255),w,b
  3663  000BB0  A4D8               	btfss	status,2,c
  3664  000BB2  EFDD  F005         	goto	u1941
  3665  000BB6  EFDF  F005         	goto	u1940
  3666  000BBA                     u1941:
  3667  000BBA  EF0C  F006         	goto	l2615
  3668  000BBE                     u1940:
  3669  000BBE                     
  3670                           ; BSR set to: 0
  3671  000BBE  0E00               	movlw	0
  3672  000BC0  6FD3               	movwf	?___fladd& (0+255),b
  3673  000BC2  0E00               	movlw	0
  3674  000BC4  6FD4               	movwf	(?___fladd+1)& (0+255),b
  3675  000BC6  0E00               	movlw	0
  3676  000BC8  6FD5               	movwf	(?___fladd+2)& (0+255),b
  3677  000BCA  0E00               	movlw	0
  3678  000BCC  6FD6               	movwf	(?___fladd+3)& (0+255),b
  3679  000BCE  EFA7  F006         	goto	l865
  3680  000BD2                     l2599:
  3681                           
  3682                           ; BSR set to: 0
  3683  000BD2  90D8               	bcf	status,0,c
  3684  000BD4  37D3               	rlcf	___fladd@b& (0+255),f,b
  3685  000BD6  37D4               	rlcf	(___fladd@b+1)& (0+255),f,b
  3686  000BD8  37D5               	rlcf	(___fladd@b+2)& (0+255),f,b
  3687  000BDA  37D6               	rlcf	(___fladd@b+3)& (0+255),f,b
  3688  000BDC                     
  3689                           ; BSR set to: 0
  3690  000BDC  AFE2               	btfss	___fladd@grs& (0+255),7,b
  3691  000BDE  EFF3  F005         	goto	u1951
  3692  000BE2  EFF5  F005         	goto	u1950
  3693  000BE6                     u1951:
  3694  000BE6  EFF6  F005         	goto	l2605
  3695  000BEA                     u1950:
  3696  000BEA                     
  3697                           ; BSR set to: 0
  3698  000BEA  81D3               	bsf	___fladd@b& (0+255),0,b
  3699  000BEC                     l2605:
  3700                           
  3701                           ; BSR set to: 0
  3702  000BEC  A1E2               	btfss	___fladd@grs& (0+255),0,b
  3703  000BEE  EFFB  F005         	goto	u1961
  3704  000BF2  EFFD  F005         	goto	u1960
  3705  000BF6                     u1961:
  3706  000BF6  EF01  F006         	goto	l2609
  3707  000BFA                     u1960:
  3708  000BFA                     
  3709                           ; BSR set to: 0
  3710  000BFA  80D8               	bsf	status,0,c
  3711  000BFC  37E2               	rlcf	___fladd@grs& (0+255),f,b
  3712  000BFE  EF03  F006         	goto	l2611
  3713  000C02                     l2609:
  3714                           
  3715                           ; BSR set to: 0
  3716  000C02  90D8               	bcf	status,0,c
  3717  000C04  37E2               	rlcf	___fladd@grs& (0+255),f,b
  3718  000C06                     l2611:
  3719                           
  3720                           ; BSR set to: 0
  3721  000C06  51E1               	movf	___fladd@bexp& (0+255),w,b
  3722  000C08  B4D8               	btfsc	status,2,c
  3723  000C0A  EF09  F006         	goto	u1971
  3724  000C0E  EF0B  F006         	goto	u1970
  3725  000C12                     u1971:
  3726  000C12  EF0C  F006         	goto	l2615
  3727  000C16                     u1970:
  3728  000C16                     
  3729                           ; BSR set to: 0
  3730  000C16  07E1               	decf	___fladd@bexp& (0+255),f,b
  3731  000C18                     l2615:
  3732                           
  3733                           ; BSR set to: 0
  3734  000C18  AFD5               	btfss	(___fladd@b+2)& (0+255),7,b
  3735  000C1A  EF11  F006         	goto	u1981
  3736  000C1E  EF13  F006         	goto	u1980
  3737  000C22                     u1981:
  3738  000C22  EFE9  F005         	goto	l2599
  3739  000C26                     u1980:
  3740  000C26                     l2617:
  3741                           
  3742                           ; BSR set to: 0
  3743  000C26  0E00               	movlw	0
  3744  000C28  6FE0               	movwf	___fladd@aexp& (0+255),b
  3745  000C2A                     
  3746                           ; BSR set to: 0
  3747  000C2A  AFE2               	btfss	___fladd@grs& (0+255),7,b
  3748  000C2C  EF1A  F006         	goto	u1991
  3749  000C30  EF1C  F006         	goto	u1990
  3750  000C34                     u1991:
  3751  000C34  EF34  F006         	goto	l882
  3752  000C38                     u1990:
  3753  000C38                     
  3754                           ; BSR set to: 0
  3755  000C38  C0E2  F0DB         	movff	___fladd@grs,??___fladd
  3756  000C3C  0E7F               	movlw	127
  3757  000C3E  17DB               	andwf	??___fladd& (0+255),f,b
  3758  000C40  B4D8               	btfsc	status,2,c
  3759  000C42  EF25  F006         	goto	u2001
  3760  000C46  EF27  F006         	goto	u2000
  3761  000C4A                     u2001:
  3762  000C4A  EF2B  F006         	goto	l883
  3763  000C4E                     u2000:
  3764  000C4E                     l2623:
  3765                           
  3766                           ; BSR set to: 0
  3767  000C4E  0E01               	movlw	1
  3768  000C50  6FE0               	movwf	___fladd@aexp& (0+255),b
  3769  000C52  EF34  F006         	goto	l882
  3770  000C56                     l883:
  3771                           
  3772                           ; BSR set to: 0
  3773  000C56  A1D3               	btfss	___fladd@b& (0+255),0,b
  3774  000C58  EF30  F006         	goto	u2011
  3775  000C5C  EF32  F006         	goto	u2010
  3776  000C60                     u2011:
  3777  000C60  EF34  F006         	goto	l882
  3778  000C64                     u2010:
  3779  000C64  EF27  F006         	goto	l2623
  3780  000C68                     l882:
  3781                           
  3782                           ; BSR set to: 0
  3783  000C68  51E0               	movf	___fladd@aexp& (0+255),w,b
  3784  000C6A  B4D8               	btfsc	status,2,c
  3785  000C6C  EF3A  F006         	goto	u2021
  3786  000C70  EF3C  F006         	goto	u2020
  3787  000C74                     u2021:
  3788  000C74  EF67  F006         	goto	l2635
  3789  000C78                     u2020:
  3790  000C78                     
  3791                           ; BSR set to: 0
  3792  000C78  0E01               	movlw	1
  3793  000C7A  27D3               	addwf	___fladd@b& (0+255),f,b
  3794  000C7C  0E00               	movlw	0
  3795  000C7E  23D4               	addwfc	(___fladd@b+1)& (0+255),f,b
  3796  000C80  23D5               	addwfc	(___fladd@b+2)& (0+255),f,b
  3797  000C82  23D6               	addwfc	(___fladd@b+3)& (0+255),f,b
  3798  000C84                     
  3799                           ; BSR set to: 0
  3800  000C84  A1D6               	btfss	(___fladd@b+3)& (0+255),0,b
  3801  000C86  EF47  F006         	goto	u2031
  3802  000C8A  EF49  F006         	goto	u2030
  3803  000C8E                     u2031:
  3804  000C8E  EF67  F006         	goto	l2635
  3805  000C92                     u2030:
  3806  000C92                     
  3807                           ; BSR set to: 0
  3808  000C92  C0D3  F0DB         	movff	___fladd@b,??___fladd
  3809  000C96  C0D4  F0DC         	movff	___fladd@b+1,??___fladd+1
  3810  000C9A  C0D5  F0DD         	movff	___fladd@b+2,??___fladd+2
  3811  000C9E  C0D6  F0DE         	movff	___fladd@b+3,??___fladd+3
  3812  000CA2  35DE               	rlcf	(??___fladd+3)& (0+255),w,b
  3813  000CA4  33DE               	rrcf	(??___fladd+3)& (0+255),f,b
  3814  000CA6  33DD               	rrcf	(??___fladd+2)& (0+255),f,b
  3815  000CA8  33DC               	rrcf	(??___fladd+1)& (0+255),f,b
  3816  000CAA  33DB               	rrcf	??___fladd& (0+255),f,b
  3817  000CAC  C0DB  F0D3         	movff	??___fladd,___fladd@b
  3818  000CB0  C0DC  F0D4         	movff	??___fladd+1,___fladd@b+1
  3819  000CB4  C0DD  F0D5         	movff	??___fladd+2,___fladd@b+2
  3820  000CB8  C0DE  F0D6         	movff	??___fladd+3,___fladd@b+3
  3821  000CBC  29E1               	incf	___fladd@bexp& (0+255),w,b
  3822  000CBE  B4D8               	btfsc	status,2,c
  3823  000CC0  EF64  F006         	goto	u2041
  3824  000CC4  EF66  F006         	goto	u2040
  3825  000CC8                     u2041:
  3826  000CC8  EF67  F006         	goto	l2635
  3827  000CCC                     u2040:
  3828  000CCC                     
  3829                           ; BSR set to: 0
  3830  000CCC  2BE1               	incf	___fladd@bexp& (0+255),f,b
  3831  000CCE                     l2635:
  3832                           
  3833                           ; BSR set to: 0
  3834  000CCE  29E1               	incf	___fladd@bexp& (0+255),w,b
  3835  000CD0  B4D8               	btfsc	status,2,c
  3836  000CD2  EF6D  F006         	goto	u2051
  3837  000CD6  EF6F  F006         	goto	u2050
  3838  000CDA                     u2051:
  3839  000CDA  EF77  F006         	goto	l2639
  3840  000CDE                     u2050:
  3841  000CDE                     
  3842                           ; BSR set to: 0
  3843  000CDE  51E1               	movf	___fladd@bexp& (0+255),w,b
  3844  000CE0  A4D8               	btfss	status,2,c
  3845  000CE2  EF75  F006         	goto	u2061
  3846  000CE6  EF77  F006         	goto	u2060
  3847  000CEA                     u2061:
  3848  000CEA  EF89  F006         	goto	l2643
  3849  000CEE                     u2060:
  3850  000CEE                     l2639:
  3851                           
  3852                           ; BSR set to: 0
  3853  000CEE  0E00               	movlw	0
  3854  000CF0  6FD3               	movwf	___fladd@b& (0+255),b
  3855  000CF2  0E00               	movlw	0
  3856  000CF4  6FD4               	movwf	(___fladd@b+1)& (0+255),b
  3857  000CF6  0E00               	movlw	0
  3858  000CF8  6FD5               	movwf	(___fladd@b+2)& (0+255),b
  3859  000CFA  0E00               	movlw	0
  3860  000CFC  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3861  000CFE  51E1               	movf	___fladd@bexp& (0+255),w,b
  3862  000D00  A4D8               	btfss	status,2,c
  3863  000D02  EF85  F006         	goto	u2071
  3864  000D06  EF87  F006         	goto	u2070
  3865  000D0A                     u2071:
  3866  000D0A  EF89  F006         	goto	l2643
  3867  000D0E                     u2070:
  3868  000D0E                     
  3869                           ; BSR set to: 0
  3870  000D0E  0E00               	movlw	0
  3871  000D10  6FDF               	movwf	___fladd@signs& (0+255),b
  3872  000D12                     l2643:
  3873                           
  3874                           ; BSR set to: 0
  3875  000D12  A1E1               	btfss	___fladd@bexp& (0+255),0,b
  3876  000D14  EF8E  F006         	goto	u2081
  3877  000D18  EF90  F006         	goto	u2080
  3878  000D1C                     u2081:
  3879  000D1C  EF93  F006         	goto	l2647
  3880  000D20                     u2080:
  3881  000D20                     
  3882                           ; BSR set to: 0
  3883  000D20  8FD5               	bsf	(___fladd@b+2)& (0+255),7,b
  3884  000D22  EF94  F006         	goto	l2649
  3885  000D26                     l2647:
  3886                           
  3887                           ; BSR set to: 0
  3888  000D26  9FD5               	bcf	(___fladd@b+2)& (0+255),7,b
  3889  000D28                     l2649:
  3890                           
  3891                           ; BSR set to: 0
  3892  000D28  90D8               	bcf	status,0,c
  3893  000D2A  31E1               	rrcf	___fladd@bexp& (0+255),w,b
  3894  000D2C  6FD6               	movwf	(___fladd@b+3)& (0+255),b
  3895  000D2E                     
  3896                           ; BSR set to: 0
  3897  000D2E  AFDF               	btfss	___fladd@signs& (0+255),7,b
  3898  000D30  EF9C  F006         	goto	u2091
  3899  000D34  EF9E  F006         	goto	u2090
  3900  000D38                     u2091:
  3901  000D38  EF9F  F006         	goto	l2655
  3902  000D3C                     u2090:
  3903  000D3C                     
  3904                           ; BSR set to: 0
  3905  000D3C  8FD6               	bsf	(___fladd@b+3)& (0+255),7,b
  3906  000D3E                     l2655:
  3907                           
  3908                           ; BSR set to: 0
  3909  000D3E  C0D3  F0D3         	movff	___fladd@b,?___fladd
  3910  000D42  C0D4  F0D4         	movff	___fladd@b+1,?___fladd+1
  3911  000D46  C0D5  F0D5         	movff	___fladd@b+2,?___fladd+2
  3912  000D4A  C0D6  F0D6         	movff	___fladd@b+3,?___fladd+3
  3913  000D4E                     l865:
  3914                           
  3915                           ; BSR set to: 0
  3916  000D4E  0012               	return		;funcret
  3917  000D50                     __end_of___fladd:
  3918                           	callstack 0
  3919                           
  3920 ;; *************** function ___flge *****************
  3921 ;; Defined at:
  3922 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  ff1             4    0[BANK0 ] unsigned char 
  3925 ;;  ff2             4    4[BANK0 ] unsigned char 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;		None               void
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3937 ;;      Params:         0       8       0       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3939 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3940 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3941 ;;Total ram usage:       12 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    6
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_setPWMFreq
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text18
  3952  001E3E                     __ptext18:
  3953                           	callstack 0
  3954  001E3E                     ___flge:
  3955                           	callstack 22
  3956  001E3E  0E00               	movlw	0
  3957  001E40  0100               	movlb	0	; () banked
  3958  001E42  15D3               	andwf	___flge@ff1& (0+255),w,b
  3959  001E44  6FDB               	movwf	??___flge& (0+255),b
  3960  001E46  0E00               	movlw	0
  3961  001E48  15D4               	andwf	(___flge@ff1+1)& (0+255),w,b
  3962  001E4A  6FDC               	movwf	(??___flge+1)& (0+255),b
  3963  001E4C  0E80               	movlw	128
  3964  001E4E  15D5               	andwf	(___flge@ff1+2)& (0+255),w,b
  3965  001E50  6FDD               	movwf	(??___flge+2)& (0+255),b
  3966  001E52  0E7F               	movlw	127
  3967  001E54  15D6               	andwf	(___flge@ff1+3)& (0+255),w,b
  3968  001E56  6FDE               	movwf	(??___flge+3)& (0+255),b
  3969  001E58  51DB               	movf	??___flge& (0+255),w,b
  3970  001E5A  11DC               	iorwf	(??___flge+1)& (0+255),w,b
  3971  001E5C  11DD               	iorwf	(??___flge+2)& (0+255),w,b
  3972  001E5E  11DE               	iorwf	(??___flge+3)& (0+255),w,b
  3973  001E60  A4D8               	btfss	status,2,c
  3974  001E62  EF35  F00F         	goto	u2581
  3975  001E66  EF37  F00F         	goto	u2580
  3976  001E6A                     u2581:
  3977  001E6A  EF3F  F00F         	goto	l3019
  3978  001E6E                     u2580:
  3979  001E6E                     
  3980                           ; BSR set to: 0
  3981  001E6E  0E00               	movlw	0
  3982  001E70  6FD3               	movwf	___flge@ff1& (0+255),b
  3983  001E72  0E00               	movlw	0
  3984  001E74  6FD4               	movwf	(___flge@ff1+1)& (0+255),b
  3985  001E76  0E00               	movlw	0
  3986  001E78  6FD5               	movwf	(___flge@ff1+2)& (0+255),b
  3987  001E7A  0E00               	movlw	0
  3988  001E7C  6FD6               	movwf	(___flge@ff1+3)& (0+255),b
  3989  001E7E                     l3019:
  3990                           
  3991                           ; BSR set to: 0
  3992  001E7E  0E00               	movlw	0
  3993  001E80  15D7               	andwf	___flge@ff2& (0+255),w,b
  3994  001E82  6FDB               	movwf	??___flge& (0+255),b
  3995  001E84  0E00               	movlw	0
  3996  001E86  15D8               	andwf	(___flge@ff2+1)& (0+255),w,b
  3997  001E88  6FDC               	movwf	(??___flge+1)& (0+255),b
  3998  001E8A  0E80               	movlw	128
  3999  001E8C  15D9               	andwf	(___flge@ff2+2)& (0+255),w,b
  4000  001E8E  6FDD               	movwf	(??___flge+2)& (0+255),b
  4001  001E90  0E7F               	movlw	127
  4002  001E92  15DA               	andwf	(___flge@ff2+3)& (0+255),w,b
  4003  001E94  6FDE               	movwf	(??___flge+3)& (0+255),b
  4004  001E96  51DB               	movf	??___flge& (0+255),w,b
  4005  001E98  11DC               	iorwf	(??___flge+1)& (0+255),w,b
  4006  001E9A  11DD               	iorwf	(??___flge+2)& (0+255),w,b
  4007  001E9C  11DE               	iorwf	(??___flge+3)& (0+255),w,b
  4008  001E9E  A4D8               	btfss	status,2,c
  4009  001EA0  EF54  F00F         	goto	u2591
  4010  001EA4  EF56  F00F         	goto	u2590
  4011  001EA8                     u2591:
  4012  001EA8  EF5E  F00F         	goto	l3023
  4013  001EAC                     u2590:
  4014  001EAC                     
  4015                           ; BSR set to: 0
  4016  001EAC  0E00               	movlw	0
  4017  001EAE  6FD7               	movwf	___flge@ff2& (0+255),b
  4018  001EB0  0E00               	movlw	0
  4019  001EB2  6FD8               	movwf	(___flge@ff2+1)& (0+255),b
  4020  001EB4  0E00               	movlw	0
  4021  001EB6  6FD9               	movwf	(___flge@ff2+2)& (0+255),b
  4022  001EB8  0E00               	movlw	0
  4023  001EBA  6FDA               	movwf	(___flge@ff2+3)& (0+255),b
  4024  001EBC                     l3023:
  4025                           
  4026                           ; BSR set to: 0
  4027  001EBC  AFD6               	btfss	(___flge@ff1+3)& (0+255),7,b
  4028  001EBE  EF63  F00F         	goto	u2601
  4029  001EC2  EF65  F00F         	goto	u2600
  4030  001EC6                     u2601:
  4031  001EC6  EF6E  F00F         	goto	l3027
  4032  001ECA                     u2600:
  4033  001ECA                     
  4034                           ; BSR set to: 0
  4035  001ECA  6DD3               	negf	___flge@ff1& (0+255),b
  4036  001ECC  1FD4               	comf	(___flge@ff1+1)& (0+255),f,b
  4037  001ECE  B0D8               	btfsc	status,0,c
  4038  001ED0  2BD4               	incf	(___flge@ff1+1)& (0+255),f,b
  4039  001ED2  1FD5               	comf	(___flge@ff1+2)& (0+255),f,b
  4040  001ED4  B0D8               	btfsc	status,0,c
  4041  001ED6  2BD5               	incf	(___flge@ff1+2)& (0+255),f,b
  4042  001ED8  0E80               	movlw	128
  4043  001EDA  57D6               	subfwb	(___flge@ff1+3)& (0+255),f,b
  4044  001EDC                     l3027:
  4045                           
  4046                           ; BSR set to: 0
  4047  001EDC  AFDA               	btfss	(___flge@ff2+3)& (0+255),7,b
  4048  001EDE  EF73  F00F         	goto	u2611
  4049  001EE2  EF75  F00F         	goto	u2610
  4050  001EE6                     u2611:
  4051  001EE6  EF7E  F00F         	goto	l601
  4052  001EEA                     u2610:
  4053  001EEA                     
  4054                           ; BSR set to: 0
  4055  001EEA  6DD7               	negf	___flge@ff2& (0+255),b
  4056  001EEC  1FD8               	comf	(___flge@ff2+1)& (0+255),f,b
  4057  001EEE  B0D8               	btfsc	status,0,c
  4058  001EF0  2BD8               	incf	(___flge@ff2+1)& (0+255),f,b
  4059  001EF2  1FD9               	comf	(___flge@ff2+2)& (0+255),f,b
  4060  001EF4  B0D8               	btfsc	status,0,c
  4061  001EF6  2BD9               	incf	(___flge@ff2+2)& (0+255),f,b
  4062  001EF8  0E80               	movlw	128
  4063  001EFA  57DA               	subfwb	(___flge@ff2+3)& (0+255),f,b
  4064  001EFC                     l601:
  4065                           
  4066                           ; BSR set to: 0
  4067  001EFC  0E00               	movlw	0
  4068  001EFE  1BD3               	xorwf	___flge@ff1& (0+255),f,b
  4069  001F00  0E00               	movlw	0
  4070  001F02  1BD4               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4071  001F04  0E00               	movlw	0
  4072  001F06  1BD5               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4073  001F08  0E80               	movlw	128
  4074  001F0A  1BD6               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4075  001F0C  0E00               	movlw	0
  4076  001F0E  1BD7               	xorwf	___flge@ff2& (0+255),f,b
  4077  001F10  0E00               	movlw	0
  4078  001F12  1BD8               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4079  001F14  0E00               	movlw	0
  4080  001F16  1BD9               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4081  001F18  0E80               	movlw	128
  4082  001F1A  1BDA               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4083  001F1C  51D7               	movf	___flge@ff2& (0+255),w,b
  4084  001F1E  5DD3               	subwf	___flge@ff1& (0+255),w,b
  4085  001F20  51D8               	movf	(___flge@ff2+1)& (0+255),w,b
  4086  001F22  59D4               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4087  001F24  51D9               	movf	(___flge@ff2+2)& (0+255),w,b
  4088  001F26  59D5               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4089  001F28  51DA               	movf	(___flge@ff2+3)& (0+255),w,b
  4090  001F2A  59D6               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4091  001F2C  B0D8               	btfsc	status,0,c
  4092  001F2E  EF9B  F00F         	goto	u2621
  4093  001F32  EF9D  F00F         	goto	u2620
  4094  001F36                     u2621:
  4095  001F36  EFA0  F00F         	goto	l3033
  4096  001F3A                     u2620:
  4097  001F3A                     
  4098                           ; BSR set to: 0
  4099  001F3A  90D8               	bcf	status,0,c
  4100  001F3C  EFA1  F00F         	goto	l602
  4101  001F40                     l3033:
  4102                           
  4103                           ; BSR set to: 0
  4104  001F40  80D8               	bsf	status,0,c
  4105  001F42                     l602:
  4106                           
  4107                           ; BSR set to: 0
  4108  001F42  0012               	return		;funcret
  4109  001F44                     __end_of___flge:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function ___fldiv *****************
  4113 ;; Defined at:
  4114 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  b               4    0[BANK0 ] unsigned char 
  4117 ;;  a               4    4[BANK0 ] unsigned char 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  grs             4   19[BANK0 ] unsigned long 
  4120 ;;  rem             4   12[BANK0 ] unsigned long 
  4121 ;;  new_exp         2   17[BANK0 ] int 
  4122 ;;  aexp            1   24[BANK0 ] unsigned char 
  4123 ;;  bexp            1   23[BANK0 ] unsigned char 
  4124 ;;  sign            1   16[BANK0 ] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  4    0[BANK0 ] unsigned char 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4134 ;;      Params:         0       8       0       0       0       0       0       0       0
  4135 ;;      Locals:         0      13       0       0       0       0       0       0       0
  4136 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4137 ;;      Totals:         0      25       0       0       0       0       0       0       0
  4138 ;;Total ram usage:       25 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    6
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_setPWMFreq
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text19
  4149  00111C                     __ptext19:
  4150                           	callstack 0
  4151  00111C                     ___fldiv:
  4152                           	callstack 22
  4153  00111C  0100               	movlb	0	; () banked
  4154  00111E  51D6               	movf	(___fldiv@b+3)& (0+255),w,b
  4155  001120  0B80               	andlw	128
  4156  001122  6FE3               	movwf	___fldiv@sign& (0+255),b
  4157  001124  51D6               	movf	(___fldiv@b+3)& (0+255),w,b
  4158  001126  25D6               	addwf	(___fldiv@b+3)& (0+255),w,b
  4159  001128  6FEA               	movwf	___fldiv@bexp& (0+255),b
  4160  00112A                     
  4161                           ; BSR set to: 0
  4162  00112A  AFD5               	btfss	(___fldiv@b+2)& (0+255),7,b
  4163  00112C  EF9A  F008         	goto	u2351
  4164  001130  EF9C  F008         	goto	u2350
  4165  001134                     u2351:
  4166  001134  EF9D  F008         	goto	l2877
  4167  001138                     u2350:
  4168  001138                     
  4169                           ; BSR set to: 0
  4170  001138  81EA               	bsf	___fldiv@bexp& (0+255),0,b
  4171  00113A                     l2877:
  4172                           
  4173                           ; BSR set to: 0
  4174  00113A  51EA               	movf	___fldiv@bexp& (0+255),w,b
  4175  00113C  B4D8               	btfsc	status,2,c
  4176  00113E  EFA3  F008         	goto	u2361
  4177  001142  EFA5  F008         	goto	u2360
  4178  001146                     u2361:
  4179  001146  EFBA  F008         	goto	l2887
  4180  00114A                     u2360:
  4181  00114A                     
  4182                           ; BSR set to: 0
  4183  00114A  29EA               	incf	___fldiv@bexp& (0+255),w,b
  4184  00114C  A4D8               	btfss	status,2,c
  4185  00114E  EFAB  F008         	goto	u2371
  4186  001152  EFAD  F008         	goto	u2370
  4187  001156                     u2371:
  4188  001156  EFB5  F008         	goto	l2883
  4189  00115A                     u2370:
  4190  00115A                     
  4191                           ; BSR set to: 0
  4192  00115A  0E00               	movlw	0
  4193  00115C  6FD3               	movwf	___fldiv@b& (0+255),b
  4194  00115E  0E00               	movlw	0
  4195  001160  6FD4               	movwf	(___fldiv@b+1)& (0+255),b
  4196  001162  0E00               	movlw	0
  4197  001164  6FD5               	movwf	(___fldiv@b+2)& (0+255),b
  4198  001166  0E00               	movlw	0
  4199  001168  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4200  00116A                     l2883:
  4201                           
  4202                           ; BSR set to: 0
  4203  00116A  8FD5               	bsf	(___fldiv@b+2)& (0+255),7,b
  4204  00116C                     
  4205                           ; BSR set to: 0
  4206  00116C  0E00               	movlw	0
  4207  00116E  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4208  001170  EFC2  F008         	goto	l2889
  4209  001174                     l2887:
  4210                           
  4211                           ; BSR set to: 0
  4212  001174  0E00               	movlw	0
  4213  001176  6FD3               	movwf	___fldiv@b& (0+255),b
  4214  001178  0E00               	movlw	0
  4215  00117A  6FD4               	movwf	(___fldiv@b+1)& (0+255),b
  4216  00117C  0E00               	movlw	0
  4217  00117E  6FD5               	movwf	(___fldiv@b+2)& (0+255),b
  4218  001180  0E00               	movlw	0
  4219  001182  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4220  001184                     l2889:
  4221                           
  4222                           ; BSR set to: 0
  4223  001184  51DA               	movf	(___fldiv@a+3)& (0+255),w,b
  4224  001186  0B80               	andlw	128
  4225  001188  1BE3               	xorwf	___fldiv@sign& (0+255),f,b
  4226  00118A                     
  4227                           ; BSR set to: 0
  4228  00118A  51DA               	movf	(___fldiv@a+3)& (0+255),w,b
  4229  00118C  25DA               	addwf	(___fldiv@a+3)& (0+255),w,b
  4230  00118E  6FEB               	movwf	___fldiv@aexp& (0+255),b
  4231  001190                     
  4232                           ; BSR set to: 0
  4233  001190  AFD9               	btfss	(___fldiv@a+2)& (0+255),7,b
  4234  001192  EFCD  F008         	goto	u2381
  4235  001196  EFCF  F008         	goto	u2380
  4236  00119A                     u2381:
  4237  00119A  EFD0  F008         	goto	l2897
  4238  00119E                     u2380:
  4239  00119E                     
  4240                           ; BSR set to: 0
  4241  00119E  81EB               	bsf	___fldiv@aexp& (0+255),0,b
  4242  0011A0                     l2897:
  4243                           
  4244                           ; BSR set to: 0
  4245  0011A0  51EB               	movf	___fldiv@aexp& (0+255),w,b
  4246  0011A2  B4D8               	btfsc	status,2,c
  4247  0011A4  EFD6  F008         	goto	u2391
  4248  0011A8  EFD8  F008         	goto	u2390
  4249  0011AC                     u2391:
  4250  0011AC  EFED  F008         	goto	l2907
  4251  0011B0                     u2390:
  4252  0011B0                     
  4253                           ; BSR set to: 0
  4254  0011B0  29EB               	incf	___fldiv@aexp& (0+255),w,b
  4255  0011B2  A4D8               	btfss	status,2,c
  4256  0011B4  EFDE  F008         	goto	u2401
  4257  0011B8  EFE0  F008         	goto	u2400
  4258  0011BC                     u2401:
  4259  0011BC  EFE8  F008         	goto	l2903
  4260  0011C0                     u2400:
  4261  0011C0                     
  4262                           ; BSR set to: 0
  4263  0011C0  0E00               	movlw	0
  4264  0011C2  6FD7               	movwf	___fldiv@a& (0+255),b
  4265  0011C4  0E00               	movlw	0
  4266  0011C6  6FD8               	movwf	(___fldiv@a+1)& (0+255),b
  4267  0011C8  0E00               	movlw	0
  4268  0011CA  6FD9               	movwf	(___fldiv@a+2)& (0+255),b
  4269  0011CC  0E00               	movlw	0
  4270  0011CE  6FDA               	movwf	(___fldiv@a+3)& (0+255),b
  4271  0011D0                     l2903:
  4272                           
  4273                           ; BSR set to: 0
  4274  0011D0  8FD9               	bsf	(___fldiv@a+2)& (0+255),7,b
  4275  0011D2                     
  4276                           ; BSR set to: 0
  4277  0011D2  0E00               	movlw	0
  4278  0011D4  6FDA               	movwf	(___fldiv@a+3)& (0+255),b
  4279  0011D6  EFF5  F008         	goto	l2909
  4280  0011DA                     l2907:
  4281                           
  4282                           ; BSR set to: 0
  4283  0011DA  0E00               	movlw	0
  4284  0011DC  6FD7               	movwf	___fldiv@a& (0+255),b
  4285  0011DE  0E00               	movlw	0
  4286  0011E0  6FD8               	movwf	(___fldiv@a+1)& (0+255),b
  4287  0011E2  0E00               	movlw	0
  4288  0011E4  6FD9               	movwf	(___fldiv@a+2)& (0+255),b
  4289  0011E6  0E00               	movlw	0
  4290  0011E8  6FDA               	movwf	(___fldiv@a+3)& (0+255),b
  4291  0011EA                     l2909:
  4292                           
  4293                           ; BSR set to: 0
  4294  0011EA  51D7               	movf	___fldiv@a& (0+255),w,b
  4295  0011EC  11D8               	iorwf	(___fldiv@a+1)& (0+255),w,b
  4296  0011EE  11D9               	iorwf	(___fldiv@a+2)& (0+255),w,b
  4297  0011F0  11DA               	iorwf	(___fldiv@a+3)& (0+255),w,b
  4298  0011F2  A4D8               	btfss	status,2,c
  4299  0011F4  EFFE  F008         	goto	u2411
  4300  0011F8  EF00  F009         	goto	u2410
  4301  0011FC                     u2411:
  4302  0011FC  EF18  F009         	goto	l2921
  4303  001200                     u2410:
  4304  001200                     
  4305                           ; BSR set to: 0
  4306  001200  0E00               	movlw	0
  4307  001202  6FD3               	movwf	___fldiv@b& (0+255),b
  4308  001204  0E00               	movlw	0
  4309  001206  6FD4               	movwf	(___fldiv@b+1)& (0+255),b
  4310  001208  0E00               	movlw	0
  4311  00120A  6FD5               	movwf	(___fldiv@b+2)& (0+255),b
  4312  00120C  0E00               	movlw	0
  4313  00120E  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4314  001210                     
  4315                           ; BSR set to: 0
  4316  001210  0E80               	movlw	128
  4317  001212  13D5               	iorwf	(___fldiv@b+2)& (0+255),f,b
  4318  001214  0E7F               	movlw	127
  4319  001216  13D6               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4320  001218                     l2915:
  4321                           
  4322                           ; BSR set to: 0
  4323  001218  51E3               	movf	___fldiv@sign& (0+255),w,b
  4324  00121A  13D6               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4325  00121C                     
  4326                           ; BSR set to: 0
  4327  00121C  C0D3  F0D3         	movff	___fldiv@b,?___fldiv
  4328  001220  C0D4  F0D4         	movff	___fldiv@b+1,?___fldiv+1
  4329  001224  C0D5  F0D5         	movff	___fldiv@b+2,?___fldiv+2
  4330  001228  C0D6  F0D6         	movff	___fldiv@b+3,?___fldiv+3
  4331  00122C  EF5B  F00A         	goto	l910
  4332  001230                     l2921:
  4333                           
  4334                           ; BSR set to: 0
  4335  001230  51EA               	movf	___fldiv@bexp& (0+255),w,b
  4336  001232  A4D8               	btfss	status,2,c
  4337  001234  EF1E  F009         	goto	u2421
  4338  001238  EF20  F009         	goto	u2420
  4339  00123C                     u2421:
  4340  00123C  EF2A  F009         	goto	l2929
  4341  001240                     u2420:
  4342  001240                     
  4343                           ; BSR set to: 0
  4344  001240  0E00               	movlw	0
  4345  001242  6FD3               	movwf	?___fldiv& (0+255),b
  4346  001244  0E00               	movlw	0
  4347  001246  6FD4               	movwf	(?___fldiv+1)& (0+255),b
  4348  001248  0E00               	movlw	0
  4349  00124A  6FD5               	movwf	(?___fldiv+2)& (0+255),b
  4350  00124C  0E00               	movlw	0
  4351  00124E  6FD6               	movwf	(?___fldiv+3)& (0+255),b
  4352  001250  EF5B  F00A         	goto	l910
  4353  001254                     l2929:
  4354                           
  4355                           ; BSR set to: 0
  4356  001254  51EB               	movf	___fldiv@aexp& (0+255),w,b
  4357  001256  C0EA  F0DB         	movff	___fldiv@bexp,??___fldiv
  4358  00125A  6BDC               	clrf	(??___fldiv+1)& (0+255),b
  4359  00125C  5FDB               	subwf	??___fldiv& (0+255),f,b
  4360  00125E  0E00               	movlw	0
  4361  001260  5BDC               	subwfb	(??___fldiv+1)& (0+255),f,b
  4362  001262  0E7F               	movlw	127
  4363  001264  25DB               	addwf	??___fldiv& (0+255),w,b
  4364  001266  6FE4               	movwf	___fldiv@new_exp& (0+255),b
  4365  001268  0E00               	movlw	0
  4366  00126A  21DC               	addwfc	(??___fldiv+1)& (0+255),w,b
  4367  00126C  6FE5               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4368  00126E                     
  4369                           ; BSR set to: 0
  4370  00126E  C0D3  F0DF         	movff	___fldiv@b,___fldiv@rem
  4371  001272  C0D4  F0E0         	movff	___fldiv@b+1,___fldiv@rem+1
  4372  001276  C0D5  F0E1         	movff	___fldiv@b+2,___fldiv@rem+2
  4373  00127A  C0D6  F0E2         	movff	___fldiv@b+3,___fldiv@rem+3
  4374  00127E                     
  4375                           ; BSR set to: 0
  4376  00127E  0E00               	movlw	0
  4377  001280  6FD3               	movwf	___fldiv@b& (0+255),b
  4378  001282  0E00               	movlw	0
  4379  001284  6FD4               	movwf	(___fldiv@b+1)& (0+255),b
  4380  001286  0E00               	movlw	0
  4381  001288  6FD5               	movwf	(___fldiv@b+2)& (0+255),b
  4382  00128A  0E00               	movlw	0
  4383  00128C  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4384  00128E                     
  4385                           ; BSR set to: 0
  4386  00128E  0E00               	movlw	0
  4387  001290  6FE6               	movwf	___fldiv@grs& (0+255),b
  4388  001292  0E00               	movlw	0
  4389  001294  6FE7               	movwf	(___fldiv@grs+1)& (0+255),b
  4390  001296  0E00               	movlw	0
  4391  001298  6FE8               	movwf	(___fldiv@grs+2)& (0+255),b
  4392  00129A  0E00               	movlw	0
  4393  00129C  6FE9               	movwf	(___fldiv@grs+3)& (0+255),b
  4394  00129E                     
  4395                           ; BSR set to: 0
  4396  00129E  0E00               	movlw	0
  4397  0012A0  6FEB               	movwf	___fldiv@aexp& (0+255),b
  4398  0012A2  EF8B  F009         	goto	l912
  4399  0012A6                     l2939:
  4400                           
  4401                           ; BSR set to: 0
  4402  0012A6  51EB               	movf	___fldiv@aexp& (0+255),w,b
  4403  0012A8  B4D8               	btfsc	status,2,c
  4404  0012AA  EF59  F009         	goto	u2431
  4405  0012AE  EF5B  F009         	goto	u2430
  4406  0012B2                     u2431:
  4407  0012B2  EF72  F009         	goto	l2947
  4408  0012B6                     u2430:
  4409  0012B6                     
  4410                           ; BSR set to: 0
  4411  0012B6  90D8               	bcf	status,0,c
  4412  0012B8  37DF               	rlcf	___fldiv@rem& (0+255),f,b
  4413  0012BA  37E0               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4414  0012BC  37E1               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4415  0012BE  37E2               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4416  0012C0  90D8               	bcf	status,0,c
  4417  0012C2  37D3               	rlcf	___fldiv@b& (0+255),f,b
  4418  0012C4  37D4               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4419  0012C6  37D5               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4420  0012C8  37D6               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4421  0012CA                     
  4422                           ; BSR set to: 0
  4423  0012CA  AFE9               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4424  0012CC  EF6A  F009         	goto	u2441
  4425  0012D0  EF6C  F009         	goto	u2440
  4426  0012D4                     u2441:
  4427  0012D4  EF6D  F009         	goto	l915
  4428  0012D8                     u2440:
  4429  0012D8                     
  4430                           ; BSR set to: 0
  4431  0012D8  81D3               	bsf	___fldiv@b& (0+255),0,b
  4432  0012DA                     l915:
  4433                           
  4434                           ; BSR set to: 0
  4435  0012DA  90D8               	bcf	status,0,c
  4436  0012DC  37E6               	rlcf	___fldiv@grs& (0+255),f,b
  4437  0012DE  37E7               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4438  0012E0  37E8               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4439  0012E2  37E9               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4440  0012E4                     l2947:
  4441                           
  4442                           ; BSR set to: 0
  4443  0012E4  51D7               	movf	___fldiv@a& (0+255),w,b
  4444  0012E6  5DDF               	subwf	___fldiv@rem& (0+255),w,b
  4445  0012E8  51D8               	movf	(___fldiv@a+1)& (0+255),w,b
  4446  0012EA  59E0               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4447  0012EC  51D9               	movf	(___fldiv@a+2)& (0+255),w,b
  4448  0012EE  59E1               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4449  0012F0  51DA               	movf	(___fldiv@a+3)& (0+255),w,b
  4450  0012F2  59E2               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4451  0012F4  A0D8               	btfss	status,0,c
  4452  0012F6  EF7F  F009         	goto	u2451
  4453  0012FA  EF81  F009         	goto	u2450
  4454  0012FE                     u2451:
  4455  0012FE  EF8A  F009         	goto	l2953
  4456  001302                     u2450:
  4457  001302                     
  4458                           ; BSR set to: 0
  4459  001302  8DE9               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4460  001304                     
  4461                           ; BSR set to: 0
  4462  001304  51D7               	movf	___fldiv@a& (0+255),w,b
  4463  001306  5FDF               	subwf	___fldiv@rem& (0+255),f,b
  4464  001308  51D8               	movf	(___fldiv@a+1)& (0+255),w,b
  4465  00130A  5BE0               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4466  00130C  51D9               	movf	(___fldiv@a+2)& (0+255),w,b
  4467  00130E  5BE1               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4468  001310  51DA               	movf	(___fldiv@a+3)& (0+255),w,b
  4469  001312  5BE2               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4470  001314                     l2953:
  4471                           
  4472                           ; BSR set to: 0
  4473  001314  2BEB               	incf	___fldiv@aexp& (0+255),f,b
  4474  001316                     l912:
  4475                           
  4476                           ; BSR set to: 0
  4477  001316  0E19               	movlw	25
  4478  001318  65EB               	cpfsgt	___fldiv@aexp& (0+255),b
  4479  00131A  EF91  F009         	goto	u2461
  4480  00131E  EF93  F009         	goto	u2460
  4481  001322                     u2461:
  4482  001322  EF53  F009         	goto	l2939
  4483  001326                     u2460:
  4484  001326                     
  4485                           ; BSR set to: 0
  4486  001326  51DF               	movf	___fldiv@rem& (0+255),w,b
  4487  001328  11E0               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4488  00132A  11E1               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4489  00132C  11E2               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4490  00132E  B4D8               	btfsc	status,2,c
  4491  001330  EF9C  F009         	goto	u2471
  4492  001334  EF9E  F009         	goto	u2470
  4493  001338                     u2471:
  4494  001338  EFB6  F009         	goto	l2965
  4495  00133C                     u2470:
  4496  00133C                     
  4497                           ; BSR set to: 0
  4498  00133C  81E6               	bsf	___fldiv@grs& (0+255),0,b
  4499  00133E  EFB6  F009         	goto	l2965
  4500  001342                     l2959:
  4501                           
  4502                           ; BSR set to: 0
  4503  001342  90D8               	bcf	status,0,c
  4504  001344  37D3               	rlcf	___fldiv@b& (0+255),f,b
  4505  001346  37D4               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4506  001348  37D5               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4507  00134A  37D6               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4508  00134C                     
  4509                           ; BSR set to: 0
  4510  00134C  AFE9               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4511  00134E  EFAB  F009         	goto	u2481
  4512  001352  EFAD  F009         	goto	u2480
  4513  001356                     u2481:
  4514  001356  EFAE  F009         	goto	l921
  4515  00135A                     u2480:
  4516  00135A                     
  4517                           ; BSR set to: 0
  4518  00135A  81D3               	bsf	___fldiv@b& (0+255),0,b
  4519  00135C                     l921:
  4520                           
  4521                           ; BSR set to: 0
  4522  00135C  90D8               	bcf	status,0,c
  4523  00135E  37E6               	rlcf	___fldiv@grs& (0+255),f,b
  4524  001360  37E7               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4525  001362  37E8               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4526  001364  37E9               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4527  001366  07E4               	decf	___fldiv@new_exp& (0+255),f,b
  4528  001368  A0D8               	btfss	status,0,c
  4529  00136A  07E5               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4530  00136C                     l2965:
  4531                           
  4532                           ; BSR set to: 0
  4533  00136C  AFD5               	btfss	(___fldiv@b+2)& (0+255),7,b
  4534  00136E  EFBB  F009         	goto	u2491
  4535  001372  EFBD  F009         	goto	u2490
  4536  001376                     u2491:
  4537  001376  EFA1  F009         	goto	l2959
  4538  00137A                     u2490:
  4539  00137A                     
  4540                           ; BSR set to: 0
  4541  00137A  0E00               	movlw	0
  4542  00137C  6FEB               	movwf	___fldiv@aexp& (0+255),b
  4543  00137E                     
  4544                           ; BSR set to: 0
  4545  00137E  AFE9               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4546  001380  EFC4  F009         	goto	u2501
  4547  001384  EFC6  F009         	goto	u2500
  4548  001388                     u2501:
  4549  001388  EFEA  F009         	goto	l923
  4550  00138C                     u2500:
  4551  00138C                     
  4552                           ; BSR set to: 0
  4553  00138C  0EFF               	movlw	255
  4554  00138E  15E6               	andwf	___fldiv@grs& (0+255),w,b
  4555  001390  6FDB               	movwf	??___fldiv& (0+255),b
  4556  001392  0EFF               	movlw	255
  4557  001394  15E7               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4558  001396  6FDC               	movwf	(??___fldiv+1)& (0+255),b
  4559  001398  0EFF               	movlw	255
  4560  00139A  15E8               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4561  00139C  6FDD               	movwf	(??___fldiv+2)& (0+255),b
  4562  00139E  0E7F               	movlw	127
  4563  0013A0  15E9               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4564  0013A2  6FDE               	movwf	(??___fldiv+3)& (0+255),b
  4565  0013A4  51DB               	movf	??___fldiv& (0+255),w,b
  4566  0013A6  11DC               	iorwf	(??___fldiv+1)& (0+255),w,b
  4567  0013A8  11DD               	iorwf	(??___fldiv+2)& (0+255),w,b
  4568  0013AA  11DE               	iorwf	(??___fldiv+3)& (0+255),w,b
  4569  0013AC  B4D8               	btfsc	status,2,c
  4570  0013AE  EFDB  F009         	goto	u2511
  4571  0013B2  EFDD  F009         	goto	u2510
  4572  0013B6                     u2511:
  4573  0013B6  EFE1  F009         	goto	l924
  4574  0013BA                     u2510:
  4575  0013BA                     l2973:
  4576                           
  4577                           ; BSR set to: 0
  4578  0013BA  0E01               	movlw	1
  4579  0013BC  6FEB               	movwf	___fldiv@aexp& (0+255),b
  4580  0013BE  EFEA  F009         	goto	l923
  4581  0013C2                     l924:
  4582                           
  4583                           ; BSR set to: 0
  4584  0013C2  A1D3               	btfss	___fldiv@b& (0+255),0,b
  4585  0013C4  EFE6  F009         	goto	u2521
  4586  0013C8  EFE8  F009         	goto	u2520
  4587  0013CC                     u2521:
  4588  0013CC  EFEA  F009         	goto	l923
  4589  0013D0                     u2520:
  4590  0013D0  EFDD  F009         	goto	l2973
  4591  0013D4                     l923:
  4592                           
  4593                           ; BSR set to: 0
  4594  0013D4  51EB               	movf	___fldiv@aexp& (0+255),w,b
  4595  0013D6  B4D8               	btfsc	status,2,c
  4596  0013D8  EFF0  F009         	goto	u2531
  4597  0013DC  EFF2  F009         	goto	u2530
  4598  0013E0                     u2531:
  4599  0013E0  EF16  F00A         	goto	l2985
  4600  0013E4                     u2530:
  4601  0013E4                     
  4602                           ; BSR set to: 0
  4603  0013E4  0E01               	movlw	1
  4604  0013E6  27D3               	addwf	___fldiv@b& (0+255),f,b
  4605  0013E8  0E00               	movlw	0
  4606  0013EA  23D4               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4607  0013EC  23D5               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4608  0013EE  23D6               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4609  0013F0                     
  4610                           ; BSR set to: 0
  4611  0013F0  A1D6               	btfss	(___fldiv@b+3)& (0+255),0,b
  4612  0013F2  EFFD  F009         	goto	u2541
  4613  0013F6  EFFF  F009         	goto	u2540
  4614  0013FA                     u2541:
  4615  0013FA  EF16  F00A         	goto	l2985
  4616  0013FE                     u2540:
  4617  0013FE                     
  4618                           ; BSR set to: 0
  4619  0013FE  C0D3  F0DB         	movff	___fldiv@b,??___fldiv
  4620  001402  C0D4  F0DC         	movff	___fldiv@b+1,??___fldiv+1
  4621  001406  C0D5  F0DD         	movff	___fldiv@b+2,??___fldiv+2
  4622  00140A  C0D6  F0DE         	movff	___fldiv@b+3,??___fldiv+3
  4623  00140E  35DE               	rlcf	(??___fldiv+3)& (0+255),w,b
  4624  001410  33DE               	rrcf	(??___fldiv+3)& (0+255),f,b
  4625  001412  33DD               	rrcf	(??___fldiv+2)& (0+255),f,b
  4626  001414  33DC               	rrcf	(??___fldiv+1)& (0+255),f,b
  4627  001416  33DB               	rrcf	??___fldiv& (0+255),f,b
  4628  001418  C0DB  F0D3         	movff	??___fldiv,___fldiv@b
  4629  00141C  C0DC  F0D4         	movff	??___fldiv+1,___fldiv@b+1
  4630  001420  C0DD  F0D5         	movff	??___fldiv+2,___fldiv@b+2
  4631  001424  C0DE  F0D6         	movff	??___fldiv+3,___fldiv@b+3
  4632  001428                     
  4633                           ; BSR set to: 0
  4634  001428  4BE4               	infsnz	___fldiv@new_exp& (0+255),f,b
  4635  00142A  2BE5               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4636  00142C                     l2985:
  4637                           
  4638                           ; BSR set to: 0
  4639  00142C  BFE5               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4640  00142E  EF21  F00A         	goto	u2551
  4641  001432  51E5               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4642  001434  E108               	bnz	u2550
  4643  001436  29E4               	incf	___fldiv@new_exp& (0+255),w,b
  4644  001438  A0D8               	btfss	status,0,c
  4645  00143A  EF21  F00A         	goto	u2551
  4646  00143E  EF23  F00A         	goto	u2550
  4647  001442                     u2551:
  4648  001442  EF2E  F00A         	goto	l2989
  4649  001446                     u2550:
  4650  001446                     
  4651                           ; BSR set to: 0
  4652  001446  0E00               	movlw	0
  4653  001448  6FE5               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4654  00144A  69E4               	setf	___fldiv@new_exp& (0+255),b
  4655  00144C  0E00               	movlw	0
  4656  00144E  6FD3               	movwf	___fldiv@b& (0+255),b
  4657  001450  0E00               	movlw	0
  4658  001452  6FD4               	movwf	(___fldiv@b+1)& (0+255),b
  4659  001454  0E00               	movlw	0
  4660  001456  6FD5               	movwf	(___fldiv@b+2)& (0+255),b
  4661  001458  0E00               	movlw	0
  4662  00145A  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4663  00145C                     l2989:
  4664                           
  4665                           ; BSR set to: 0
  4666  00145C  BFE5               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4667  00145E  EF3B  F00A         	goto	u2560
  4668  001462  51E5               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4669  001464  E106               	bnz	u2561
  4670  001466  05E4               	decf	___fldiv@new_exp& (0+255),w,b
  4671  001468  B0D8               	btfsc	status,0,c
  4672  00146A  EF39  F00A         	goto	u2561
  4673  00146E  EF3B  F00A         	goto	u2560
  4674  001472                     u2561:
  4675  001472  EF49  F00A         	goto	l2993
  4676  001476                     u2560:
  4677  001476                     
  4678                           ; BSR set to: 0
  4679  001476  0E00               	movlw	0
  4680  001478  6FE5               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4681  00147A  0E00               	movlw	0
  4682  00147C  6FE4               	movwf	___fldiv@new_exp& (0+255),b
  4683  00147E  0E00               	movlw	0
  4684  001480  6FD3               	movwf	___fldiv@b& (0+255),b
  4685  001482  0E00               	movlw	0
  4686  001484  6FD4               	movwf	(___fldiv@b+1)& (0+255),b
  4687  001486  0E00               	movlw	0
  4688  001488  6FD5               	movwf	(___fldiv@b+2)& (0+255),b
  4689  00148A  0E00               	movlw	0
  4690  00148C  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4691  00148E  0E00               	movlw	0
  4692  001490  6FE3               	movwf	___fldiv@sign& (0+255),b
  4693  001492                     l2993:
  4694                           
  4695                           ; BSR set to: 0
  4696  001492  C0E4  F0EA         	movff	___fldiv@new_exp,___fldiv@bexp
  4697  001496                     
  4698                           ; BSR set to: 0
  4699  001496  A1EA               	btfss	___fldiv@bexp& (0+255),0,b
  4700  001498  EF50  F00A         	goto	u2571
  4701  00149C  EF52  F00A         	goto	u2570
  4702  0014A0                     u2571:
  4703  0014A0  EF55  F00A         	goto	l2999
  4704  0014A4                     u2570:
  4705  0014A4                     
  4706                           ; BSR set to: 0
  4707  0014A4  8FD5               	bsf	(___fldiv@b+2)& (0+255),7,b
  4708  0014A6  EF56  F00A         	goto	l3001
  4709  0014AA                     l2999:
  4710                           
  4711                           ; BSR set to: 0
  4712  0014AA  9FD5               	bcf	(___fldiv@b+2)& (0+255),7,b
  4713  0014AC                     l3001:
  4714                           
  4715                           ; BSR set to: 0
  4716  0014AC  90D8               	bcf	status,0,c
  4717  0014AE  31EA               	rrcf	___fldiv@bexp& (0+255),w,b
  4718  0014B0  6FD6               	movwf	(___fldiv@b+3)& (0+255),b
  4719  0014B2  EF0C  F009         	goto	l2915
  4720  0014B6                     l910:
  4721                           
  4722                           ; BSR set to: 0
  4723  0014B6  0012               	return		;funcret
  4724  0014B8                     __end_of___fldiv:
  4725                           	callstack 0
  4726                           
  4727 ;; *************** function _PrintDataLCD *****************
  4728 ;; Defined at:
  4729 ;;		line 539 in file "Main.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4743 ;;      Params:         0       0       0       0       0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    8
  4750 ;; This function calls:
  4751 ;;		_SettingsLCD
  4752 ;;		_WriteLCD
  4753 ;;		_strlen
  4754 ;; This function is called by:
  4755 ;;		_settings
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text20
  4760  002744                     __ptext20:
  4761                           	callstack 0
  4762  002744                     _PrintDataLCD:
  4763                           	callstack 21
  4764  002744                     
  4765                           ;Main.c: 540: SettingsLCD(0x80);
  4766  002744  0E80               	movlw	128
  4767  002746  EC38  F015         	call	_SettingsLCD
  4768                           
  4769                           ;Main.c: 541: SettingsLCD(0x01);
  4770  00274A  0E01               	movlw	1
  4771  00274C  EC38  F015         	call	_SettingsLCD
  4772  002750                     
  4773                           ;Main.c: 542: for(i=0; i<strlen(texto_LCD); i++){
  4774  002750  0E00               	movlw	0
  4775  002752  6E51               	movwf	(_i+1)^0,c
  4776  002754  0E00               	movlw	0
  4777  002756  6E50               	movwf	_i^0,c
  4778  002758  EFB9  F013         	goto	l3339
  4779  00275C                     l3335:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;Main.c: 543: WriteLCD(texto_LCD[i]);
  4783  00275C  0E74               	movlw	low _texto_LCD
  4784  00275E  2450               	addwf	_i^0,w,c
  4785  002760  6ED9               	movwf	fsr2l,c
  4786  002762  0E00               	movlw	high _texto_LCD
  4787  002764  2051               	addwfc	(_i+1)^0,w,c
  4788  002766  6EDA               	movwf	fsr2h,c
  4789  002768  50DF               	movf	indf2,w,c
  4790  00276A  EC2A  F015         	call	_WriteLCD
  4791  00276E  4A50               	infsnz	_i^0,f,c
  4792  002770  2A51               	incf	(_i+1)^0,f,c
  4793  002772                     l3339:
  4794  002772  0E74               	movlw	low _texto_LCD
  4795  002774  0100               	movlb	0	; () banked
  4796  002776  6FD3               	movwf	strlen@s& (0+255),b
  4797  002778  0E00               	movlw	high _texto_LCD
  4798  00277A  6FD4               	movwf	(strlen@s+1)& (0+255),b
  4799  00277C  EC83  F014         	call	_strlen	;wreg free
  4800  002780  0100               	movlb	0	; () banked
  4801  002782  51D3               	movf	?_strlen& (0+255),w,b
  4802  002784  5C50               	subwf	_i^0,w,c
  4803  002786  51D4               	movf	(?_strlen+1)& (0+255),w,b
  4804  002788  5851               	subwfb	(_i+1)^0,w,c
  4805  00278A  A0D8               	btfss	status,0,c
  4806  00278C  EFCA  F013         	goto	u2981
  4807  002790  EFCC  F013         	goto	u2980
  4808  002794                     u2981:
  4809  002794  EFAE  F013         	goto	l3335
  4810  002798                     u2980:
  4811  002798                     
  4812                           ; BSR set to: 0
  4813  002798  0012               	return		;funcret
  4814  00279A                     __end_of_PrintDataLCD:
  4815                           	callstack 0
  4816                           
  4817 ;; *************** function _strlen *****************
  4818 ;; Defined at:
  4819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4822 ;;		 -> texto_LCD(40), text(40), 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  4825 ;;		 -> texto_LCD(40), text(40), 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  2    0[BANK0 ] unsigned int 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4835 ;;      Params:         0       2       0       0       0       0       0       0       0
  4836 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4838 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4839 ;;Total ram usage:        4 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    6
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_start
  4846 ;;		_PrintDataLCD
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text21
  4851  002906                     __ptext21:
  4852                           	callstack 0
  4853  002906                     _strlen:
  4854                           	callstack 22
  4855  002906  C0D3  F0D5         	movff	strlen@s,strlen@cp
  4856  00290A  C0D4  F0D6         	movff	strlen@s+1,strlen@cp+1
  4857  00290E  EF8C  F014         	goto	l2835
  4858  002912                     l2833:
  4859  002912  0100               	movlb	0	; () banked
  4860  002914  4BD5               	infsnz	strlen@cp& (0+255),f,b
  4861  002916  2BD6               	incf	(strlen@cp+1)& (0+255),f,b
  4862  002918                     l2835:
  4863  002918  C0D5  FFD9         	movff	strlen@cp,fsr2l
  4864  00291C  C0D6  FFDA         	movff	strlen@cp+1,fsr2h
  4865  002920  50DF               	movf	indf2,w,c
  4866  002922  A4D8               	btfss	status,2,c
  4867  002924  EF96  F014         	goto	u2321
  4868  002928  EF98  F014         	goto	u2320
  4869  00292C                     u2321:
  4870  00292C  EF89  F014         	goto	l2833
  4871  002930                     u2320:
  4872  002930  0100               	movlb	0	; () banked
  4873  002932  51D3               	movf	strlen@s& (0+255),w,b
  4874  002934  5DD5               	subwf	strlen@cp& (0+255),w,b
  4875  002936  6FD3               	movwf	?_strlen& (0+255),b
  4876  002938  51D4               	movf	(strlen@s+1)& (0+255),w,b
  4877  00293A  59D6               	subwfb	(strlen@cp+1)& (0+255),w,b
  4878  00293C  6FD4               	movwf	(?_strlen+1)& (0+255),b
  4879  00293E                     
  4880                           ; BSR set to: 0
  4881  00293E  0012               	return		;funcret
  4882  002940                     __end_of_strlen:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _WriteLCD *****************
  4886 ;; Defined at:
  4887 ;;		line 518 in file "Main.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  word            1    wreg     unsigned char 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  word            1    2[BANK0 ] unsigned char 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0
  4902 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4904 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        1 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    7
  4908 ;; This function calls:
  4909 ;;		_LCD
  4910 ;; This function is called by:
  4911 ;;		_PrintDataLCD
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text22
  4916  002A54                     __ptext22:
  4917                           	callstack 0
  4918  002A54                     _WriteLCD:
  4919                           	callstack 21
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;incstack = 0
  4923                           ;WriteLCD@word stored from wreg
  4924  002A54  0100               	movlb	0	; () banked
  4925  002A56  6FD5               	movwf	WriteLCD@word& (0+255),b
  4926  002A58                     
  4927                           ;Main.c: 519: LATE1 = 1;
  4928  002A58  828D               	bsf	3981,1,c	;volatile
  4929  002A5A                     
  4930                           ;Main.c: 520: LCD(word >> 4);
  4931  002A5A  0100               	movlb	0	; () banked
  4932  002A5C  39D5               	swapf	WriteLCD@word& (0+255),w,b
  4933  002A5E  0B0F               	andlw	15
  4934  002A60  EC32  F011         	call	_LCD
  4935                           
  4936                           ;Main.c: 521: LCD(word & 0x0F);
  4937  002A64  0100               	movlb	0	; () banked
  4938  002A66  51D5               	movf	WriteLCD@word& (0+255),w,b
  4939  002A68  0B0F               	andlw	15
  4940  002A6A  EC32  F011         	call	_LCD
  4941  002A6E  0012               	return		;funcret
  4942  002A70                     __end_of_WriteLCD:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _SettingsLCD *****************
  4946 ;; Defined at:
  4947 ;;		line 512 in file "Main.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  word            1    wreg     unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  word            1    2[BANK0 ] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0
  4962 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4964 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4965 ;;Total ram usage:        1 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    7
  4968 ;; This function calls:
  4969 ;;		_LCD
  4970 ;; This function is called by:
  4971 ;;		_settings
  4972 ;;		_PrintDataLCD
  4973 ;;		_DisplayShiftRight
  4974 ;;		_DisplayShiftLeft
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text23
  4979  002A70                     __ptext23:
  4980                           	callstack 0
  4981  002A70                     _SettingsLCD:
  4982                           	callstack 22
  4983                           
  4984                           ;incstack = 0
  4985                           ;SettingsLCD@word stored from wreg
  4986  002A70  0100               	movlb	0	; () banked
  4987  002A72  6FD5               	movwf	SettingsLCD@word& (0+255),b
  4988  002A74                     
  4989                           ;Main.c: 513: LATE1 = 0;
  4990  002A74  928D               	bcf	3981,1,c	;volatile
  4991  002A76                     
  4992                           ;Main.c: 514: LCD(word >> 4);
  4993  002A76  0100               	movlb	0	; () banked
  4994  002A78  39D5               	swapf	SettingsLCD@word& (0+255),w,b
  4995  002A7A  0B0F               	andlw	15
  4996  002A7C  EC32  F011         	call	_LCD
  4997                           
  4998                           ;Main.c: 515: LCD(word & 0x0F);
  4999  002A80  0100               	movlb	0	; () banked
  5000  002A82  51D5               	movf	SettingsLCD@word& (0+255),w,b
  5001  002A84  0B0F               	andlw	15
  5002  002A86  EC32  F011         	call	_LCD
  5003  002A8A  0012               	return		;funcret
  5004  002A8C                     __end_of_SettingsLCD:
  5005                           	callstack 0
  5006                           
  5007 ;; *************** function _LCD *****************
  5008 ;; Defined at:
  5009 ;;		line 524 in file "Main.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  data            1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  data            1    1[BANK0 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5025 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5026 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5027 ;;Total ram usage:        2 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    6
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_SettingsLCD
  5034 ;;		_WriteLCD
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text24
  5039  002264                     __ptext24:
  5040                           	callstack 0
  5041  002264                     _LCD:
  5042                           	callstack 22
  5043                           
  5044                           ;incstack = 0
  5045                           ;LCD@data stored from wreg
  5046  002264  0100               	movlb	0	; () banked
  5047  002266  6FD4               	movwf	LCD@data& (0+255),b
  5048  002268                     
  5049                           ;Main.c: 525: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5050  002268  0EC8               	movlw	200
  5051  00226A                     u3347:
  5052  00226A  D000               	nop2	
  5053  00226C  2EE8               	decfsz	wreg,f,c
  5054  00226E  D7FD               	bra	u3347
  5055  002270                     
  5056                           ;Main.c: 526: LATE0 = 1;
  5057  002270  808D               	bsf	3981,0,c	;volatile
  5058  002272                     
  5059                           ;Main.c: 527: LATDbits.LATD0 = (data & 0x01);
  5060  002272  C0D4  F0D3         	movff	LCD@data,??_LCD
  5061  002276  0E01               	movlw	1
  5062  002278  0100               	movlb	0	; () banked
  5063  00227A  17D3               	andwf	??_LCD& (0+255),f,b
  5064  00227C  508C               	movf	140,w,c	;volatile
  5065  00227E  19D3               	xorwf	??_LCD& (0+255),w,b
  5066  002280  0BFE               	andlw	-2
  5067  002282  19D3               	xorwf	??_LCD& (0+255),w,b
  5068  002284  6E8C               	movwf	140,c	;volatile
  5069  002286                     
  5070                           ; BSR set to: 0
  5071                           ;Main.c: 528: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5072  002286  0EC8               	movlw	200
  5073  002288                     u3357:
  5074  002288  D000               	nop2	
  5075  00228A  2EE8               	decfsz	wreg,f,c
  5076  00228C  D7FD               	bra	u3357
  5077  00228E                     
  5078                           ;Main.c: 529: LATDbits.LATD1 = (data & 0x02) >> 1;
  5079  00228E  C0D4  F0D3         	movff	LCD@data,??_LCD
  5080  002292  0100               	movlb	0	; () banked
  5081  002294  90D8               	bcf	status,0,c
  5082  002296  33D3               	rrcf	??_LCD& (0+255),f,b
  5083  002298  0E01               	movlw	1
  5084  00229A  17D3               	andwf	??_LCD& (0+255),f,b
  5085  00229C  47D3               	rlncf	??_LCD& (0+255),f,b
  5086  00229E  508C               	movf	140,w,c	;volatile
  5087  0022A0  19D3               	xorwf	??_LCD& (0+255),w,b
  5088  0022A2  0BFD               	andlw	-3
  5089  0022A4  19D3               	xorwf	??_LCD& (0+255),w,b
  5090  0022A6  6E8C               	movwf	140,c	;volatile
  5091  0022A8                     
  5092                           ; BSR set to: 0
  5093                           ;Main.c: 530: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5094  0022A8  0EC8               	movlw	200
  5095  0022AA                     u3367:
  5096  0022AA  D000               	nop2	
  5097  0022AC  2EE8               	decfsz	wreg,f,c
  5098  0022AE  D7FD               	bra	u3367
  5099  0022B0                     
  5100                           ;Main.c: 531: LATDbits.LATD2 = (data & 0x04) >> 2;
  5101  0022B0  C0D4  F0D3         	movff	LCD@data,??_LCD
  5102  0022B4  0100               	movlb	0	; () banked
  5103  0022B6  90D8               	bcf	status,0,c
  5104  0022B8  33D3               	rrcf	??_LCD& (0+255),f,b
  5105  0022BA  90D8               	bcf	status,0,c
  5106  0022BC  33D3               	rrcf	??_LCD& (0+255),f,b
  5107  0022BE  0E01               	movlw	1
  5108  0022C0  17D3               	andwf	??_LCD& (0+255),f,b
  5109  0022C2  47D3               	rlncf	??_LCD& (0+255),f,b
  5110  0022C4  47D3               	rlncf	??_LCD& (0+255),f,b
  5111  0022C6  508C               	movf	140,w,c	;volatile
  5112  0022C8  19D3               	xorwf	??_LCD& (0+255),w,b
  5113  0022CA  0BFB               	andlw	-5
  5114  0022CC  19D3               	xorwf	??_LCD& (0+255),w,b
  5115  0022CE  6E8C               	movwf	140,c	;volatile
  5116  0022D0                     
  5117                           ; BSR set to: 0
  5118                           ;Main.c: 532: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5119  0022D0  0EC8               	movlw	200
  5120  0022D2                     u3377:
  5121  0022D2  D000               	nop2	
  5122  0022D4  2EE8               	decfsz	wreg,f,c
  5123  0022D6  D7FD               	bra	u3377
  5124  0022D8                     
  5125                           ;Main.c: 533: LATDbits.LATD3 = (data & 0x08) >> 3;
  5126  0022D8  C0D4  F0D3         	movff	LCD@data,??_LCD
  5127  0022DC  0100               	movlb	0	; () banked
  5128  0022DE  90D8               	bcf	status,0,c
  5129  0022E0  33D3               	rrcf	??_LCD& (0+255),f,b
  5130  0022E2  90D8               	bcf	status,0,c
  5131  0022E4  33D3               	rrcf	??_LCD& (0+255),f,b
  5132  0022E6  90D8               	bcf	status,0,c
  5133  0022E8  33D3               	rrcf	??_LCD& (0+255),f,b
  5134  0022EA  0E01               	movlw	1
  5135  0022EC  17D3               	andwf	??_LCD& (0+255),f,b
  5136  0022EE  47D3               	rlncf	??_LCD& (0+255),f,b
  5137  0022F0  47D3               	rlncf	??_LCD& (0+255),f,b
  5138  0022F2  47D3               	rlncf	??_LCD& (0+255),f,b
  5139  0022F4  508C               	movf	140,w,c	;volatile
  5140  0022F6  19D3               	xorwf	??_LCD& (0+255),w,b
  5141  0022F8  0BF7               	andlw	-9
  5142  0022FA  19D3               	xorwf	??_LCD& (0+255),w,b
  5143  0022FC  6E8C               	movwf	140,c	;volatile
  5144  0022FE                     
  5145                           ; BSR set to: 0
  5146                           ;Main.c: 534: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5147  0022FE  0EC8               	movlw	200
  5148  002300                     u3387:
  5149  002300  D000               	nop2	
  5150  002302  2EE8               	decfsz	wreg,f,c
  5151  002304  D7FD               	bra	u3387
  5152  002306                     
  5153                           ;Main.c: 535: LATE0 = 0;
  5154  002306  908D               	bcf	3981,0,c	;volatile
  5155  002308                     
  5156                           ;Main.c: 536: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5157  002308  0EC8               	movlw	200
  5158  00230A                     u3397:
  5159  00230A  D000               	nop2	
  5160  00230C  2EE8               	decfsz	wreg,f,c
  5161  00230E  D7FD               	bra	u3397
  5162  002310  0012               	return		;funcret
  5163  002312                     __end_of_LCD:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _receive *****************
  5167 ;; Defined at:
  5168 ;;		line 368 in file "Main.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5182 ;;      Params:         0       0       0       0       0       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5184 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5185 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5186 ;;Total ram usage:        8 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    5
  5189 ;; This function calls:
  5190 ;;		_algoritm
  5191 ;;		i2_PrintDataLCD
  5192 ;;		i2_sprintf
  5193 ;;		i2_start
  5194 ;; This function is called by:
  5195 ;;		Interrupt level 2
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	intcode
  5200  000008                     __pintcode:
  5201                           	callstack 0
  5202  000008                     _receive:
  5203                           	callstack 20
  5204                           
  5205                           ;incstack = 0
  5206  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5207  00000A  EDDB  F011         	call	int_func,f	;refresh shadow registers
  5208                           
  5209                           	psect	intcode_body
  5210  0023B6                     __pintcode_body:
  5211                           	callstack 20
  5212  0023B6                     int_func:
  5213                           	callstack 20
  5214  0023B6  0006               	pop		; remove dummy address from shadow register refresh
  5215  0023B8  CFD9 F033          	movff	fsr2l,??_receive
  5216  0023BC  CFDA F034          	movff	fsr2h,??_receive+1
  5217  0023C0  CFF3 F035          	movff	prodl,??_receive+2
  5218  0023C4  CFF4 F036          	movff	prodh,??_receive+3
  5219  0023C8  CFF6 F037          	movff	tblptrl,??_receive+4
  5220  0023CC  CFF7 F038          	movff	tblptrh,??_receive+5
  5221  0023D0  CFF8 F039          	movff	tblptru,??_receive+6
  5222  0023D4  CFF5 F03A          	movff	tablat,??_receive+7
  5223  0023D8                     
  5224                           ;Main.c: 369: if(RCIF == 1){
  5225  0023D8  AA9E               	btfss	3998,5,c	;volatile
  5226  0023DA  EFF1  F011         	goto	i2u326_41
  5227  0023DE  EFF3  F011         	goto	i2u326_40
  5228  0023E2                     i2u326_41:
  5229  0023E2  EF15  F012         	goto	i2l223
  5230  0023E6                     i2u326_40:
  5231  0023E6                     
  5232                           ;Main.c: 370: d = RCREG;
  5233  0023E6  CFAE F058          	movff	4014,_d	;volatile
  5234  0023EA                     
  5235                           ;Main.c: 371: sprintf(text," El caracter recibido fue: %c",d);
  5236  0023EA  0E9C               	movlw	low _text
  5237  0023EC  6E0D               	movwf	i2sprintf@sp^0,c
  5238  0023EE  0E00               	movlw	high _text
  5239  0023F0  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  5240  0023F2  0E0B               	movlw	low STR_7
  5241  0023F4  6E0F               	movwf	i2sprintf@f^0,c
  5242  0023F6  0E08               	movlw	high STR_7
  5243  0023F8  6E10               	movwf	(i2sprintf@f+1)^0,c
  5244  0023FA  C058  F011         	movff	_d,?i2_sprintf+4
  5245  0023FE  6A12               	clrf	(?i2_sprintf+5)^0,c
  5246  002400  ECA1  F00C         	call	i2_sprintf	;wreg free
  5247                           
  5248                           ;Main.c: 372: sprintf(texto_LCD,"Dato: %c",d);
  5249  002404  0E74               	movlw	low _texto_LCD
  5250  002406  6E0D               	movwf	i2sprintf@sp^0,c
  5251  002408  0E00               	movlw	high _texto_LCD
  5252  00240A  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  5253  00240C  0E7B               	movlw	low STR_8
  5254  00240E  6E0F               	movwf	i2sprintf@f^0,c
  5255  002410  0E08               	movlw	high STR_8
  5256  002412  6E10               	movwf	(i2sprintf@f+1)^0,c
  5257  002414  C058  F011         	movff	_d,?i2_sprintf+4
  5258  002418  6A12               	clrf	(?i2_sprintf+5)^0,c
  5259  00241A  ECA1  F00C         	call	i2_sprintf	;wreg free
  5260  00241E                     
  5261                           ;Main.c: 373: start();
  5262  00241E  ECCD  F013         	call	i2_start	;wreg free
  5263  002422                     
  5264                           ;Main.c: 374: PrintDataLCD();
  5265  002422  ECF6  F013         	call	i2_PrintDataLCD	;wreg free
  5266                           
  5267                           ;Main.c: 375: algoritm();
  5268  002426  ECA8  F006         	call	_algoritm	;wreg free
  5269  00242A                     i2l223:
  5270  00242A  C03A  FFF5         	movff	??_receive+7,tablat
  5271  00242E  C039  FFF8         	movff	??_receive+6,tblptru
  5272  002432  C038  FFF7         	movff	??_receive+5,tblptrh
  5273  002436  C037  FFF6         	movff	??_receive+4,tblptrl
  5274  00243A  C036  FFF4         	movff	??_receive+3,prodh
  5275  00243E  C035  FFF3         	movff	??_receive+2,prodl
  5276  002442  C034  FFDA         	movff	??_receive+1,fsr2h
  5277  002446  C033  FFD9         	movff	??_receive,fsr2l
  5278  00244A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5279  00244C  0011               	retfie		f
  5280  00244E                     __end_of_receive:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _algoritm *****************
  5284 ;; Defined at:
  5285 ;;		line 160 in file "Main.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5299 ;;      Params:         0       0       0       0       0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5301 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5302 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5303 ;;Total ram usage:        2 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    4
  5306 ;; This function calls:
  5307 ;;		_atoi
  5308 ;;		_impresion_datos
  5309 ;;		_mover_servo
  5310 ;;		i2_sprintf
  5311 ;;		i2_start
  5312 ;; This function is called by:
  5313 ;;		_receive
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text26
  5318  000D50                     __ptext26:
  5319                           	callstack 0
  5320  000D50                     _algoritm:
  5321                           	callstack 20
  5322  000D50                     
  5323                           ;Main.c: 161: if(d == 's'){
  5324  000D50  0E73               	movlw	115
  5325  000D52  1858               	xorwf	_d^0,w,c
  5326  000D54  A4D8               	btfss	status,2,c
  5327  000D56  EFAF  F006         	goto	i2u301_41
  5328  000D5A  EFB1  F006         	goto	i2u301_40
  5329  000D5E                     i2u301_41:
  5330  000D5E  EFB5  F006         	goto	i2l3435
  5331  000D62                     i2u301_40:
  5332  000D62                     
  5333                           ;Main.c: 162: flag = 0;
  5334  000D62  0E00               	movlw	0
  5335  000D64  6E59               	movwf	_flag^0,c
  5336                           
  5337                           ;Main.c: 163: }
  5338  000D66  EFD8  F006         	goto	i2l3445
  5339  000D6A                     i2l3435:
  5340                           
  5341                           ;Main.c: 164: else if(d == 'a'){
  5342  000D6A  0E61               	movlw	97
  5343  000D6C  1858               	xorwf	_d^0,w,c
  5344  000D6E  A4D8               	btfss	status,2,c
  5345  000D70  EFBC  F006         	goto	i2u302_41
  5346  000D74  EFBE  F006         	goto	i2u302_40
  5347  000D78                     i2u302_41:
  5348  000D78  EFC2  F006         	goto	i2l3439
  5349  000D7C                     i2u302_40:
  5350  000D7C                     
  5351                           ;Main.c: 165: flag = 1;
  5352  000D7C  0E01               	movlw	1
  5353  000D7E  6E59               	movwf	_flag^0,c
  5354                           
  5355                           ;Main.c: 166: }
  5356  000D80  EFD8  F006         	goto	i2l3445
  5357  000D84                     i2l3439:
  5358                           
  5359                           ;Main.c: 167: else if(d == 'p'){
  5360  000D84  0E70               	movlw	112
  5361  000D86  1858               	xorwf	_d^0,w,c
  5362  000D88  A4D8               	btfss	status,2,c
  5363  000D8A  EFC9  F006         	goto	i2u303_41
  5364  000D8E  EFCB  F006         	goto	i2u303_40
  5365  000D92                     i2u303_41:
  5366  000D92  EFD8  F006         	goto	i2l3445
  5367  000D96                     i2u303_40:
  5368  000D96                     
  5369                           ;Main.c: 168: flag = 3;
  5370  000D96  0E03               	movlw	3
  5371  000D98  6E59               	movwf	_flag^0,c
  5372  000D9A                     
  5373                           ;Main.c: 171: _delay((unsigned long)((1000)*(8000000/4000.0)));
  5374  000D9A  0E0B               	movlw	11
  5375  000D9C  6E32               	movwf	(??_algoritm+1)^0,c
  5376  000D9E  0E26               	movlw	38
  5377  000DA0  6E31               	movwf	??_algoritm^0,c
  5378  000DA2  0E5E               	movlw	94
  5379  000DA4                     i2u340_47:
  5380  000DA4  2EE8               	decfsz	wreg,f,c
  5381  000DA6  D7FE               	bra	i2u340_47
  5382  000DA8  2E31               	decfsz	??_algoritm^0,f,c
  5383  000DAA  D7FC               	bra	i2u340_47
  5384  000DAC  2E32               	decfsz	(??_algoritm+1)^0,f,c
  5385  000DAE  D7FA               	bra	i2u340_47
  5386  000DB0                     i2l3445:
  5387                           
  5388                           ;Main.c: 172: };Main.c: 174: if(flag == 0){
  5389  000DB0  5059               	movf	_flag^0,w,c
  5390  000DB2  A4D8               	btfss	status,2,c
  5391  000DB4  EFDE  F006         	goto	i2u304_41
  5392  000DB8  EFE0  F006         	goto	i2u304_40
  5393  000DBC                     i2u304_41:
  5394  000DBC  EF3C  F007         	goto	i2l3471
  5395  000DC0                     i2u304_40:
  5396  000DC0                     
  5397                           ;Main.c: 175: if(d == '0'){
  5398  000DC0  0E30               	movlw	48
  5399  000DC2  1858               	xorwf	_d^0,w,c
  5400  000DC4  A4D8               	btfss	status,2,c
  5401  000DC6  EFE7  F006         	goto	i2u305_41
  5402  000DCA  EFE9  F006         	goto	i2u305_40
  5403  000DCE                     i2u305_41:
  5404  000DCE  EFEF  F006         	goto	i2l3451
  5405  000DD2                     i2u305_40:
  5406  000DD2                     
  5407                           ;Main.c: 176: servos = 0;
  5408  000DD2  0E00               	movlw	0
  5409  000DD4  6E5E               	movwf	(_servos+1)^0,c
  5410  000DD6  0E00               	movlw	0
  5411  000DD8  6E5D               	movwf	_servos^0,c
  5412                           
  5413                           ;Main.c: 177: }
  5414  000DDA  EF8D  F008         	goto	i2l214
  5415  000DDE                     i2l3451:
  5416                           
  5417                           ;Main.c: 178: else if(d == '1'){
  5418  000DDE  0E31               	movlw	49
  5419  000DE0  1858               	xorwf	_d^0,w,c
  5420  000DE2  A4D8               	btfss	status,2,c
  5421  000DE4  EFF6  F006         	goto	i2u306_41
  5422  000DE8  EFF8  F006         	goto	i2u306_40
  5423  000DEC                     i2u306_41:
  5424  000DEC  EFFE  F006         	goto	i2l3455
  5425  000DF0                     i2u306_40:
  5426  000DF0                     
  5427                           ;Main.c: 179: servos = 1;
  5428  000DF0  0E00               	movlw	0
  5429  000DF2  6E5E               	movwf	(_servos+1)^0,c
  5430  000DF4  0E01               	movlw	1
  5431  000DF6  6E5D               	movwf	_servos^0,c
  5432                           
  5433                           ;Main.c: 180: }
  5434  000DF8  EF8D  F008         	goto	i2l214
  5435  000DFC                     i2l3455:
  5436                           
  5437                           ;Main.c: 181: else if(d == '2'){
  5438  000DFC  0E32               	movlw	50
  5439  000DFE  1858               	xorwf	_d^0,w,c
  5440  000E00  A4D8               	btfss	status,2,c
  5441  000E02  EF05  F007         	goto	i2u307_41
  5442  000E06  EF07  F007         	goto	i2u307_40
  5443  000E0A                     i2u307_41:
  5444  000E0A  EF0D  F007         	goto	i2l3459
  5445  000E0E                     i2u307_40:
  5446  000E0E                     
  5447                           ;Main.c: 182: servos = 2;
  5448  000E0E  0E00               	movlw	0
  5449  000E10  6E5E               	movwf	(_servos+1)^0,c
  5450  000E12  0E02               	movlw	2
  5451  000E14  6E5D               	movwf	_servos^0,c
  5452                           
  5453                           ;Main.c: 183: }
  5454  000E16  EF8D  F008         	goto	i2l214
  5455  000E1A                     i2l3459:
  5456                           
  5457                           ;Main.c: 184: else if(d == '3'){
  5458  000E1A  0E33               	movlw	51
  5459  000E1C  1858               	xorwf	_d^0,w,c
  5460  000E1E  A4D8               	btfss	status,2,c
  5461  000E20  EF14  F007         	goto	i2u308_41
  5462  000E24  EF16  F007         	goto	i2u308_40
  5463  000E28                     i2u308_41:
  5464  000E28  EF1C  F007         	goto	i2l3463
  5465  000E2C                     i2u308_40:
  5466  000E2C                     
  5467                           ;Main.c: 185: servos = 3;
  5468  000E2C  0E00               	movlw	0
  5469  000E2E  6E5E               	movwf	(_servos+1)^0,c
  5470  000E30  0E03               	movlw	3
  5471  000E32  6E5D               	movwf	_servos^0,c
  5472                           
  5473                           ;Main.c: 186: }
  5474  000E34  EF8D  F008         	goto	i2l214
  5475  000E38                     i2l3463:
  5476                           
  5477                           ;Main.c: 187: else if(d == '4'){
  5478  000E38  0E34               	movlw	52
  5479  000E3A  1858               	xorwf	_d^0,w,c
  5480  000E3C  A4D8               	btfss	status,2,c
  5481  000E3E  EF23  F007         	goto	i2u309_41
  5482  000E42  EF25  F007         	goto	i2u309_40
  5483  000E46                     i2u309_41:
  5484  000E46  EF2B  F007         	goto	i2l3467
  5485  000E4A                     i2u309_40:
  5486  000E4A                     
  5487                           ;Main.c: 188: servos = 4;
  5488  000E4A  0E00               	movlw	0
  5489  000E4C  6E5E               	movwf	(_servos+1)^0,c
  5490  000E4E  0E04               	movlw	4
  5491  000E50  6E5D               	movwf	_servos^0,c
  5492                           
  5493                           ;Main.c: 189: }
  5494  000E52  EF8D  F008         	goto	i2l214
  5495  000E56                     i2l3467:
  5496                           
  5497                           ;Main.c: 190: else if(d == '5'){
  5498  000E56  0E35               	movlw	53
  5499  000E58  1858               	xorwf	_d^0,w,c
  5500  000E5A  A4D8               	btfss	status,2,c
  5501  000E5C  EF32  F007         	goto	i2u310_41
  5502  000E60  EF34  F007         	goto	i2u310_40
  5503  000E64                     i2u310_41:
  5504  000E64  EF3A  F007         	goto	i2l183
  5505  000E68                     i2u310_40:
  5506  000E68                     
  5507                           ;Main.c: 191: servos = 5;
  5508  000E68  0E00               	movlw	0
  5509  000E6A  6E5E               	movwf	(_servos+1)^0,c
  5510  000E6C  0E05               	movlw	5
  5511  000E6E  6E5D               	movwf	_servos^0,c
  5512  000E70  EF8D  F008         	goto	i2l214
  5513  000E74                     i2l183:
  5514  000E74  EF8D  F008         	goto	i2l214
  5515  000E78                     i2l3471:
  5516                           
  5517                           ;Main.c: 200: else if(flag == 1){
  5518  000E78  0459               	decf	_flag^0,w,c
  5519  000E7A  A4D8               	btfss	status,2,c
  5520  000E7C  EF42  F007         	goto	i2u311_41
  5521  000E80  EF44  F007         	goto	i2u311_40
  5522  000E84                     i2u311_41:
  5523  000E84  EF48  F007         	goto	i2l3475
  5524  000E88                     i2u311_40:
  5525  000E88                     
  5526                           ;Main.c: 201: flag = 2;
  5527  000E88  0E02               	movlw	2
  5528  000E8A  6E59               	movwf	_flag^0,c
  5529                           
  5530                           ;Main.c: 202: }
  5531  000E8C  EF8D  F008         	goto	i2l214
  5532  000E90                     i2l3475:
  5533                           
  5534                           ;Main.c: 203: else if(flag==2){
  5535  000E90  0E02               	movlw	2
  5536  000E92  1859               	xorwf	_flag^0,w,c
  5537  000E94  A4D8               	btfss	status,2,c
  5538  000E96  EF4F  F007         	goto	i2u312_41
  5539  000E9A  EF51  F007         	goto	i2u312_40
  5540  000E9E                     i2u312_41:
  5541  000E9E  EF04  F008         	goto	i2l3521
  5542  000EA2                     i2u312_40:
  5543  000EA2                     
  5544                           ;Main.c: 204: angle[z] = d;
  5545  000EA2  0E5A               	movlw	low _angle
  5546  000EA4  2448               	addwf	_z^0,w,c
  5547  000EA6  6ED9               	movwf	fsr2l,c
  5548  000EA8  0E00               	movlw	high _angle
  5549  000EAA  2049               	addwfc	(_z+1)^0,w,c
  5550  000EAC  6EDA               	movwf	fsr2h,c
  5551  000EAE  C058  FFDF         	movff	_d,indf2
  5552  000EB2                     
  5553                           ;Main.c: 205: sprintf(text,"angulo z %c \n",angle[z]);
  5554  000EB2  0E9C               	movlw	low _text
  5555  000EB4  6E0D               	movwf	i2sprintf@sp^0,c
  5556  000EB6  0E00               	movlw	high _text
  5557  000EB8  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  5558  000EBA  0E52               	movlw	low STR_3
  5559  000EBC  6E0F               	movwf	i2sprintf@f^0,c
  5560  000EBE  0E08               	movlw	high STR_3
  5561  000EC0  6E10               	movwf	(i2sprintf@f+1)^0,c
  5562  000EC2  0E5A               	movlw	low _angle
  5563  000EC4  2448               	addwf	_z^0,w,c
  5564  000EC6  6ED9               	movwf	fsr2l,c
  5565  000EC8  0E00               	movlw	high _angle
  5566  000ECA  2049               	addwfc	(_z+1)^0,w,c
  5567  000ECC  6EDA               	movwf	fsr2h,c
  5568  000ECE  50DF               	movf	indf2,w,c
  5569  000ED0  6E31               	movwf	??_algoritm^0,c
  5570  000ED2  5031               	movf	??_algoritm^0,w,c
  5571  000ED4  6E11               	movwf	(?i2_sprintf+4)^0,c
  5572  000ED6  6A12               	clrf	(?i2_sprintf+5)^0,c
  5573  000ED8  ECA1  F00C         	call	i2_sprintf	;wreg free
  5574  000EDC                     
  5575                           ;Main.c: 206: start();
  5576  000EDC  ECCD  F013         	call	i2_start	;wreg free
  5577  000EE0                     
  5578                           ;Main.c: 207: z++;
  5579  000EE0  4A48               	infsnz	_z^0,f,c
  5580  000EE2  2A49               	incf	(_z+1)^0,f,c
  5581  000EE4                     
  5582                           ;Main.c: 208: if(z==3){
  5583  000EE4  0E03               	movlw	3
  5584  000EE6  1848               	xorwf	_z^0,w,c
  5585  000EE8  1049               	iorwf	(_z+1)^0,w,c
  5586  000EEA  A4D8               	btfss	status,2,c
  5587  000EEC  EF7A  F007         	goto	i2u313_41
  5588  000EF0  EF7C  F007         	goto	i2u313_40
  5589  000EF4                     i2u313_41:
  5590  000EF4  EF8D  F008         	goto	i2l214
  5591  000EF8                     i2u313_40:
  5592  000EF8                     
  5593                           ;Main.c: 209: z = 0;
  5594  000EF8  0E00               	movlw	0
  5595  000EFA  6E49               	movwf	(_z+1)^0,c
  5596  000EFC  0E00               	movlw	0
  5597  000EFE  6E48               	movwf	_z^0,c
  5598  000F00                     
  5599                           ;Main.c: 210: Angle = atoi(angle);
  5600  000F00  0E5A               	movlw	low _angle
  5601  000F02  6E0F               	movwf	atoi@s^0,c
  5602  000F04  0E00               	movlw	high _angle
  5603  000F06  6E10               	movwf	(atoi@s+1)^0,c
  5604  000F08  EC0F  F00E         	call	_atoi	;wreg free
  5605  000F0C  C00F  F046         	movff	?_atoi,_Angle
  5606  000F10  C010  F047         	movff	?_atoi+1,_Angle+1
  5607  000F14                     
  5608                           ;Main.c: 211: sprintf(text,"angulo atoi %d \n",Angle);
  5609  000F14  0E9C               	movlw	low _text
  5610  000F16  6E0D               	movwf	i2sprintf@sp^0,c
  5611  000F18  0E00               	movlw	high _text
  5612  000F1A  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  5613  000F1C  0E41               	movlw	low STR_4
  5614  000F1E  6E0F               	movwf	i2sprintf@f^0,c
  5615  000F20  0E08               	movlw	high STR_4
  5616  000F22  6E10               	movwf	(i2sprintf@f+1)^0,c
  5617  000F24  C046  F011         	movff	_Angle,?i2_sprintf+4
  5618  000F28  C047  F012         	movff	_Angle+1,?i2_sprintf+5
  5619  000F2C  ECA1  F00C         	call	i2_sprintf	;wreg free
  5620  000F30                     
  5621                           ;Main.c: 212: start();
  5622  000F30  ECCD  F013         	call	i2_start	;wreg free
  5623  000F34                     
  5624                           ;Main.c: 213: if(servos == 0){
  5625  000F34  505D               	movf	_servos^0,w,c
  5626  000F36  105E               	iorwf	(_servos+1)^0,w,c
  5627  000F38  A4D8               	btfss	status,2,c
  5628  000F3A  EFA1  F007         	goto	i2u314_41
  5629  000F3E  EFA3  F007         	goto	i2u314_40
  5630  000F42                     i2u314_41:
  5631  000F42  EFA9  F007         	goto	i2l3499
  5632  000F46                     i2u314_40:
  5633  000F46                     
  5634                           ;Main.c: 214: angle_servos[0] = Angle;
  5635  000F46  C046  F060         	movff	_Angle,_angle_servos
  5636  000F4A  C047  F061         	movff	_Angle+1,_angle_servos+1
  5637                           
  5638                           ;Main.c: 215: }
  5639  000F4E  EFF8  F007         	goto	i2l3519
  5640  000F52                     i2l3499:
  5641                           
  5642                           ;Main.c: 216: else if(servos == 1){
  5643  000F52  045D               	decf	_servos^0,w,c
  5644  000F54  105E               	iorwf	(_servos+1)^0,w,c
  5645  000F56  A4D8               	btfss	status,2,c
  5646  000F58  EFB0  F007         	goto	i2u315_41
  5647  000F5C  EFB2  F007         	goto	i2u315_40
  5648  000F60                     i2u315_41:
  5649  000F60  EFB8  F007         	goto	i2l3503
  5650  000F64                     i2u315_40:
  5651  000F64                     
  5652                           ;Main.c: 217: angle_servos[1] = Angle;
  5653  000F64  C046  F062         	movff	_Angle,_angle_servos+2
  5654  000F68  C047  F063         	movff	_Angle+1,_angle_servos+3
  5655                           
  5656                           ;Main.c: 218: }
  5657  000F6C  EFF8  F007         	goto	i2l3519
  5658  000F70                     i2l3503:
  5659                           
  5660                           ;Main.c: 219: else if(servos == 2){
  5661  000F70  0E02               	movlw	2
  5662  000F72  185D               	xorwf	_servos^0,w,c
  5663  000F74  105E               	iorwf	(_servos+1)^0,w,c
  5664  000F76  A4D8               	btfss	status,2,c
  5665  000F78  EFC0  F007         	goto	i2u316_41
  5666  000F7C  EFC2  F007         	goto	i2u316_40
  5667  000F80                     i2u316_41:
  5668  000F80  EFC8  F007         	goto	i2l3507
  5669  000F84                     i2u316_40:
  5670  000F84                     
  5671                           ;Main.c: 220: angle_servos[2] = Angle;
  5672  000F84  C046  F064         	movff	_Angle,_angle_servos+4
  5673  000F88  C047  F065         	movff	_Angle+1,_angle_servos+5
  5674                           
  5675                           ;Main.c: 221: }
  5676  000F8C  EFF8  F007         	goto	i2l3519
  5677  000F90                     i2l3507:
  5678                           
  5679                           ;Main.c: 222: else if(servos == 3){
  5680  000F90  0E03               	movlw	3
  5681  000F92  185D               	xorwf	_servos^0,w,c
  5682  000F94  105E               	iorwf	(_servos+1)^0,w,c
  5683  000F96  A4D8               	btfss	status,2,c
  5684  000F98  EFD0  F007         	goto	i2u317_41
  5685  000F9C  EFD2  F007         	goto	i2u317_40
  5686  000FA0                     i2u317_41:
  5687  000FA0  EFD8  F007         	goto	i2l3511
  5688  000FA4                     i2u317_40:
  5689  000FA4                     
  5690                           ;Main.c: 223: angle_servos[3] = Angle;
  5691  000FA4  C046  F066         	movff	_Angle,_angle_servos+6
  5692  000FA8  C047  F067         	movff	_Angle+1,_angle_servos+7
  5693                           
  5694                           ;Main.c: 224: }
  5695  000FAC  EFF8  F007         	goto	i2l3519
  5696  000FB0                     i2l3511:
  5697                           
  5698                           ;Main.c: 225: else if(servos == 4){
  5699  000FB0  0E04               	movlw	4
  5700  000FB2  185D               	xorwf	_servos^0,w,c
  5701  000FB4  105E               	iorwf	(_servos+1)^0,w,c
  5702  000FB6  A4D8               	btfss	status,2,c
  5703  000FB8  EFE0  F007         	goto	i2u318_41
  5704  000FBC  EFE2  F007         	goto	i2u318_40
  5705  000FC0                     i2u318_41:
  5706  000FC0  EFE8  F007         	goto	i2l3515
  5707  000FC4                     i2u318_40:
  5708  000FC4                     
  5709                           ;Main.c: 226: angle_servos[4] = Angle;
  5710  000FC4  C046  F068         	movff	_Angle,_angle_servos+8
  5711  000FC8  C047  F069         	movff	_Angle+1,_angle_servos+9
  5712                           
  5713                           ;Main.c: 227: }
  5714  000FCC  EFF8  F007         	goto	i2l3519
  5715  000FD0                     i2l3515:
  5716                           
  5717                           ;Main.c: 228: else if(servos == 5){
  5718  000FD0  0E05               	movlw	5
  5719  000FD2  185D               	xorwf	_servos^0,w,c
  5720  000FD4  105E               	iorwf	(_servos+1)^0,w,c
  5721  000FD6  A4D8               	btfss	status,2,c
  5722  000FD8  EFF0  F007         	goto	i2u319_41
  5723  000FDC  EFF2  F007         	goto	i2u319_40
  5724  000FE0                     i2u319_41:
  5725  000FE0  EFF8  F007         	goto	i2l201
  5726  000FE4                     i2u319_40:
  5727  000FE4                     
  5728                           ;Main.c: 229: angle_servos[5] = Angle;
  5729  000FE4  C046  F06A         	movff	_Angle,_angle_servos+10
  5730  000FE8  C047  F06B         	movff	_Angle+1,_angle_servos+11
  5731                           
  5732                           ;Main.c: 230: }
  5733  000FEC  EFF8  F007         	goto	i2l3519
  5734  000FF0                     i2l201:
  5735  000FF0                     i2l3519:
  5736                           
  5737                           ;Main.c: 232: mover_servo(servos,Angle);
  5738  000FF0  C05D  F02B         	movff	_servos,mover_servo@servo
  5739  000FF4  C05E  F02C         	movff	_servos+1,mover_servo@servo+1
  5740  000FF8  C046  F02D         	movff	_Angle,mover_servo@angulo
  5741  000FFC  C047  F02E         	movff	_Angle+1,mover_servo@angulo+1
  5742  001000  ECD7  F010         	call	_mover_servo	;wreg free
  5743  001004  EF8D  F008         	goto	i2l214
  5744  001008                     i2l3521:
  5745                           
  5746                           ;Main.c: 235: else if(flag == 3){
  5747  001008  0E03               	movlw	3
  5748  00100A  1859               	xorwf	_flag^0,w,c
  5749  00100C  A4D8               	btfss	status,2,c
  5750  00100E  EF0B  F008         	goto	i2u320_41
  5751  001012  EF0D  F008         	goto	i2u320_40
  5752  001016                     i2u320_41:
  5753  001016  EF4D  F008         	goto	i2l3537
  5754  00101A                     i2u320_40:
  5755  00101A                     
  5756                           ;Main.c: 236: flag = 4;
  5757  00101A  0E04               	movlw	4
  5758  00101C  6E59               	movwf	_flag^0,c
  5759                           
  5760                           ;Main.c: 237: for(i=0;i<=2;i++){
  5761  00101E  0E00               	movlw	0
  5762  001020  6E51               	movwf	(_i+1)^0,c
  5763  001022  0E00               	movlw	0
  5764  001024  6E50               	movwf	_i^0,c
  5765  001026                     i2l3525:
  5766  001026  BE51               	btfsc	(_i+1)^0,7,c
  5767  001028  EF1F  F008         	goto	i2u321_41
  5768  00102C  5051               	movf	(_i+1)^0,w,c
  5769  00102E  E109               	bnz	i2u321_40
  5770  001030  0E03               	movlw	3
  5771  001032  5C50               	subwf	_i^0,w,c
  5772  001034  A0D8               	btfss	status,0,c
  5773  001036  EF1F  F008         	goto	i2u321_41
  5774  00103A  EF21  F008         	goto	i2u321_40
  5775  00103E                     i2u321_41:
  5776  00103E  EF23  F008         	goto	i2l3529
  5777  001042                     i2u321_40:
  5778  001042  EF3F  F008         	goto	i2l3535
  5779  001046                     i2l3529:
  5780                           
  5781                           ;Main.c: 238: coordinate_x[i] = 0;
  5782  001046  0EC8               	movlw	low _coordinate_x
  5783  001048  2450               	addwf	_i^0,w,c
  5784  00104A  6ED9               	movwf	fsr2l,c
  5785  00104C  0E00               	movlw	high _coordinate_x
  5786  00104E  2051               	addwfc	(_i+1)^0,w,c
  5787  001050  6EDA               	movwf	fsr2h,c
  5788  001052  0E00               	movlw	0
  5789  001054  6EDF               	movwf	indf2,c
  5790                           
  5791                           ;Main.c: 239: coordinate_y[i] = 0;
  5792  001056  0ECB               	movlw	low _coordinate_y
  5793  001058  2450               	addwf	_i^0,w,c
  5794  00105A  6ED9               	movwf	fsr2l,c
  5795  00105C  0E00               	movlw	high _coordinate_y
  5796  00105E  2051               	addwfc	(_i+1)^0,w,c
  5797  001060  6EDA               	movwf	fsr2h,c
  5798  001062  0E00               	movlw	0
  5799  001064  6EDF               	movwf	indf2,c
  5800                           
  5801                           ;Main.c: 240: coordinate_z[i] = 0;
  5802  001066  0ECE               	movlw	low _coordinate_z
  5803  001068  2450               	addwf	_i^0,w,c
  5804  00106A  6ED9               	movwf	fsr2l,c
  5805  00106C  0E00               	movlw	high _coordinate_z
  5806  00106E  2051               	addwfc	(_i+1)^0,w,c
  5807  001070  6EDA               	movwf	fsr2h,c
  5808  001072  0E00               	movlw	0
  5809  001074  6EDF               	movwf	indf2,c
  5810  001076  4A50               	infsnz	_i^0,f,c
  5811  001078  2A51               	incf	(_i+1)^0,f,c
  5812  00107A  EF13  F008         	goto	i2l3525
  5813  00107E                     i2l3535:
  5814                           
  5815                           ;Main.c: 241: };Main.c: 242: count = 0;
  5816  00107E  0E00               	movlw	0
  5817  001080  6E57               	movwf	(_count+1)^0,c
  5818  001082  0E00               	movlw	0
  5819  001084  6E56               	movwf	_count^0,c
  5820                           
  5821                           ;Main.c: 243: count1 = 0;
  5822  001086  0E00               	movlw	0
  5823  001088  6E55               	movwf	(_count1+1)^0,c
  5824  00108A  0E00               	movlw	0
  5825  00108C  6E54               	movwf	_count1^0,c
  5826                           
  5827                           ;Main.c: 244: count2 = 0;
  5828  00108E  0E00               	movlw	0
  5829  001090  6E53               	movwf	(_count2+1)^0,c
  5830  001092  0E00               	movlw	0
  5831  001094  6E52               	movwf	_count2^0,c
  5832                           
  5833                           ;Main.c: 245: }
  5834  001096  EF8D  F008         	goto	i2l214
  5835  00109A                     i2l3537:
  5836                           
  5837                           ;Main.c: 246: else if(flag == 4){
  5838  00109A  0E04               	movlw	4
  5839  00109C  1859               	xorwf	_flag^0,w,c
  5840  00109E  A4D8               	btfss	status,2,c
  5841  0010A0  EF54  F008         	goto	i2u322_41
  5842  0010A4  EF56  F008         	goto	i2u322_40
  5843  0010A8                     i2u322_41:
  5844  0010A8  EF8D  F008         	goto	i2l214
  5845  0010AC                     i2u322_40:
  5846  0010AC                     
  5847                           ;Main.c: 247: coor++;
  5848  0010AC  4A44               	infsnz	_coor^0,f,c
  5849  0010AE  2A45               	incf	(_coor+1)^0,f,c
  5850  0010B0                     
  5851                           ;Main.c: 248: if(coor >= 1 && coor <= 9){
  5852  0010B0  BE45               	btfsc	(_coor+1)^0,7,c
  5853  0010B2  EF63  F008         	goto	i2u323_41
  5854  0010B6  5045               	movf	(_coor+1)^0,w,c
  5855  0010B8  E108               	bnz	i2u323_40
  5856  0010BA  0444               	decf	_coor^0,w,c
  5857  0010BC  A0D8               	btfss	status,0,c
  5858  0010BE  EF63  F008         	goto	i2u323_41
  5859  0010C2  EF65  F008         	goto	i2u323_40
  5860  0010C6                     i2u323_41:
  5861  0010C6  EF8D  F008         	goto	i2l214
  5862  0010CA                     i2u323_40:
  5863  0010CA  BE45               	btfsc	(_coor+1)^0,7,c
  5864  0010CC  EF73  F008         	goto	i2u324_40
  5865  0010D0  5045               	movf	(_coor+1)^0,w,c
  5866  0010D2  E107               	bnz	i2u324_41
  5867  0010D4  0E0A               	movlw	10
  5868  0010D6  5C44               	subwf	_coor^0,w,c
  5869  0010D8  B0D8               	btfsc	status,0,c
  5870  0010DA  EF71  F008         	goto	i2u324_41
  5871  0010DE  EF73  F008         	goto	i2u324_40
  5872  0010E2                     i2u324_41:
  5873  0010E2  EF8D  F008         	goto	i2l214
  5874  0010E6                     i2u324_40:
  5875  0010E6                     
  5876                           ;Main.c: 249: count++;
  5877  0010E6  4A56               	infsnz	_count^0,f,c
  5878  0010E8  2A57               	incf	(_count+1)^0,f,c
  5879  0010EA                     
  5880                           ;Main.c: 250: coordinate[coor-1] = d;
  5881  0010EA  0E3A               	movlw	low (_coordinate+65535)
  5882  0010EC  2444               	addwf	_coor^0,w,c
  5883  0010EE  6ED9               	movwf	fsr2l,c
  5884  0010F0  0E00               	movlw	high (_coordinate+65535)
  5885  0010F2  2045               	addwfc	(_coor+1)^0,w,c
  5886  0010F4  6EDA               	movwf	fsr2h,c
  5887  0010F6  C058  FFDF         	movff	_d,indf2
  5888  0010FA                     
  5889                           ;Main.c: 253: if(coor == 9){
  5890  0010FA  0E09               	movlw	9
  5891  0010FC  1844               	xorwf	_coor^0,w,c
  5892  0010FE  1045               	iorwf	(_coor+1)^0,w,c
  5893  001100  A4D8               	btfss	status,2,c
  5894  001102  EF85  F008         	goto	i2u325_41
  5895  001106  EF87  F008         	goto	i2u325_40
  5896  00110A                     i2u325_41:
  5897  00110A  EF3A  F007         	goto	i2l183
  5898  00110E                     i2u325_40:
  5899  00110E                     
  5900                           ;Main.c: 269: coor = 0;
  5901  00110E  0E00               	movlw	0
  5902  001110  6E45               	movwf	(_coor+1)^0,c
  5903  001112  0E00               	movlw	0
  5904  001114  6E44               	movwf	_coor^0,c
  5905  001116                     
  5906                           ;Main.c: 270: impresion_datos();
  5907  001116  ECA2  F00F         	call	_impresion_datos	;wreg free
  5908  00111A                     i2l214:
  5909  00111A  0012               	return		;funcret
  5910  00111C                     __end_of_algoritm:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _mover_servo *****************
  5914 ;; Defined at:
  5915 ;;		line 499 in file "Main.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  servo           2   42[COMRAM] int 
  5918 ;;  angulo          2   44[COMRAM] int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      void 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         4       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5932 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5933 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5934 ;;Total ram usage:        6 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    3
  5937 ;; This function calls:
  5938 ;;		_map
  5939 ;;		i2_sprintf
  5940 ;;		i2_start
  5941 ;;		i2_writeI2C
  5942 ;; This function is called by:
  5943 ;;		_algoritm
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text27
  5948  0021AE                     __ptext27:
  5949                           	callstack 0
  5950  0021AE                     _mover_servo:
  5951                           	callstack 20
  5952  0021AE                     
  5953                           ;Main.c: 500: pos = map (angulo, 0 , 180 , 110, 510);
  5954  0021AE  C02D  F00F         	movff	mover_servo@angulo,map@x
  5955  0021B2  C02E  F010         	movff	mover_servo@angulo+1,map@x+1
  5956  0021B6  0E00               	movlw	0
  5957  0021B8  6E12               	movwf	(map@In_Min+1)^0,c
  5958  0021BA  0E00               	movlw	0
  5959  0021BC  6E11               	movwf	map@In_Min^0,c
  5960  0021BE  0E00               	movlw	0
  5961  0021C0  6E14               	movwf	(map@In_Max+1)^0,c
  5962  0021C2  0EB4               	movlw	180
  5963  0021C4  6E13               	movwf	map@In_Max^0,c
  5964  0021C6  0E00               	movlw	0
  5965  0021C8  6E16               	movwf	(map@Out_Min+1)^0,c
  5966  0021CA  0E6E               	movlw	110
  5967  0021CC  6E15               	movwf	map@Out_Min^0,c
  5968  0021CE  0E01               	movlw	1
  5969  0021D0  6E18               	movwf	(map@Out_Max+1)^0,c
  5970  0021D2  0EFE               	movlw	254
  5971  0021D4  6E17               	movwf	map@Out_Max^0,c
  5972  0021D6  EC43  F014         	call	_map	;wreg free
  5973  0021DA  C00F  F04E         	movff	?_map,_pos
  5974  0021DE  C010  F04F         	movff	?_map+1,_pos+1
  5975  0021E2                     
  5976                           ;Main.c: 501: data2[2] = pos;
  5977  0021E2  C04E  F0C6         	movff	_pos,_data2+2
  5978  0021E6                     
  5979                           ;Main.c: 502: data2[3] = pos >> 8;
  5980  0021E6  504F               	movf	(_pos+1)^0,w,c
  5981  0021E8  0100               	movlb	0	; () banked
  5982  0021EA  6FC7               	movwf	(_data2+3)& (0+255),b
  5983  0021EC                     
  5984                           ; BSR set to: 0
  5985                           ;Main.c: 503: writeI2C(0x80, 0x06 + (4 * servo), data2, 4);
  5986  0021EC  502B               	movf	mover_servo@servo^0,w,c
  5987  0021EE  0D04               	mullw	4
  5988  0021F0  50F3               	movf	243,w,c
  5989  0021F2  0F06               	addlw	6
  5990  0021F4  6E03               	movwf	i2writeI2C@Register^0,c
  5991  0021F6  0EC4               	movlw	low _data2
  5992  0021F8  6E04               	movwf	i2writeI2C@Data^0,c
  5993  0021FA  0E00               	movlw	high _data2
  5994  0021FC  6E05               	movwf	(i2writeI2C@Data+1)^0,c
  5995  0021FE  0E00               	movlw	0
  5996  002200  6E07               	movwf	(i2writeI2C@bytes+1)^0,c
  5997  002202  0E04               	movlw	4
  5998  002204  6E06               	movwf	i2writeI2C@bytes^0,c
  5999  002206  0E80               	movlw	128
  6000  002208  ECDA  F012         	call	i2_writeI2C
  6001  00220C                     
  6002                           ;Main.c: 504: sprintf(text," Servo: %d \n",servo);
  6003  00220C  0E9C               	movlw	low _text
  6004  00220E  6E0D               	movwf	i2sprintf@sp^0,c
  6005  002210  0E00               	movlw	high _text
  6006  002212  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  6007  002214  0E6E               	movlw	low STR_9
  6008  002216  6E0F               	movwf	i2sprintf@f^0,c
  6009  002218  0E08               	movlw	high STR_9
  6010  00221A  6E10               	movwf	(i2sprintf@f+1)^0,c
  6011  00221C  C02B  F011         	movff	mover_servo@servo,?i2_sprintf+4
  6012  002220  C02C  F012         	movff	mover_servo@servo+1,?i2_sprintf+5
  6013  002224  ECA1  F00C         	call	i2_sprintf	;wreg free
  6014  002228                     
  6015                           ;Main.c: 505: start();
  6016  002228  ECCD  F013         	call	i2_start	;wreg free
  6017  00222C                     
  6018                           ;Main.c: 506: sprintf(text," Angulo: %d \n",angulo);
  6019  00222C  0E9C               	movlw	low _text
  6020  00222E  6E0D               	movwf	i2sprintf@sp^0,c
  6021  002230  0E00               	movlw	high _text
  6022  002232  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  6023  002234  0E60               	movlw	low STR_10
  6024  002236  6E0F               	movwf	i2sprintf@f^0,c
  6025  002238  0E08               	movlw	high STR_10
  6026  00223A  6E10               	movwf	(i2sprintf@f+1)^0,c
  6027  00223C  C02D  F011         	movff	mover_servo@angulo,?i2_sprintf+4
  6028  002240  C02E  F012         	movff	mover_servo@angulo+1,?i2_sprintf+5
  6029  002244  ECA1  F00C         	call	i2_sprintf	;wreg free
  6030  002248                     
  6031                           ;Main.c: 507: start();
  6032  002248  ECCD  F013         	call	i2_start	;wreg free
  6033  00224C                     
  6034                           ;Main.c: 508: _delay((unsigned long)((1000)*(8000000/4000.0)));
  6035  00224C  0E0B               	movlw	11
  6036  00224E  6E30               	movwf	(??_mover_servo+1)^0,c
  6037  002250  0E26               	movlw	38
  6038  002252  6E2F               	movwf	??_mover_servo^0,c
  6039  002254  0E5E               	movlw	94
  6040  002256                     i2u341_47:
  6041  002256  2EE8               	decfsz	wreg,f,c
  6042  002258  D7FE               	bra	i2u341_47
  6043  00225A  2E2F               	decfsz	??_mover_servo^0,f,c
  6044  00225C  D7FC               	bra	i2u341_47
  6045  00225E  2E30               	decfsz	(??_mover_servo+1)^0,f,c
  6046  002260  D7FA               	bra	i2u341_47
  6047  002262  0012               	return		;funcret
  6048  002264                     __end_of_mover_servo:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function i2_writeI2C *****************
  6052 ;; Defined at:
  6053 ;;		line 391 in file "Main.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  Address         1    wreg     unsigned char 
  6056 ;;  Register        1    2[COMRAM] unsigned char 
  6057 ;;  Data            2    3[COMRAM] PTR unsigned char 
  6058 ;;		 -> data2(4), d1(1), setPWMFreq@newmode(1), data1(1), 
  6059 ;;		 -> setPWMFreq@prescale(1), RAM(2047), 
  6060 ;;  bytes           2    5[COMRAM] int 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  Address         1    9[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6072 ;;      Params:         5       0       0       0       0       0       0       0       0
  6073 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6074 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6075 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6076 ;;Total ram usage:        8 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    2
  6079 ;; This function calls:
  6080 ;;		i2_sendI2C
  6081 ;;		i2_startI2C
  6082 ;;		i2_stopI2C
  6083 ;; This function is called by:
  6084 ;;		_mover_servo
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text28
  6089  0025B4                     __ptext28:
  6090                           	callstack 0
  6091  0025B4                     i2_writeI2C:
  6092                           	callstack 20
  6093                           
  6094                           ;incstack = 0
  6095                           ;i2writeI2C@Address stored from wreg
  6096  0025B4  6E0A               	movwf	i2writeI2C@Address^0,c
  6097  0025B6                     
  6098                           ;Main.c: 392: startI2C();
  6099  0025B6  EC7F  F015         	call	i2_startI2C	;wreg free
  6100                           
  6101                           ;Main.c: 393: sendI2C(Address);
  6102  0025BA  500A               	movf	i2writeI2C@Address^0,w,c
  6103  0025BC  EC69  F015         	call	i2_sendI2C
  6104                           
  6105                           ;Main.c: 394: sendI2C(Register);
  6106  0025C0  5003               	movf	i2writeI2C@Register^0,w,c
  6107  0025C2  EC69  F015         	call	i2_sendI2C
  6108  0025C6                     
  6109                           ;Main.c: 395: for(i=0;i<bytes;i++){
  6110  0025C6  0E00               	movlw	0
  6111  0025C8  6E51               	movwf	(_i+1)^0,c
  6112  0025CA  0E00               	movlw	0
  6113  0025CC  6E50               	movwf	_i^0,c
  6114  0025CE  EFF4  F012         	goto	i2l3137
  6115  0025D2                     i2l3131:
  6116                           
  6117                           ;Main.c: 396: sendI2C(*Data);
  6118  0025D2  C004  FFD9         	movff	i2writeI2C@Data,fsr2l
  6119  0025D6  C005  FFDA         	movff	i2writeI2C@Data+1,fsr2h
  6120  0025DA  50DF               	movf	indf2,w,c
  6121  0025DC  EC69  F015         	call	i2_sendI2C
  6122  0025E0                     
  6123                           ;Main.c: 397: Data++;
  6124  0025E0  4A04               	infsnz	i2writeI2C@Data^0,f,c
  6125  0025E2  2A05               	incf	(i2writeI2C@Data+1)^0,f,c
  6126  0025E4  4A50               	infsnz	_i^0,f,c
  6127  0025E6  2A51               	incf	(_i+1)^0,f,c
  6128  0025E8                     i2l3137:
  6129  0025E8  5006               	movf	i2writeI2C@bytes^0,w,c
  6130  0025EA  5C50               	subwf	_i^0,w,c
  6131  0025EC  5051               	movf	(_i+1)^0,w,c
  6132  0025EE  0A80               	xorlw	128
  6133  0025F0  6E08               	movwf	??i2_writeI2C^0,c
  6134  0025F2  5007               	movf	(i2writeI2C@bytes+1)^0,w,c
  6135  0025F4  0A80               	xorlw	128
  6136  0025F6  5808               	subwfb	??i2_writeI2C^0,w,c
  6137  0025F8  A0D8               	btfss	status,0,c
  6138  0025FA  EF01  F013         	goto	i2u278_41
  6139  0025FE  EF03  F013         	goto	i2u278_40
  6140  002602                     i2u278_41:
  6141  002602  EFE9  F012         	goto	i2l3131
  6142  002606                     i2u278_40:
  6143  002606                     
  6144                           ;Main.c: 398: };Main.c: 399: stopI2C();
  6145  002606  EC7B  F015         	call	i2_stopI2C	;wreg free
  6146  00260A                     
  6147                           ;Main.c: 400: _delay((unsigned long)((100)*(8000000/4000.0)));
  6148  00260A  0E02               	movlw	2
  6149  00260C  6E09               	movwf	(??i2_writeI2C+1)^0,c
  6150  00260E  0E04               	movlw	4
  6151  002610  6E08               	movwf	??i2_writeI2C^0,c
  6152  002612  0EBA               	movlw	186
  6153  002614                     i2u342_47:
  6154  002614  2EE8               	decfsz	wreg,f,c
  6155  002616  D7FE               	bra	i2u342_47
  6156  002618  2E08               	decfsz	??i2_writeI2C^0,f,c
  6157  00261A  D7FC               	bra	i2u342_47
  6158  00261C  2E09               	decfsz	(??i2_writeI2C+1)^0,f,c
  6159  00261E  D7FA               	bra	i2u342_47
  6160  002620  D000               	nop2	
  6161  002622  0012               	return		;funcret
  6162  002624                     __end_ofi2_writeI2C:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function i2_stopI2C *****************
  6166 ;; Defined at:
  6167 ;;		line 417 in file "Main.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    1
  6188 ;; This function calls:
  6189 ;;		i2_readyI2C
  6190 ;; This function is called by:
  6191 ;;		i2_writeI2C
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text29
  6196  002AF6                     __ptext29:
  6197                           	callstack 0
  6198  002AF6                     i2_stopI2C:
  6199                           	callstack 20
  6200  002AF6                     
  6201                           ;Main.c: 419: readyI2C();
  6202  002AF6  EC04  F015         	call	i2_readyI2C	;wreg free
  6203  002AFA                     
  6204                           ;Main.c: 420: PEN = 1;
  6205  002AFA  84C5               	bsf	4037,2,c	;volatile
  6206  002AFC  0012               	return		;funcret
  6207  002AFE                     __end_ofi2_stopI2C:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function i2_startI2C *****************
  6211 ;; Defined at:
  6212 ;;		line 403 in file "Main.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    1
  6233 ;; This function calls:
  6234 ;;		i2_readyI2C
  6235 ;; This function is called by:
  6236 ;;		i2_writeI2C
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text30
  6241  002AFE                     __ptext30:
  6242                           	callstack 0
  6243  002AFE                     i2_startI2C:
  6244                           	callstack 20
  6245  002AFE                     
  6246                           ;Main.c: 404: readyI2C();
  6247  002AFE  EC04  F015         	call	i2_readyI2C	;wreg free
  6248  002B02                     
  6249                           ;Main.c: 405: SEN = 1;
  6250  002B02  80C5               	bsf	4037,0,c	;volatile
  6251  002B04  0012               	return		;funcret
  6252  002B06                     __end_ofi2_startI2C:
  6253                           	callstack 0
  6254                           
  6255 ;; *************** function i2_sendI2C *****************
  6256 ;; Defined at:
  6257 ;;		line 412 in file "Main.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  data            1    wreg     unsigned char 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  data            1    1[COMRAM] unsigned char 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6271 ;;      Params:         0       0       0       0       0       0       0       0       0
  6272 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6274 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6275 ;;Total ram usage:        1 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    1
  6278 ;; This function calls:
  6279 ;;		i2_readyI2C
  6280 ;; This function is called by:
  6281 ;;		i2_writeI2C
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text31
  6286  002AD2                     __ptext31:
  6287                           	callstack 0
  6288  002AD2                     i2_sendI2C:
  6289                           	callstack 20
  6290                           
  6291                           ;incstack = 0
  6292                           ;i2sendI2C@data stored from wreg
  6293  002AD2  6E02               	movwf	i2sendI2C@data^0,c
  6294  002AD4                     
  6295                           ;Main.c: 413: readyI2C();
  6296  002AD4  EC04  F015         	call	i2_readyI2C	;wreg free
  6297  002AD8                     
  6298                           ;Main.c: 414: SSPBUF = data;
  6299  002AD8  C002  FFC9         	movff	i2sendI2C@data,4041	;volatile
  6300  002ADC  0012               	return		;funcret
  6301  002ADE                     __end_ofi2_sendI2C:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function i2_readyI2C *****************
  6305 ;; Defined at:
  6306 ;;		line 408 in file "Main.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6322 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6323 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6324 ;;Total ram usage:        1 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		i2_startI2C
  6330 ;;		i2_sendI2C
  6331 ;;		i2_stopI2C
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text32
  6336  002A08                     __ptext32:
  6337                           	callstack 0
  6338  002A08                     i2_readyI2C:
  6339                           	callstack 20
  6340  002A08                     i2l2367:
  6341  002A08  CFC5 F001          	movff	4037,??i2_readyI2C	;volatile
  6342  002A0C  0E1F               	movlw	31
  6343  002A0E  1601               	andwf	??i2_readyI2C^0,f,c
  6344  002A10  A4D8               	btfss	status,2,c
  6345  002A12  EF0D  F015         	goto	i2u167_41
  6346  002A16  EF0F  F015         	goto	i2u167_40
  6347  002A1A                     i2u167_41:
  6348  002A1A  EF04  F015         	goto	i2l2367
  6349  002A1E                     i2u167_40:
  6350  002A1E  B4C7               	btfsc	199,2,c	;volatile
  6351  002A20  EF14  F015         	goto	i2u168_41
  6352  002A24  EF16  F015         	goto	i2u168_40
  6353  002A28                     i2u168_41:
  6354  002A28  EF04  F015         	goto	i2l2367
  6355  002A2C                     i2u168_40:
  6356  002A2C  0012               	return		;funcret
  6357  002A2E                     __end_ofi2_readyI2C:
  6358                           	callstack 0
  6359                           
  6360 ;; *************** function _map *****************
  6361 ;; Defined at:
  6362 ;;		line 495 in file "Main.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  x               2   14[COMRAM] int 
  6365 ;;  In_Min          2   16[COMRAM] int 
  6366 ;;  In_Max          2   18[COMRAM] int 
  6367 ;;  Out_Min         2   20[COMRAM] int 
  6368 ;;  Out_Max         2   22[COMRAM] int 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2   14[COMRAM] int 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6380 ;;      Params:        10       0       0       0       0       0       0       0       0
  6381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6383 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6384 ;;Total ram usage:       10 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    1
  6387 ;; This function calls:
  6388 ;;		___awdiv
  6389 ;;		___wmul
  6390 ;; This function is called by:
  6391 ;;		_mover_servo
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text33
  6396  002886                     __ptext33:
  6397                           	callstack 0
  6398  002886                     _map:
  6399                           	callstack 21
  6400  002886                     
  6401                           ;Main.c: 496: return ((x - In_Min) * ((Out_Max - Out_Min) / (In_Max - In_Min))) + Out_Mi
      +                          n;
  6402  002886  5011               	movf	map@In_Min^0,w,c
  6403  002888  5C0F               	subwf	map@x^0,w,c
  6404  00288A  6E09               	movwf	___wmul@multiplier^0,c
  6405  00288C  5012               	movf	(map@In_Min+1)^0,w,c
  6406  00288E  5810               	subwfb	(map@x+1)^0,w,c
  6407  002890  6E0A               	movwf	(___wmul@multiplier+1)^0,c
  6408  002892  5011               	movf	map@In_Min^0,w,c
  6409  002894  5C13               	subwf	map@In_Max^0,w,c
  6410  002896  6E03               	movwf	___awdiv@divisor^0,c
  6411  002898  5012               	movf	(map@In_Min+1)^0,w,c
  6412  00289A  5814               	subwfb	(map@In_Max+1)^0,w,c
  6413  00289C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6414  00289E  5015               	movf	map@Out_Min^0,w,c
  6415  0028A0  5C17               	subwf	map@Out_Max^0,w,c
  6416  0028A2  6E01               	movwf	___awdiv@dividend^0,c
  6417  0028A4  5016               	movf	(map@Out_Min+1)^0,w,c
  6418  0028A6  5818               	subwfb	(map@Out_Max+1)^0,w,c
  6419  0028A8  6E02               	movwf	(___awdiv@dividend+1)^0,c
  6420  0028AA  EC75  F010         	call	___awdiv	;wreg free
  6421  0028AE  C001  F00B         	movff	?___awdiv,___wmul@multiplicand
  6422  0028B2  C002  F00C         	movff	?___awdiv+1,___wmul@multiplicand+1
  6423  0028B6  EC17  F015         	call	___wmul	;wreg free
  6424  0028BA  5015               	movf	map@Out_Min^0,w,c
  6425  0028BC  2409               	addwf	?___wmul^0,w,c
  6426  0028BE  6E0F               	movwf	?_map^0,c
  6427  0028C0  5016               	movf	(map@Out_Min+1)^0,w,c
  6428  0028C2  200A               	addwfc	(?___wmul+1)^0,w,c
  6429  0028C4  6E10               	movwf	(?_map+1)^0,c
  6430  0028C6  0012               	return		;funcret
  6431  0028C8                     __end_of_map:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function ___awdiv *****************
  6435 ;; Defined at:
  6436 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  dividend        2    0[COMRAM] int 
  6439 ;;  divisor         2    2[COMRAM] int 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  quotient        2    6[COMRAM] int 
  6442 ;;  sign            1    5[COMRAM] unsigned char 
  6443 ;;  counter         1    4[COMRAM] unsigned char 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    0[COMRAM] int 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6453 ;;      Params:         4       0       0       0       0       0       0       0       0
  6454 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6456 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6457 ;;Total ram usage:        8 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_map
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text34
  6467  0020EA                     __ptext34:
  6468                           	callstack 0
  6469  0020EA                     ___awdiv:
  6470                           	callstack 21
  6471  0020EA  0E00               	movlw	0
  6472  0020EC  6E06               	movwf	___awdiv@sign^0,c
  6473  0020EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6474  0020F0  EF7E  F010         	goto	i2u210_40
  6475  0020F4  EF7C  F010         	goto	i2u210_41
  6476  0020F8                     i2u210_41:
  6477  0020F8  EF84  F010         	goto	i2l2667
  6478  0020FC                     i2u210_40:
  6479  0020FC  6C03               	negf	___awdiv@divisor^0,c
  6480  0020FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6481  002100  B0D8               	btfsc	status,0,c
  6482  002102  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6483  002104  0E01               	movlw	1
  6484  002106  6E06               	movwf	___awdiv@sign^0,c
  6485  002108                     i2l2667:
  6486  002108  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6487  00210A  EF8B  F010         	goto	i2u211_40
  6488  00210E  EF89  F010         	goto	i2u211_41
  6489  002112                     i2u211_41:
  6490  002112  EF91  F010         	goto	i2l2673
  6491  002116                     i2u211_40:
  6492  002116  6C01               	negf	___awdiv@dividend^0,c
  6493  002118  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6494  00211A  B0D8               	btfsc	status,0,c
  6495  00211C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6496  00211E  0E01               	movlw	1
  6497  002120  1A06               	xorwf	___awdiv@sign^0,f,c
  6498  002122                     i2l2673:
  6499  002122  0E00               	movlw	0
  6500  002124  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6501  002126  0E00               	movlw	0
  6502  002128  6E07               	movwf	___awdiv@quotient^0,c
  6503  00212A  5003               	movf	___awdiv@divisor^0,w,c
  6504  00212C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6505  00212E  B4D8               	btfsc	status,2,c
  6506  002130  EF9C  F010         	goto	i2u212_41
  6507  002134  EF9E  F010         	goto	i2u212_40
  6508  002138                     i2u212_41:
  6509  002138  EFC6  F010         	goto	i2l2695
  6510  00213C                     i2u212_40:
  6511  00213C  0E01               	movlw	1
  6512  00213E  6E05               	movwf	___awdiv@counter^0,c
  6513  002140  EFA6  F010         	goto	i2l2681
  6514  002144                     i2l2679:
  6515  002144  90D8               	bcf	status,0,c
  6516  002146  3603               	rlcf	___awdiv@divisor^0,f,c
  6517  002148  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6518  00214A  2A05               	incf	___awdiv@counter^0,f,c
  6519  00214C                     i2l2681:
  6520  00214C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6521  00214E  EFAB  F010         	goto	i2u213_41
  6522  002152  EFAD  F010         	goto	i2u213_40
  6523  002156                     i2u213_41:
  6524  002156  EFA2  F010         	goto	i2l2679
  6525  00215A                     i2u213_40:
  6526  00215A                     i2l2683:
  6527  00215A  90D8               	bcf	status,0,c
  6528  00215C  3607               	rlcf	___awdiv@quotient^0,f,c
  6529  00215E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6530  002160  5003               	movf	___awdiv@divisor^0,w,c
  6531  002162  5C01               	subwf	___awdiv@dividend^0,w,c
  6532  002164  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6533  002166  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6534  002168  A0D8               	btfss	status,0,c
  6535  00216A  EFB9  F010         	goto	i2u214_41
  6536  00216E  EFBB  F010         	goto	i2u214_40
  6537  002172                     i2u214_41:
  6538  002172  EFC0  F010         	goto	i2l2691
  6539  002176                     i2u214_40:
  6540  002176  5003               	movf	___awdiv@divisor^0,w,c
  6541  002178  5E01               	subwf	___awdiv@dividend^0,f,c
  6542  00217A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6543  00217C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6544  00217E  8007               	bsf	___awdiv@quotient^0,0,c
  6545  002180                     i2l2691:
  6546  002180  90D8               	bcf	status,0,c
  6547  002182  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6548  002184  3203               	rrcf	___awdiv@divisor^0,f,c
  6549  002186  2E05               	decfsz	___awdiv@counter^0,f,c
  6550  002188  EFAD  F010         	goto	i2l2683
  6551  00218C                     i2l2695:
  6552  00218C  5006               	movf	___awdiv@sign^0,w,c
  6553  00218E  B4D8               	btfsc	status,2,c
  6554  002190  EFCC  F010         	goto	i2u215_41
  6555  002194  EFCE  F010         	goto	i2u215_40
  6556  002198                     i2u215_41:
  6557  002198  EFD2  F010         	goto	i2l2699
  6558  00219C                     i2u215_40:
  6559  00219C  6C07               	negf	___awdiv@quotient^0,c
  6560  00219E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6561  0021A0  B0D8               	btfsc	status,0,c
  6562  0021A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6563  0021A4                     i2l2699:
  6564  0021A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6565  0021A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6566  0021AC  0012               	return		;funcret
  6567  0021AE                     __end_of___awdiv:
  6568                           	callstack 0
  6569                           
  6570 ;; *************** function _impresion_datos *****************
  6571 ;; Defined at:
  6572 ;;		line 352 in file "Main.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;		None
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6589 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6590 ;;Total ram usage:        0 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    3
  6593 ;; This function calls:
  6594 ;;		_atoi
  6595 ;;		i2_PrintDataLCD
  6596 ;;		i2_sprintf
  6597 ;;		i2_start
  6598 ;; This function is called by:
  6599 ;;		_algoritm
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text35
  6604  001F44                     __ptext35:
  6605                           	callstack 0
  6606  001F44                     _impresion_datos:
  6607                           	callstack 20
  6608  001F44                     
  6609                           ;Main.c: 353: Coordinate_x = atoi(coordinate_x);
  6610  001F44  0EC8               	movlw	low _coordinate_x
  6611  001F46  6E0F               	movwf	atoi@s^0,c
  6612  001F48  0E00               	movlw	high _coordinate_x
  6613  001F4A  6E10               	movwf	(atoi@s+1)^0,c
  6614  001F4C  EC0F  F00E         	call	_atoi	;wreg free
  6615  001F50  C00F  F070         	movff	?_atoi,_Coordinate_x
  6616  001F54  C010  F071         	movff	?_atoi+1,_Coordinate_x+1
  6617                           
  6618                           ;Main.c: 354: Coordinate_y = atoi(coordinate_y);
  6619  001F58  0ECB               	movlw	low _coordinate_y
  6620  001F5A  6E0F               	movwf	atoi@s^0,c
  6621  001F5C  0E00               	movlw	high _coordinate_y
  6622  001F5E  6E10               	movwf	(atoi@s+1)^0,c
  6623  001F60  EC0F  F00E         	call	_atoi	;wreg free
  6624  001F64  C00F  F072         	movff	?_atoi,_Coordinate_y
  6625  001F68  C010  F073         	movff	?_atoi+1,_Coordinate_y+1
  6626                           
  6627                           ;Main.c: 355: Coordinate_z = atoi(coordinate_z);
  6628  001F6C  0ECE               	movlw	low _coordinate_z
  6629  001F6E  6E0F               	movwf	atoi@s^0,c
  6630  001F70  0E00               	movlw	high _coordinate_z
  6631  001F72  6E10               	movwf	(atoi@s+1)^0,c
  6632  001F74  EC0F  F00E         	call	_atoi	;wreg free
  6633  001F78  C00F  F06E         	movff	?_atoi,_Coordinate_z
  6634  001F7C  C010  F06F         	movff	?_atoi+1,_Coordinate_z+1
  6635  001F80                     
  6636                           ;Main.c: 356: sprintf(text,"X%c%c%c Y%c%c%c Z%c%c%c",coordinate[0],coordinate[1],coordin
      +                          ate[2],coordinate[3],coordinate[4],coordinate[5],coordinate[6],coordinate[7],coordinate[
      +                          8]);
  6637  001F80  0E9C               	movlw	low _text
  6638  001F82  6E0D               	movwf	i2sprintf@sp^0,c
  6639  001F84  0E00               	movlw	high _text
  6640  001F86  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  6641  001F88  0E29               	movlw	low STR_5
  6642  001F8A  6E0F               	movwf	i2sprintf@f^0,c
  6643  001F8C  0E08               	movlw	high STR_5
  6644  001F8E  6E10               	movwf	(i2sprintf@f+1)^0,c
  6645  001F90  C03B  F011         	movff	_coordinate,?i2_sprintf+4
  6646  001F94  6A12               	clrf	(?i2_sprintf+5)^0,c
  6647  001F96  C03C  F013         	movff	_coordinate+1,?i2_sprintf+6
  6648  001F9A  6A14               	clrf	(?i2_sprintf+7)^0,c
  6649  001F9C  C03D  F015         	movff	_coordinate+2,?i2_sprintf+8
  6650  001FA0  6A16               	clrf	(?i2_sprintf+9)^0,c
  6651  001FA2  C03E  F017         	movff	_coordinate+3,?i2_sprintf+10
  6652  001FA6  6A18               	clrf	(?i2_sprintf+11)^0,c
  6653  001FA8  C03F  F019         	movff	_coordinate+4,?i2_sprintf+12
  6654  001FAC  6A1A               	clrf	(?i2_sprintf+13)^0,c
  6655  001FAE  C040  F01B         	movff	_coordinate+5,?i2_sprintf+14
  6656  001FB2  6A1C               	clrf	(?i2_sprintf+15)^0,c
  6657  001FB4  C041  F01D         	movff	_coordinate+6,?i2_sprintf+16
  6658  001FB8  6A1E               	clrf	(?i2_sprintf+17)^0,c
  6659  001FBA  C042  F01F         	movff	_coordinate+7,?i2_sprintf+18
  6660  001FBE  6A20               	clrf	(?i2_sprintf+19)^0,c
  6661  001FC0  C043  F021         	movff	_coordinate+8,?i2_sprintf+20
  6662  001FC4  6A22               	clrf	(?i2_sprintf+21)^0,c
  6663  001FC6  ECA1  F00C         	call	i2_sprintf	;wreg free
  6664  001FCA                     
  6665                           ;Main.c: 357: start();
  6666  001FCA  ECCD  F013         	call	i2_start	;wreg free
  6667  001FCE                     
  6668                           ;Main.c: 358: sprintf(texto_LCD,"X%c%c%c Y%c%c%c Z%c%c%c",coordinate[0],coordinate[1],co
      +                          ordinate[2],coordinate[3],coordinate[4],coordinate[5],coordinate[6],coordinate[7],coordi
      +                          nate[8]);
  6669  001FCE  0E74               	movlw	low _texto_LCD
  6670  001FD0  6E0D               	movwf	i2sprintf@sp^0,c
  6671  001FD2  0E00               	movlw	high _texto_LCD
  6672  001FD4  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  6673  001FD6  0E29               	movlw	low STR_5
  6674  001FD8  6E0F               	movwf	i2sprintf@f^0,c
  6675  001FDA  0E08               	movlw	high STR_5
  6676  001FDC  6E10               	movwf	(i2sprintf@f+1)^0,c
  6677  001FDE  C03B  F011         	movff	_coordinate,?i2_sprintf+4
  6678  001FE2  6A12               	clrf	(?i2_sprintf+5)^0,c
  6679  001FE4  C03C  F013         	movff	_coordinate+1,?i2_sprintf+6
  6680  001FE8  6A14               	clrf	(?i2_sprintf+7)^0,c
  6681  001FEA  C03D  F015         	movff	_coordinate+2,?i2_sprintf+8
  6682  001FEE  6A16               	clrf	(?i2_sprintf+9)^0,c
  6683  001FF0  C03E  F017         	movff	_coordinate+3,?i2_sprintf+10
  6684  001FF4  6A18               	clrf	(?i2_sprintf+11)^0,c
  6685  001FF6  C03F  F019         	movff	_coordinate+4,?i2_sprintf+12
  6686  001FFA  6A1A               	clrf	(?i2_sprintf+13)^0,c
  6687  001FFC  C040  F01B         	movff	_coordinate+5,?i2_sprintf+14
  6688  002000  6A1C               	clrf	(?i2_sprintf+15)^0,c
  6689  002002  C041  F01D         	movff	_coordinate+6,?i2_sprintf+16
  6690  002006  6A1E               	clrf	(?i2_sprintf+17)^0,c
  6691  002008  C042  F01F         	movff	_coordinate+7,?i2_sprintf+18
  6692  00200C  6A20               	clrf	(?i2_sprintf+19)^0,c
  6693  00200E  C043  F021         	movff	_coordinate+8,?i2_sprintf+20
  6694  002012  6A22               	clrf	(?i2_sprintf+21)^0,c
  6695  002014  ECA1  F00C         	call	i2_sprintf	;wreg free
  6696  002018                     
  6697                           ;Main.c: 359: PrintDataLCD();
  6698  002018  ECF6  F013         	call	i2_PrintDataLCD	;wreg free
  6699  00201C                     
  6700                           ;Main.c: 363: PrintDataLCD();
  6701  00201C  ECF6  F013         	call	i2_PrintDataLCD	;wreg free
  6702  002020                     
  6703                           ;Main.c: 364: start();
  6704  002020  ECCD  F013         	call	i2_start	;wreg free
  6705  002024  0012               	return		;funcret
  6706  002026                     __end_of_impresion_datos:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function i2_start *****************
  6710 ;; Defined at:
  6711 ;;		line 379 in file "Main.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    1
  6732 ;; This function calls:
  6733 ;;		i2_strlen
  6734 ;; This function is called by:
  6735 ;;		_algoritm
  6736 ;;		_impresion_datos
  6737 ;;		_receive
  6738 ;;		_mover_servo
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text36
  6743  00279A                     __ptext36:
  6744                           	callstack 0
  6745  00279A                     i2_start:
  6746                           	callstack 23
  6747  00279A                     
  6748                           ;Main.c: 380: for(i=0;i<=strlen(text);i++){
  6749  00279A  0E00               	movlw	0
  6750  00279C  6E51               	movwf	(_i+1)^0,c
  6751  00279E  0E00               	movlw	0
  6752  0027A0  6E50               	movwf	_i^0,c
  6753  0027A2  EFE4  F013         	goto	i2l3125
  6754  0027A6                     i2l228:
  6755  0027A6  A89E               	btfss	3998,4,c	;volatile
  6756  0027A8  EFD8  F013         	goto	i2u276_41
  6757  0027AC  EFDA  F013         	goto	i2u276_40
  6758  0027B0                     i2u276_41:
  6759  0027B0  EFD3  F013         	goto	i2l228
  6760  0027B4                     i2u276_40:
  6761  0027B4                     
  6762                           ;Main.c: 382: TXREG = text[i];
  6763  0027B4  0E9C               	movlw	low _text
  6764  0027B6  2450               	addwf	_i^0,w,c
  6765  0027B8  6ED9               	movwf	fsr2l,c
  6766  0027BA  0E00               	movlw	high _text
  6767  0027BC  2051               	addwfc	(_i+1)^0,w,c
  6768  0027BE  6EDA               	movwf	fsr2h,c
  6769  0027C0  50DF               	movf	indf2,w,c
  6770  0027C2  6EAD               	movwf	173,c	;volatile
  6771  0027C4  4A50               	infsnz	_i^0,f,c
  6772  0027C6  2A51               	incf	(_i+1)^0,f,c
  6773  0027C8                     i2l3125:
  6774  0027C8  0E9C               	movlw	low _text
  6775  0027CA  6E01               	movwf	i2strlen@s^0,c
  6776  0027CC  0E00               	movlw	high _text
  6777  0027CE  6E02               	movwf	(i2strlen@s+1)^0,c
  6778  0027D0  ECBC  F014         	call	i2_strlen	;wreg free
  6779  0027D4  5050               	movf	_i^0,w,c
  6780  0027D6  5C01               	subwf	?i2_strlen^0,w,c
  6781  0027D8  5051               	movf	(_i+1)^0,w,c
  6782  0027DA  5802               	subwfb	(?i2_strlen+1)^0,w,c
  6783  0027DC  B0D8               	btfsc	status,0,c
  6784  0027DE  EFF3  F013         	goto	i2u277_41
  6785  0027E2  EFF5  F013         	goto	i2u277_40
  6786  0027E6                     i2u277_41:
  6787  0027E6  EFD3  F013         	goto	i2l228
  6788  0027EA                     i2u277_40:
  6789  0027EA  0012               	return		;funcret
  6790  0027EC                     __end_ofi2_start:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function i2_sprintf *****************
  6794 ;; Defined at:
  6795 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  sp              2   12[COMRAM] PTR unsigned char 
  6798 ;;		 -> texto_LCD(40), text(40), 
  6799 ;;  f               2   14[COMRAM] PTR const unsigned char 
  6800 ;;		 -> STR_10(14), STR_9(13), STR_8(9), STR_7(30), 
  6801 ;;		 -> STR_6(24), STR_5(24), STR_4(17), STR_3(14), 
  6802 ;;		 -> STR_2(9), STR_1(9), 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  tmpval          4    0        struct .
  6805 ;;  cp              3    0        PTR const unsigned char 
  6806 ;;  val             2   39[COMRAM] unsigned int 
  6807 ;;  ap              2   37[COMRAM] PTR void [1]
  6808 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  6809 ;;  len             2    0        unsigned int 
  6810 ;;  c               1   41[COMRAM] unsigned char 
  6811 ;;  prec            1   36[COMRAM] char 
  6812 ;;  flag            1   35[COMRAM] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  2   12[COMRAM] int 
  6815 ;; Registers used:
  6816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6822 ;;      Params:        22       0       0       0       0       0       0       0       0
  6823 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6824 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6825 ;;      Totals:        30       0       0       0       0       0       0       0       0
  6826 ;;Total ram usage:       30 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    1
  6829 ;; This function calls:
  6830 ;;		i2___lwdiv
  6831 ;;		i2___lwmod
  6832 ;; This function is called by:
  6833 ;;		_algoritm
  6834 ;;		_impresion_datos
  6835 ;;		_receive
  6836 ;;		_mover_servo
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text37
  6841  001942                     __ptext37:
  6842                           	callstack 0
  6843  001942                     i2_sprintf:
  6844                           	callstack 23
  6845  001942                     
  6846                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  6847  001942  0E11               	movlw	low (?i2_sprintf+4)
  6848  001944  6E26               	movwf	i2sprintf@ap^0,c
  6849  001946  0E00               	movlw	high (?i2_sprintf+4)
  6850  001948  6E27               	movwf	(i2sprintf@ap+1)^0,c
  6851                           
  6852                           ;doprnt.c: 553: while((c = *f++)) {
  6853  00194A  EF6B  F00D         	goto	i2l3215
  6854  00194E                     i2l3155:
  6855                           
  6856                           ;doprnt.c: 555: if(c != '%')
  6857  00194E  0E25               	movlw	37
  6858  001950  182A               	xorwf	i2sprintf@c^0,w,c
  6859  001952  B4D8               	btfsc	status,2,c
  6860  001954  EFAE  F00C         	goto	i2u280_41
  6861  001958  EFB0  F00C         	goto	i2u280_40
  6862  00195C                     i2u280_41:
  6863  00195C  EFBA  F00C         	goto	i2l3161
  6864  001960                     i2u280_40:
  6865  001960                     i2l3157:
  6866                           
  6867                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  6868  001960  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  6869  001964  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  6870  001968  C02A  FFDF         	movff	i2sprintf@c,indf2
  6871  00196C  4A0D               	infsnz	i2sprintf@sp^0,f,c
  6872  00196E  2A0E               	incf	(i2sprintf@sp+1)^0,f,c
  6873                           
  6874                           ;doprnt.c: 559: continue;
  6875  001970  EF6B  F00D         	goto	i2l3215
  6876  001974                     i2l3161:
  6877                           
  6878                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  6879  001974  0E00               	movlw	0
  6880  001976  6E24               	movwf	i2sprintf@flag^0,c
  6881                           
  6882                           ;doprnt.c: 661: switch(c = *f++) {
  6883  001978  EFCA  F00C         	goto	i2l3173
  6884  00197C                     i2l3163:
  6885                           
  6886                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  6887  00197C  C026  FFD9         	movff	i2sprintf@ap,fsr2l
  6888  001980  C027  FFDA         	movff	i2sprintf@ap+1,fsr2h
  6889  001984  50DF               	movf	indf2,w,c
  6890  001986  6E2A               	movwf	i2sprintf@c^0,c
  6891  001988  0E02               	movlw	2
  6892  00198A  2626               	addwf	i2sprintf@ap^0,f,c
  6893  00198C  0E00               	movlw	0
  6894  00198E  2227               	addwfc	(i2sprintf@ap+1)^0,f,c
  6895  001990  EFB0  F00C         	goto	i2l3157
  6896  001994                     i2l3173:
  6897  001994  C00F  FFF6         	movff	i2sprintf@f,tblptrl
  6898  001998  C010  FFF7         	movff	i2sprintf@f+1,tblptrh
  6899  00199C  4A0F               	infsnz	i2sprintf@f^0,f,c
  6900  00199E  2A10               	incf	(i2sprintf@f+1)^0,f,c
  6901  0019A0                     	if	0	;tblptru may be non-zero
  6902  0019A0                     	endif
  6903  0019A0                     	if	0	;tblptru may be non-zero
  6904  0019A0                     	endif
  6905  0019A0  0008               	tblrd		*
  6906  0019A2  CFF5 F02A          	movff	tablat,i2sprintf@c
  6907  0019A6  502A               	movf	i2sprintf@c^0,w,c
  6908                           
  6909                           ; Switch size 1, requested type "simple"
  6910                           ; Number of cases is 4, Range of values is 0 to 105
  6911                           ; switch strategies available:
  6912                           ; Name         Instructions Cycles
  6913                           ; simple_byte           13     7 (average)
  6914                           ;	Chosen strategy is simple_byte
  6915  0019A8  0A00               	xorlw	0	; case 0
  6916  0019AA  B4D8               	btfsc	status,2,c
  6917  0019AC  EF7C  F00D         	goto	i2l3217
  6918  0019B0  0A63               	xorlw	99	; case 99
  6919  0019B2  B4D8               	btfsc	status,2,c
  6920  0019B4  EFBE  F00C         	goto	i2l3163
  6921  0019B8  0A07               	xorlw	7	; case 100
  6922  0019BA  B4D8               	btfsc	status,2,c
  6923  0019BC  EFE6  F00C         	goto	i2l3175
  6924  0019C0  0A0D               	xorlw	13	; case 105
  6925  0019C2  B4D8               	btfsc	status,2,c
  6926  0019C4  EFE6  F00C         	goto	i2l3175
  6927  0019C8  EFB0  F00C         	goto	i2l3157
  6928  0019CC                     i2l3175:
  6929                           
  6930                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  6931  0019CC  C026  FFD9         	movff	i2sprintf@ap,fsr2l
  6932  0019D0  C027  FFDA         	movff	i2sprintf@ap+1,fsr2h
  6933  0019D4  CFDE F028          	movff	postinc2,i2sprintf@val
  6934  0019D8  CFDD F029          	movff	postdec2,i2sprintf@val+1
  6935  0019DC  0E02               	movlw	2
  6936  0019DE  2626               	addwf	i2sprintf@ap^0,f,c
  6937  0019E0  0E00               	movlw	0
  6938  0019E2  2227               	addwfc	(i2sprintf@ap+1)^0,f,c
  6939  0019E4                     
  6940                           ;doprnt.c: 1287: if((int)val < 0) {
  6941  0019E4  BE29               	btfsc	(i2sprintf@val+1)^0,7,c
  6942  0019E6  EFF9  F00C         	goto	i2u281_40
  6943  0019EA  EFF7  F00C         	goto	i2u281_41
  6944  0019EE                     i2u281_41:
  6945  0019EE  EFFF  F00C         	goto	i2l3185
  6946  0019F2                     i2u281_40:
  6947  0019F2                     
  6948                           ;doprnt.c: 1288: flag |= 0x03;
  6949  0019F2  0E03               	movlw	3
  6950  0019F4  1224               	iorwf	i2sprintf@flag^0,f,c
  6951  0019F6                     
  6952                           ;doprnt.c: 1289: val = -val;
  6953  0019F6  6C28               	negf	i2sprintf@val^0,c
  6954  0019F8  1E29               	comf	(i2sprintf@val+1)^0,f,c
  6955  0019FA  B0D8               	btfsc	status,0,c
  6956  0019FC  2A29               	incf	(i2sprintf@val+1)^0,f,c
  6957  0019FE                     i2l3185:
  6958                           
  6959                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  6960  0019FE  0E01               	movlw	1
  6961  001A00  6E2A               	movwf	i2sprintf@c^0,c
  6962  001A02                     i2l3191:
  6963                           
  6964                           ;doprnt.c: 1332: if(val < dpowers[c])
  6965  001A02  502A               	movf	i2sprintf@c^0,w,c
  6966  001A04  0D02               	mullw	2
  6967  001A06  0E01               	movlw	low _dpowers
  6968  001A08  24F3               	addwf	243,w,c
  6969  001A0A  6EF6               	movwf	tblptrl,c
  6970  001A0C  0E08               	movlw	high _dpowers
  6971  001A0E  20F4               	addwfc	244,w,c
  6972  001A10  6EF7               	movwf	tblptrh,c
  6973  001A12                     	if	0	;There are less than 3 active tblptr bytes
  6974  001A12                     	endif
  6975  001A12  0009               	tblrd		*+
  6976  001A14  50F5               	movf	tablat,w,c
  6977  001A16  5C28               	subwf	i2sprintf@val^0,w,c
  6978  001A18  0009               	tblrd		*+
  6979  001A1A  50F5               	movf	tablat,w,c
  6980  001A1C  5829               	subwfb	(i2sprintf@val+1)^0,w,c
  6981  001A1E  B0D8               	btfsc	status,0,c
  6982  001A20  EF14  F00D         	goto	i2u282_41
  6983  001A24  EF16  F00D         	goto	i2u282_40
  6984  001A28                     i2u282_41:
  6985  001A28  EF18  F00D         	goto	i2l3195
  6986  001A2C                     i2u282_40:
  6987  001A2C  EF22  F00D         	goto	i2l3199
  6988  001A30                     i2l3195:
  6989  001A30  2A2A               	incf	i2sprintf@c^0,f,c
  6990  001A32  0E05               	movlw	5
  6991  001A34  182A               	xorwf	i2sprintf@c^0,w,c
  6992  001A36  A4D8               	btfss	status,2,c
  6993  001A38  EF20  F00D         	goto	i2u283_41
  6994  001A3C  EF22  F00D         	goto	i2u283_40
  6995  001A40                     i2u283_41:
  6996  001A40  EF01  F00D         	goto	i2l3191
  6997  001A44                     i2u283_40:
  6998  001A44                     i2l3199:
  6999                           
  7000                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  7001  001A44  C024  F023         	movff	i2sprintf@flag,??i2_sprintf
  7002  001A48  0E03               	movlw	3
  7003  001A4A  1623               	andwf	??i2_sprintf^0,f,c
  7004  001A4C  B4D8               	btfsc	status,2,c
  7005  001A4E  EF2B  F00D         	goto	i2u284_41
  7006  001A52  EF2D  F00D         	goto	i2u284_40
  7007  001A56                     i2u284_41:
  7008  001A56  EF35  F00D         	goto	i2l3205
  7009  001A5A                     i2u284_40:
  7010  001A5A                     
  7011                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  7012  001A5A  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7013  001A5E  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7014  001A62  0E2D               	movlw	45
  7015  001A64  6EDF               	movwf	indf2,c
  7016  001A66  4A0D               	infsnz	i2sprintf@sp^0,f,c
  7017  001A68  2A0E               	incf	(i2sprintf@sp+1)^0,f,c
  7018  001A6A                     i2l3205:
  7019                           
  7020                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  7021  001A6A  C02A  F025         	movff	i2sprintf@c,i2sprintf@prec
  7022                           
  7023                           ;doprnt.c: 1500: while(prec--) {
  7024  001A6E  EF62  F00D         	goto	i2l3213
  7025  001A72                     i2l3207:
  7026                           
  7027                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7028  001A72  5025               	movf	i2sprintf@prec^0,w,c
  7029  001A74  0D02               	mullw	2
  7030  001A76  0E01               	movlw	low _dpowers
  7031  001A78  24F3               	addwf	243,w,c
  7032  001A7A  6EF6               	movwf	tblptrl,c
  7033  001A7C  0E08               	movlw	high _dpowers
  7034  001A7E  20F4               	addwfc	244,w,c
  7035  001A80  6EF7               	movwf	tblptrh,c
  7036  001A82                     	if	0	;There are less than 3 active tblptr bytes
  7037  001A82                     	endif
  7038  001A82  0009               	tblrd		*+
  7039  001A84  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  7040  001A88  000A               	tblrd		*-
  7041  001A8A  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  7042  001A8E  C028  F001         	movff	i2sprintf@val,i2___lwdiv@dividend
  7043  001A92  C029  F002         	movff	i2sprintf@val+1,i2___lwdiv@dividend+1
  7044  001A96  ECA0  F012         	call	i2___lwdiv	;wreg free
  7045  001A9A  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  7046  001A9E  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  7047  001AA2  0E00               	movlw	0
  7048  001AA4  6E0B               	movwf	(i2___lwmod@divisor+1)^0,c
  7049  001AA6  0E0A               	movlw	10
  7050  001AA8  6E0A               	movwf	i2___lwmod@divisor^0,c
  7051  001AAA  EC45  F013         	call	i2___lwmod	;wreg free
  7052  001AAE  5008               	movf	?i2___lwmod^0,w,c
  7053  001AB0  0F30               	addlw	48
  7054  001AB2  6E2A               	movwf	i2sprintf@c^0,c
  7055  001AB4                     
  7056                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  7057  001AB4  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7058  001AB8  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7059  001ABC  C02A  FFDF         	movff	i2sprintf@c,indf2
  7060  001AC0  4A0D               	infsnz	i2sprintf@sp^0,f,c
  7061  001AC2  2A0E               	incf	(i2sprintf@sp+1)^0,f,c
  7062  001AC4                     i2l3213:
  7063  001AC4  0625               	decf	i2sprintf@prec^0,f,c
  7064  001AC6  2825               	incf	i2sprintf@prec^0,w,c
  7065  001AC8  A4D8               	btfss	status,2,c
  7066  001ACA  EF69  F00D         	goto	i2u285_41
  7067  001ACE  EF6B  F00D         	goto	i2u285_40
  7068  001AD2                     i2u285_41:
  7069  001AD2  EF39  F00D         	goto	i2l3207
  7070  001AD6                     i2u285_40:
  7071  001AD6                     i2l3215:
  7072  001AD6  C00F  FFF6         	movff	i2sprintf@f,tblptrl
  7073  001ADA  C010  FFF7         	movff	i2sprintf@f+1,tblptrh
  7074  001ADE  4A0F               	infsnz	i2sprintf@f^0,f,c
  7075  001AE0  2A10               	incf	(i2sprintf@f+1)^0,f,c
  7076  001AE2                     	if	0	;tblptru may be non-zero
  7077  001AE2                     	endif
  7078  001AE2                     	if	0	;tblptru may be non-zero
  7079  001AE2                     	endif
  7080  001AE2  0008               	tblrd		*
  7081  001AE4  CFF5 F02A          	movff	tablat,i2sprintf@c
  7082  001AE8  502A               	movf	i2sprintf@c^0,w,c
  7083  001AEA  A4D8               	btfss	status,2,c
  7084  001AEC  EF7A  F00D         	goto	i2u286_41
  7085  001AF0  EF7C  F00D         	goto	i2u286_40
  7086  001AF4                     i2u286_41:
  7087  001AF4  EFA7  F00C         	goto	i2l3155
  7088  001AF8                     i2u286_40:
  7089  001AF8                     i2l3217:
  7090                           
  7091                           ;doprnt.c: 1564: *sp = 0;
  7092  001AF8  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7093  001AFC  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7094  001B00  0E00               	movlw	0
  7095  001B02  6EDF               	movwf	indf2,c
  7096  001B04  0012               	return		;funcret
  7097  001B06                     __end_ofi2_sprintf:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function i2___lwmod *****************
  7101 ;; Defined at:
  7102 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  dividend        2    7[COMRAM] unsigned int 
  7105 ;;  divisor         2    9[COMRAM] unsigned int 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  counter         1   11[COMRAM] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  2    7[COMRAM] unsigned int 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7117 ;;      Params:         4       0       0       0       0       0       0       0       0
  7118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7120 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7121 ;;Total ram usage:        5 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		i2_sprintf
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text38
  7131  00268A                     __ptext38:
  7132                           	callstack 0
  7133  00268A                     i2___lwmod:
  7134                           	callstack 23
  7135  00268A  500A               	movf	i2___lwmod@divisor^0,w,c
  7136  00268C  100B               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  7137  00268E  B4D8               	btfsc	status,2,c
  7138  002690  EF4C  F013         	goto	i2u221_41
  7139  002694  EF4E  F013         	goto	i2u221_40
  7140  002698                     i2u221_41:
  7141  002698  EF72  F013         	goto	i2l829
  7142  00269C                     i2u221_40:
  7143  00269C  0E01               	movlw	1
  7144  00269E  6E0C               	movwf	i2___lwmod@counter^0,c
  7145  0026A0  EF56  F013         	goto	i2l2763
  7146  0026A4                     i2l2761:
  7147  0026A4  90D8               	bcf	status,0,c
  7148  0026A6  360A               	rlcf	i2___lwmod@divisor^0,f,c
  7149  0026A8  360B               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  7150  0026AA  2A0C               	incf	i2___lwmod@counter^0,f,c
  7151  0026AC                     i2l2763:
  7152  0026AC  AE0B               	btfss	(i2___lwmod@divisor+1)^0,7,c
  7153  0026AE  EF5B  F013         	goto	i2u222_41
  7154  0026B2  EF5D  F013         	goto	i2u222_40
  7155  0026B6                     i2u222_41:
  7156  0026B6  EF52  F013         	goto	i2l2761
  7157  0026BA                     i2u222_40:
  7158  0026BA                     i2l2765:
  7159  0026BA  500A               	movf	i2___lwmod@divisor^0,w,c
  7160  0026BC  5C08               	subwf	i2___lwmod@dividend^0,w,c
  7161  0026BE  500B               	movf	(i2___lwmod@divisor+1)^0,w,c
  7162  0026C0  5809               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  7163  0026C2  A0D8               	btfss	status,0,c
  7164  0026C4  EF66  F013         	goto	i2u223_41
  7165  0026C8  EF68  F013         	goto	i2u223_40
  7166  0026CC                     i2u223_41:
  7167  0026CC  EF6C  F013         	goto	i2l2769
  7168  0026D0                     i2u223_40:
  7169  0026D0  500A               	movf	i2___lwmod@divisor^0,w,c
  7170  0026D2  5E08               	subwf	i2___lwmod@dividend^0,f,c
  7171  0026D4  500B               	movf	(i2___lwmod@divisor+1)^0,w,c
  7172  0026D6  5A09               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  7173  0026D8                     i2l2769:
  7174  0026D8  90D8               	bcf	status,0,c
  7175  0026DA  320B               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  7176  0026DC  320A               	rrcf	i2___lwmod@divisor^0,f,c
  7177  0026DE  2E0C               	decfsz	i2___lwmod@counter^0,f,c
  7178  0026E0  EF5D  F013         	goto	i2l2765
  7179  0026E4                     i2l829:
  7180  0026E4  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  7181  0026E8  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  7182  0026EC  0012               	return		;funcret
  7183  0026EE                     __end_ofi2___lwmod:
  7184                           	callstack 0
  7185                           
  7186 ;; *************** function i2___lwdiv *****************
  7187 ;; Defined at:
  7188 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  dividend        2    0[COMRAM] unsigned int 
  7191 ;;  divisor         2    2[COMRAM] unsigned int 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  quotient        2    4[COMRAM] unsigned int 
  7194 ;;  counter         1    6[COMRAM] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  2    0[COMRAM] unsigned int 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7204 ;;      Params:         4       0       0       0       0       0       0       0       0
  7205 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7207 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7208 ;;Total ram usage:        7 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		i2_sprintf
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text39
  7218  002540                     __ptext39:
  7219                           	callstack 0
  7220  002540                     i2___lwdiv:
  7221                           	callstack 23
  7222  002540  0E00               	movlw	0
  7223  002542  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
  7224  002544  0E00               	movlw	0
  7225  002546  6E05               	movwf	i2___lwdiv@quotient^0,c
  7226  002548  5003               	movf	i2___lwdiv@divisor^0,w,c
  7227  00254A  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
  7228  00254C  B4D8               	btfsc	status,2,c
  7229  00254E  EFAB  F012         	goto	i2u218_41
  7230  002552  EFAD  F012         	goto	i2u218_40
  7231  002556                     i2u218_41:
  7232  002556  EFD5  F012         	goto	i2l819
  7233  00255A                     i2u218_40:
  7234  00255A  0E01               	movlw	1
  7235  00255C  6E07               	movwf	i2___lwdiv@counter^0,c
  7236  00255E  EFB5  F012         	goto	i2l2743
  7237  002562                     i2l2741:
  7238  002562  90D8               	bcf	status,0,c
  7239  002564  3603               	rlcf	i2___lwdiv@divisor^0,f,c
  7240  002566  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
  7241  002568  2A07               	incf	i2___lwdiv@counter^0,f,c
  7242  00256A                     i2l2743:
  7243  00256A  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
  7244  00256C  EFBA  F012         	goto	i2u219_41
  7245  002570  EFBC  F012         	goto	i2u219_40
  7246  002574                     i2u219_41:
  7247  002574  EFB1  F012         	goto	i2l2741
  7248  002578                     i2u219_40:
  7249  002578                     i2l2745:
  7250  002578  90D8               	bcf	status,0,c
  7251  00257A  3605               	rlcf	i2___lwdiv@quotient^0,f,c
  7252  00257C  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
  7253  00257E  5003               	movf	i2___lwdiv@divisor^0,w,c
  7254  002580  5C01               	subwf	i2___lwdiv@dividend^0,w,c
  7255  002582  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  7256  002584  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
  7257  002586  A0D8               	btfss	status,0,c
  7258  002588  EFC8  F012         	goto	i2u220_41
  7259  00258C  EFCA  F012         	goto	i2u220_40
  7260  002590                     i2u220_41:
  7261  002590  EFCF  F012         	goto	i2l2753
  7262  002594                     i2u220_40:
  7263  002594  5003               	movf	i2___lwdiv@divisor^0,w,c
  7264  002596  5E01               	subwf	i2___lwdiv@dividend^0,f,c
  7265  002598  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  7266  00259A  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
  7267  00259C  8005               	bsf	i2___lwdiv@quotient^0,0,c
  7268  00259E                     i2l2753:
  7269  00259E  90D8               	bcf	status,0,c
  7270  0025A0  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
  7271  0025A2  3203               	rrcf	i2___lwdiv@divisor^0,f,c
  7272  0025A4  2E07               	decfsz	i2___lwdiv@counter^0,f,c
  7273  0025A6  EFBC  F012         	goto	i2l2745
  7274  0025AA                     i2l819:
  7275  0025AA  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  7276  0025AE  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  7277  0025B2  0012               	return		;funcret
  7278  0025B4                     __end_ofi2___lwdiv:
  7279                           	callstack 0
  7280                           
  7281 ;; *************** function i2_PrintDataLCD *****************
  7282 ;; Defined at:
  7283 ;;		line 539 in file "Main.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;		None
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0
  7298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7300 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:        0 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    2
  7304 ;; This function calls:
  7305 ;;		i2_SettingsLCD
  7306 ;;		i2_WriteLCD
  7307 ;;		i2_strlen
  7308 ;; This function is called by:
  7309 ;;		_impresion_datos
  7310 ;;		_receive
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text40
  7315  0027EC                     __ptext40:
  7316                           	callstack 0
  7317  0027EC                     i2_PrintDataLCD:
  7318                           	callstack 22
  7319  0027EC                     
  7320                           ;Main.c: 540: SettingsLCD(0x80);
  7321  0027EC  0E80               	movlw	128
  7322  0027EE  EC51  F015         	call	i2_SettingsLCD
  7323                           
  7324                           ;Main.c: 541: SettingsLCD(0x01);
  7325  0027F2  0E01               	movlw	1
  7326  0027F4  EC51  F015         	call	i2_SettingsLCD
  7327  0027F8                     
  7328                           ;Main.c: 542: for(i=0; i<strlen(texto_LCD); i++){
  7329  0027F8  0E00               	movlw	0
  7330  0027FA  6E51               	movwf	(_i+1)^0,c
  7331  0027FC  0E00               	movlw	0
  7332  0027FE  6E50               	movwf	_i^0,c
  7333  002800  EF0D  F014         	goto	i2l3151
  7334  002804                     i2l3147:
  7335                           
  7336                           ;Main.c: 543: WriteLCD(texto_LCD[i]);
  7337  002804  0E74               	movlw	low _texto_LCD
  7338  002806  2450               	addwf	_i^0,w,c
  7339  002808  6ED9               	movwf	fsr2l,c
  7340  00280A  0E00               	movlw	high _texto_LCD
  7341  00280C  2051               	addwfc	(_i+1)^0,w,c
  7342  00280E  6EDA               	movwf	fsr2h,c
  7343  002810  50DF               	movf	indf2,w,c
  7344  002812  EC46  F015         	call	i2_WriteLCD
  7345  002816  4A50               	infsnz	_i^0,f,c
  7346  002818  2A51               	incf	(_i+1)^0,f,c
  7347  00281A                     i2l3151:
  7348  00281A  0E74               	movlw	low _texto_LCD
  7349  00281C  6E01               	movwf	i2strlen@s^0,c
  7350  00281E  0E00               	movlw	high _texto_LCD
  7351  002820  6E02               	movwf	(i2strlen@s+1)^0,c
  7352  002822  ECBC  F014         	call	i2_strlen	;wreg free
  7353  002826  5001               	movf	?i2_strlen^0,w,c
  7354  002828  5C50               	subwf	_i^0,w,c
  7355  00282A  5002               	movf	(?i2_strlen+1)^0,w,c
  7356  00282C  5851               	subwfb	(_i+1)^0,w,c
  7357  00282E  A0D8               	btfss	status,0,c
  7358  002830  EF1C  F014         	goto	i2u279_41
  7359  002834  EF1E  F014         	goto	i2u279_40
  7360  002838                     i2u279_41:
  7361  002838  EF02  F014         	goto	i2l3147
  7362  00283C                     i2u279_40:
  7363  00283C  0012               	return		;funcret
  7364  00283E                     __end_ofi2_PrintDataLCD:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function i2_strlen *****************
  7368 ;; Defined at:
  7369 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7372 ;;		 -> texto_LCD(40), text(40), 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  7375 ;;		 -> texto_LCD(40), text(40), 
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  2    0[COMRAM] unsigned int 
  7378 ;; Registers used:
  7379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7385 ;;      Params:         2       0       0       0       0       0       0       0       0
  7386 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7388 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7389 ;;Total ram usage:        4 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		i2_start
  7395 ;;		i2_PrintDataLCD
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           	psect	text41
  7400  002978                     __ptext41:
  7401                           	callstack 0
  7402  002978                     i2_strlen:
  7403                           	callstack 23
  7404  002978  C001  F003         	movff	i2strlen@s,i2strlen@cp
  7405  00297C  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
  7406  002980  EFC4  F014         	goto	i2l2777
  7407  002984                     i2l2775:
  7408  002984  4A03               	infsnz	i2strlen@cp^0,f,c
  7409  002986  2A04               	incf	(i2strlen@cp+1)^0,f,c
  7410  002988                     i2l2777:
  7411  002988  C003  FFD9         	movff	i2strlen@cp,fsr2l
  7412  00298C  C004  FFDA         	movff	i2strlen@cp+1,fsr2h
  7413  002990  50DF               	movf	indf2,w,c
  7414  002992  A4D8               	btfss	status,2,c
  7415  002994  EFCE  F014         	goto	i2u224_41
  7416  002998  EFD0  F014         	goto	i2u224_40
  7417  00299C                     i2u224_41:
  7418  00299C  EFC2  F014         	goto	i2l2775
  7419  0029A0                     i2u224_40:
  7420  0029A0  5001               	movf	i2strlen@s^0,w,c
  7421  0029A2  5C03               	subwf	i2strlen@cp^0,w,c
  7422  0029A4  6E01               	movwf	?i2_strlen^0,c
  7423  0029A6  5002               	movf	(i2strlen@s+1)^0,w,c
  7424  0029A8  5804               	subwfb	(i2strlen@cp+1)^0,w,c
  7425  0029AA  6E02               	movwf	(?i2_strlen+1)^0,c
  7426  0029AC  0012               	return		;funcret
  7427  0029AE                     __end_ofi2_strlen:
  7428                           	callstack 0
  7429                           
  7430 ;; *************** function i2_WriteLCD *****************
  7431 ;; Defined at:
  7432 ;;		line 518 in file "Main.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  word            1    wreg     unsigned char 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;  word            1    2[COMRAM] unsigned char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7446 ;;      Params:         0       0       0       0       0       0       0       0       0
  7447 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7449 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7450 ;;Total ram usage:        1 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    1
  7453 ;; This function calls:
  7454 ;;		i2_LCD
  7455 ;; This function is called by:
  7456 ;;		i2_PrintDataLCD
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text42
  7461  002A8C                     __ptext42:
  7462                           	callstack 0
  7463  002A8C                     i2_WriteLCD:
  7464                           	callstack 22
  7465                           
  7466                           ;incstack = 0
  7467                           ;i2WriteLCD@word stored from wreg
  7468  002A8C  6E03               	movwf	i2WriteLCD@word^0,c
  7469  002A8E                     
  7470                           ;Main.c: 519: LATE1 = 1;
  7471  002A8E  828D               	bsf	3981,1,c	;volatile
  7472  002A90                     
  7473                           ;Main.c: 520: LCD(word >> 4);
  7474  002A90  3803               	swapf	i2WriteLCD@word^0,w,c
  7475  002A92  0B0F               	andlw	15
  7476  002A94  EC89  F011         	call	i2_LCD
  7477                           
  7478                           ;Main.c: 521: LCD(word & 0x0F);
  7479  002A98  5003               	movf	i2WriteLCD@word^0,w,c
  7480  002A9A  0B0F               	andlw	15
  7481  002A9C  EC89  F011         	call	i2_LCD
  7482  002AA0  0012               	return		;funcret
  7483  002AA2                     __end_ofi2_WriteLCD:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function i2_SettingsLCD *****************
  7487 ;; Defined at:
  7488 ;;		line 512 in file "Main.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  word            1    wreg     unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  word            1    2[COMRAM] unsigned char 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2, status,0, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0
  7503 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7505 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7506 ;;Total ram usage:        1 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    1
  7509 ;; This function calls:
  7510 ;;		i2_LCD
  7511 ;; This function is called by:
  7512 ;;		i2_PrintDataLCD
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text43
  7517  002AA2                     __ptext43:
  7518                           	callstack 0
  7519  002AA2                     i2_SettingsLCD:
  7520                           	callstack 22
  7521                           
  7522                           ;incstack = 0
  7523                           ;i2SettingsLCD@word stored from wreg
  7524  002AA2  6E03               	movwf	i2SettingsLCD@word^0,c
  7525  002AA4                     
  7526                           ;Main.c: 513: LATE1 = 0;
  7527  002AA4  928D               	bcf	3981,1,c	;volatile
  7528  002AA6                     
  7529                           ;Main.c: 514: LCD(word >> 4);
  7530  002AA6  3803               	swapf	i2SettingsLCD@word^0,w,c
  7531  002AA8  0B0F               	andlw	15
  7532  002AAA  EC89  F011         	call	i2_LCD
  7533                           
  7534                           ;Main.c: 515: LCD(word & 0x0F);
  7535  002AAE  5003               	movf	i2SettingsLCD@word^0,w,c
  7536  002AB0  0B0F               	andlw	15
  7537  002AB2  EC89  F011         	call	i2_LCD
  7538  002AB6  0012               	return		;funcret
  7539  002AB8                     __end_ofi2_SettingsLCD:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function i2_LCD *****************
  7543 ;; Defined at:
  7544 ;;		line 524 in file "Main.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  data            1    wreg     unsigned char 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  data            1    1[COMRAM] unsigned char 
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0
  7559 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7560 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7561 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7562 ;;Total ram usage:        2 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		i2_SettingsLCD
  7568 ;;		i2_WriteLCD
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text44
  7573  002312                     __ptext44:
  7574                           	callstack 0
  7575  002312                     i2_LCD:
  7576                           	callstack 22
  7577                           
  7578                           ;incstack = 0
  7579                           ;i2LCD@data stored from wreg
  7580  002312  6E02               	movwf	i2LCD@data^0,c
  7581  002314                     
  7582                           ;Main.c: 525: _delay((unsigned long)((500)*(8000000/4000000.0)));
  7583  002314  0EC8               	movlw	200
  7584  002316                     i2u343_47:
  7585  002316  D000               	nop2	
  7586  002318  2EE8               	decfsz	wreg,f,c
  7587  00231A  D7FD               	bra	i2u343_47
  7588  00231C                     
  7589                           ;Main.c: 526: LATE0 = 1;
  7590  00231C  808D               	bsf	3981,0,c	;volatile
  7591  00231E                     
  7592                           ;Main.c: 527: LATDbits.LATD0 = (data & 0x01);
  7593  00231E  C002  F001         	movff	i2LCD@data,??i2_LCD
  7594  002322  0E01               	movlw	1
  7595  002324  1601               	andwf	??i2_LCD^0,f,c
  7596  002326  508C               	movf	140,w,c	;volatile
  7597  002328  1801               	xorwf	??i2_LCD^0,w,c
  7598  00232A  0BFE               	andlw	-2
  7599  00232C  1801               	xorwf	??i2_LCD^0,w,c
  7600  00232E  6E8C               	movwf	140,c	;volatile
  7601  002330                     
  7602                           ;Main.c: 528: _delay((unsigned long)((500)*(8000000/4000000.0)));
  7603  002330  0EC8               	movlw	200
  7604  002332                     i2u344_47:
  7605  002332  D000               	nop2	
  7606  002334  2EE8               	decfsz	wreg,f,c
  7607  002336  D7FD               	bra	i2u344_47
  7608  002338                     
  7609                           ;Main.c: 529: LATDbits.LATD1 = (data & 0x02) >> 1;
  7610  002338  C002  F001         	movff	i2LCD@data,??i2_LCD
  7611  00233C  90D8               	bcf	status,0,c
  7612  00233E  3201               	rrcf	??i2_LCD^0,f,c
  7613  002340  0E01               	movlw	1
  7614  002342  1601               	andwf	??i2_LCD^0,f,c
  7615  002344  4601               	rlncf	??i2_LCD^0,f,c
  7616  002346  508C               	movf	140,w,c	;volatile
  7617  002348  1801               	xorwf	??i2_LCD^0,w,c
  7618  00234A  0BFD               	andlw	-3
  7619  00234C  1801               	xorwf	??i2_LCD^0,w,c
  7620  00234E  6E8C               	movwf	140,c	;volatile
  7621  002350                     
  7622                           ;Main.c: 530: _delay((unsigned long)((500)*(8000000/4000000.0)));
  7623  002350  0EC8               	movlw	200
  7624  002352                     i2u345_47:
  7625  002352  D000               	nop2	
  7626  002354  2EE8               	decfsz	wreg,f,c
  7627  002356  D7FD               	bra	i2u345_47
  7628  002358                     
  7629                           ;Main.c: 531: LATDbits.LATD2 = (data & 0x04) >> 2;
  7630  002358  C002  F001         	movff	i2LCD@data,??i2_LCD
  7631  00235C  90D8               	bcf	status,0,c
  7632  00235E  3201               	rrcf	??i2_LCD^0,f,c
  7633  002360  90D8               	bcf	status,0,c
  7634  002362  3201               	rrcf	??i2_LCD^0,f,c
  7635  002364  0E01               	movlw	1
  7636  002366  1601               	andwf	??i2_LCD^0,f,c
  7637  002368  4601               	rlncf	??i2_LCD^0,f,c
  7638  00236A  4601               	rlncf	??i2_LCD^0,f,c
  7639  00236C  508C               	movf	140,w,c	;volatile
  7640  00236E  1801               	xorwf	??i2_LCD^0,w,c
  7641  002370  0BFB               	andlw	-5
  7642  002372  1801               	xorwf	??i2_LCD^0,w,c
  7643  002374  6E8C               	movwf	140,c	;volatile
  7644  002376                     
  7645                           ;Main.c: 532: _delay((unsigned long)((500)*(8000000/4000000.0)));
  7646  002376  0EC8               	movlw	200
  7647  002378                     i2u346_47:
  7648  002378  D000               	nop2	
  7649  00237A  2EE8               	decfsz	wreg,f,c
  7650  00237C  D7FD               	bra	i2u346_47
  7651  00237E                     
  7652                           ;Main.c: 533: LATDbits.LATD3 = (data & 0x08) >> 3;
  7653  00237E  C002  F001         	movff	i2LCD@data,??i2_LCD
  7654  002382  90D8               	bcf	status,0,c
  7655  002384  3201               	rrcf	??i2_LCD^0,f,c
  7656  002386  90D8               	bcf	status,0,c
  7657  002388  3201               	rrcf	??i2_LCD^0,f,c
  7658  00238A  90D8               	bcf	status,0,c
  7659  00238C  3201               	rrcf	??i2_LCD^0,f,c
  7660  00238E  0E01               	movlw	1
  7661  002390  1601               	andwf	??i2_LCD^0,f,c
  7662  002392  4601               	rlncf	??i2_LCD^0,f,c
  7663  002394  4601               	rlncf	??i2_LCD^0,f,c
  7664  002396  4601               	rlncf	??i2_LCD^0,f,c
  7665  002398  508C               	movf	140,w,c	;volatile
  7666  00239A  1801               	xorwf	??i2_LCD^0,w,c
  7667  00239C  0BF7               	andlw	-9
  7668  00239E  1801               	xorwf	??i2_LCD^0,w,c
  7669  0023A0  6E8C               	movwf	140,c	;volatile
  7670  0023A2                     
  7671                           ;Main.c: 534: _delay((unsigned long)((500)*(8000000/4000000.0)));
  7672  0023A2  0EC8               	movlw	200
  7673  0023A4                     i2u347_47:
  7674  0023A4  D000               	nop2	
  7675  0023A6  2EE8               	decfsz	wreg,f,c
  7676  0023A8  D7FD               	bra	i2u347_47
  7677  0023AA                     
  7678                           ;Main.c: 535: LATE0 = 0;
  7679  0023AA  908D               	bcf	3981,0,c	;volatile
  7680  0023AC                     
  7681                           ;Main.c: 536: _delay((unsigned long)((500)*(8000000/4000000.0)));
  7682  0023AC  0EC8               	movlw	200
  7683  0023AE                     i2u348_47:
  7684  0023AE  D000               	nop2	
  7685  0023B0  2EE8               	decfsz	wreg,f,c
  7686  0023B2  D7FD               	bra	i2u348_47
  7687  0023B4  0012               	return		;funcret
  7688  0023B6                     __end_ofi2_LCD:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _atoi *****************
  7692 ;; Defined at:
  7693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  s               2   14[COMRAM] PTR const unsigned char 
  7696 ;;		 -> coordinate_z(3), coordinate_y(3), coordinate_x(3), angle(3), 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  a               2   19[COMRAM] int 
  7699 ;;  sign            1   18[COMRAM] unsigned char 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  2   14[COMRAM] int 
  7702 ;; Registers used:
  7703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7709 ;;      Params:         2       0       0       0       0       0       0       0       0
  7710 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7711 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7712 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7713 ;;Total ram usage:        7 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    1
  7716 ;; This function calls:
  7717 ;;		___wmul
  7718 ;;		_isdigit
  7719 ;; This function is called by:
  7720 ;;		_algoritm
  7721 ;;		_impresion_datos
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text45
  7726  001C1E                     __ptext45:
  7727                           	callstack 0
  7728  001C1E                     _atoi:
  7729                           	callstack 21
  7730  001C1E  EF13  F00E         	goto	i2l2807
  7731  001C22                     i2l2805:
  7732  001C22  4A0F               	infsnz	atoi@s^0,f,c
  7733  001C24  2A10               	incf	(atoi@s+1)^0,f,c
  7734  001C26                     i2l2807:
  7735  001C26  C00F  FFD9         	movff	atoi@s,fsr2l
  7736  001C2A  C010  FFDA         	movff	atoi@s+1,fsr2h
  7737  001C2E  0E20               	movlw	32
  7738  001C30  18DE               	xorwf	postinc2,w,c
  7739  001C32  B4D8               	btfsc	status,2,c
  7740  001C34  EF1E  F00E         	goto	i2u226_41
  7741  001C38  EF20  F00E         	goto	i2u226_40
  7742  001C3C                     i2u226_41:
  7743  001C3C  EF11  F00E         	goto	i2l2805
  7744  001C40                     i2u226_40:
  7745  001C40  C00F  FFD9         	movff	atoi@s,fsr2l
  7746  001C44  C010  FFDA         	movff	atoi@s+1,fsr2h
  7747  001C48  0E09               	movlw	9
  7748  001C4A  18DE               	xorwf	postinc2,w,c
  7749  001C4C  B4D8               	btfsc	status,2,c
  7750  001C4E  EF2B  F00E         	goto	i2u227_41
  7751  001C52  EF2D  F00E         	goto	i2u227_40
  7752  001C56                     i2u227_41:
  7753  001C56  EF11  F00E         	goto	i2l2805
  7754  001C5A                     i2u227_40:
  7755  001C5A  0E00               	movlw	0
  7756  001C5C  6E15               	movwf	(atoi@a+1)^0,c
  7757  001C5E  0E00               	movlw	0
  7758  001C60  6E14               	movwf	atoi@a^0,c
  7759  001C62  0E00               	movlw	0
  7760  001C64  6E13               	movwf	atoi@sign^0,c
  7761  001C66  C00F  FFD9         	movff	atoi@s,fsr2l
  7762  001C6A  C010  FFDA         	movff	atoi@s+1,fsr2h
  7763  001C6E  0E2D               	movlw	45
  7764  001C70  18DE               	xorwf	postinc2,w,c
  7765  001C72  A4D8               	btfss	status,2,c
  7766  001C74  EF3E  F00E         	goto	i2u228_41
  7767  001C78  EF40  F00E         	goto	i2u228_40
  7768  001C7C                     i2u228_41:
  7769  001C7C  EF45  F00E         	goto	i2l2817
  7770  001C80                     i2u228_40:
  7771  001C80  2A13               	incf	atoi@sign^0,f,c
  7772  001C82  4A0F               	infsnz	atoi@s^0,f,c
  7773  001C84  2A10               	incf	(atoi@s+1)^0,f,c
  7774  001C86  EF72  F00E         	goto	i2l2825
  7775  001C8A                     i2l2817:
  7776  001C8A  C00F  FFD9         	movff	atoi@s,fsr2l
  7777  001C8E  C010  FFDA         	movff	atoi@s+1,fsr2h
  7778  001C92  0E2B               	movlw	43
  7779  001C94  18DE               	xorwf	postinc2,w,c
  7780  001C96  A4D8               	btfss	status,2,c
  7781  001C98  EF50  F00E         	goto	i2u229_41
  7782  001C9C  EF52  F00E         	goto	i2u229_40
  7783  001CA0                     i2u229_41:
  7784  001CA0  EF72  F00E         	goto	i2l2825
  7785  001CA4                     i2u229_40:
  7786  001CA4                     i2l2819:
  7787  001CA4  4A0F               	infsnz	atoi@s^0,f,c
  7788  001CA6  2A10               	incf	(atoi@s+1)^0,f,c
  7789  001CA8  EF72  F00E         	goto	i2l2825
  7790  001CAC                     i2l2821:
  7791  001CAC  C014  F009         	movff	atoi@a,___wmul@multiplier
  7792  001CB0  C015  F00A         	movff	atoi@a+1,___wmul@multiplier+1
  7793  001CB4  0E00               	movlw	0
  7794  001CB6  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  7795  001CB8  0E0A               	movlw	10
  7796  001CBA  6E0B               	movwf	___wmul@multiplicand^0,c
  7797  001CBC  EC17  F015         	call	___wmul	;wreg free
  7798  001CC0  C00F  FFD9         	movff	atoi@s,fsr2l
  7799  001CC4  C010  FFDA         	movff	atoi@s+1,fsr2h
  7800  001CC8  50DF               	movf	indf2,w,c
  7801  001CCA  6E11               	movwf	??_atoi^0,c
  7802  001CCC  5011               	movf	??_atoi^0,w,c
  7803  001CCE  2609               	addwf	?___wmul^0,f,c
  7804  001CD0  0E00               	movlw	0
  7805  001CD2  220A               	addwfc	(?___wmul+1)^0,f,c
  7806  001CD4  0ED0               	movlw	208
  7807  001CD6  2409               	addwf	?___wmul^0,w,c
  7808  001CD8  6E14               	movwf	atoi@a^0,c
  7809  001CDA  0EFF               	movlw	255
  7810  001CDC  200A               	addwfc	(?___wmul+1)^0,w,c
  7811  001CDE  6E15               	movwf	(atoi@a+1)^0,c
  7812  001CE0  EF52  F00E         	goto	i2l2819
  7813  001CE4                     i2l2825:
  7814  001CE4  C00F  FFD9         	movff	atoi@s,fsr2l
  7815  001CE8  C010  FFDA         	movff	atoi@s+1,fsr2h
  7816  001CEC  50DF               	movf	indf2,w,c
  7817  001CEE  ECD7  F014         	call	_isdigit
  7818  001CF2  B0D8               	btfsc	status,0,c
  7819  001CF4  EF7E  F00E         	goto	i2u230_41
  7820  001CF8  EF80  F00E         	goto	i2u230_40
  7821  001CFC                     i2u230_41:
  7822  001CFC  EF56  F00E         	goto	i2l2821
  7823  001D00                     i2u230_40:
  7824  001D00  5013               	movf	atoi@sign^0,w,c
  7825  001D02  B4D8               	btfsc	status,2,c
  7826  001D04  EF86  F00E         	goto	i2u231_41
  7827  001D08  EF88  F00E         	goto	i2u231_40
  7828  001D0C                     i2u231_41:
  7829  001D0C  EF96  F00E         	goto	i2l1013
  7830  001D10                     i2u231_40:
  7831  001D10  C014  F011         	movff	atoi@a,??_atoi
  7832  001D14  C015  F012         	movff	atoi@a+1,??_atoi+1
  7833  001D18  1E11               	comf	??_atoi^0,f,c
  7834  001D1A  1E12               	comf	(??_atoi+1)^0,f,c
  7835  001D1C  4A11               	infsnz	??_atoi^0,f,c
  7836  001D1E  2A12               	incf	(??_atoi+1)^0,f,c
  7837  001D20  C011  F00F         	movff	??_atoi,?_atoi
  7838  001D24  C012  F010         	movff	??_atoi+1,?_atoi+1
  7839  001D28  EF9A  F00E         	goto	i2l1014
  7840  001D2C                     i2l1013:
  7841  001D2C  C014  F00F         	movff	atoi@a,?_atoi
  7842  001D30  C015  F010         	movff	atoi@a+1,?_atoi+1
  7843  001D34                     i2l1014:
  7844  001D34  0012               	return		;funcret
  7845  001D36                     __end_of_atoi:
  7846                           	callstack 0
  7847                           
  7848 ;; *************** function _isdigit *****************
  7849 ;; Defined at:
  7850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  c               1    wreg     unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  c               1    2[COMRAM] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;		None               void
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0
  7865 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7866 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7867 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7868 ;;Total ram usage:        3 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_atoi
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text46
  7878  0029AE                     __ptext46:
  7879                           	callstack 0
  7880  0029AE                     _isdigit:
  7881                           	callstack 21
  7882                           
  7883                           ;incstack = 0
  7884                           ;isdigit@c stored from wreg
  7885  0029AE  6E03               	movwf	isdigit@c^0,c
  7886  0029B0  0E00               	movlw	0
  7887  0029B2  6E02               	movwf	_isdigit$853^0,c
  7888  0029B4  0E3A               	movlw	58
  7889  0029B6  6003               	cpfslt	isdigit@c^0,c
  7890  0029B8  EFE0  F014         	goto	i2u216_41
  7891  0029BC  EFE2  F014         	goto	i2u216_40
  7892  0029C0                     i2u216_41:
  7893  0029C0  EFEC  F014         	goto	i2l2711
  7894  0029C4                     i2u216_40:
  7895  0029C4  0E2F               	movlw	47
  7896  0029C6  6403               	cpfsgt	isdigit@c^0,c
  7897  0029C8  EFE8  F014         	goto	i2u217_41
  7898  0029CC  EFEA  F014         	goto	i2u217_40
  7899  0029D0                     i2u217_41:
  7900  0029D0  EFEC  F014         	goto	i2l2711
  7901  0029D4                     i2u217_40:
  7902  0029D4  0E01               	movlw	1
  7903  0029D6  6E02               	movwf	_isdigit$853^0,c
  7904  0029D8                     i2l2711:
  7905  0029D8  C002  F001         	movff	_isdigit$853,??_isdigit
  7906  0029DC  3001               	rrcf	??_isdigit^0,w,c
  7907  0029DE  0012               	return		;funcret
  7908  0029E0                     __end_of_isdigit:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function ___wmul *****************
  7912 ;; Defined at:
  7913 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  multiplier      2    8[COMRAM] unsigned int 
  7916 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  product         2   12[COMRAM] unsigned int 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  2    8[COMRAM] unsigned int 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, prodl, prodh
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7928 ;;      Params:         4       0       0       0       0       0       0       0       0
  7929 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7931 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7932 ;;Total ram usage:        6 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_map
  7938 ;;		_atoi
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           	psect	text47
  7943  002A2E                     __ptext47:
  7944                           	callstack 0
  7945  002A2E                     ___wmul:
  7946                           	callstack 21
  7947  002A2E  5009               	movf	___wmul@multiplier^0,w,c
  7948  002A30  020B               	mulwf	___wmul@multiplicand^0,c
  7949  002A32  CFF3 F00D          	movff	prodl,___wmul@product
  7950  002A36  CFF4 F00E          	movff	prodh,___wmul@product+1
  7951  002A3A  5009               	movf	___wmul@multiplier^0,w,c
  7952  002A3C  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7953  002A3E  50F3               	movf	243,w,c
  7954  002A40  260E               	addwf	(___wmul@product+1)^0,f,c
  7955  002A42  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7956  002A44  020B               	mulwf	___wmul@multiplicand^0,c
  7957  002A46  50F3               	movf	243,w,c
  7958  002A48  260E               	addwf	(___wmul@product+1)^0,f,c
  7959  002A4A  C00D  F009         	movff	___wmul@product,?___wmul
  7960  002A4E  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7961  002A52  0012               	return		;funcret
  7962  002A54                     __end_of___wmul:
  7963                           	callstack 0
  7964                           
  7965                           	psect	rparam
  7966  0000                     
  7967                           	psect	temp
  7968  00005F                     btemp:
  7969                           	callstack 0
  7970  00005F                     	ds	1
  7971  0000                     int$flags	set	btemp
  7972  0000                     wtemp8	set	btemp+1
  7973  0000                     ttemp5	set	btemp+1
  7974  0000                     ttemp6	set	btemp+4
  7975  0000                     ttemp7	set	btemp+8
  7976                           
  7977                           	psect	idloc
  7978                           
  7979                           ;Config register IDLOC0 @ 0x200000
  7980                           ;	unspecified, using default values
  7981  200000                     	org	2097152
  7982  200000  FF                 	db	255
  7983                           
  7984                           ;Config register IDLOC1 @ 0x200001
  7985                           ;	unspecified, using default values
  7986  200001                     	org	2097153
  7987  200001  FF                 	db	255
  7988                           
  7989                           ;Config register IDLOC2 @ 0x200002
  7990                           ;	unspecified, using default values
  7991  200002                     	org	2097154
  7992  200002  FF                 	db	255
  7993                           
  7994                           ;Config register IDLOC3 @ 0x200003
  7995                           ;	unspecified, using default values
  7996  200003                     	org	2097155
  7997  200003  FF                 	db	255
  7998                           
  7999                           ;Config register IDLOC4 @ 0x200004
  8000                           ;	unspecified, using default values
  8001  200004                     	org	2097156
  8002  200004  FF                 	db	255
  8003                           
  8004                           ;Config register IDLOC5 @ 0x200005
  8005                           ;	unspecified, using default values
  8006  200005                     	org	2097157
  8007  200005  FF                 	db	255
  8008                           
  8009                           ;Config register IDLOC6 @ 0x200006
  8010                           ;	unspecified, using default values
  8011  200006                     	org	2097158
  8012  200006  FF                 	db	255
  8013                           
  8014                           ;Config register IDLOC7 @ 0x200007
  8015                           ;	unspecified, using default values
  8016  200007                     	org	2097159
  8017  200007  FF                 	db	255
  8018                           
  8019                           	psect	config
  8020                           
  8021                           ;Config register CONFIG1L @ 0x300000
  8022                           ;	unspecified, using default values
  8023                           ;	PLL Prescaler Selection bits
  8024                           ;	PLLDIV = 0x0, unprogrammed default
  8025                           ;	System Clock Postscaler Selection bits
  8026                           ;	CPUDIV = 0x0, unprogrammed default
  8027                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8028                           ;	USBDIV = 0x0, unprogrammed default
  8029  300000                     	org	3145728
  8030  300000  00                 	db	0
  8031                           
  8032                           ;Config register CONFIG1H @ 0x300001
  8033                           ;	Oscillator Selection bits
  8034                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  8035                           ;	Fail-Safe Clock Monitor Enable bit
  8036                           ;	FCMEN = 0x0, unprogrammed default
  8037                           ;	Internal/External Oscillator Switchover bit
  8038                           ;	IESO = 0x0, unprogrammed default
  8039  300001                     	org	3145729
  8040  300001  0B                 	db	11
  8041                           
  8042                           ;Config register CONFIG2L @ 0x300002
  8043                           ;	unspecified, using default values
  8044                           ;	Power-up Timer Enable bit
  8045                           ;	PWRT = 0x1, unprogrammed default
  8046                           ;	Brown-out Reset Enable bits
  8047                           ;	BOR = 0x3, unprogrammed default
  8048                           ;	Brown-out Reset Voltage bits
  8049                           ;	BORV = 0x3, unprogrammed default
  8050                           ;	USB Voltage Regulator Enable bit
  8051                           ;	VREGEN = 0x0, unprogrammed default
  8052  300002                     	org	3145730
  8053  300002  1F                 	db	31
  8054                           
  8055                           ;Config register CONFIG2H @ 0x300003
  8056                           ;	Watchdog Timer Enable bit
  8057                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8058                           ;	Watchdog Timer Postscale Select bits
  8059                           ;	WDTPS = 0xF, unprogrammed default
  8060  300003                     	org	3145731
  8061  300003  1E                 	db	30
  8062                           
  8063                           ; Padding undefined space
  8064  300004                     	org	3145732
  8065  300004  FF                 	db	255
  8066                           
  8067                           ;Config register CONFIG3H @ 0x300005
  8068                           ;	unspecified, using default values
  8069                           ;	CCP2 MUX bit
  8070                           ;	CCP2MX = 0x1, unprogrammed default
  8071                           ;	PORTB A/D Enable bit
  8072                           ;	PBADEN = 0x1, unprogrammed default
  8073                           ;	Low-Power Timer 1 Oscillator Enable bit
  8074                           ;	LPT1OSC = 0x0, unprogrammed default
  8075                           ;	MCLR Pin Enable bit
  8076                           ;	MCLRE = 0x1, unprogrammed default
  8077  300005                     	org	3145733
  8078  300005  83                 	db	131
  8079                           
  8080                           ;Config register CONFIG4L @ 0x300006
  8081                           ;	Stack Full/Underflow Reset Enable bit
  8082                           ;	STVREN = 0x1, unprogrammed default
  8083                           ;	Single-Supply ICSP Enable bit
  8084                           ;	LVP = OFF, Single-Supply ICSP disabled
  8085                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8086                           ;	ICPRT = 0x0, unprogrammed default
  8087                           ;	Extended Instruction Set Enable bit
  8088                           ;	XINST = 0x0, unprogrammed default
  8089                           ;	Background Debugger Enable bit
  8090                           ;	DEBUG = 0x1, unprogrammed default
  8091  300006                     	org	3145734
  8092  300006  81                 	db	129
  8093                           
  8094                           ; Padding undefined space
  8095  300007                     	org	3145735
  8096  300007  FF                 	db	255
  8097                           
  8098                           ;Config register CONFIG5L @ 0x300008
  8099                           ;	unspecified, using default values
  8100                           ;	Code Protection bit
  8101                           ;	CP0 = 0x1, unprogrammed default
  8102                           ;	Code Protection bit
  8103                           ;	CP1 = 0x1, unprogrammed default
  8104                           ;	Code Protection bit
  8105                           ;	CP2 = 0x1, unprogrammed default
  8106                           ;	Code Protection bit
  8107                           ;	CP3 = 0x1, unprogrammed default
  8108  300008                     	org	3145736
  8109  300008  0F                 	db	15
  8110                           
  8111                           ;Config register CONFIG5H @ 0x300009
  8112                           ;	unspecified, using default values
  8113                           ;	Boot Block Code Protection bit
  8114                           ;	CPB = 0x1, unprogrammed default
  8115                           ;	Data EEPROM Code Protection bit
  8116                           ;	CPD = 0x1, unprogrammed default
  8117  300009                     	org	3145737
  8118  300009  C0                 	db	192
  8119                           
  8120                           ;Config register CONFIG6L @ 0x30000A
  8121                           ;	unspecified, using default values
  8122                           ;	Write Protection bit
  8123                           ;	WRT0 = 0x1, unprogrammed default
  8124                           ;	Write Protection bit
  8125                           ;	WRT1 = 0x1, unprogrammed default
  8126                           ;	Write Protection bit
  8127                           ;	WRT2 = 0x1, unprogrammed default
  8128                           ;	Write Protection bit
  8129                           ;	WRT3 = 0x1, unprogrammed default
  8130  30000A                     	org	3145738
  8131  30000A  0F                 	db	15
  8132                           
  8133                           ;Config register CONFIG6H @ 0x30000B
  8134                           ;	unspecified, using default values
  8135                           ;	Configuration Register Write Protection bit
  8136                           ;	WRTC = 0x1, unprogrammed default
  8137                           ;	Boot Block Write Protection bit
  8138                           ;	WRTB = 0x1, unprogrammed default
  8139                           ;	Data EEPROM Write Protection bit
  8140                           ;	WRTD = 0x1, unprogrammed default
  8141  30000B                     	org	3145739
  8142  30000B  E0                 	db	224
  8143                           
  8144                           ;Config register CONFIG7L @ 0x30000C
  8145                           ;	unspecified, using default values
  8146                           ;	Table Read Protection bit
  8147                           ;	EBTR0 = 0x1, unprogrammed default
  8148                           ;	Table Read Protection bit
  8149                           ;	EBTR1 = 0x1, unprogrammed default
  8150                           ;	Table Read Protection bit
  8151                           ;	EBTR2 = 0x1, unprogrammed default
  8152                           ;	Table Read Protection bit
  8153                           ;	EBTR3 = 0x1, unprogrammed default
  8154  30000C                     	org	3145740
  8155  30000C  0F                 	db	15
  8156                           
  8157                           ;Config register CONFIG7H @ 0x30000D
  8158                           ;	unspecified, using default values
  8159                           ;	Boot Block Table Read Protection bit
  8160                           ;	EBTRB = 0x1, unprogrammed default
  8161  30000D                     	org	3145741
  8162  30000D  40                 	db	64
  8163                           tosu	equ	0xFFF
  8164                           tosh	equ	0xFFE
  8165                           tosl	equ	0xFFD
  8166                           stkptr	equ	0xFFC
  8167                           pclatu	equ	0xFFB
  8168                           pclath	equ	0xFFA
  8169                           pcl	equ	0xFF9
  8170                           tblptru	equ	0xFF8
  8171                           tblptrh	equ	0xFF7
  8172                           tblptrl	equ	0xFF6
  8173                           tablat	equ	0xFF5
  8174                           prodh	equ	0xFF4
  8175                           prodl	equ	0xFF3
  8176                           indf0	equ	0xFEF
  8177                           postinc0	equ	0xFEE
  8178                           postdec0	equ	0xFED
  8179                           preinc0	equ	0xFEC
  8180                           plusw0	equ	0xFEB
  8181                           fsr0h	equ	0xFEA
  8182                           fsr0l	equ	0xFE9
  8183                           wreg	equ	0xFE8
  8184                           indf1	equ	0xFE7
  8185                           postinc1	equ	0xFE6
  8186                           postdec1	equ	0xFE5
  8187                           preinc1	equ	0xFE4
  8188                           plusw1	equ	0xFE3
  8189                           fsr1h	equ	0xFE2
  8190                           fsr1l	equ	0xFE1
  8191                           bsr	equ	0xFE0
  8192                           indf2	equ	0xFDF
  8193                           postinc2	equ	0xFDE
  8194                           postdec2	equ	0xFDD
  8195                           preinc2	equ	0xFDC
  8196                           plusw2	equ	0xFDB
  8197                           fsr2h	equ	0xFDA
  8198                           fsr2l	equ	0xFD9
  8199                           status	equ	0xFD8

Data Sizes:
    Strings     130
    Constant    10
    Data        2
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      94
    BANK0           160     38     153
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> texto_LCD(BANK0[40]), text(BANK0[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> texto_LCD(BANK0[40]), text(BANK0[40]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> coordinate_z(BANK0[3]), coordinate_y(BANK0[3]), coordinate_x(BANK0[3]), angle(COMRAM[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[9]), STR_7(CODE[30]), 
		 -> STR_6(CODE[24]), STR_5(CODE[24]), STR_4(CODE[17]), STR_3(CODE[14]), 
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> texto_LCD(BANK0[40]), text(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    readI2C@Data	PTR unsigned char  size(2) Largest target is 1
		 -> data1(BANK0[1]), 

    writeI2C@Data	PTR unsigned char  size(2) Largest target is 2047
		 -> data2(BANK0[4]), d1(BANK0[1]), setPWMFreq@newmode(BANK0[1]), data1(BANK0[1]), 
		 -> setPWMFreq@prescale(BANK0[1]), RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _receive in COMRAM

    _receive->_algoritm
    _algoritm->_mover_servo
    _mover_servo->i2_sprintf
    i2_writeI2C->i2_sendI2C
    i2_stopI2C->i2_readyI2C
    i2_startI2C->i2_readyI2C
    i2_sendI2C->i2_readyI2C
    _map->___wmul
    _impresion_datos->i2_sprintf
    i2_start->i2_strlen
    i2_sprintf->i2___lwmod
    i2___lwmod->i2___lwdiv
    i2_PrintDataLCD->i2_strlen
    i2_WriteLCD->i2_LCD
    i2_SettingsLCD->i2_LCD
    _atoi->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_settings
    _settings->_setPWMFreq
    _start->_strlen
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setPWMFreq->___fldiv
    _writeI2C->_sendI2C
    _readI2C->_receiveI2C
    _stopI2C->_readyI2C
    _startI2C->_readyI2C
    _sendI2C->_readyI2C
    _repeatedStart->_readyI2C
    _receiveI2C->_readyI2C
    ___flsub->___fladd
    _PrintDataLCD->_strlen
    _WriteLCD->_LCD
    _SettingsLCD->_LCD

Critical Paths under _receive in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _receive in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _receive in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _receive in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _receive in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _receive in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receive in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receive in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14679
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             2     2      0   14679
                                             36 BANK0      2     2      0
                       _PrintDataLCD
                        _SettingsLCD
                         _setPWMFreq
                            _sprintf
                              _start
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0     242
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    17      4    2275
                                             12 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _setPWMFreq                                          11     7      4   10123
                                             25 BANK0     11     7      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                            ___fltol
                            _readI2C
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _writeI2C                                             8     3      5    1401
                                              2 BANK0      8     3      5
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _readI2C                                              8     3      5     494
                                              3 BANK0      8     3      5
                         _receiveI2C
                      _repeatedStart
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      22
                                              1 BANK0      1     1      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _repeatedStart                                        0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _receiveI2C                                           2     2      0      45
                                              1 BANK0      2     2      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _readyI2C                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             16 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2414
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _PrintDataLCD                                         0     0      0     506
                        _SettingsLCD
                           _WriteLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _WriteLCD                                             1     1      0     132
                                              2 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     132
                                              2 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0      88
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _receive                                              8     8      0   10932
                                             50 COMRAM     8     8      0
                           _algoritm
                     i2_PrintDataLCD
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (7) _algoritm                                             2     2      0    8997
                                             48 COMRAM     2     2      0
                               _atoi
                    _impresion_datos
                        _mover_servo
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (8) _mover_servo                                          6     2      4    3407
                                             42 COMRAM     6     2      4
                                _map
                          i2_sprintf
                            i2_start
                         i2_writeI2C
 ---------------------------------------------------------------------------------
 (9) i2_writeI2C                                           8     3      5     189
                                              2 COMRAM     8     3      5
                          i2_sendI2C
                         i2_startI2C
                          i2_stopI2C
 ---------------------------------------------------------------------------------
 (10) i2_stopI2C                                           0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (10) i2_startI2C                                          0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (10) i2_sendI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (11) i2_readyI2C                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _map                                                 10     0     10    1449
                                             14 COMRAM    10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _impresion_datos                                      0     0      0    2998
                               _atoi
                     i2_PrintDataLCD
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (7) i2_start                                              0     0      0     142
                           i2_strlen
 ---------------------------------------------------------------------------------
 (7) i2_sprintf                                           39    17     22    1387
                                             12 COMRAM    30     8     22
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_PrintDataLCD                                       0     0      0     406
                      i2_SettingsLCD
                         i2_WriteLCD
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_WriteLCD                                           1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (8) i2_SettingsLCD                                        1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LCD                                                2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) _atoi                                                 7     5      2    1063
                                             14 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (10) _isdigit                                             3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     463
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _settings
     _PrintDataLCD
       _SettingsLCD
         _LCD
       _WriteLCD
         _LCD
       _strlen
     _SettingsLCD
       _LCD
     _setPWMFreq
       ___fladd
       ___fldiv
       ___flge
       ___flsub
         ___fladd
       ___fltol
       _readI2C
         _receiveI2C
           _readyI2C
         _repeatedStart
           _readyI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
       _writeI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _start
       _strlen
     _writeI2C
       _sendI2C
         _readyI2C
       _startI2C
         _readyI2C
       _stopI2C
         _readyI2C

 _receive (ROOT)
   _algoritm
     _atoi
       ___wmul
         ___awdiv (ARG)
       _isdigit
     _impresion_datos
       _atoi
         ___wmul
           ___awdiv (ARG)
         _isdigit
       i2_PrintDataLCD
         i2_SettingsLCD
           i2_LCD
         i2_WriteLCD
           i2_LCD
         i2_strlen
       i2_sprintf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
       i2_start
         i2_strlen
     _mover_servo
       _map
         ___awdiv
         ___wmul
           ___awdiv (ARG)
       i2_sprintf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
       i2_start
         i2_strlen
       i2_writeI2C
         i2_sendI2C
           i2_readyI2C
         i2_startI2C
           i2_readyI2C
         i2_stopI2C
           i2_readyI2C
     i2_sprintf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
     i2_start
       i2_strlen
   i2_PrintDataLCD
     i2_SettingsLCD
       i2_LCD
     i2_WriteLCD
       i2_LCD
     i2_strlen
   i2_sprintf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
   i2_start
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7      20        0.0%
DATA                 0      0      F7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 16 17:02:20 2021

            ___fldiv@aexp 00EB              ___fldiv@bexp 00EA                         _d 0058  
                       _i 0050                         _z 0048              ___fldiv@sign 00E3  
                      _d1 00D1              ___awdiv@sign 0006       ___wmul@multiplicand 000B  
      i2___lwdiv@dividend 0001                i2_WriteLCD 2A8C                       l232 2742  
                     l241 2AEC                       l250 2AC4                       l163 2ACA  
                     l228 26FA                       l164 2ACA                       l253 2AE4  
                     l270 2976                       l238 24C8                       l247 2A06  
                     l264 20E8                       l601 1EFC                       l337 1940  
                     l169 1C1C                       l602 1F42                       l274 1542  
                     l267 2AF4                       l292 2310                       l277 1776  
                     l286 2A8A                       l289 2A6E                       l298 2798  
                     l629 1E3C                       l910 14B6                       l912 1316  
                     l921 135C                       l826 253E                       l923 13D4  
                     l915 12DA                       l819 2536                       l924 13C2  
                     l836 2688                       l829 2680                       l856 0A7E  
                     l873 0B98                       l865 0D4E                       l857 0A6C  
                     l882 0C68                       l858 0A32                       l883 0C56  
                     l898 2884                       _GIE 007F97                       _LCD 2264  
                     _PEN 007E2A                       _SEN 007E28                       _map 2886  
                     _pos 004E                       wreg 000FE8             i2_SettingsLCD 2AA2  
                    ?_LCD 0001              ___fltol@exp1 00DC                      l1025 293E  
                    l3001 14AC                      l3011 2850                      l3021 1EAC  
                    l3101 2530                      l3031 1F3A                      l3023 1EBC  
                    l3015 1E3E                      l3111 2656                      l3103 2624  
                    l3033 1F40                      l3025 1ECA                      l3017 1E6E  
                    l3009 283E                      l2401 2AC0                      l3113 266C  
                    l3105 2638                      l3027 1EDC                      l3019 1E7E  
                    l3051 1DA2                      l3043 1D62                      l2411 2944  
                    l2403 2ADE                      l3115 2674                      l3107 2640  
                    l3029 1EEA                      l2501 0982                      l3061 1DD2  
                    l3053 1DB0                      l3045 1D8C                      l3037 1D36  
                    l2421 296E                      l2413 2948                      l2405 2AE2  
                    l3221 14B8                      l3117 267A                      l3109 2648  
                    l3301 183A                      l2431 2272                      l2511 09A0  
                    l2503 0990                      l3071 1DFC                      l3063 1DDC  
                    l3047 1D8E                      l3039 1D4E                      l2423 2972  
                    l2415 294E                      l2407 2AEE                      l3231 1586  
                    l3223 14EE                      l3311 1892                      l2441 22D0  
                    l2433 2286                      l2601 0BDC                      l2521 09B4  
                    l2513 09A4                      l2505 0994                      l3073 1E0C  
                    l3049 1D9E                      l2361 29E0                      l2417 2956  
                    l2409 2AF2                      l3241 166E                      l3233 15BC  
                    l3225 14FE                      l3081 24CA                      l3321 18FC  
                    l3313 189E                      l3305 1868                      l3401 1B92  
                    l2443 22D8                      l2435 228E                      l2427 2268  
                    l3331 2744                      l2611 0C06                      l2603 0BEA  
                    l2531 09C8                      l2523 09B8                      l2515 09A8  
                    l2507 0998                      l3075 1E1C                      l3059 1DC8  
                    l2363 29F8                      l2419 296C                      l3251 16F0  
                    l3243 16A2                      l3235 15F2                      l3227 1532  
                    l3091 2504                      l3083 24D4                      l3323 1900  
                    l3315 18A2                      l3307 186A                      l3411 1BD4  
                    l3403 1BA8                      l2445 22FE                      l2437 22A8  
                    l2429 2270                      l3333 2750                      l2621 0C38  
                    l2613 0C16                      l2605 0BEC                      l2541 0A1A  
                    l2533 09CC                      l2525 09BC                      l2517 09AC  
                    l2509 099C                      l2461 08AA                      l3077 1E2C  
                    l3069 1DF0                      l3261 175C                      l3253 170A  
                    l3245 16B2                      l3237 1628                      l3229 1552  
                    l3093 250A                      l3085 24E6                      l3317 18AA  
                    l3309 187C                      l3325 1912                      l3341 26EE  
                    l3421 1BE6                      l3413 1BDA                      l3405 1BC2  
                    l2447 2306                      l2439 22B0                      l3335 275C  
                    l2631 0C92                      l2623 0C4E                      l2607 0BFA  
                    l2615 0C18                      l2551 0A5E                      l2543 0A2A  
                    l2527 09C0                      l2519 09B0                      l2535 09D0  
                    l2471 08DE                      l2463 08AC                      l2359 29E0  
                    l3255 1726                      l3247 16CC                      l3239 165E  
                    l3095 2520                      l3087 24EE                      l3319 18F0  
                    l3327 1934                      l3271 17AC                      l3263 1778  
                    l3343 2708                      l3423 1BE8                      l3415 1BE0  
                    l3407 1BC8                      l2449 2308                      l2801 2A76  
                    l3337 276E                      l2641 0D0E                      l2633 0CCC  
                    l2609 0C02                      l2617 0C26                      l2553 0A60  
                    l2545 0A40                      l2537 09D4                      l2529 09C4  
                    l2481 0910                      l2465 08BC                      l2473 08E6  
                    l2457 088E                      l3257 1742                      l3249 16E6  
                    l3097 2528                      l3089 24F6                      l3273 17B4  
                    l3265 1786                      l3345 2718                      l3425 1BFE  
                    l3417 1BE2                      l3409 1BCE                      l3339 2772  
                    l2651 0D2E                      l2643 0D12                      l2627 0C78  
                    l2635 0CCE                      l2619 0C2A                      l2571 0AE8  
                    l2563 0AB0                      l2555 0A6A                      l2547 0A4C  
                    l2539 09FE                      l2491 0946                      l2483 0916  
                    l2475 08F6                      l2467 08CC                      l2459 089C  
                    l2395 2AE6                      l3259 1754                      l3099 252A  
                    l3291 182A                      l3275 17C0                      l3283 17CC  
                    l3267 1798                      l3347 271C                      l3427 1C14  
                    l3419 1BE4                      l2901 11C0                      l2653 0D3C  
                    l2645 0D20                      l2637 0CDE                      l2629 0C84  
                    l2573 0AEC                      l2565 0AC0                      l2557 0A8C  
                    l2581 0B0C                      l2549 0A50                      l2493 0956  
                    l2485 0924                      l2477 08FC                      l2469 08DC  
                    l2397 2AEA                      l3293 182E                      l3285 1804  
                    l3269 17A4                      l3429 1C18                      l3381 1B06  
                    l2831 2906                      l2911 1200                      l2903 11D0  
                    l2655 0D3E                      l2647 0D26                      l2639 0CEE  
                    l2583 0B32                      l2591 0B88                      l2575 0AFA  
                    l2567 0ACE                      l2559 0A9C                      l2495 0958  
                    l2487 0926                      l2479 090E                      l2399 2ABC  
                    l3295 1836                      l3287 1814                      l3391 1B3E  
                    l3383 1B0E                      l2833 2912                      l2913 1210  
                    l2921 1230                      l2905 11D2                      l2649 0D28  
                    l2593 0BAE                      l2585 0B66                      l2577 0AFC  
                    l2569 0ADC                      l2489 0936                      l2497 0960  
                    l2841 202A                      l3289 181C                      l3393 1B40  
                    l3385 1B10                      l2835 2918                      l2931 126E  
                    l2923 1240                      l2915 1218                      l2907 11DA  
                    l2595 0BBE                      l2587 0B68                      l2579 0B06  
                    l2499 0970                      l2843 204C                      l3395 1B4E  
                    l3387 1B2A                      l3555 2AC6                      l2837 2930  
                    l2941 12B6                      l2933 127E                      l2925 1240  
                    l2917 121C                      l2909 11EA                      l2589 0B78  
                    l2861 20CE                      l2845 2058                      l3397 1B6A  
                    l3389 1B2C                      ?_map 000F                      l2951 1304  
                    l2943 12CA                      l2935 128E                      l2871 111C  
                    l2599 0BD2                      l2855 20A0                      l2847 207C  
                    l2791 2486                      l2783 2452                      l3399 1B7C  
                    l2961 134C                      l2953 1314                      l2945 12D8  
                    l2937 129E                      l2929 1254                      l2881 115A  
                    l2873 112A                      l2849 2090                      l2857 20AA  
                    l2793 248A                      l2785 2466                      l2867 2A58  
                    l2971 138C                      l2963 135A                      l2955 1326  
                    l2947 12E4                      l2939 12A6                      l2891 118A  
                    l2883 116A                      l2875 1138                      l2859 20CA  
                    l2795 24AA                      l2787 2472                      l2869 2A5A  
                    l2981 13FE                      l2973 13BA                      l2957 133C  
                    l2965 136C                      l2949 1302                      l2893 1190  
                    l2885 116C                      l2877 113A                      l2797 24AE  
                    l2789 2480                      l2799 2A74                      l2991 1476  
                    l2983 1428                      l2967 137A                      l2959 1342  
                    l2895 119E                      l2879 114A                      l2887 1174  
                    l2993 1492                      l2977 13E4                      l2985 142C  
                    l2969 137E                      l2897 11A0                      l2889 1184  
                    l2995 1496                      l2987 1446                      l2979 13F0  
                    l2899 11B0                      l2997 14A4                      l2989 145C  
                    l2999 14AA                      STR_1 0884                      STR_2 0884  
                    STR_3 0852                      STR_4 0841                      STR_5 0829  
                    STR_6 0829                      STR_7 080B                      STR_8 087B  
                    STR_9 086E                      u2000 0C4E                      u2001 0C4A  
                    u2010 0C64                      u2011 0C60                      u2020 0C78  
                    u2021 0C74                      u2030 0C92                      u2031 0C8E  
                    u2040 0CCC                      u3000 2742                      u2041 0CC8  
                    u3001 273E                      u2050 0CDE                      u2051 0CDA  
                    u2060 0CEE                      u2061 0CEA                      u2070 0D0E  
                    u2071 0D0A                      u2320 2930                      u2400 11C0  
                    u2080 0D20                      _LATD 000F8C                      u2321 292C  
                    u2401 11BC                      u2081 0D1C                      _LATE 000F8D  
                    u2410 1200                      u2090 0D3C                      u2330 207C  
                    u2250 24AA                      u2411 11FC                      u2091 0D38  
                    u2331 2078                      u2251 24A6                      u2500 138C  
                    u2420 1240                      u2340 20CA                      u2501 1388  
                    u2421 123C                      u2341 20C6                      u2510 13BA  
                    u2430 12B6                      u2350 1138                      u1710 08AA  
                    u2511 13B6                      u2431 12B2                      u2351 1134  
                    u1711 08A6                      u2520 13D0                      u2440 12D8  
                    u2360 114A                      u2600 1ECA                      u1800 09FE  
                    u1720 08BC                      u2521 13CC                      u2441 12D4  
                    u2361 1146                      u2601 1EC6                      u1801 09FA  
                    u1721 08B8                      u1705 296C                      u2530 13E4  
                    u2450 1302                      u2370 115A                      u2610 1EEA  
                    u1810 0A16                      u1730 08CC                      u1650 29F8  
                    u2531 13E0                      u2451 12FE                      u2371 1156  
                    u2611 1EE6                      u1811 0A10                      u1731 08C8  
                    u1651 29F4                      u3307 1BB4                      u2540 13FE  
                    u2460 1326                      u2380 119E                      u2620 1F3A  
                    u1900 0AFA                      u1820 0A18                      u1740 090E  
                    u1660 2A06                      u2700 24E6                      u2541 13FA  
                    u2461 1322                      u2381 119A                      u2621 1F36  
                    u1901 0AF6                      u1741 090A                      u1661 2A02  
                    u3317 174A                      u2701 24E2                      u2550 1446  
                    u2470 133C                      u2390 11B0                      u1910 0B32  
                    u1830 0A40                      u1750 0924                      u2630 1D4E  
                    u2710 2504                      u2551 1442                      u2471 1338  
                    u2391 11AC                      u1911 0B2E                      u1831 0A3C  
                    u1751 0920                      u2631 1D4A                      u3327 24BA  
                    u2711 2500                      u2560 1476                      u2480 135A  
                    u1920 0B78                      u1840 0A5E                      u1760 0936  
                    u2640 1D82                      u2720 2520                      u2561 1472  
                    u2481 1356                      u1921 0B74                      u1841 0A5A  
                    u1761 0932                      u3337 20DA                      u2721 251C  
                    u2570 14A4                      u2490 137A                      u1930 0BAE  
                    u1850 0A7E                      u1770 0946                      u2650 1DB0  
                    u1690 296A                      u2730 2638                      u3347 226A  
                    u2571 14A0                      u2491 1376                      u1931 0BAA  
                    u1851 0A7A                      u1771 0942                      u2651 1DAC  
                    u1691 2964                      u2731 2634                      u2580 1E6E  
                    u1940 0BBE                      u1860 0A8C                      u1780 0982  
                    u2660 1DC4                      u2900 16A2                      u2740 2656  
                    u3357 2288                      u2581 1E6A                      u1941 0BBA  
                    u1861 0A88                      u1781 097E                      u2661 1DC0  
                    u2645 1D78                      u2901 169E                      u2741 2652  
                    u2590 1EAC                      u1950 0BEA                      u1870 0A9C  
                    u1790 0990                      u2670 1DEC                      u2750 266C  
                    u2910 1798                      u3367 22AA                      u2591 1EA8  
                    u1951 0BE6                      u1871 0A98                      u1791 098C  
                    u2671 1DE8                      u2751 2668                      u2911 1794  
                    u1960 0BFA                      u1880 0ACE                      u2680 1E0C  
                    u2920 182A                      u3377 22D2                      u1961 0BF6  
                    u1881 0ACA                      u2681 1E08                      u2921 1826  
                    u3297 1B72                      u1970 0C16                      u1890 0ADC  
                    u2690 1E1C                      u2930 1864                      u3387 2300  
                    u1971 0C12                      u1891 0AD8                      u2691 1E18  
                    u2931 1860                      _PEIE 007F96                      u1980 0C26  
                    u2940 187C                      u3397 230A                      u1981 0C22  
                    u2941 1878                      u1990 0C38                      u2870 14EE  
                    u2950 1892                      u1991 0C34                      u2871 14EA  
                    u2951 188E                      u2880 1532                      u2960 1912  
                    u2881 152E                      u2961 190E                      u2890 165E  
                    u2970 1934                      u2891 165A                      u2971 1930  
                    _RCIE 007CED                      u2980 2798                      _RCIF 007CF5  
                    _RCEN 007E2B                      u2981 2794                      u2990 2708  
                    u2991 2704                      _RSEN 007E29                      _TXIF 007CF4  
       mover_servo@angulo 002D                      _dato 004C                      _flag 0059  
                    _atoi 1C1E                      _coor 0044                      _main 2AC6  
              i2_readyI2C 2A08                      _text 009C        i2___lwdiv@quotient 0005  
                    fsr2h 000FDA                      indf2 000FDF                      map@x 000F  
                    fsr2l 000FD9                      btemp 005F            i2_PrintDataLCD 27EC  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
         ___fldiv@new_exp 00E4           __end_ofi2_start 27EC              ___param_bank 000000  
                   ??_LCD 00D3                i2_startI2C 2AFE                     ??_map 0019  
              i2_writeI2C 25B4           writeI2C@Address 00DC             ___fltol@sign1 00DB  
                   ?_atoi 000F           __end_of___fladd 0D50                     ?_main 0001  
                   _ACKEN 007E2C                     _ACKDT 007E2D           __end_of___fldiv 14B8  
         __end_of___awdiv 21AE                     STR_10 0860           __end_of___flsub 2886  
         __end_of___fltol 1E3E           ___awdiv@divisor 0003                     _LATE0 007C68  
                   _LATE1 007C69         setPWMFreq@newmode 00F2           __end_of___lwdiv 2540  
                   i2l201 0FF0           __end_of___lwmod 268A                     i2l214 111A  
                   i2l223 242A                     i2l232 27EA                     i2l217 2024  
                   i2l241 2B04                     i2l250 2ADC                     i2l340 2A52  
                   i2l228 27A6                     i2l253 2AFC                     i2l238 2622  
                   i2l247 2A2C                     i2l183 0E74                     i2l280 28C6  
                   i2l337 1B04                     i2l283 2262                     i2l292 23B4  
                   i2l286 2AB6                     i2l289 2AA0                     i2l298 283C  
                   i2l571 21AC                     i2l826 25B2                     i2l819 25AA  
                   i2l836 26EC                     i2l829 26E4           ___awdiv@counter 0005  
                   _RCREG 000FAE                     i2_LCD 2312                     _RCSTA 000FAB  
                   _SPBRG 000FAF                     _TRISD 000F95                     _TRISE 000F96  
                   _TXREG 000FAD                     _TXSTA 000FAC               readI2C@Data 00D7  
                   _Angle 0046            ?i2_SettingsLCD 0001                     _data1 00D2  
                   _data2 00C4           __end_of_readI2C 20EA                     _angle 005A  
         __end_of_dpowers 080B                     _count 0056           __end_of_isdigit 29E0  
         __end_of_sendI2C 2AC6           __end_of_receive 244E                     atoi@a 0014  
              _Coordinate 006C                     atoi@s 000F                     _start 26EE  
                   tablat 000FF5    __end_ofi2_PrintDataLCD 283E           __end_of_stopI2C 2AE6  
                   ttemp5 0060                     ttemp6 0063                     ttemp7 0067  
                   status 000FD8                     wtemp8 0060           __end_of_sprintf 1942  
      __size_ofi2___lwdiv 0074        __size_ofi2___lwmod 0064          __end_ofi2_strlen 29AE  
         __initialization 28C8              __end_of_atoi 1D36              __end_of_main 2AD2  
      __size_ofi2_sendI2C 000C               ?i2_WriteLCD 0001     __end_of_repeatedStart 2AF6  
                  ??_atoi 0011                    ??_main 00F9             __activetblptr 000002  
      __size_ofi2_stopI2C 0008                i2sprintf@c 002A                i2sprintf@f 000F  
                  ?i2_LCD 0001        __size_ofi2_sprintf 01C4                i2strlen@cp 0003  
          receiveI2C@flag 00D4                    _ADCON1 000FC1          ___awdiv@dividend 0001  
                  ?_start 0001          __end_of_WriteLCD 2A70                    i2l1013 1D2C  
                  i2l1014 1D34                    i2l1025 29AC                    i2l1019 29DE  
                  i2l3201 1A5A                    i2l3121 27B4                    i2l3211 1AC0  
                  i2l3203 1A66                    i2l3123 27C4                    i2l3131 25D2  
                  i2l3213 1AC4                    i2l3205 1A6A                    i2l3125 27C8  
                  i2l3141 260A                    i2l3133 25E0                    i2l3151 281A  
                  i2l3143 27EC                    i2l3207 1A72                    i2l3215 1AD6  
                  i2l3119 279A                    i2l3135 25E4                    i2l3127 25B6  
                  i2l3145 27F8                    i2l3209 1AB4                    i2l3217 1AF8  
                  i2l3161 1974                    i2l3153 1942                    i2l3137 25E8  
                  i2l3129 25C6                    i2l2451 2A2E                    i2l2371 2314  
                  i2l3147 2804                    i2l3163 197C                    i2l3155 194E  
                  i2l3139 2606                    i2l2453 2A4A                    i2l2381 2350  
                  i2l2373 231C                    i2l3149 2816                    i2l3181 19F2  
                  i2l3165 1988                    i2l3173 1994                    i2l3157 1960  
                  i2l2365 2A08                    i2l3501 0F64                    i2l2711 29D8  
                  i2l2703 29B0                    i2l2391 23AA                    i2l2383 2358  
                  i2l2375 231E                    i2l3191 1A02                    i2l3183 19F6  
                  i2l3175 19CC                    i2l3159 196C                    i2l2367 2A08  
                  i2l3351 21E2                    i2l3511 0FB0                    i2l3503 0F70  
                  i2l3431 0D50                    i2l2705 29B4                    i2l2393 23AC  
                  i2l2385 2376                    i2l2377 2330                    i2l3185 19FE  
                  i2l3177 19DC                    i2l2369 2A1E                    i2l2721 2AD8  
                  i2l3361 222C                    i2l3353 21E6                    i2l3513 0FC4  
                  i2l3505 0F84                    i2l3521 1008                    i2l3441 0D96  
                  i2l3433 0D62                    i2l2707 29C4                    i2l2811 1C5A  
                  i2l2803 1C1E                    i2l2387 237E                    i2l2379 2338  
                  i2l2731 2A8E                    i2l3195 1A30                    i2l3179 19E4  
                  i2l3371 1FCA                    i2l2715 2AFE                    i2l2723 2AF6  
                  i2l3363 2248                    i2l3355 21EC                    i2l3531 1076  
                  i2l3523 101A                    i2l3515 0FD0                    i2l3507 0F90  
                  i2l3451 0DDE                    i2l3443 0D9A                    i2l3435 0D6A  
                  i2l2709 29D4                    i2l2821 1CAC                    i2l2813 1C66  
                  i2l2805 1C22                    i2l2389 23A2                    i2l2733 2A90  
                  i2l2741 2562                    i2l3197 1A32                    i2l3373 1FCE  
                  i2l2661 20EE                    i2l2717 2B02                    i2l2725 2AFA  
                  i2l3365 224C                    i2l3357 220C                    i2l3349 21AE  
                  i2l3541 10B0                    i2l3525 1026                    i2l3517 0FE4  
                  i2l3509 0FA4                    i2l3461 0E2C                    i2l3453 0DF0  
                  i2l3437 0D7C                    i2l3445 0DB0                    i2l2815 1C80  
                  i2l2807 1C26                    i2l2727 2AA4                    i2l2751 259C  
                  i2l2743 256A                    i2l2735 2540                    i2l3199 1A44  
                  i2l3375 2018                    i2l3367 1F44                    i2l2671 211E  
                  i2l2663 20FC                    i2l2719 2AD4                    i2l3359 2228  
                  i2l3551 110E                    i2l3543 10CA                    i2l3535 107E  
                  i2l3519 0FF0                    i2l3463 0E38                    i2l3455 0DFC  
                  i2l3447 0DC0                    i2l3471 0E78                    i2l3439 0D84  
                  i2l2825 1CE4                    i2l2817 1C8A                    i2l2809 1C40  
                  i2l2729 2AA6                    i2l2753 259E                    i2l2745 2578  
                  i2l2737 2548                    i2l2761 26A4                    i2l3377 201C  
                  i2l3369 1F80                    i2l2681 214C                    i2l2673 2122  
                  i2l2665 2104                    i2l3553 1116                    i2l3545 10E6  
                  i2l3529 1046                    i2l3537 109A                    i2l3481 0EDC  
                  i2l3473 0E88                    i2l3465 0E4A                    i2l3457 0E0E  
                  i2l3449 0DD2                    i2l3561 23EA                    i2l2827 1D00  
                  i2l2819 1CA4                    i2l2755 25A4                    i2l2747 257E  
                  i2l2739 255A                    i2l2771 26DE                    i2l2763 26AC  
                  i2l3379 2020                    i2l2691 2180                    i2l2683 215A  
                  i2l2675 212A                    i2l2667 2108                    i2l2659 20EA  
                  i2l3547 10EA                    i2l3539 10AC                    i2l3491 0F14  
                  i2l3483 0EE0                    i2l3475 0E90                    i2l3467 0E56  
                  i2l3459 0E1A                    i2l3563 241E                    i2l2829 1D10  
                  i2l2773 2978                    i2l2749 2594                    i2l2765 26BA  
                  i2l2757 268A                    i2l2693 2186                    i2l2685 2160  
                  i2l2677 213C                    i2l2669 2116                    i2l3549 10FA  
                  i2l3493 0F30                    i2l3485 0EE4                    i2l3477 0EA2  
                  i2l3469 0E68                    i2l3565 2422                    i2l3557 23D8  
                  i2l2775 2984                    i2l2767 26D0                    i2l2759 269C  
                  i2l2687 2176                    i2l2679 2144                    i2l2695 218C  
                  i2l2863 2886                    i2l3495 0F34                    i2l3487 0EF8  
                  i2l3479 0EB2                    i2l3559 23E6                    i2l2777 2988  
                  i2l2769 26D8                    i2l2697 219C                    i2l2689 217E  
                  i2l3497 0F46                    i2l3489 0F00                    i2l2779 29A0  
                  i2l2699 21A4                    i2l3499 0F52           ?i2_PrintDataLCD 0001  
                  _OSCCON 000FD3                 ??i2_start 0005                    _SSPADD 000FC8  
             ?i2_readyI2C 0001                    _SSPBUF 000FC9        setPWMFreq@prescale 00F1  
        __end_of_algoritm 111C           i2writeI2C@bytes 0006              readI2C@bytes 00D9  
                  ___flge 1E3E                 ??___fladd 00DB                    ___wmul 2A2E  
        writeI2C@Register 00D5                 ??___fldiv 00DB                 ??___awdiv 0005  
             ?i2_startI2C 0001                 ??___flsub 00EB                 ??___fltol 00D7  
            ?_mover_servo 002B                 ??___lwdiv 00D7                 ??___lwmod 00DE  
                  _count1 0054                    _count2 0052          __end_of_readyI2C 2A08  
                  clear_0 28E6                    clear_1 28F2          ___awdiv@quotient 0007  
             ?i2_writeI2C 0003                    _servos 005D                    _strlen 2906  
               ??_readI2C 00DB              __pdataCOMRAM 005D                 ??_isdigit 0001  
               ??_sendI2C 00D4           ??i2_SettingsLCD 0003                 ??_receive 0033  
       __end_ofi2___lwdiv 25B4              __mediumconst 0000         __end_ofi2___lwmod 26EE  
           ??_SettingsLCD 00D5          __end_of_settings 1C1E                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8          __end_of_startI2C 2AEE  
               ??_stopI2C 00D4                 ??_sprintf 00E3          __end_of_writeI2C 24CA  
             sendI2C@data 00D4                ___flge@ff1 00D3                ___flge@ff2 00D7  
       __end_ofi2_sendI2C 2ADE                __accesstop 0060   __end_of__initialization 28F8  
            WriteLCD@word 00D5       __size_ofi2_WriteLCD 0016             i2sprintf@flag 0024  
           ___rparam_used 000001         __end_ofi2_stopI2C 2AFE             i2sprintf@prec 0025  
              ___fltol@f1 00D3            setPWMFreq@freq 00EC         __end_ofi2_sprintf 1B06  
           __end_ofi2_LCD 23B6        i2___lwmod@dividend 0008            __pcstackCOMRAM 0001  
           __end_of_start 2744  __size_of_impresion_datos 00E2                   ??i2_LCD 0001  
     __size_ofi2_readyI2C 0026                 ?i2_strlen 0001                   ??_start 00D7  
                 LCD@data 00D4                __pbssBANK0 0060       __size_ofi2_startI2C 0008  
             i2sprintf@ap 0026               i2sprintf@sp 000D       __end_of_SettingsLCD 2A8C  
     __size_ofi2_writeI2C 0070                   ?___flge 00D3              _angle_servos 0060  
                 ?___wmul 0009                 ?_WriteLCD 0001                   ?_strlen 00D3  
               ?_algoritm 0001                ??i2_strlen 0003                   _SSPCON1 000FC6  
                 _SSPCON2 000FC5                   _SSPSTAT 000FC7             ?_PrintDataLCD 0001  
              _coordinate 003B                   i2_start 279A              writeI2C@Data 00D6  
               ?_readyI2C 0001                   __Hparam 0000                   __Lparam 0000  
         __size_of___flge 0106                 ?_settings 0001                   ___fladd 088E  
                 ___fldiv 111C                   ___awdiv 20EA                 ?_startI2C 0001  
                 ___flsub 283E                   ___fltol 1D36           __size_of___wmul 0026  
                 ___lwdiv 24CA                   ___lwmod 2624              __psmallconst 0800  
               i2LCD@data 0002                   __pcinit 28C8              ??i2_WriteLCD 0003  
              ??_WriteLCD 00D5                 ?_writeI2C 00D5                   __ramtop 0800  
    __size_of_mover_servo 00B6                   __ptext0 2AC6                   __ptext1 1B06  
                 __ptext2 26EE                   __ptext3 1778                   __ptext4 2624  
                 __ptext5 24CA                   __ptext6 14B8                   __ptext7 244E  
                 __ptext8 2026                   __ptext9 2ADE              __size_of_LCD 00AE  
                 _readI2C 2026           __size_of_strlen 003A                   _dpowers 0801  
              _receiveI2C 2940              __size_of_map 0042                   _isdigit 29AE  
                 _sendI2C 2AB8                   _receive 0008                _setPWMFreq 14B8  
             _SettingsLCD 2A70                ??_algoritm 0031          ??i2_PrintDataLCD 0005  
            _Coordinate_x 0070              _Coordinate_y 0072              _Coordinate_z 006E  
                 _stopI2C 2ADE                   _sprintf 1778         ??_impresion_datos 002B  
          ??_PrintDataLCD 00D7            __pintcode_body 23B6      end_of_initialization 28F8  
            ??i2_readyI2C 0001             __Lmediumconst 0000                ??_readyI2C 00D3  
                 int_func 23B6        __end_ofi2_WriteLCD 2AA2            i2WriteLCD@word 0003  
                 postdec2 000FDD                ??_settings 00F7                   postinc0 000FEE  
                 postinc2 000FDE              ??i2_startI2C 0002                ??_startI2C 00D4  
              map@Out_Max 0017                map@Out_Min 0015                   strlen@s 00D3  
            ??i2_writeI2C 0008                ??_writeI2C 00DA               ___fladd@grs 00E2  
      __end_ofi2_readyI2C 2A2E     setPWMFreq@prescaleval 00F3                 _TRISBbits 000F93  
               _TRISCbits 000F94               ___fldiv@grs 00E6               ___fldiv@rem 00DF  
       i2___lwdiv@divisor 0003                 i2___lwdiv 2540                 i2___lwmod 268A  
       i2___lwdiv@counter 0007        __end_ofi2_startI2C 2B06              _coordinate_x 00C8  
            _coordinate_y 00CB              _coordinate_z 00CE    __size_of_repeatedStart 0008  
      __end_ofi2_writeI2C 2624                 i2_sendI2C 2AD2          mover_servo@servo 002B  
               i2_stopI2C 2AF6                 i2_sprintf 1942            __end_of___flge 1F44  
          __end_of___wmul 2A54             __pidataCOMRAM 2B06        i2writeI2C@Register 0003  
             ?_receiveI2C 0001                 _DriverPin 004A            __end_of_strlen 2940  
         readI2C@Register 00D6               ?_setPWMFreq 00EC       start_initialization 28C8  
             __end_of_LCD 2312     __end_ofi2_SettingsLCD 2AB8               __end_of_map 28C8  
              ?i2___lwdiv 0001                ?i2___lwmod 0008         __size_ofi2_strlen 0036  
               i2strlen@s 0001                ?i2_sendI2C 0001            i2writeI2C@Data 0004  
                ??___flge 00DB                ?i2_stopI2C 0001                  ??___wmul 000D  
              ?i2_sprintf 000D      __end_of_PrintDataLCD 279A             _repeatedStart 2AEE  
                ??_strlen 00D5                 ___fladd@a 00D7                 ___fladd@b 00D3  
               ___fldiv@a 00D7                 ___fldiv@b 00D3         __size_of_WriteLCD 001C  
             __pbssCOMRAM 003B              i2sprintf@val 0028                 ___flsub@a 00E7  
               ___flsub@b 00E3             __pcstackBANK0 00D3         i2___lwmod@divisor 000A  
       i2___lwmod@counter 000C         i2SettingsLCD@word 0003         __size_of_algoritm 03CC  
                ?i2_start 0001               sprintf@flag 00E4               sprintf@prec 00E5  
       __size_of_readyI2C 0028       __size_of_receiveI2C 0038          ___lwdiv@dividend 00D3  
     __size_of_setPWMFreq 02C0          receiveI2C@buffer 00D5                 __pintcode 0008  
                ?___fladd 00D3                  ?___fldiv 00D3                  ?___awdiv 0001  
                ?___flsub 00E3                  ?___fltol 00D3                  ?___lwdiv 00D3  
                ?___lwmod 00DA         __size_of_settings 0118         __size_of_startI2C 0008  
          ?_repeatedStart 0001           _impresion_datos 1F44                  ?_readI2C 00D6  
             __smallconst 0800            __size_ofi2_LCD 00A4         __size_of_writeI2C 007C  
                ?_isdigit 0001                  ?_sendI2C 0001                  ?_receive 0001  
            ?_SettingsLCD 0001                  ?_stopI2C 0001          ___lwdiv@quotient 00D7  
                ?_sprintf 00DF               ??i2___lwdiv 0005               ??i2___lwmod 000C  
          __size_of_start 0056            ___wmul@product 000D                  _LATDbits 000F8C  
             ??i2_sendI2C 0002                 map@In_Max 0013                 map@In_Min 0011  
                i2u210_40 20FC                  i2u210_41 20F8                  i2u211_40 2116  
                i2u211_41 2112                  i2u220_40 2594                  i2u212_40 213C  
                i2u220_41 2590                  i2u212_41 2138                  i2u221_40 269C  
                i2u213_40 215A                  i2u301_40 0D62                  i2u221_41 2698  
                i2u213_41 2156                  i2u301_41 0D5E                  i2u230_40 1D00  
                i2u222_40 26BA                  i2u214_40 2176                  i2u310_40 0E68  
                i2u302_40 0D7C                  i2u230_41 1CFC                  i2u222_41 26B6  
                i2u214_41 2172                  i2u310_41 0E64                  i2u302_41 0D78  
                i2u231_40 1D10                  i2u223_40 26D0                  i2u215_40 219C  
                i2u311_40 0E88                  i2u303_40 0D96                  i2u231_41 1D0C  
                i2u223_41 26CC                  i2u215_41 2198                  i2u311_41 0E84  
                i2u303_41 0D92                  i2u216_40 29C4                  i2u224_40 29A0  
                i2u320_40 101A                  i2u312_40 0EA2                  i2u304_40 0DC0  
                i2u216_41 29C0                  i2u224_41 299C                  i2u320_41 1016  
                i2u312_41 0E9E                  i2u304_41 0DBC                  i2u217_40 29D4  
                i2u321_40 1042                  i2u313_40 0EF8                  i2u305_40 0DD2  
                i2u217_41 29D0                  i2u321_41 103E                  i2u313_41 0EF4  
                i2u305_41 0DCE                  i2u226_40 1C40                  i2u218_40 255A  
                i2u322_40 10AC                  i2u314_40 0F46                  i2u306_40 0DF0  
                i2u226_41 1C3C                  i2u218_41 2556                  i2u322_41 10A8  
                i2u314_41 0F42                  i2u306_41 0DEC                  i2u227_40 1C5A  
                i2u219_40 2578                  i2u323_40 10CA                  i2u315_40 0F64  
                i2u307_40 0E0E                  i2u227_41 1C56                  i2u219_41 2574  
                i2u323_41 10C6                  i2u315_41 0F60                  i2u307_41 0E0A  
                i2u228_40 1C80                  i2u324_40 10E6                  i2u316_40 0F84  
                i2u308_40 0E2C                  i2u228_41 1C7C                  i2u324_41 10E2  
                i2u316_41 0F80                  i2u308_41 0E28                  i2u340_47 0DA4  
                i2u229_40 1CA4                  i2u325_40 110E                  i2u317_40 0FA4  
                i2u309_40 0E4A                  i2u229_41 1CA0                  i2u325_41 110A  
                i2u317_41 0FA0                  i2u309_41 0E46                  i2u341_47 2256  
                i2u318_40 0FC4                  i2u326_40 23E6                  i2u318_41 0FC0  
                i2u326_41 23E2                  i2u342_47 2614                  i2u167_40 2A1E  
                i2u319_40 0FE4                  i2u167_41 2A1A                  i2u319_41 0FE0  
                i2u343_47 2316                  i2u280_40 1960                  i2u168_40 2A2C  
                i2u280_41 195C                  i2u168_41 2A28                  i2u344_47 2332  
                i2u281_40 19F2                  i2u281_41 19EE                  i2u345_47 2352  
                i2u282_40 1A2C                  i2u282_41 1A28                  i2u346_47 2378  
                i2u283_40 1A44                  i2u283_41 1A40                  i2u347_47 23A4  
                i2u284_40 1A5A                  i2u276_40 27B4                  i2u284_41 1A56  
                i2u276_41 27B0                  i2u348_47 23AE                  i2u285_40 1AD6  
                i2u277_40 27EA                  i2u285_41 1AD2                  i2u277_41 27E6  
                i2u286_40 1AF8                  i2u278_40 2606                  i2u286_41 1AF4  
                i2u278_41 2602                  i2u279_40 283C                  i2u279_41 2838  
             ??i2_stopI2C 0002               ??i2_sprintf 0023             ??_mover_servo 002F  
               _texto_LCD 0074         ___wmul@multiplier 0009         i2writeI2C@Address 000A  
          readI2C@Address 00DD                  i2_strlen 2978             writeI2C@bytes 00D8  
        __size_ofi2_start 0052                  __Hrparam 0000     __size_of_PrintDataLCD 0056  
                __Lrparam 0000   __end_of_impresion_datos 2026           ??_repeatedStart 00D4  
        __size_of___fladd 04C2          __size_of___fldiv 039C          __size_of___awdiv 00C4  
        __size_of___flsub 0048          __size_of___fltol 0108          __size_of___lwdiv 0076  
        __size_of___lwmod 0066                  _WriteLCD 2A54               _isdigit$853 0002  
            ??_receiveI2C 00D4       __end_of_mover_servo 2264                sprintf@val 00E8  
            ??_setPWMFreq 00F0          __size_of_readI2C 00C4          __size_of_isdigit 0032  
        __size_of_sendI2C 000E          __size_of_receive 2446           ___lwdiv@divisor 00D5  
                _algoritm 0D50           ___lwdiv@counter 00D9                  __ptext10 2AE6  
                __ptext11 2AB8                  __ptext20 2744                  __ptext12 2AEE  
                __ptext21 2906                  __ptext13 2940                  __ptext30 2AFE  
                __ptext22 2A54                  __ptext14 29E0                  __ptext31 2AD2  
                __ptext23 2A70                  __ptext15 1D36                  __ptext40 27EC  
                __ptext32 2A08                  __ptext24 2264                  __ptext16 283E  
                __ptext41 2978                  __ptext33 2886                  __ptext17 088E  
                __ptext42 2A8C                  __ptext34 20EA                  __ptext26 0D50  
                __ptext18 1E3E                  __ptext43 2AA2                  __ptext35 1F44  
                __ptext27 21AE                  __ptext19 111C                  __ptext44 2312  
                __ptext36 279A                  __ptext28 25B4                  __ptext45 1C1E  
                __ptext37 1942                  __ptext29 2AF6                  __ptext46 29AE  
                __ptext38 268A                  __ptext47 2A2E                  __ptext39 2540  
        __size_of_stopI2C 0008          __size_of_sprintf 01CA              _PrintDataLCD 2744  
           i2sendI2C@data 0002                  _readyI2C 29E0             __size_of_atoi 0118  
           __size_of_main 000C   __size_ofi2_PrintDataLCD 0052        __end_of_receiveI2C 2978  
      __end_of_setPWMFreq 1778                  _settings 1B06                  int$flags 005F  
                _startI2C 2AE6                  atoi@sign 0013                  _writeI2C 244E  
                isdigit@c 0003      __size_of_SettingsLCD 001C                  intlevel2 0000  
               sprintf@ap 00E6                 sprintf@sp 00DF          ___lwmod@dividend 00DA  
        ?_impresion_datos 0001    __size_ofi2_SettingsLCD 0016               _mover_servo 21AE  
                sprintf@c 00EA                  sprintf@f 00E1           ___lwmod@divisor 00DC  
                strlen@cp 00D5           ___lwmod@counter 00DE           SettingsLCD@word 00D5  
           ___fladd@signs 00DF              ___fladd@aexp 00E0              ___fladd@bexp 00E1  

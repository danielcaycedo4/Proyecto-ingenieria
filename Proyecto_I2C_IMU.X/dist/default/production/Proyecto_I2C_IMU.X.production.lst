

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 29 18:01:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4550 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBANK0
    88  004E58                     __pidataBANK0:
    89                           	opt callstack 0
    90                           
    91                           ;initializer for _min_accely
    92                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
    93  004E58  FE00               	dw	65024
    94  004E5A  46FF               	dw	18175
    95                           
    96                           ;initializer for _max_accely
    97  004E5C  0000               	dw	0
    98  004E5E  C700               	dw	50944
    99                           
   100                           ;initializer for _min_accelx
   101                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   102  004E60  FE00               	dw	65024
   103  004E62  46FF               	dw	18175
   104                           
   105                           ;initializer for _max_accelx
   106  004E64  0000               	dw	0
   107  004E66  C700               	dw	50944
   108                           
   109                           ;initializer for _offset_gyroz
   110  004E68  0000               	dw	0
   111  004E6A  C0C0               	dw	49344
   112                           
   113                           ;initializer for _offset_gyroy
   114  004E6C  0000               	dw	0
   115  004E6E  C2BB               	dw	49851
   116                           
   117                           ;initializer for _offset_gyrox
   118  004E70  0000               	dw	0
   119  004E72  C2AC               	dw	49836
   120                           
   121                           ;initializer for _offset_accelz
   122                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   123  004E74  0C00               	dw	3072
   124  004E76  4686               	dw	18054
   125                           
   126                           ;initializer for _offset_accely
   127                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   128  004E78  4000               	dw	16384
   129  004E7A  44C9               	dw	17609
   130                           
   131                           ;initializer for _offset_accelx
   132                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   133  004E7C  0000               	dw	0
   134  004E7E  4479               	dw	17529
   135                           
   136                           ;initializer for _offset_samples
   137  004E80  0064               	dw	100
   138                           
   139                           	psect	idataBANK1
   140  004DEC                     __pidataBANK1:
   141                           	opt callstack 0
   142                           
   143                           ;initializer for _min_gyroz
   144                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   145  004DEC  FE00               	dw	65024
   146  004DEE  46FF               	dw	18175
   147                           
   148                           ;initializer for _max_gyroz
   149  004DF0  0000               	dw	0
   150  004DF2  C700               	dw	50944
   151                           
   152                           ;initializer for _min_gyroy
   153                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   154  004DF4  FE00               	dw	65024
   155  004DF6  46FF               	dw	18175
   156                           
   157                           ;initializer for _max_gyroy
   158  004DF8  0000               	dw	0
   159  004DFA  C700               	dw	50944
   160                           
   161                           ;initializer for _min_gyrox
   162                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   163  004DFC  FE00               	dw	65024
   164  004DFE  46FF               	dw	18175
   165                           
   166                           ;initializer for _max_gyrox
   167  004E00  0000               	dw	0
   168  004E02  C700               	dw	50944
   169                           
   170                           ;initializer for _min_accelz
   171                           ;Main_IMU.c: 39: void settings(void);;Main_IMU.c: 40: void writeI2C(unsigned char Addres
      +                          s,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 41: void writeI2C1(
      +                          unsigned char Address,unsigned char Register,unsigned char Data);;Main_IMU.c: 42: void s
      +                          tartI2C(void);;Main_IMU.c: 43: void readyI2C(void);;Main_IMU.c: 44: void sendI2C(unsigne
      +                          d char data);;Main_IMU.c: 45: void stopI2C(void);;Main_IMU.c: 46: void readI2C(unsigned 
      +                          char Address,unsigned char Register,unsigned char *Data,int bytes);;Main_IMU.c: 47: void
      +                           repeatedStart(void);
   172  004E04  FE00               	dw	65024
   173  004E06  46FF               	dw	18175
   174                           
   175                           ;initializer for _max_accelz
   176  004E08  0000               	dw	0
   177  004E0A  C700               	dw	50944
   178                           
   179                           	psect	mediumconst
   180  007EAE                     __pmediumconst:
   181                           	opt callstack 0
   182  007EAE  00                 	db	0
   183  007EAF                     __powers_:
   184                           	opt callstack 0
   185  007EAF  0000               	dw	0
   186  007EB1  3F80               	dw	16256
   187  007EB3  0000               	dw	0
   188  007EB5  4120               	dw	16672
   189  007EB7  0000               	dw	0
   190  007EB9  42C8               	dw	17096
   191  007EBB  0000               	dw	0
   192  007EBD  447A               	dw	17530
   193  007EBF  4000               	dw	16384
   194  007EC1  461C               	dw	17948
   195  007EC3  5000               	dw	20480
   196  007EC5  47C3               	dw	18371
   197  007EC7  2400               	dw	9216
   198  007EC9  4974               	dw	18804
   199  007ECB  9680               	dw	38528
   200  007ECD  4B18               	dw	19224
   201  007ECF  BC20               	dw	48160
   202  007ED1  4CBE               	dw	19646
   203  007ED3  6B28               	dw	27432
   204  007ED5  4E6E               	dw	20078
   205  007ED7  02F9               	dw	761
   206  007ED9  5015               	dw	20501
   207  007EDB  78EC               	dw	30956
   208  007EDD  60AD               	dw	24749
   209  007EDF  F2CA               	dw	62154
   210  007EE1  7149               	dw	29001
   211  007EE3                     __end_of__powers_:
   212                           	opt callstack 0
   213  007EE3                     __npowers_:
   214                           	opt callstack 0
   215  007EE3  0000               	dw	0
   216  007EE5  3F80               	dw	16256
   217  007EE7  CCCD               	dw	52429
   218  007EE9  3DCC               	dw	15820
   219  007EEB  D70A               	dw	55050
   220  007EED  3C23               	dw	15395
   221  007EEF  126F               	dw	4719
   222  007EF1  3A83               	dw	14979
   223  007EF3  B717               	dw	46871
   224  007EF5  38D1               	dw	14545
   225  007EF7  C5AC               	dw	50604
   226  007EF9  3727               	dw	14119
   227  007EFB  37BD               	dw	14269
   228  007EFD  3586               	dw	13702
   229  007EFF  BF95               	dw	49045
   230  007F01  33D6               	dw	13270
   231  007F03  CC77               	dw	52343
   232  007F05  322B               	dw	12843
   233  007F07  705F               	dw	28767
   234  007F09  3089               	dw	12425
   235  007F0B  E6FF               	dw	59135
   236  007F0D  2EDB               	dw	11995
   237  007F0F  E508               	dw	58632
   238  007F11  1E3C               	dw	7740
   239  007F13  4260               	dw	16992
   240  007F15  0DA2               	dw	3490
   241  007F17                     __end_of__npowers_:
   242                           	opt callstack 0
   243  007F17                     _dpowers:
   244                           	opt callstack 0
   245  007F17  0001               	dw	1
   246  007F19  0000               	dw	0
   247  007F1B  000A               	dw	10
   248  007F1D  0000               	dw	0
   249  007F1F  0064               	dw	100
   250  007F21  0000               	dw	0
   251  007F23  03E8               	dw	1000
   252  007F25  0000               	dw	0
   253  007F27  2710               	dw	10000
   254  007F29  0000               	dw	0
   255  007F2B  86A0               	dw	34464
   256  007F2D  0001               	dw	1
   257  007F2F  4240               	dw	16960
   258  007F31  000F               	dw	15
   259  007F33  9680               	dw	38528
   260  007F35  0098               	dw	152
   261  007F37  E100               	dw	57600
   262  007F39  05F5               	dw	1525
   263  007F3B  CA00               	dw	51712
   264  007F3D  3B9A               	dw	15258
   265  007F3F                     __end_of_dpowers:
   266                           	opt callstack 0
   267  0000                     _SSPBUF	set	4041
   268  0000                     _TXREG	set	4013
   269  0000                     _TXSTA	set	4012
   270  0000                     _RCSTA	set	4011
   271  0000                     _SPBRG	set	4015
   272  0000                     _TRISCbits	set	3988
   273  0000                     _SSPADD	set	4040
   274  0000                     _SSPCON2	set	4037
   275  0000                     _SSPCON1	set	4038
   276  0000                     _SSPSTAT	set	4039
   277  0000                     _TRISBbits	set	3987
   278  0000                     _ADCON1	set	4033
   279  0000                     _OSCCON	set	4051
   280  0000                     _ACKEN	set	32300
   281  0000                     _ACKDT	set	32301
   282  0000                     _RCEN	set	32299
   283  0000                     _RSEN	set	32297
   284  0000                     _PEN	set	32298
   285  0000                     _SEN	set	32296
   286  0000                     _TXIF	set	31988
   287  007F3F                     STR_1:
   288  007F3F  61                 	db	97	;'a'
   289  007F40  78                 	db	120	;'x'
   290  007F41  2C                 	db	44
   291  007F42  20                 	db	32
   292  007F43  61                 	db	97	;'a'
   293  007F44  79                 	db	121	;'y'
   294  007F45  2C                 	db	44
   295  007F46  20                 	db	32
   296  007F47  61                 	db	97	;'a'
   297  007F48  7A                 	db	122	;'z'
   298  007F49  2C                 	db	44
   299  007F4A  20                 	db	32
   300  007F4B  74                 	db	116	;'t'
   301  007F4C  2C                 	db	44
   302  007F4D  20                 	db	32
   303  007F4E  67                 	db	103	;'g'
   304  007F4F  78                 	db	120	;'x'
   305  007F50  2C                 	db	44
   306  007F51  20                 	db	32
   307  007F52  67                 	db	103	;'g'
   308  007F53  79                 	db	121	;'y'
   309  007F54  2C                 	db	44
   310  007F55  20                 	db	32
   311  007F56  67                 	db	103	;'g'
   312  007F57  7A                 	db	122	;'z'
   313  007F58  3A                 	db	58	;':'
   314  007F59  20                 	db	32
   315  007F5A  25                 	db	37
   316  007F5B  2E                 	db	46
   317  007F5C  33                 	db	51	;'3'
   318  007F5D  66                 	db	102	;'f'
   319  007F5E  20                 	db	32
   320  007F5F  25                 	db	37
   321  007F60  2E                 	db	46
   322  007F61  33                 	db	51	;'3'
   323  007F62  66                 	db	102	;'f'
   324  007F63  20                 	db	32
   325  007F64  25                 	db	37
   326  007F65  2E                 	db	46
   327  007F66  33                 	db	51	;'3'
   328  007F67  66                 	db	102	;'f'
   329  007F68  20                 	db	32
   330  007F69  25                 	db	37
   331  007F6A  2E                 	db	46
   332  007F6B  33                 	db	51	;'3'
   333  007F6C  66                 	db	102	;'f'
   334  007F6D  20                 	db	32
   335  007F6E  25                 	db	37
   336  007F6F  2E                 	db	46
   337  007F70  33                 	db	51	;'3'
   338  007F71  66                 	db	102	;'f'
   339  007F72  20                 	db	32
   340  007F73  25                 	db	37
   341  007F74  2E                 	db	46
   342  007F75  33                 	db	51	;'3'
   343  007F76  66                 	db	102	;'f'
   344  007F77  20                 	db	32
   345  007F78  25                 	db	37
   346  007F79  2E                 	db	46
   347  007F7A  33                 	db	51	;'3'
   348  007F7B  66                 	db	102	;'f'
   349  007F7C  0A                 	db	10
   350  007F7D  00                 	db	0
   351  007F7E                     STR_2:
   352  007F7E  49                 	db	73	;'I'
   353  007F7F  4E                 	db	78	;'N'
   354  007F80  49                 	db	73	;'I'
   355  007F81  43                 	db	67	;'C'
   356  007F82  49                 	db	73	;'I'
   357  007F83  41                 	db	65	;'A'
   358  007F84  4C                 	db	76	;'L'
   359  007F85  49                 	db	73	;'I'
   360  007F86  5A                 	db	90	;'Z'
   361  007F87  41                 	db	65	;'A'
   362  007F88  4E                 	db	78	;'N'
   363  007F89  44                 	db	68	;'D'
   364  007F8A  4F                 	db	79	;'O'
   365  007F8B  20                 	db	32
   366  007F8C  41                 	db	65	;'A'
   367  007F8D  20                 	db	32
   368  007F8E  43                 	db	67	;'C'
   369  007F8F  4F                 	db	79	;'O'
   370  007F90  4D                 	db	77	;'M'
   371  007F91  55                 	db	85	;'U'
   372  007F92  4E                 	db	78	;'N'
   373  007F93  49                 	db	73	;'I'
   374  007F94  43                 	db	67	;'C'
   375  007F95  41                 	db	65	;'A'
   376  007F96  43                 	db	67	;'C'
   377  007F97  41                 	db	65	;'A'
   378  007F98  4F                 	db	79	;'O'
   379  007F99  20                 	db	32
   380  007F9A  49                 	db	73	;'I'
   381  007F9B  32                 	db	50	;'2'
   382  007F9C  43                 	db	67	;'C'
   383  007F9D  20                 	db	32
   384  007F9E  0A                 	db	10
   385  007F9F  00                 	db	0
   386  007FA0                     STR_4:
   387  007FA0  49                 	db	73	;'I'
   388  007FA1  4E                 	db	78	;'N'
   389  007FA2  49                 	db	73	;'I'
   390  007FA3  43                 	db	67	;'C'
   391  007FA4  49                 	db	73	;'I'
   392  007FA5  41                 	db	65	;'A'
   393  007FA6  4C                 	db	76	;'L'
   394  007FA7  49                 	db	73	;'I'
   395  007FA8  5A                 	db	90	;'Z'
   396  007FA9  41                 	db	65	;'A'
   397  007FAA  4E                 	db	78	;'N'
   398  007FAB  44                 	db	68	;'D'
   399  007FAC  4F                 	db	79	;'O'
   400  007FAD  20                 	db	32
   401  007FAE  54                 	db	84	;'T'
   402  007FAF  45                 	db	69	;'E'
   403  007FB0  53                 	db	83	;'S'
   404  007FB1  54                 	db	84	;'T'
   405  007FB2  20                 	db	32
   406  007FB3  57                 	db	87	;'W'
   407  007FB4  48                 	db	72	;'H'
   408  007FB5  4F                 	db	79	;'O'
   409  007FB6  20                 	db	32
   410  007FB7  49                 	db	73	;'I'
   411  007FB8  20                 	db	32
   412  007FB9  41                 	db	65	;'A'
   413  007FBA  4D                 	db	77	;'M'
   414  007FBB  20                 	db	32
   415  007FBC  0A                 	db	10
   416  007FBD  00                 	db	0
   417  007FBE                     STR_5:
   418  007FBE  54                 	db	84	;'T'
   419  007FBF  45                 	db	69	;'E'
   420  007FC0  53                 	db	83	;'S'
   421  007FC1  54                 	db	84	;'T'
   422  007FC2  20                 	db	32
   423  007FC3  57                 	db	87	;'W'
   424  007FC4  48                 	db	72	;'H'
   425  007FC5  4F                 	db	79	;'O'
   426  007FC6  20                 	db	32
   427  007FC7  49                 	db	73	;'I'
   428  007FC8  20                 	db	32
   429  007FC9  41                 	db	65	;'A'
   430  007FCA  4D                 	db	77	;'M'
   431  007FCB  20                 	db	32
   432  007FCC  46                 	db	70	;'F'
   433  007FCD  41                 	db	65	;'A'
   434  007FCE  4C                 	db	76	;'L'
   435  007FCF  4C                 	db	76	;'L'
   436  007FD0  49                 	db	73	;'I'
   437  007FD1  44                 	db	68	;'D'
   438  007FD2  4F                 	db	79	;'O'
   439  007FD3  20                 	db	32
   440  007FD4  0A                 	db	10
   441  007FD5  00                 	db	0
   442  007FD6                     STR_6:
   443  007FD6  54                 	db	84	;'T'
   444  007FD7  45                 	db	69	;'E'
   445  007FD8  53                 	db	83	;'S'
   446  007FD9  54                 	db	84	;'T'
   447  007FDA  20                 	db	32
   448  007FDB  57                 	db	87	;'W'
   449  007FDC  48                 	db	72	;'H'
   450  007FDD  4F                 	db	79	;'O'
   451  007FDE  20                 	db	32
   452  007FDF  49                 	db	73	;'I'
   453  007FE0  20                 	db	32
   454  007FE1  41                 	db	65	;'A'
   455  007FE2  4D                 	db	77	;'M'
   456  007FE3  20                 	db	32
   457  007FE4  46                 	db	70	;'F'
   458  007FE5  55                 	db	85	;'U'
   459  007FE6  4E                 	db	78	;'N'
   460  007FE7  43                 	db	67	;'C'
   461  007FE8  49                 	db	73	;'I'
   462  007FE9  4F                 	db	79	;'O'
   463  007FEA  4E                 	db	78	;'N'
   464  007FEB  4F                 	db	79	;'O'
   465  007FEC  0A                 	db	10
   466  007FED  00                 	db	0
   467  007FEE                     STR_3:
   468  007FEE  57                 	db	87	;'W'
   469  007FEF  72                 	db	114	;'r'
   470  007FF0  69                 	db	105	;'i'
   471  007FF1  74                 	db	116	;'t'
   472  007FF2  65                 	db	101	;'e'
   473  007FF3  20                 	db	32
   474  007FF4  31                 	db	49	;'1'
   475  007FF5  73                 	db	115	;'s'
   476  007FF6  74                 	db	116	;'t'
   477  007FF7  20                 	db	32
   478  007FF8  49                 	db	73	;'I'
   479  007FF9  32                 	db	50	;'2'
   480  007FFA  43                 	db	67	;'C'
   481  007FFB  20                 	db	32
   482  007FFC  0A                 	db	10
   483  007FFD  00                 	db	0
   484                           
   485                           ; #config settings
   486  007FFE  00                 	db	0	; dummy byte at the end
   487  0000                     
   488                           	psect	cinit
   489  004FD0                     __pcinit:
   490                           	opt callstack 0
   491  004FD0                     start_initialization:
   492                           	opt callstack 0
   493  004FD0                     __initialization:
   494                           	opt callstack 0
   495                           
   496                           ; Initialize objects allocated to BANK1 (32 bytes)
   497                           ; load TBLPTR registers with __pidataBANK1
   498  004FD0  0EEC               	movlw	low __pidataBANK1
   499  004FD2  6EF6               	movwf	tblptrl,c
   500  004FD4  0E4D               	movlw	high __pidataBANK1
   501  004FD6  6EF7               	movwf	tblptrh,c
   502  004FD8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   503  004FDA  6EF8               	movwf	tblptru,c
   504  004FDC  EE01  F070         	lfsr	0,__pdataBANK1
   505  004FE0  EE10 F020          	lfsr	1,32
   506  004FE4                     copy_data0:
   507  004FE4  0009               	tblrd		*+
   508  004FE6  CFF5 FFEE          	movff	tablat,postinc0
   509  004FEA  50E5               	movf	postdec1,w,c
   510  004FEC  50E1               	movf	fsr1l,w,c
   511  004FEE  E1FA               	bnz	copy_data0
   512                           
   513                           ; Initialize objects allocated to BANK0 (42 bytes)
   514                           ; load TBLPTR registers with __pidataBANK0
   515  004FF0  0E58               	movlw	low __pidataBANK0
   516  004FF2  6EF6               	movwf	tblptrl,c
   517  004FF4  0E4E               	movlw	high __pidataBANK0
   518  004FF6  6EF7               	movwf	tblptrh,c
   519  004FF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   520  004FFA  6EF8               	movwf	tblptru,c
   521  004FFC  EE00  F0D5         	lfsr	0,__pdataBANK0
   522  005000  EE10 F02A          	lfsr	1,42
   523  005004                     copy_data1:
   524  005004  0009               	tblrd		*+
   525  005006  CFF5 FFEE          	movff	tablat,postinc0
   526  00500A  50E5               	movf	postdec1,w,c
   527  00500C  50E1               	movf	fsr1l,w,c
   528  00500E  E1FA               	bnz	copy_data1
   529                           
   530                           ; Clear objects allocated to BANK1 (112 bytes)
   531  005010  EE01  F000         	lfsr	0,__pbssBANK1
   532  005014  0E70               	movlw	112
   533  005016                     clear_0:
   534  005016  6AEE               	clrf	postinc0,c
   535  005018  06E8               	decf	wreg,f,c
   536  00501A  E1FD               	bnz	clear_0
   537                           
   538                           ; Clear objects allocated to BANK0 (60 bytes)
   539  00501C  EE00  F060         	lfsr	0,__pbssBANK0
   540  005020  0E3C               	movlw	60
   541  005022                     clear_1:
   542  005022  6AEE               	clrf	postinc0,c
   543  005024  06E8               	decf	wreg,f,c
   544  005026  E1FD               	bnz	clear_1
   545  005028                     end_of_initialization:
   546                           	opt callstack 0
   547  005028                     __end_of__initialization:
   548                           	opt callstack 0
   549  005028  0E00               	movlw	low (__Lmediumconst shr (0+16))
   550  00502A  6EF8               	movwf	tblptru,c
   551  00502C  0100               	movlb	0
   552  00502E  EF15  F038         	goto	_main	;jump to C main() function
   553                           
   554                           	psect	bssBANK0
   555  000060                     __pbssBANK0:
   556                           	opt callstack 0
   557  000060                     _temp:
   558                           	opt callstack 0
   559  000060                     	ds	4
   560  000064                     _gyroz:
   561                           	opt callstack 0
   562  000064                     	ds	4
   563  000068                     _gyroy:
   564                           	opt callstack 0
   565  000068                     	ds	4
   566  00006C                     _gyrox:
   567                           	opt callstack 0
   568  00006C                     	ds	4
   569  000070                     _accelz:
   570                           	opt callstack 0
   571  000070                     	ds	4
   572  000074                     _accely:
   573                           	opt callstack 0
   574  000074                     	ds	4
   575  000078                     _accelx:
   576                           	opt callstack 0
   577  000078                     	ds	4
   578  00007C                     _raw_temp:
   579                           	opt callstack 0
   580  00007C                     	ds	2
   581  00007E                     _raw_gyroz:
   582                           	opt callstack 0
   583  00007E                     	ds	2
   584  000080                     _raw_gyroy:
   585                           	opt callstack 0
   586  000080                     	ds	2
   587  000082                     _raw_gyrox:
   588                           	opt callstack 0
   589  000082                     	ds	2
   590  000084                     _raw_accelz:
   591                           	opt callstack 0
   592  000084                     	ds	2
   593  000086                     _raw_accely:
   594                           	opt callstack 0
   595  000086                     	ds	2
   596  000088                     _raw_accelx:
   597                           	opt callstack 0
   598  000088                     	ds	2
   599  00008A                     _i:
   600                           	opt callstack 0
   601  00008A                     	ds	2
   602  00008C                     _newMagData:
   603                           	opt callstack 0
   604  00008C                     	ds	1
   605  00008D                     _GirAcel:
   606                           	opt callstack 0
   607  00008D                     	ds	14
   608  00009B                     _data:
   609                           	opt callstack 0
   610  00009B                     	ds	1
   611                           
   612                           	psect	dataBANK0
   613  0000D5                     __pdataBANK0:
   614                           	opt callstack 0
   615  0000D5                     _min_accely:
   616                           	opt callstack 0
   617  0000D5                     	ds	4
   618  0000D9                     _max_accely:
   619                           	opt callstack 0
   620  0000D9                     	ds	4
   621  0000DD                     _min_accelx:
   622                           	opt callstack 0
   623  0000DD                     	ds	4
   624  0000E1                     _max_accelx:
   625                           	opt callstack 0
   626  0000E1                     	ds	4
   627  0000E5                     _offset_gyroz:
   628                           	opt callstack 0
   629  0000E5                     	ds	4
   630  0000E9                     _offset_gyroy:
   631                           	opt callstack 0
   632  0000E9                     	ds	4
   633  0000ED                     _offset_gyrox:
   634                           	opt callstack 0
   635  0000ED                     	ds	4
   636  0000F1                     _offset_accelz:
   637                           	opt callstack 0
   638  0000F1                     	ds	4
   639  0000F5                     _offset_accely:
   640                           	opt callstack 0
   641  0000F5                     	ds	4
   642  0000F9                     _offset_accelx:
   643                           	opt callstack 0
   644  0000F9                     	ds	4
   645  0000FD                     _offset_samples:
   646                           	opt callstack 0
   647  0000FD                     	ds	2
   648                           
   649                           	psect	bssBANK1
   650  000100                     __pbssBANK1:
   651                           	opt callstack 0
   652  000100                     _t:
   653                           	opt callstack 0
   654  000100                     	ds	4
   655  000104                     _t_fim:
   656                           	opt callstack 0
   657  000104                     	ds	4
   658  000108                     _t_ini:
   659                           	opt callstack 0
   660  000108                     	ds	4
   661  00010C                     _t_fim3_cal:
   662                           	opt callstack 0
   663  00010C                     	ds	4
   664  000110                     _t_ini3_cal:
   665                           	opt callstack 0
   666  000110                     	ds	4
   667  000114                     _t_fim2_cal:
   668                           	opt callstack 0
   669  000114                     	ds	4
   670  000118                     _t_ini2_cal:
   671                           	opt callstack 0
   672  000118                     	ds	4
   673  00011C                     _t_fim1_cal:
   674                           	opt callstack 0
   675  00011C                     	ds	4
   676  000120                     _t_ini1_cal:
   677                           	opt callstack 0
   678  000120                     	ds	4
   679  000124                     _t_fim_config:
   680                           	opt callstack 0
   681  000124                     	ds	4
   682  000128                     _t_ini_config:
   683                           	opt callstack 0
   684  000128                     	ds	4
   685  00012C                     _Raw_temp:
   686                           	opt callstack 0
   687  00012C                     	ds	4
   688  000130                     _Raw_gyroz:
   689                           	opt callstack 0
   690  000130                     	ds	4
   691  000134                     _Raw_gyroy:
   692                           	opt callstack 0
   693  000134                     	ds	4
   694  000138                     _Raw_gyrox:
   695                           	opt callstack 0
   696  000138                     	ds	4
   697  00013C                     _Raw_accelz:
   698                           	opt callstack 0
   699  00013C                     	ds	4
   700  000140                     _Raw_accely:
   701                           	opt callstack 0
   702  000140                     	ds	4
   703  000144                     _Raw_accelx:
   704                           	opt callstack 0
   705  000144                     	ds	4
   706  000148                     _text:
   707                           	opt callstack 0
   708  000148                     	ds	40
   709                           
   710                           	psect	dataBANK1
   711  000170                     __pdataBANK1:
   712                           	opt callstack 0
   713  000170                     _min_gyroz:
   714                           	opt callstack 0
   715  000170                     	ds	4
   716  000174                     _max_gyroz:
   717                           	opt callstack 0
   718  000174                     	ds	4
   719  000178                     _min_gyroy:
   720                           	opt callstack 0
   721  000178                     	ds	4
   722  00017C                     _max_gyroy:
   723                           	opt callstack 0
   724  00017C                     	ds	4
   725  000180                     _min_gyrox:
   726                           	opt callstack 0
   727  000180                     	ds	4
   728  000184                     _max_gyrox:
   729                           	opt callstack 0
   730  000184                     	ds	4
   731  000188                     _min_accelz:
   732                           	opt callstack 0
   733  000188                     	ds	4
   734  00018C                     _max_accelz:
   735                           	opt callstack 0
   736  00018C                     	ds	4
   737                           
   738                           	psect	cstackBANK0
   739  00009C                     __pcstackBANK0:
   740                           	opt callstack 0
   741  00009C                     ?_sprintf:
   742                           	opt callstack 0
   743  00009C                     sprintf@sp:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x0
   747  00009C                     	ds	2
   748  00009E                     sprintf@f:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x2
   752  00009E                     	ds	30
   753  0000BC                     _sprintf$977:
   754                           	opt callstack 0
   755                           
   756                           ; 4 bytes @ 0x20
   757  0000BC                     	ds	4
   758  0000C0                     sprintf@ap:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x24
   762  0000C0                     	ds	2
   763  0000C2                     sprintf@flag:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x26
   767  0000C2                     	ds	2
   768  0000C4                     sprintf@val:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x28
   772  0000C4                     	ds	4
   773  0000C8                     sprintf@eexp:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x2C
   777  0000C8                     	ds	2
   778  0000CA                     sprintf@tmpval:
   779                           	opt callstack 0
   780                           
   781                           ; 4 bytes @ 0x2E
   782  0000CA                     	ds	4
   783  0000CE                     sprintf@prec:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x32
   787  0000CE                     	ds	2
   788  0000D0                     sprintf@fval:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x34
   792  0000D0                     	ds	4
   793  0000D4                     sprintf@c:
   794                           	opt callstack 0
   795                           
   796                           ; 1 bytes @ 0x38
   797  0000D4                     	ds	1
   798                           
   799                           	psect	cstackCOMRAM
   800  000001                     __pcstackCOMRAM:
   801                           	opt callstack 0
   802  000001                     ??_readyI2C:
   803  000001                     ??_isdigit:
   804  000001                     ?_strlen:
   805                           	opt callstack 0
   806  000001                     ?___wmul:
   807                           	opt callstack 0
   808  000001                     ?___awmod:
   809                           	opt callstack 0
   810  000001                     ?___lwmod:
   811                           	opt callstack 0
   812  000001                     ?__tdiv_to_l_:
   813                           	opt callstack 0
   814  000001                     ?__div_to_l_:
   815                           	opt callstack 0
   816  000001                     ?___lldiv:
   817                           	opt callstack 0
   818  000001                     ?___flneg:
   819                           	opt callstack 0
   820  000001                     ?___llmod:
   821                           	opt callstack 0
   822  000001                     ?___xxtofl:
   823                           	opt callstack 0
   824  000001                     ___wmul@multiplier:
   825                           	opt callstack 0
   826  000001                     ___awmod@dividend:
   827                           	opt callstack 0
   828  000001                     ___lwmod@dividend:
   829                           	opt callstack 0
   830  000001                     strlen@s:
   831                           	opt callstack 0
   832  000001                     ___lldiv@dividend:
   833                           	opt callstack 0
   834  000001                     __div_to_l_@f1:
   835                           	opt callstack 0
   836  000001                     ___fleq@ff1:
   837                           	opt callstack 0
   838  000001                     ___flge@ff1:
   839                           	opt callstack 0
   840  000001                     ___flneg@f1:
   841                           	opt callstack 0
   842  000001                     __tdiv_to_l_@f1:
   843                           	opt callstack 0
   844  000001                     ___llmod@dividend:
   845                           	opt callstack 0
   846  000001                     ___xxtofl@val:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x0
   850  000001                     	ds	1
   851  000002                     sendI2C@data:
   852                           	opt callstack 0
   853  000002                     receiveI2C@flag:
   854                           	opt callstack 0
   855  000002                     _isdigit$792:
   856                           	opt callstack 0
   857                           
   858                           ; 1 bytes @ 0x1
   859  000002                     	ds	1
   860  000003                     receiveI2C@buffer:
   861                           	opt callstack 0
   862  000003                     writeI2C1@Register:
   863                           	opt callstack 0
   864  000003                     isdigit@c:
   865                           	opt callstack 0
   866  000003                     ___wmul@multiplicand:
   867                           	opt callstack 0
   868  000003                     ___awmod@divisor:
   869                           	opt callstack 0
   870  000003                     ___lwmod@divisor:
   871                           	opt callstack 0
   872  000003                     strlen@cp:
   873                           	opt callstack 0
   874                           
   875                           ; 2 bytes @ 0x2
   876  000003                     	ds	1
   877  000004                     readI2C@Register:
   878                           	opt callstack 0
   879  000004                     writeI2C1@Data:
   880                           	opt callstack 0
   881                           
   882                           ; 1 bytes @ 0x3
   883  000004                     	ds	1
   884  000005                     ??_writeI2C1:
   885  000005                     ??___xxtofl:
   886  000005                     ___awmod@counter:
   887                           	opt callstack 0
   888  000005                     ___lwmod@counter:
   889                           	opt callstack 0
   890  000005                     readI2C@Data:
   891                           	opt callstack 0
   892  000005                     ___wmul@product:
   893                           	opt callstack 0
   894  000005                     ___lldiv@divisor:
   895                           	opt callstack 0
   896  000005                     __div_to_l_@f2:
   897                           	opt callstack 0
   898  000005                     ___fleq@ff2:
   899                           	opt callstack 0
   900  000005                     ___flge@ff2:
   901                           	opt callstack 0
   902  000005                     __tdiv_to_l_@f2:
   903                           	opt callstack 0
   904  000005                     ___llmod@divisor:
   905                           	opt callstack 0
   906                           
   907                           ; 4 bytes @ 0x4
   908  000005                     	ds	1
   909  000006                     ?___lwdiv:
   910                           	opt callstack 0
   911  000006                     ___awmod@sign:
   912                           	opt callstack 0
   913  000006                     ___lwdiv@dividend:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x5
   917  000006                     	ds	1
   918  000007                     ?___awdiv:
   919                           	opt callstack 0
   920  000007                     writeI2C1@Address:
   921                           	opt callstack 0
   922  000007                     readI2C@bytes:
   923                           	opt callstack 0
   924  000007                     ___awdiv@dividend:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x6
   928  000007                     	ds	1
   929  000008                     ___lwdiv@divisor:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0x7
   933  000008                     	ds	1
   934  000009                     ??_readI2C:
   935  000009                     ??__tdiv_to_l_:
   936  000009                     ??___fleq:
   937  000009                     ??___flge:
   938  000009                     ___llmod@counter:
   939                           	opt callstack 0
   940  000009                     ___xxtofl@sign:
   941                           	opt callstack 0
   942  000009                     ___awdiv@divisor:
   943                           	opt callstack 0
   944  000009                     ___lldiv@quotient:
   945                           	opt callstack 0
   946  000009                     __div_to_l_@quot:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0x8
   950  000009                     	ds	1
   951  00000A                     ___xxtofl@exp:
   952                           	opt callstack 0
   953  00000A                     ___lwdiv@quotient:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x9
   957  00000A                     	ds	1
   958  00000B                     readI2C@Address:
   959                           	opt callstack 0
   960  00000B                     ___awdiv@counter:
   961                           	opt callstack 0
   962  00000B                     ___xxtofl@arg:
   963                           	opt callstack 0
   964                           
   965                           ; 4 bytes @ 0xA
   966  00000B                     	ds	1
   967  00000C                     ___awdiv@sign:
   968                           	opt callstack 0
   969  00000C                     ___lwdiv@counter:
   970                           	opt callstack 0
   971  00000C                     __tdiv_to_l_@quot:
   972                           	opt callstack 0
   973                           
   974                           ; 4 bytes @ 0xB
   975  00000C                     	ds	1
   976  00000D                     ___lldiv@counter:
   977                           	opt callstack 0
   978  00000D                     __div_to_l_@cntr:
   979                           	opt callstack 0
   980  00000D                     ___awdiv@quotient:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0xC
   984  00000D                     	ds	1
   985  00000E                     __div_to_l_@exp1:
   986                           	opt callstack 0
   987                           
   988                           ; 1 bytes @ 0xD
   989  00000E                     	ds	1
   990  00000F                     ?___flmul:
   991                           	opt callstack 0
   992  00000F                     ___flmul@b:
   993                           	opt callstack 0
   994                           
   995                           ; 4 bytes @ 0xE
   996  00000F                     	ds	1
   997  000010                     __tdiv_to_l_@cntr:
   998                           	opt callstack 0
   999                           
  1000                           ; 1 bytes @ 0xF
  1001  000010                     	ds	1
  1002  000011                     __tdiv_to_l_@exp1:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x10
  1006  000011                     	ds	2
  1007  000013                     ___flmul@a:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x12
  1011  000013                     	ds	4
  1012  000017                     ??___flmul:
  1013                           
  1014                           ; 1 bytes @ 0x16
  1015  000017                     	ds	4
  1016  00001B                     ___flmul@sign:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x1A
  1020  00001B                     	ds	1
  1021  00001C                     ___flmul@grs:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x1B
  1025  00001C                     	ds	4
  1026  000020                     ___flmul@aexp:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x1F
  1030  000020                     	ds	1
  1031  000021                     ___flmul@bexp:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x20
  1035  000021                     	ds	1
  1036  000022                     ___flmul@prod:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x21
  1040  000022                     	ds	4
  1041  000026                     ___flmul@temp:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x25
  1045  000026                     	ds	2
  1046  000028                     ?___fldiv:
  1047                           	opt callstack 0
  1048  000028                     ?_fround:
  1049                           	opt callstack 0
  1050  000028                     ?_scale:
  1051                           	opt callstack 0
  1052  000028                     ___fldiv@b:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x27
  1056  000028                     	ds	4
  1057  00002C                     ___fldiv@a:
  1058                           	opt callstack 0
  1059  00002C                     _fround$975:
  1060                           	opt callstack 0
  1061  00002C                     _scale$976:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x2B
  1065  00002C                     	ds	4
  1066  000030                     ??___fldiv:
  1067  000030                     scale@scl:
  1068                           	opt callstack 0
  1069  000030                     _fround$974:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x2F
  1073  000030                     	ds	1
  1074  000031                     ?___fltol:
  1075                           	opt callstack 0
  1076  000031                     ___fltol@f1:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x30
  1080  000031                     	ds	3
  1081  000034                     fround@prec:
  1082                           	opt callstack 0
  1083  000034                     ___fldiv@rem:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x33
  1087  000034                     	ds	1
  1088  000035                     ??___fltol:
  1089                           
  1090                           ; 1 bytes @ 0x34
  1091  000035                     	ds	3
  1092  000038                     ___fldiv@sign:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x37
  1096  000038                     	ds	1
  1097  000039                     ___fltol@sign1:
  1098                           	opt callstack 0
  1099  000039                     ___fldiv@new_exp:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x38
  1103  000039                     	ds	1
  1104  00003A                     ___fltol@exp1:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x39
  1108  00003A                     	ds	1
  1109  00003B                     ___fldiv@grs:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x3A
  1113  00003B                     	ds	4
  1114  00003F                     ___fldiv@bexp:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x3E
  1118  00003F                     	ds	1
  1119  000040                     ___fldiv@aexp:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x3F
  1123  000040                     	ds	1
  1124  000041                     ?___fladd:
  1125                           	opt callstack 0
  1126  000041                     ___fladd@b:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x40
  1130  000041                     	ds	4
  1131  000045                     ___fladd@a:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x44
  1135  000045                     	ds	4
  1136  000049                     ??___fladd:
  1137                           
  1138                           ; 1 bytes @ 0x48
  1139  000049                     	ds	4
  1140  00004D                     ___fladd@signs:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x4C
  1144  00004D                     	ds	1
  1145  00004E                     ___fladd@aexp:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x4D
  1149  00004E                     	ds	1
  1150  00004F                     ___fladd@bexp:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x4E
  1154  00004F                     	ds	1
  1155  000050                     ___fladd@grs:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x4F
  1159  000050                     	ds	1
  1160  000051                     ?___flsub:
  1161                           	opt callstack 0
  1162  000051                     ___flsub@b:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x50
  1166  000051                     	ds	4
  1167  000055                     ___flsub@a:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x54
  1171  000055                     	ds	4
  1172  000059                     ??_sprintf:
  1173  000059                     
  1174                           ; 1 bytes @ 0x58
  1175  000059                     	ds	4
  1176  00005D                     ??_settings:
  1177                           
  1178                           ; 1 bytes @ 0x5C
  1179  00005D                     	ds	1
  1180  00005E                     ??_main:
  1181                           
  1182                           ; 1 bytes @ 0x5D
  1183  00005E                     	ds	2
  1184                           
  1185 ;;
  1186 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1187 ;;
  1188 ;; *************** function _main *****************
  1189 ;; Defined at:
  1190 ;;		line 80 in file "Main_IMU.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels required when called:    4
  1210 ;; This function calls:
  1211 ;;		___fladd
  1212 ;;		___fldiv
  1213 ;;		___flmul
  1214 ;;		___xxtofl
  1215 ;;		_readI2C
  1216 ;;		_settings
  1217 ;;		_sprintf
  1218 ;;		_start
  1219 ;; This function is called by:
  1220 ;;		Startup code after reset
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text0
  1225  00702A                     __ptext0:
  1226                           	opt callstack 0
  1227  00702A                     _main:
  1228                           	opt callstack 27
  1229  00702A                     
  1230                           ;Main_IMU.c: 81: settings();
  1231  00702A  ECB5  F02B         	call	_settings	;wreg free
  1232  00702E                     l3818:
  1233                           
  1234                           ;Main_IMU.c: 83: readI2C(0xD0,0x3B,GirAcel,14);
  1235  00702E  0E3B               	movlw	59
  1236  007030  6E04               	movwf	readI2C@Register^0,c
  1237  007032  0E8D               	movlw	low _GirAcel
  1238  007034  6E05               	movwf	readI2C@Data^0,c
  1239  007036  0E00               	movlw	high _GirAcel
  1240  007038  6E06               	movwf	(readI2C@Data+1)^0,c
  1241  00703A  0E00               	movlw	0
  1242  00703C  6E08               	movwf	(readI2C@bytes+1)^0,c
  1243  00703E  0E0E               	movlw	14
  1244  007040  6E07               	movwf	readI2C@bytes^0,c
  1245  007042  0ED0               	movlw	208
  1246  007044  ECFE  F028         	call	_readI2C
  1247  007048                     
  1248                           ;Main_IMU.c: 84: raw_accelx = ((GirAcel[0] << 8) | GirAcel[1]);
  1249  007048  0100               	movlb	0	; () banked
  1250  00704A  518E               	movf	(_GirAcel+1)& (0+255),w,b
  1251  00704C  C08D  F05E         	movff	_GirAcel,??_main
  1252  007050  6A5F               	clrf	(??_main+1)^0,c
  1253  007052  C05E  F05F         	movff	??_main,??_main+1
  1254  007056  6A5E               	clrf	??_main^0,c
  1255  007058  105E               	iorwf	??_main^0,w,c
  1256  00705A  6F88               	movwf	_raw_accelx& (0+255),b
  1257  00705C  505F               	movf	(??_main+1)^0,w,c
  1258  00705E  6F89               	movwf	(_raw_accelx+1)& (0+255),b
  1259  007060                     
  1260                           ; BSR set to: 0
  1261                           ;Main_IMU.c: 85: raw_accely = ((GirAcel[2] << 8) | GirAcel[3]);
  1262  007060  5190               	movf	(_GirAcel+3)& (0+255),w,b
  1263  007062  C08F  F05E         	movff	_GirAcel+2,??_main
  1264  007066  6A5F               	clrf	(??_main+1)^0,c
  1265  007068  C05E  F05F         	movff	??_main,??_main+1
  1266  00706C  6A5E               	clrf	??_main^0,c
  1267  00706E  105E               	iorwf	??_main^0,w,c
  1268  007070  6F86               	movwf	_raw_accely& (0+255),b
  1269  007072  505F               	movf	(??_main+1)^0,w,c
  1270  007074  6F87               	movwf	(_raw_accely+1)& (0+255),b
  1271  007076                     
  1272                           ; BSR set to: 0
  1273                           ;Main_IMU.c: 86: raw_accelz = ((GirAcel[4] << 8) | GirAcel[5]);
  1274  007076  5192               	movf	(_GirAcel+5)& (0+255),w,b
  1275  007078  C091  F05E         	movff	_GirAcel+4,??_main
  1276  00707C  6A5F               	clrf	(??_main+1)^0,c
  1277  00707E  C05E  F05F         	movff	??_main,??_main+1
  1278  007082  6A5E               	clrf	??_main^0,c
  1279  007084  105E               	iorwf	??_main^0,w,c
  1280  007086  6F84               	movwf	_raw_accelz& (0+255),b
  1281  007088  505F               	movf	(??_main+1)^0,w,c
  1282  00708A  6F85               	movwf	(_raw_accelz+1)& (0+255),b
  1283  00708C                     
  1284                           ; BSR set to: 0
  1285                           ;Main_IMU.c: 87: raw_temp = ((GirAcel[6] << 8) | GirAcel[7]);
  1286  00708C  5194               	movf	(_GirAcel+7)& (0+255),w,b
  1287  00708E  C093  F05E         	movff	_GirAcel+6,??_main
  1288  007092  6A5F               	clrf	(??_main+1)^0,c
  1289  007094  C05E  F05F         	movff	??_main,??_main+1
  1290  007098  6A5E               	clrf	??_main^0,c
  1291  00709A  105E               	iorwf	??_main^0,w,c
  1292  00709C  6F7C               	movwf	_raw_temp& (0+255),b
  1293  00709E  505F               	movf	(??_main+1)^0,w,c
  1294  0070A0  6F7D               	movwf	(_raw_temp+1)& (0+255),b
  1295  0070A2                     
  1296                           ; BSR set to: 0
  1297                           ;Main_IMU.c: 88: raw_gyrox = ((GirAcel[8] << 8) | GirAcel[9]);
  1298  0070A2  5196               	movf	(_GirAcel+9)& (0+255),w,b
  1299  0070A4  C095  F05E         	movff	_GirAcel+8,??_main
  1300  0070A8  6A5F               	clrf	(??_main+1)^0,c
  1301  0070AA  C05E  F05F         	movff	??_main,??_main+1
  1302  0070AE  6A5E               	clrf	??_main^0,c
  1303  0070B0  105E               	iorwf	??_main^0,w,c
  1304  0070B2  6F82               	movwf	_raw_gyrox& (0+255),b
  1305  0070B4  505F               	movf	(??_main+1)^0,w,c
  1306  0070B6  6F83               	movwf	(_raw_gyrox+1)& (0+255),b
  1307  0070B8                     
  1308                           ; BSR set to: 0
  1309                           ;Main_IMU.c: 89: raw_gyroy = ((GirAcel[10] << 8) | GirAcel[11]);
  1310  0070B8  5198               	movf	(_GirAcel+11)& (0+255),w,b
  1311  0070BA  C097  F05E         	movff	_GirAcel+10,??_main
  1312  0070BE  6A5F               	clrf	(??_main+1)^0,c
  1313  0070C0  C05E  F05F         	movff	??_main,??_main+1
  1314  0070C4  6A5E               	clrf	??_main^0,c
  1315  0070C6  105E               	iorwf	??_main^0,w,c
  1316  0070C8  6F80               	movwf	_raw_gyroy& (0+255),b
  1317  0070CA  505F               	movf	(??_main+1)^0,w,c
  1318  0070CC  6F81               	movwf	(_raw_gyroy+1)& (0+255),b
  1319  0070CE                     
  1320                           ; BSR set to: 0
  1321                           ;Main_IMU.c: 90: raw_gyroz = ((GirAcel[12] << 8) | GirAcel[13]);
  1322  0070CE  519A               	movf	(_GirAcel+13)& (0+255),w,b
  1323  0070D0  C099  F05E         	movff	_GirAcel+12,??_main
  1324  0070D4  6A5F               	clrf	(??_main+1)^0,c
  1325  0070D6  C05E  F05F         	movff	??_main,??_main+1
  1326  0070DA  6A5E               	clrf	??_main^0,c
  1327  0070DC  105E               	iorwf	??_main^0,w,c
  1328  0070DE  6F7E               	movwf	_raw_gyroz& (0+255),b
  1329  0070E0  505F               	movf	(??_main+1)^0,w,c
  1330  0070E2  6F7F               	movwf	(_raw_gyroz+1)& (0+255),b
  1331  0070E4                     
  1332                           ; BSR set to: 0
  1333                           ;Main_IMU.c: 92: Raw_accelx = raw_accelx; Raw_accely = raw_accely; Raw_accelz = raw_acce
      +                          lz;
  1334  0070E4  C088  F001         	movff	_raw_accelx,___xxtofl@val
  1335  0070E8  C089  F002         	movff	_raw_accelx+1,___xxtofl@val+1
  1336  0070EC  0E00               	movlw	0
  1337  0070EE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1338  0070F0  0EFF               	movlw	-1
  1339  0070F2  6E03               	movwf	(___xxtofl@val+2)^0,c
  1340  0070F4  6E04               	movwf	(___xxtofl@val+3)^0,c
  1341  0070F6  0E01               	movlw	1
  1342  0070F8  ECA2  F02D         	call	___xxtofl
  1343  0070FC  C001  F144         	movff	?___xxtofl,_Raw_accelx
  1344  007100  C002  F145         	movff	?___xxtofl+1,_Raw_accelx+1
  1345  007104  C003  F146         	movff	?___xxtofl+2,_Raw_accelx+2
  1346  007108  C004  F147         	movff	?___xxtofl+3,_Raw_accelx+3
  1347  00710C  C086  F001         	movff	_raw_accely,___xxtofl@val
  1348  007110  C087  F002         	movff	_raw_accely+1,___xxtofl@val+1
  1349  007114  0E00               	movlw	0
  1350  007116  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1351  007118  0EFF               	movlw	-1
  1352  00711A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1353  00711C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1354  00711E  0E01               	movlw	1
  1355  007120  ECA2  F02D         	call	___xxtofl
  1356  007124  C001  F140         	movff	?___xxtofl,_Raw_accely
  1357  007128  C002  F141         	movff	?___xxtofl+1,_Raw_accely+1
  1358  00712C  C003  F142         	movff	?___xxtofl+2,_Raw_accely+2
  1359  007130  C004  F143         	movff	?___xxtofl+3,_Raw_accely+3
  1360  007134  C084  F001         	movff	_raw_accelz,___xxtofl@val
  1361  007138  C085  F002         	movff	_raw_accelz+1,___xxtofl@val+1
  1362  00713C  0E00               	movlw	0
  1363  00713E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1364  007140  0EFF               	movlw	-1
  1365  007142  6E03               	movwf	(___xxtofl@val+2)^0,c
  1366  007144  6E04               	movwf	(___xxtofl@val+3)^0,c
  1367  007146  0E01               	movlw	1
  1368  007148  ECA2  F02D         	call	___xxtofl
  1369  00714C  C001  F13C         	movff	?___xxtofl,_Raw_accelz
  1370  007150  C002  F13D         	movff	?___xxtofl+1,_Raw_accelz+1
  1371  007154  C003  F13E         	movff	?___xxtofl+2,_Raw_accelz+2
  1372  007158  C004  F13F         	movff	?___xxtofl+3,_Raw_accelz+3
  1373  00715C                     
  1374                           ;Main_IMU.c: 93: Raw_gyrox = raw_gyrox; Raw_gyroy = raw_gyroy; Raw_gyroz = raw_gyroz;
  1375  00715C  C082  F001         	movff	_raw_gyrox,___xxtofl@val
  1376  007160  C083  F002         	movff	_raw_gyrox+1,___xxtofl@val+1
  1377  007164  0E00               	movlw	0
  1378  007166  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1379  007168  0EFF               	movlw	-1
  1380  00716A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1381  00716C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1382  00716E  0E01               	movlw	1
  1383  007170  ECA2  F02D         	call	___xxtofl
  1384  007174  C001  F138         	movff	?___xxtofl,_Raw_gyrox
  1385  007178  C002  F139         	movff	?___xxtofl+1,_Raw_gyrox+1
  1386  00717C  C003  F13A         	movff	?___xxtofl+2,_Raw_gyrox+2
  1387  007180  C004  F13B         	movff	?___xxtofl+3,_Raw_gyrox+3
  1388  007184  C080  F001         	movff	_raw_gyroy,___xxtofl@val
  1389  007188  C081  F002         	movff	_raw_gyroy+1,___xxtofl@val+1
  1390  00718C  0E00               	movlw	0
  1391  00718E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1392  007190  0EFF               	movlw	-1
  1393  007192  6E03               	movwf	(___xxtofl@val+2)^0,c
  1394  007194  6E04               	movwf	(___xxtofl@val+3)^0,c
  1395  007196  0E01               	movlw	1
  1396  007198  ECA2  F02D         	call	___xxtofl
  1397  00719C  C001  F134         	movff	?___xxtofl,_Raw_gyroy
  1398  0071A0  C002  F135         	movff	?___xxtofl+1,_Raw_gyroy+1
  1399  0071A4  C003  F136         	movff	?___xxtofl+2,_Raw_gyroy+2
  1400  0071A8  C004  F137         	movff	?___xxtofl+3,_Raw_gyroy+3
  1401  0071AC  C07E  F001         	movff	_raw_gyroz,___xxtofl@val
  1402  0071B0  C07F  F002         	movff	_raw_gyroz+1,___xxtofl@val+1
  1403  0071B4  0E00               	movlw	0
  1404  0071B6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1405  0071B8  0EFF               	movlw	-1
  1406  0071BA  6E03               	movwf	(___xxtofl@val+2)^0,c
  1407  0071BC  6E04               	movwf	(___xxtofl@val+3)^0,c
  1408  0071BE  0E01               	movlw	1
  1409  0071C0  ECA2  F02D         	call	___xxtofl
  1410  0071C4  C001  F130         	movff	?___xxtofl,_Raw_gyroz
  1411  0071C8  C002  F131         	movff	?___xxtofl+1,_Raw_gyroz+1
  1412  0071CC  C003  F132         	movff	?___xxtofl+2,_Raw_gyroz+2
  1413  0071D0  C004  F133         	movff	?___xxtofl+3,_Raw_gyroz+3
  1414  0071D4                     
  1415                           ;Main_IMU.c: 94: Raw_temp = raw_temp;
  1416  0071D4  C07C  F001         	movff	_raw_temp,___xxtofl@val
  1417  0071D8  C07D  F002         	movff	_raw_temp+1,___xxtofl@val+1
  1418  0071DC  0E00               	movlw	0
  1419  0071DE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1420  0071E0  0EFF               	movlw	-1
  1421  0071E2  6E03               	movwf	(___xxtofl@val+2)^0,c
  1422  0071E4  6E04               	movwf	(___xxtofl@val+3)^0,c
  1423  0071E6  0E01               	movlw	1
  1424  0071E8  ECA2  F02D         	call	___xxtofl
  1425  0071EC  C001  F12C         	movff	?___xxtofl,_Raw_temp
  1426  0071F0  C002  F12D         	movff	?___xxtofl+1,_Raw_temp+1
  1427  0071F4  C003  F12E         	movff	?___xxtofl+2,_Raw_temp+2
  1428  0071F8  C004  F12F         	movff	?___xxtofl+3,_Raw_temp+3
  1429  0071FC                     
  1430                           ;Main_IMU.c: 96: accelx = (float)raw_accelx * 2.0/32768.0; accely = (float)raw_accely * 
      +                          2.0/32768.0; accelz = (float)raw_accelz * 2.0/32768.0;
  1431  0071FC  0E00               	movlw	0
  1432  0071FE  6E13               	movwf	___flmul@a^0,c
  1433  007200  0E00               	movlw	0
  1434  007202  6E14               	movwf	(___flmul@a+1)^0,c
  1435  007204  0E00               	movlw	0
  1436  007206  6E15               	movwf	(___flmul@a+2)^0,c
  1437  007208  0E40               	movlw	64
  1438  00720A  6E16               	movwf	(___flmul@a+3)^0,c
  1439  00720C  C088  F001         	movff	_raw_accelx,___xxtofl@val
  1440  007210  C089  F002         	movff	_raw_accelx+1,___xxtofl@val+1
  1441  007214  0E00               	movlw	0
  1442  007216  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1443  007218  0EFF               	movlw	-1
  1444  00721A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1445  00721C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1446  00721E  0E01               	movlw	1
  1447  007220  ECA2  F02D         	call	___xxtofl
  1448  007224  C001  F00F         	movff	?___xxtofl,___flmul@b
  1449  007228  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1450  00722C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1451  007230  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1452  007234  ECA0  F033         	call	___flmul	;wreg free
  1453  007238  C00F  F028         	movff	?___flmul,___fldiv@b
  1454  00723C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1455  007240  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1456  007244  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1457  007248  0E00               	movlw	0
  1458  00724A  6E2C               	movwf	___fldiv@a^0,c
  1459  00724C  0E00               	movlw	0
  1460  00724E  6E2D               	movwf	(___fldiv@a+1)^0,c
  1461  007250  0E00               	movlw	0
  1462  007252  6E2E               	movwf	(___fldiv@a+2)^0,c
  1463  007254  0E47               	movlw	71
  1464  007256  6E2F               	movwf	(___fldiv@a+3)^0,c
  1465  007258  ECCD  F02F         	call	___fldiv	;wreg free
  1466  00725C  C028  F078         	movff	?___fldiv,_accelx
  1467  007260  C029  F079         	movff	?___fldiv+1,_accelx+1
  1468  007264  C02A  F07A         	movff	?___fldiv+2,_accelx+2
  1469  007268  C02B  F07B         	movff	?___fldiv+3,_accelx+3
  1470  00726C  0E00               	movlw	0
  1471  00726E  6E13               	movwf	___flmul@a^0,c
  1472  007270  0E00               	movlw	0
  1473  007272  6E14               	movwf	(___flmul@a+1)^0,c
  1474  007274  0E00               	movlw	0
  1475  007276  6E15               	movwf	(___flmul@a+2)^0,c
  1476  007278  0E40               	movlw	64
  1477  00727A  6E16               	movwf	(___flmul@a+3)^0,c
  1478  00727C  C086  F001         	movff	_raw_accely,___xxtofl@val
  1479  007280  C087  F002         	movff	_raw_accely+1,___xxtofl@val+1
  1480  007284  0E00               	movlw	0
  1481  007286  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1482  007288  0EFF               	movlw	-1
  1483  00728A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1484  00728C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1485  00728E  0E01               	movlw	1
  1486  007290  ECA2  F02D         	call	___xxtofl
  1487  007294  C001  F00F         	movff	?___xxtofl,___flmul@b
  1488  007298  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1489  00729C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1490  0072A0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1491  0072A4  ECA0  F033         	call	___flmul	;wreg free
  1492  0072A8  C00F  F028         	movff	?___flmul,___fldiv@b
  1493  0072AC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1494  0072B0  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1495  0072B4  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1496  0072B8  0E00               	movlw	0
  1497  0072BA  6E2C               	movwf	___fldiv@a^0,c
  1498  0072BC  0E00               	movlw	0
  1499  0072BE  6E2D               	movwf	(___fldiv@a+1)^0,c
  1500  0072C0  0E00               	movlw	0
  1501  0072C2  6E2E               	movwf	(___fldiv@a+2)^0,c
  1502  0072C4  0E47               	movlw	71
  1503  0072C6  6E2F               	movwf	(___fldiv@a+3)^0,c
  1504  0072C8  ECCD  F02F         	call	___fldiv	;wreg free
  1505  0072CC  C028  F074         	movff	?___fldiv,_accely
  1506  0072D0  C029  F075         	movff	?___fldiv+1,_accely+1
  1507  0072D4  C02A  F076         	movff	?___fldiv+2,_accely+2
  1508  0072D8  C02B  F077         	movff	?___fldiv+3,_accely+3
  1509  0072DC  0E00               	movlw	0
  1510  0072DE  6E13               	movwf	___flmul@a^0,c
  1511  0072E0  0E00               	movlw	0
  1512  0072E2  6E14               	movwf	(___flmul@a+1)^0,c
  1513  0072E4  0E00               	movlw	0
  1514  0072E6  6E15               	movwf	(___flmul@a+2)^0,c
  1515  0072E8  0E40               	movlw	64
  1516  0072EA  6E16               	movwf	(___flmul@a+3)^0,c
  1517  0072EC  C084  F001         	movff	_raw_accelz,___xxtofl@val
  1518  0072F0  C085  F002         	movff	_raw_accelz+1,___xxtofl@val+1
  1519  0072F4  0E00               	movlw	0
  1520  0072F6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1521  0072F8  0EFF               	movlw	-1
  1522  0072FA  6E03               	movwf	(___xxtofl@val+2)^0,c
  1523  0072FC  6E04               	movwf	(___xxtofl@val+3)^0,c
  1524  0072FE  0E01               	movlw	1
  1525  007300  ECA2  F02D         	call	___xxtofl
  1526  007304  C001  F00F         	movff	?___xxtofl,___flmul@b
  1527  007308  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1528  00730C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1529  007310  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1530  007314  ECA0  F033         	call	___flmul	;wreg free
  1531  007318  C00F  F028         	movff	?___flmul,___fldiv@b
  1532  00731C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1533  007320  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1534  007324  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1535  007328  0E00               	movlw	0
  1536  00732A  6E2C               	movwf	___fldiv@a^0,c
  1537  00732C  0E00               	movlw	0
  1538  00732E  6E2D               	movwf	(___fldiv@a+1)^0,c
  1539  007330  0E00               	movlw	0
  1540  007332  6E2E               	movwf	(___fldiv@a+2)^0,c
  1541  007334  0E47               	movlw	71
  1542  007336  6E2F               	movwf	(___fldiv@a+3)^0,c
  1543  007338  ECCD  F02F         	call	___fldiv	;wreg free
  1544  00733C  C028  F070         	movff	?___fldiv,_accelz
  1545  007340  C029  F071         	movff	?___fldiv+1,_accelz+1
  1546  007344  C02A  F072         	movff	?___fldiv+2,_accelz+2
  1547  007348  C02B  F073         	movff	?___fldiv+3,_accelz+3
  1548  00734C                     
  1549                           ;Main_IMU.c: 97: gyrox = (float)raw_gyrox * 250.0/32768.0; gyroy = (float)raw_gyroy * 25
      +                          0.0/32768.0; gyroz = (float)raw_gyroz * 250.0/32768.0;
  1550  00734C  0E00               	movlw	0
  1551  00734E  6E13               	movwf	___flmul@a^0,c
  1552  007350  0E00               	movlw	0
  1553  007352  6E14               	movwf	(___flmul@a+1)^0,c
  1554  007354  0E7A               	movlw	122
  1555  007356  6E15               	movwf	(___flmul@a+2)^0,c
  1556  007358  0E43               	movlw	67
  1557  00735A  6E16               	movwf	(___flmul@a+3)^0,c
  1558  00735C  C082  F001         	movff	_raw_gyrox,___xxtofl@val
  1559  007360  C083  F002         	movff	_raw_gyrox+1,___xxtofl@val+1
  1560  007364  0E00               	movlw	0
  1561  007366  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1562  007368  0EFF               	movlw	-1
  1563  00736A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1564  00736C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1565  00736E  0E01               	movlw	1
  1566  007370  ECA2  F02D         	call	___xxtofl
  1567  007374  C001  F00F         	movff	?___xxtofl,___flmul@b
  1568  007378  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1569  00737C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1570  007380  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1571  007384  ECA0  F033         	call	___flmul	;wreg free
  1572  007388  C00F  F028         	movff	?___flmul,___fldiv@b
  1573  00738C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1574  007390  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1575  007394  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1576  007398  0E00               	movlw	0
  1577  00739A  6E2C               	movwf	___fldiv@a^0,c
  1578  00739C  0E00               	movlw	0
  1579  00739E  6E2D               	movwf	(___fldiv@a+1)^0,c
  1580  0073A0  0E00               	movlw	0
  1581  0073A2  6E2E               	movwf	(___fldiv@a+2)^0,c
  1582  0073A4  0E47               	movlw	71
  1583  0073A6  6E2F               	movwf	(___fldiv@a+3)^0,c
  1584  0073A8  ECCD  F02F         	call	___fldiv	;wreg free
  1585  0073AC  C028  F06C         	movff	?___fldiv,_gyrox
  1586  0073B0  C029  F06D         	movff	?___fldiv+1,_gyrox+1
  1587  0073B4  C02A  F06E         	movff	?___fldiv+2,_gyrox+2
  1588  0073B8  C02B  F06F         	movff	?___fldiv+3,_gyrox+3
  1589  0073BC  0E00               	movlw	0
  1590  0073BE  6E13               	movwf	___flmul@a^0,c
  1591  0073C0  0E00               	movlw	0
  1592  0073C2  6E14               	movwf	(___flmul@a+1)^0,c
  1593  0073C4  0E7A               	movlw	122
  1594  0073C6  6E15               	movwf	(___flmul@a+2)^0,c
  1595  0073C8  0E43               	movlw	67
  1596  0073CA  6E16               	movwf	(___flmul@a+3)^0,c
  1597  0073CC  C080  F001         	movff	_raw_gyroy,___xxtofl@val
  1598  0073D0  C081  F002         	movff	_raw_gyroy+1,___xxtofl@val+1
  1599  0073D4  0E00               	movlw	0
  1600  0073D6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1601  0073D8  0EFF               	movlw	-1
  1602  0073DA  6E03               	movwf	(___xxtofl@val+2)^0,c
  1603  0073DC  6E04               	movwf	(___xxtofl@val+3)^0,c
  1604  0073DE  0E01               	movlw	1
  1605  0073E0  ECA2  F02D         	call	___xxtofl
  1606  0073E4  C001  F00F         	movff	?___xxtofl,___flmul@b
  1607  0073E8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1608  0073EC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1609  0073F0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1610  0073F4  ECA0  F033         	call	___flmul	;wreg free
  1611  0073F8  C00F  F028         	movff	?___flmul,___fldiv@b
  1612  0073FC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1613  007400  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1614  007404  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1615  007408  0E00               	movlw	0
  1616  00740A  6E2C               	movwf	___fldiv@a^0,c
  1617  00740C  0E00               	movlw	0
  1618  00740E  6E2D               	movwf	(___fldiv@a+1)^0,c
  1619  007410  0E00               	movlw	0
  1620  007412  6E2E               	movwf	(___fldiv@a+2)^0,c
  1621  007414  0E47               	movlw	71
  1622  007416  6E2F               	movwf	(___fldiv@a+3)^0,c
  1623  007418  ECCD  F02F         	call	___fldiv	;wreg free
  1624  00741C  C028  F068         	movff	?___fldiv,_gyroy
  1625  007420  C029  F069         	movff	?___fldiv+1,_gyroy+1
  1626  007424  C02A  F06A         	movff	?___fldiv+2,_gyroy+2
  1627  007428  C02B  F06B         	movff	?___fldiv+3,_gyroy+3
  1628  00742C  0E00               	movlw	0
  1629  00742E  6E13               	movwf	___flmul@a^0,c
  1630  007430  0E00               	movlw	0
  1631  007432  6E14               	movwf	(___flmul@a+1)^0,c
  1632  007434  0E7A               	movlw	122
  1633  007436  6E15               	movwf	(___flmul@a+2)^0,c
  1634  007438  0E43               	movlw	67
  1635  00743A  6E16               	movwf	(___flmul@a+3)^0,c
  1636  00743C  C07E  F001         	movff	_raw_gyroz,___xxtofl@val
  1637  007440  C07F  F002         	movff	_raw_gyroz+1,___xxtofl@val+1
  1638  007444  0E00               	movlw	0
  1639  007446  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1640  007448  0EFF               	movlw	-1
  1641  00744A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1642  00744C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1643  00744E  0E01               	movlw	1
  1644  007450  ECA2  F02D         	call	___xxtofl
  1645  007454  C001  F00F         	movff	?___xxtofl,___flmul@b
  1646  007458  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1647  00745C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1648  007460  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1649  007464  ECA0  F033         	call	___flmul	;wreg free
  1650  007468  C00F  F028         	movff	?___flmul,___fldiv@b
  1651  00746C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1652  007470  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1653  007474  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1654  007478  0E00               	movlw	0
  1655  00747A  6E2C               	movwf	___fldiv@a^0,c
  1656  00747C  0E00               	movlw	0
  1657  00747E  6E2D               	movwf	(___fldiv@a+1)^0,c
  1658  007480  0E00               	movlw	0
  1659  007482  6E2E               	movwf	(___fldiv@a+2)^0,c
  1660  007484  0E47               	movlw	71
  1661  007486  6E2F               	movwf	(___fldiv@a+3)^0,c
  1662  007488  ECCD  F02F         	call	___fldiv	;wreg free
  1663  00748C  C028  F064         	movff	?___fldiv,_gyroz
  1664  007490  C029  F065         	movff	?___fldiv+1,_gyroz+1
  1665  007494  C02A  F066         	movff	?___fldiv+2,_gyroz+2
  1666  007498  C02B  F067         	movff	?___fldiv+3,_gyroz+3
  1667  00749C                     
  1668                           ;Main_IMU.c: 98: temp = (float)(raw_temp/333.87) + 21;
  1669  00749C  0E5C               	movlw	92
  1670  00749E  6E2C               	movwf	___fldiv@a^0,c
  1671  0074A0  0EEF               	movlw	239
  1672  0074A2  6E2D               	movwf	(___fldiv@a+1)^0,c
  1673  0074A4  0EA6               	movlw	166
  1674  0074A6  6E2E               	movwf	(___fldiv@a+2)^0,c
  1675  0074A8  0E43               	movlw	67
  1676  0074AA  6E2F               	movwf	(___fldiv@a+3)^0,c
  1677  0074AC  C07C  F001         	movff	_raw_temp,___xxtofl@val
  1678  0074B0  C07D  F002         	movff	_raw_temp+1,___xxtofl@val+1
  1679  0074B4  0E00               	movlw	0
  1680  0074B6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1681  0074B8  0EFF               	movlw	-1
  1682  0074BA  6E03               	movwf	(___xxtofl@val+2)^0,c
  1683  0074BC  6E04               	movwf	(___xxtofl@val+3)^0,c
  1684  0074BE  0E01               	movlw	1
  1685  0074C0  ECA2  F02D         	call	___xxtofl
  1686  0074C4  C001  F028         	movff	?___xxtofl,___fldiv@b
  1687  0074C8  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  1688  0074CC  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  1689  0074D0  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  1690  0074D4  ECCD  F02F         	call	___fldiv	;wreg free
  1691  0074D8  C028  F041         	movff	?___fldiv,___fladd@b
  1692  0074DC  C029  F042         	movff	?___fldiv+1,___fladd@b+1
  1693  0074E0  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
  1694  0074E4  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
  1695  0074E8  0E00               	movlw	0
  1696  0074EA  6E45               	movwf	___fladd@a^0,c
  1697  0074EC  0E00               	movlw	0
  1698  0074EE  6E46               	movwf	(___fladd@a+1)^0,c
  1699  0074F0  0EA8               	movlw	168
  1700  0074F2  6E47               	movwf	(___fladd@a+2)^0,c
  1701  0074F4  0E41               	movlw	65
  1702  0074F6  6E48               	movwf	(___fladd@a+3)^0,c
  1703  0074F8  ECB5  F035         	call	___fladd	;wreg free
  1704  0074FC  C041  F060         	movff	?___fladd,_temp
  1705  007500  C042  F061         	movff	?___fladd+1,_temp+1
  1706  007504  C043  F062         	movff	?___fladd+2,_temp+2
  1707  007508  C044  F063         	movff	?___fladd+3,_temp+3
  1708  00750C                     
  1709                           ;Main_IMU.c: 99: sprintf(text,"ax, ay, az, t, gx, gy, gz: %.3f %.3f %.3f %.3f %.3f %.3f 
      +                          %.3f\n",accelx, accely, accelz, temp, gyrox, gyroy, gyroz);
  1710  00750C  0E48               	movlw	low _text
  1711  00750E  0100               	movlb	0	; () banked
  1712  007510  6F9C               	movwf	sprintf@sp& (0+255),b
  1713  007512  0E01               	movlw	high _text
  1714  007514  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1715  007516  0E3F               	movlw	low STR_1
  1716  007518  6F9E               	movwf	sprintf@f& (0+255),b
  1717  00751A  0E7F               	movlw	high STR_1
  1718  00751C  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1719  00751E  C078  F0A0         	movff	_accelx,?_sprintf+4
  1720  007522  C079  F0A1         	movff	_accelx+1,?_sprintf+5
  1721  007526  C07A  F0A2         	movff	_accelx+2,?_sprintf+6
  1722  00752A  C07B  F0A3         	movff	_accelx+3,?_sprintf+7
  1723  00752E  C074  F0A4         	movff	_accely,?_sprintf+8
  1724  007532  C075  F0A5         	movff	_accely+1,?_sprintf+9
  1725  007536  C076  F0A6         	movff	_accely+2,?_sprintf+10
  1726  00753A  C077  F0A7         	movff	_accely+3,?_sprintf+11
  1727  00753E  C070  F0A8         	movff	_accelz,?_sprintf+12
  1728  007542  C071  F0A9         	movff	_accelz+1,?_sprintf+13
  1729  007546  C072  F0AA         	movff	_accelz+2,?_sprintf+14
  1730  00754A  C073  F0AB         	movff	_accelz+3,?_sprintf+15
  1731  00754E  C060  F0AC         	movff	_temp,?_sprintf+16
  1732  007552  C061  F0AD         	movff	_temp+1,?_sprintf+17
  1733  007556  C062  F0AE         	movff	_temp+2,?_sprintf+18
  1734  00755A  C063  F0AF         	movff	_temp+3,?_sprintf+19
  1735  00755E  C06C  F0B0         	movff	_gyrox,?_sprintf+20
  1736  007562  C06D  F0B1         	movff	_gyrox+1,?_sprintf+21
  1737  007566  C06E  F0B2         	movff	_gyrox+2,?_sprintf+22
  1738  00756A  C06F  F0B3         	movff	_gyrox+3,?_sprintf+23
  1739  00756E  C068  F0B4         	movff	_gyroy,?_sprintf+24
  1740  007572  C069  F0B5         	movff	_gyroy+1,?_sprintf+25
  1741  007576  C06A  F0B6         	movff	_gyroy+2,?_sprintf+26
  1742  00757A  C06B  F0B7         	movff	_gyroy+3,?_sprintf+27
  1743  00757E  C064  F0B8         	movff	_gyroz,?_sprintf+28
  1744  007582  C065  F0B9         	movff	_gyroz+1,?_sprintf+29
  1745  007586  C066  F0BA         	movff	_gyroz+2,?_sprintf+30
  1746  00758A  C067  F0BB         	movff	_gyroz+3,?_sprintf+31
  1747  00758E  ECCF  F03A         	call	_sprintf	;wreg free
  1748  007592                     
  1749                           ;Main_IMU.c: 100: start();
  1750  007592  EC4B  F028         	call	_start	;wreg free
  1751  007596  EF17  F038         	goto	l3818
  1752  00759A  EF00  F000         	goto	start
  1753  00759E                     __end_of_main:
  1754                           	opt callstack 0
  1755                           
  1756 ;; *************** function _settings *****************
  1757 ;; Defined at:
  1758 ;;		line 104 in file "Main_IMU.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1774 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1775 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1776 ;;Total ram usage:        1 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    3
  1779 ;; This function calls:
  1780 ;;		_readI2C
  1781 ;;		_sprintf
  1782 ;;		_start
  1783 ;;		_writeI2C1
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text1
  1790  00576A                     __ptext1:
  1791                           	opt callstack 0
  1792  00576A                     _settings:
  1793                           	opt callstack 27
  1794  00576A                     
  1795                           ;Main_IMU.c: 105: OSCCON=0x72;
  1796  00576A  0E72               	movlw	114
  1797  00576C  6ED3               	movwf	211,c	;volatile
  1798                           
  1799                           ;Main_IMU.c: 106: ADCON1=0x0F;
  1800  00576E  0E0F               	movlw	15
  1801  005770  6EC1               	movwf	193,c	;volatile
  1802  005772                     
  1803                           ;Main_IMU.c: 108: TRISBbits.RB0=1;
  1804  005772  8093               	bsf	147,0,c	;volatile
  1805  005774                     
  1806                           ;Main_IMU.c: 109: TRISBbits.RB1=1;
  1807  005774  8293               	bsf	147,1,c	;volatile
  1808                           
  1809                           ;Main_IMU.c: 110: SSPSTAT = 0x80;
  1810  005776  0E80               	movlw	128
  1811  005778  6EC7               	movwf	199,c	;volatile
  1812                           
  1813                           ;Main_IMU.c: 111: SSPCON1 = 0x28;
  1814  00577A  0E28               	movlw	40
  1815  00577C  6EC6               	movwf	198,c	;volatile
  1816                           
  1817                           ;Main_IMU.c: 112: SSPCON2 = 0x00;
  1818  00577E  0E00               	movlw	0
  1819  005780  6EC5               	movwf	197,c	;volatile
  1820                           
  1821                           ;Main_IMU.c: 113: SSPADD = 0x19;
  1822  005782  0E19               	movlw	25
  1823  005784  6EC8               	movwf	200,c	;volatile
  1824  005786                     
  1825                           ;Main_IMU.c: 115: TRISCbits.TRISC6 = 0;
  1826  005786  9C94               	bcf	148,6,c	;volatile
  1827  005788                     
  1828                           ;Main_IMU.c: 116: TRISCbits.TRISC7 = 1;
  1829  005788  8E94               	bsf	148,7,c	;volatile
  1830                           
  1831                           ;Main_IMU.c: 117: SPBRG = 0x0C;
  1832  00578A  0E0C               	movlw	12
  1833  00578C  6EAF               	movwf	175,c	;volatile
  1834                           
  1835                           ;Main_IMU.c: 118: RCSTA = 0x90;
  1836  00578E  0E90               	movlw	144
  1837  005790  6EAB               	movwf	171,c	;volatile
  1838                           
  1839                           ;Main_IMU.c: 119: TXSTA = 0x20;
  1840  005792  0E20               	movlw	32
  1841  005794  6EAC               	movwf	172,c	;volatile
  1842  005796                     
  1843                           ;Main_IMU.c: 120: sprintf(text,"INICIALIZANDO A COMUNICACAO I2C \n");
  1844  005796  0E48               	movlw	low _text
  1845  005798  0100               	movlb	0	; () banked
  1846  00579A  6F9C               	movwf	sprintf@sp& (0+255),b
  1847  00579C  0E01               	movlw	high _text
  1848  00579E  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1849  0057A0  0E7E               	movlw	low STR_2
  1850  0057A2  6F9E               	movwf	sprintf@f& (0+255),b
  1851  0057A4  0E7F               	movlw	high STR_2
  1852  0057A6  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1853  0057A8  ECCF  F03A         	call	_sprintf	;wreg free
  1854  0057AC                     
  1855                           ;Main_IMU.c: 121: start();
  1856  0057AC  EC4B  F028         	call	_start	;wreg free
  1857  0057B0                     
  1858                           ;Main_IMU.c: 123: sprintf(text,"Write 1st I2C \n");
  1859  0057B0  0E48               	movlw	low _text
  1860  0057B2  0100               	movlb	0	; () banked
  1861  0057B4  6F9C               	movwf	sprintf@sp& (0+255),b
  1862  0057B6  0E01               	movlw	high _text
  1863  0057B8  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1864  0057BA  0EEE               	movlw	low STR_3
  1865  0057BC  6F9E               	movwf	sprintf@f& (0+255),b
  1866  0057BE  0E7F               	movlw	high STR_3
  1867  0057C0  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1868  0057C2  ECCF  F03A         	call	_sprintf	;wreg free
  1869  0057C6                     
  1870                           ;Main_IMU.c: 124: start();
  1871  0057C6  EC4B  F028         	call	_start	;wreg free
  1872  0057CA                     
  1873                           ;Main_IMU.c: 125: writeI2C1(0xD0, 0x6B,0x00);
  1874  0057CA  0E6B               	movlw	107
  1875  0057CC  6E03               	movwf	writeI2C1@Register^0,c
  1876  0057CE  0E00               	movlw	0
  1877  0057D0  6E04               	movwf	writeI2C1@Data^0,c
  1878  0057D2  0ED0               	movlw	208
  1879  0057D4  EC8E  F027         	call	_writeI2C1
  1880  0057D8                     
  1881                           ;Main_IMU.c: 126: _delay((unsigned long)((10)*(8000000/4000.0)));
  1882  0057D8  0E1A               	movlw	26
  1883  0057DA  6E5D               	movwf	??_settings^0,c
  1884  0057DC  0EF8               	movlw	248
  1885  0057DE                     u3997:
  1886  0057DE  2EE8               	decfsz	wreg,f,c
  1887  0057E0  D7FE               	bra	u3997
  1888  0057E2  2E5D               	decfsz	??_settings^0,f,c
  1889  0057E4  D7FC               	bra	u3997
  1890  0057E6  D000               	nop2	
  1891  0057E8                     
  1892                           ;Main_IMU.c: 127: sprintf(text,"INICIALIZANDO TEST WHO I AM \n");
  1893  0057E8  0E48               	movlw	low _text
  1894  0057EA  0100               	movlb	0	; () banked
  1895  0057EC  6F9C               	movwf	sprintf@sp& (0+255),b
  1896  0057EE  0E01               	movlw	high _text
  1897  0057F0  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1898  0057F2  0EA0               	movlw	low STR_4
  1899  0057F4  6F9E               	movwf	sprintf@f& (0+255),b
  1900  0057F6  0E7F               	movlw	high STR_4
  1901  0057F8  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1902  0057FA  ECCF  F03A         	call	_sprintf	;wreg free
  1903  0057FE                     
  1904                           ;Main_IMU.c: 128: start();
  1905  0057FE  EC4B  F028         	call	_start	;wreg free
  1906  005802                     
  1907                           ;Main_IMU.c: 129: readI2C(0xD0,0x75,data,1);
  1908  005802  0E75               	movlw	117
  1909  005804  6E04               	movwf	readI2C@Register^0,c
  1910  005806  0E9B               	movlw	low _data
  1911  005808  6E05               	movwf	readI2C@Data^0,c
  1912  00580A  0E00               	movlw	high _data
  1913  00580C  6E06               	movwf	(readI2C@Data+1)^0,c
  1914  00580E  0E00               	movlw	0
  1915  005810  6E08               	movwf	(readI2C@bytes+1)^0,c
  1916  005812  0E01               	movlw	1
  1917  005814  6E07               	movwf	readI2C@bytes^0,c
  1918  005816  0ED0               	movlw	208
  1919  005818  ECFE  F028         	call	_readI2C
  1920  00581C                     
  1921                           ;Main_IMU.c: 130: if (data[0] != 0x68) {
  1922  00581C  0E68               	movlw	104
  1923  00581E  0100               	movlb	0	; () banked
  1924  005820  199B               	xorwf	_data& (0+255),w,b
  1925  005822  B4D8               	btfsc	status,2,c
  1926  005824  EF16  F02C         	goto	u3741
  1927  005828  EF18  F02C         	goto	u3740
  1928  00582C                     u3741:
  1929  00582C  EF26  F02C         	goto	l3666
  1930  005830                     u3740:
  1931  005830                     
  1932                           ; BSR set to: 0
  1933                           ;Main_IMU.c: 131: sprintf(text,"TEST WHO I AM FALLIDO \n");
  1934  005830  0E48               	movlw	low _text
  1935  005832  6F9C               	movwf	sprintf@sp& (0+255),b
  1936  005834  0E01               	movlw	high _text
  1937  005836  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1938  005838  0EBE               	movlw	low STR_5
  1939  00583A  6F9E               	movwf	sprintf@f& (0+255),b
  1940  00583C  0E7F               	movlw	high STR_5
  1941  00583E  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1942  005840  ECCF  F03A         	call	_sprintf	;wreg free
  1943  005844                     
  1944                           ;Main_IMU.c: 132: start();
  1945  005844  EC4B  F028         	call	_start	;wreg free
  1946  005848                     l190:
  1947  005848  EF24  F02C         	goto	l190
  1948  00584C                     l3666:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;Main_IMU.c: 135: else{;Main_IMU.c: 136: sprintf(text,"TEST WHO I AM FUNCIONO\n");
  1952  00584C  0E48               	movlw	low _text
  1953  00584E  6F9C               	movwf	sprintf@sp& (0+255),b
  1954  005850  0E01               	movlw	high _text
  1955  005852  6F9D               	movwf	(sprintf@sp+1)& (0+255),b
  1956  005854  0ED6               	movlw	low STR_6
  1957  005856  6F9E               	movwf	sprintf@f& (0+255),b
  1958  005858  0E7F               	movlw	high STR_6
  1959  00585A  6F9F               	movwf	(sprintf@f+1)& (0+255),b
  1960  00585C  ECCF  F03A         	call	_sprintf	;wreg free
  1961  005860                     
  1962                           ;Main_IMU.c: 137: start();
  1963  005860  EC4B  F028         	call	_start	;wreg free
  1964  005864                     
  1965                           ;Main_IMU.c: 138: };Main_IMU.c: 139: _delay((unsigned long)((10)*(8000000/4000.0)));
  1966  005864  0E1A               	movlw	26
  1967  005866  6E5D               	movwf	??_settings^0,c
  1968  005868  0EF8               	movlw	248
  1969  00586A                     u4007:
  1970  00586A  2EE8               	decfsz	wreg,f,c
  1971  00586C  D7FE               	bra	u4007
  1972  00586E  2E5D               	decfsz	??_settings^0,f,c
  1973  005870  D7FC               	bra	u4007
  1974  005872  D000               	nop2	
  1975  005874                     
  1976                           ;Main_IMU.c: 141: writeI2C1(0xD0,0x1B,0x00);
  1977  005874  0E1B               	movlw	27
  1978  005876  6E03               	movwf	writeI2C1@Register^0,c
  1979  005878  0E00               	movlw	0
  1980  00587A  6E04               	movwf	writeI2C1@Data^0,c
  1981  00587C  0ED0               	movlw	208
  1982  00587E  EC8E  F027         	call	_writeI2C1
  1983  005882                     
  1984                           ;Main_IMU.c: 142: writeI2C1(0xD0,0x1C,0x00);
  1985  005882  0E1C               	movlw	28
  1986  005884  6E03               	movwf	writeI2C1@Register^0,c
  1987  005886  0E00               	movlw	0
  1988  005888  6E04               	movwf	writeI2C1@Data^0,c
  1989  00588A  0ED0               	movlw	208
  1990  00588C  EC8E  F027         	call	_writeI2C1
  1991  005890                     
  1992                           ;Main_IMU.c: 143: _delay((unsigned long)((10)*(8000000/4000.0)));
  1993  005890  0E1A               	movlw	26
  1994  005892  6E5D               	movwf	??_settings^0,c
  1995  005894  0EF8               	movlw	248
  1996  005896                     u4017:
  1997  005896  2EE8               	decfsz	wreg,f,c
  1998  005898  D7FE               	bra	u4017
  1999  00589A  2E5D               	decfsz	??_settings^0,f,c
  2000  00589C  D7FC               	bra	u4017
  2001  00589E  D000               	nop2	
  2002  0058A0  0012               	return		;funcret
  2003  0058A2                     __end_of_settings:
  2004                           	opt callstack 0
  2005                           
  2006 ;; *************** function _writeI2C1 *****************
  2007 ;; Defined at:
  2008 ;;		line 236 in file "Main_IMU.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  Address         1    wreg     unsigned char 
  2011 ;;  Register        1    2[COMRAM] unsigned char 
  2012 ;;  Data            1    3[COMRAM] unsigned char 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  Address         1    6[COMRAM] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2024 ;;      Params:         2       0       0       0       0       0       0       0       0
  2025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2026 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2027 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2028 ;;Total ram usage:        5 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		_sendI2C
  2033 ;;		_startI2C
  2034 ;;		_stopI2C
  2035 ;; This function is called by:
  2036 ;;		_settings
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text2
  2041  004F1C                     __ptext2:
  2042                           	opt callstack 0
  2043  004F1C                     _writeI2C1:
  2044                           	opt callstack 27
  2045                           
  2046                           ;incstack = 0
  2047                           ;writeI2C1@Address stored from wreg
  2048  004F1C  6E07               	movwf	writeI2C1@Address^0,c
  2049  004F1E                     
  2050                           ;Main_IMU.c: 237: startI2C();
  2051  004F1E  ECE8  F026         	call	_startI2C	;wreg free
  2052                           
  2053                           ;Main_IMU.c: 238: sendI2C(Address);
  2054  004F22  5007               	movf	writeI2C1@Address^0,w,c
  2055  004F24  ECF0  F026         	call	_sendI2C
  2056                           
  2057                           ;Main_IMU.c: 239: sendI2C(Register);
  2058  004F28  5003               	movf	writeI2C1@Register^0,w,c
  2059  004F2A  ECF0  F026         	call	_sendI2C
  2060                           
  2061                           ;Main_IMU.c: 240: sendI2C(Data);
  2062  004F2E  5004               	movf	writeI2C1@Data^0,w,c
  2063  004F30  ECF0  F026         	call	_sendI2C
  2064                           
  2065                           ;Main_IMU.c: 241: stopI2C();
  2066  004F34  ECEC  F026         	call	_stopI2C	;wreg free
  2067  004F38                     
  2068                           ;Main_IMU.c: 242: _delay((unsigned long)((100)*(8000000/4000.0)));
  2069  004F38  0E02               	movlw	2
  2070  004F3A  6E06               	movwf	(??_writeI2C1+1)^0,c
  2071  004F3C  0E04               	movlw	4
  2072  004F3E  6E05               	movwf	??_writeI2C1^0,c
  2073  004F40  0EBA               	movlw	186
  2074  004F42                     u4027:
  2075  004F42  2EE8               	decfsz	wreg,f,c
  2076  004F44  D7FE               	bra	u4027
  2077  004F46  2E05               	decfsz	??_writeI2C1^0,f,c
  2078  004F48  D7FC               	bra	u4027
  2079  004F4A  2E06               	decfsz	(??_writeI2C1+1)^0,f,c
  2080  004F4C  D7FA               	bra	u4027
  2081  004F4E  D000               	nop2	
  2082  004F50  0012               	return		;funcret
  2083  004F52                     __end_of_writeI2C1:
  2084                           	opt callstack 0
  2085                           
  2086 ;; *************** function _start *****************
  2087 ;; Defined at:
  2088 ;;		line 146 in file "Main_IMU.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    1
  2109 ;; This function calls:
  2110 ;;		_strlen
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;;		_settings
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text3
  2118  005096                     __ptext3:
  2119                           	opt callstack 0
  2120  005096                     _start:
  2121                           	opt callstack 29
  2122  005096                     
  2123                           ;Main_IMU.c: 147: for(i=0;i<=strlen(text);i++){
  2124  005096  0E00               	movlw	0
  2125  005098  0100               	movlb	0	; () banked
  2126  00509A  6F8B               	movwf	(_i+1)& (0+255),b
  2127  00509C  0E00               	movlw	0
  2128  00509E  6F8A               	movwf	_i& (0+255),b
  2129  0050A0  EF64  F028         	goto	l3624
  2130  0050A4                     l199:
  2131  0050A4  A89E               	btfss	3998,4,c	;volatile
  2132  0050A6  EF57  F028         	goto	u3711
  2133  0050AA  EF59  F028         	goto	u3710
  2134  0050AE                     u3711:
  2135  0050AE  EF52  F028         	goto	l199
  2136  0050B2                     u3710:
  2137  0050B2                     
  2138                           ;Main_IMU.c: 149: TXREG = text[i];
  2139  0050B2  0E48               	movlw	low _text
  2140  0050B4  0100               	movlb	0	; () banked
  2141  0050B6  258A               	addwf	_i& (0+255),w,b
  2142  0050B8  6ED9               	movwf	fsr2l,c
  2143  0050BA  0E01               	movlw	high _text
  2144  0050BC  218B               	addwfc	(_i+1)& (0+255),w,b
  2145  0050BE  6EDA               	movwf	fsr2h,c
  2146  0050C0  50DF               	movf	indf2,w,c
  2147  0050C2  6EAD               	movwf	173,c	;volatile
  2148  0050C4                     
  2149                           ; BSR set to: 0
  2150  0050C4  4B8A               	infsnz	_i& (0+255),f,b
  2151  0050C6  2B8B               	incf	(_i+1)& (0+255),f,b
  2152  0050C8                     l3624:
  2153                           
  2154                           ; BSR set to: 0
  2155  0050C8  0E48               	movlw	low _text
  2156  0050CA  6E01               	movwf	strlen@s^0,c
  2157  0050CC  0E01               	movlw	high _text
  2158  0050CE  6E02               	movwf	(strlen@s+1)^0,c
  2159  0050D0  EC73  F027         	call	_strlen	;wreg free
  2160  0050D4  0100               	movlb	0	; () banked
  2161  0050D6  518A               	movf	_i& (0+255),w,b
  2162  0050D8  5C01               	subwf	?_strlen^0,w,c
  2163  0050DA  518B               	movf	(_i+1)& (0+255),w,b
  2164  0050DC  5802               	subwfb	(?_strlen+1)^0,w,c
  2165  0050DE  B0D8               	btfsc	status,0,c
  2166  0050E0  EF74  F028         	goto	u3721
  2167  0050E4  EF76  F028         	goto	u3720
  2168  0050E8                     u3721:
  2169  0050E8  EF52  F028         	goto	l199
  2170  0050EC                     u3720:
  2171  0050EC                     l203:
  2172  0050EC  A89E               	btfss	3998,4,c	;volatile
  2173  0050EE  EF7B  F028         	goto	u3731
  2174  0050F2  EF7D  F028         	goto	u3730
  2175  0050F6                     u3731:
  2176  0050F6  EF76  F028         	goto	l203
  2177  0050FA                     u3730:
  2178  0050FA                     
  2179                           ;Main_IMU.c: 155: TXREG = 0x0D;
  2180  0050FA  0E0D               	movlw	13
  2181  0050FC  6EAD               	movwf	173,c	;volatile
  2182  0050FE  0012               	return		;funcret
  2183  005100                     __end_of_start:
  2184                           	opt callstack 0
  2185                           
  2186 ;; *************** function _strlen *****************
  2187 ;; Defined at:
  2188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strlen.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2191 ;;		 -> text(40), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  2194 ;;		 -> text(40), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  2    0[COMRAM] unsigned int 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2204 ;;      Params:         2       0       0       0       0       0       0       0       0
  2205 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2207 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2208 ;;Total ram usage:        4 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_start
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text4
  2218  004EE6                     __ptext4:
  2219                           	opt callstack 0
  2220  004EE6                     _strlen:
  2221                           	opt callstack 29
  2222  004EE6  C001  F003         	movff	strlen@s,strlen@cp
  2223  004EEA  C002  F004         	movff	strlen@s+1,strlen@cp+1
  2224  004EEE  EF7B  F027         	goto	l2984
  2225  004EF2                     l2982:
  2226  004EF2  4A03               	infsnz	strlen@cp^0,f,c
  2227  004EF4  2A04               	incf	(strlen@cp+1)^0,f,c
  2228  004EF6                     l2984:
  2229  004EF6  C003  FFD9         	movff	strlen@cp,fsr2l
  2230  004EFA  C004  FFDA         	movff	strlen@cp+1,fsr2h
  2231  004EFE  50DF               	movf	indf2,w,c
  2232  004F00  A4D8               	btfss	status,2,c
  2233  004F02  EF85  F027         	goto	u2781
  2234  004F06  EF87  F027         	goto	u2780
  2235  004F0A                     u2781:
  2236  004F0A  EF79  F027         	goto	l2982
  2237  004F0E                     u2780:
  2238  004F0E  5001               	movf	strlen@s^0,w,c
  2239  004F10  5C03               	subwf	strlen@cp^0,w,c
  2240  004F12  6E01               	movwf	?_strlen^0,c
  2241  004F14  5002               	movf	(strlen@s+1)^0,w,c
  2242  004F16  5804               	subwfb	(strlen@cp+1)^0,w,c
  2243  004F18  6E02               	movwf	(?_strlen+1)^0,c
  2244  004F1A  0012               	return		;funcret
  2245  004F1C                     __end_of_strlen:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function _sprintf *****************
  2249 ;; Defined at:
  2250 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  2253 ;;		 -> text(40), 
  2254 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2255 ;;		 -> STR_6(24), STR_5(24), STR_4(30), STR_3(16), 
  2256 ;;		 -> STR_2(34), STR_1(63), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  fval            4   52[BANK0 ] PTR const unsigned char 
  2259 ;;  tmpval          4   46[BANK0 ] struct .
  2260 ;;  val             4   40[BANK0 ] unsigned long 
  2261 ;;  cp              3    0        PTR const unsigned char 
  2262 ;;  prec            2   50[BANK0 ] int 
  2263 ;;  eexp            2   44[BANK0 ] int 
  2264 ;;  flag            2   38[BANK0 ] unsigned short 
  2265 ;;  ap              2   36[BANK0 ] PTR void [1]
  2266 ;;		 -> ?_sprintf(2), 
  2267 ;;  len             2    0        unsigned int 
  2268 ;;  width           2    0        int 
  2269 ;;  c               1   56[BANK0 ] unsigned char 
  2270 ;;  d               1    0        unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    0[BANK0 ] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2280 ;;      Params:         0      32       0       0       0       0       0       0       0
  2281 ;;      Locals:         0      25       0       0       0       0       0       0       0
  2282 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2283 ;;      Totals:         4      57       0       0       0       0       0       0       0
  2284 ;;Total ram usage:       61 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    2
  2287 ;; This function calls:
  2288 ;;		___awdiv
  2289 ;;		___fladd
  2290 ;;		___fleq
  2291 ;;		___flge
  2292 ;;		___flmul
  2293 ;;		___flneg
  2294 ;;		___flsub
  2295 ;;		___fltol
  2296 ;;		___lldiv
  2297 ;;		___llmod
  2298 ;;		___wmul
  2299 ;;		___xxtofl
  2300 ;;		__div_to_l_
  2301 ;;		__tdiv_to_l_
  2302 ;;		_fround
  2303 ;;		_isdigit
  2304 ;;		_scale
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;;		_settings
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text5
  2312  00759E                     __ptext5:
  2313                           	opt callstack 0
  2314  00759E                     _sprintf:
  2315                           	opt callstack 28
  2316  00759E                     
  2317                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  2318  00759E  0EA0               	movlw	low (?_sprintf+4)
  2319  0075A0  0100               	movlb	0	; () banked
  2320  0075A2  6FC0               	movwf	sprintf@ap& (0+255),b
  2321  0075A4  0E00               	movlw	high (?_sprintf+4)
  2322  0075A6  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  2323                           
  2324                           ;doprnt.c: 553: while((c = *f++)) {
  2325  0075A8  EF3F  F03F         	goto	l3612
  2326  0075AC                     l3412:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;doprnt.c: 555: if(c != '%')
  2330  0075AC  0E25               	movlw	37
  2331  0075AE  19D4               	xorwf	sprintf@c& (0+255),w,b
  2332  0075B0  B4D8               	btfsc	status,2,c
  2333  0075B2  EFDD  F03A         	goto	u3401
  2334  0075B6  EFDF  F03A         	goto	u3400
  2335  0075BA                     u3401:
  2336  0075BA  EFE9  F03A         	goto	l3418
  2337  0075BE                     u3400:
  2338  0075BE                     
  2339                           ; BSR set to: 0
  2340                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2341  0075BE  C09C  FFD9         	movff	sprintf@sp,fsr2l
  2342  0075C2  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  2343  0075C6  C0D4  FFDF         	movff	sprintf@c,indf2
  2344  0075CA                     l3416:
  2345                           
  2346                           ; BSR set to: 0
  2347  0075CA  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  2348  0075CC  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  2349                           
  2350                           ;doprnt.c: 559: continue;
  2351  0075CE  EF3F  F03F         	goto	l3612
  2352  0075D2                     l3418:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2356  0075D2  0E00               	movlw	0
  2357  0075D4  6FC3               	movwf	(sprintf@flag+1)& (0+255),b
  2358  0075D6  0E00               	movlw	0
  2359  0075D8  6FC2               	movwf	sprintf@flag& (0+255),b
  2360  0075DA                     
  2361                           ; BSR set to: 0
  2362                           ;doprnt.c: 628: if(*f == '.') {
  2363  0075DA  C09E  FFF6         	movff	sprintf@f,tblptrl
  2364  0075DE  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  2365  0075E2                     	if	0	;tblptru may be non-zero
  2366  0075E2                     	endif
  2367  0075E2                     	if	0	;tblptru may be non-zero
  2368  0075E2                     	endif
  2369  0075E2  0008               	tblrd		*
  2370  0075E4  50F5               	movf	tablat,w,c
  2371  0075E6  0A2E               	xorlw	46
  2372  0075E8  A4D8               	btfss	status,2,c
  2373  0075EA  EFF9  F03A         	goto	u3411
  2374  0075EE  EFFB  F03A         	goto	u3410
  2375  0075F2                     u3411:
  2376  0075F2  EF3A  F03B         	goto	l3434
  2377  0075F6                     u3410:
  2378  0075F6                     
  2379                           ; BSR set to: 0
  2380                           ;doprnt.c: 629: flag |= 0x4000;
  2381  0075F6  8DC3               	bsf	(sprintf@flag+1)& (0+255),6,b
  2382                           
  2383                           ;doprnt.c: 630: f++;
  2384  0075F8  4B9E               	infsnz	sprintf@f& (0+255),f,b
  2385  0075FA  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  2386  0075FC                     
  2387                           ; BSR set to: 0
  2388                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  2389  0075FC  0E00               	movlw	0
  2390  0075FE  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  2391  007600  0E00               	movlw	0
  2392  007602  6FCE               	movwf	sprintf@prec& (0+255),b
  2393                           
  2394                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  2395  007604  EF29  F03B         	goto	l3432
  2396  007608                     l3426:
  2397                           
  2398                           ;doprnt.c: 647: prec *= 10;
  2399  007608  C0CE  F001         	movff	sprintf@prec,___wmul@multiplier
  2400  00760C  C0CF  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  2401  007610  0E00               	movlw	0
  2402  007612  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2403  007614  0E0A               	movlw	10
  2404  007616  6E03               	movwf	___wmul@multiplicand^0,c
  2405  007618  EC19  F027         	call	___wmul	;wreg free
  2406  00761C  C001  F0CE         	movff	?___wmul,sprintf@prec
  2407  007620  C002  F0CF         	movff	?___wmul+1,sprintf@prec+1
  2408  007624                     
  2409                           ;doprnt.c: 648: prec += *f++ - '0';
  2410  007624  0ED0               	movlw	208
  2411  007626  6E59               	movwf	??_sprintf^0,c
  2412  007628  0EFF               	movlw	255
  2413  00762A  6E5A               	movwf	(??_sprintf+1)^0,c
  2414  00762C  C09E  FFF6         	movff	sprintf@f,tblptrl
  2415  007630  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  2416  007634                     	if	0	;tblptru may be non-zero
  2417  007634                     	endif
  2418  007634                     	if	0	;tblptru may be non-zero
  2419  007634                     	endif
  2420  007634  0008               	tblrd		*
  2421  007636  50F5               	movf	tablat,w,c
  2422  007638  6E5B               	movwf	(??_sprintf+2)^0,c
  2423  00763A  6A5C               	clrf	(??_sprintf+3)^0,c
  2424  00763C  5059               	movf	??_sprintf^0,w,c
  2425  00763E  265B               	addwf	(??_sprintf+2)^0,f,c
  2426  007640  505A               	movf	(??_sprintf+1)^0,w,c
  2427  007642  225C               	addwfc	(??_sprintf+3)^0,f,c
  2428  007644  505B               	movf	(??_sprintf+2)^0,w,c
  2429  007646  0100               	movlb	0	; () banked
  2430  007648  27CE               	addwf	sprintf@prec& (0+255),f,b
  2431  00764A  505C               	movf	(??_sprintf+3)^0,w,c
  2432  00764C  23CF               	addwfc	(sprintf@prec+1)& (0+255),f,b
  2433  00764E                     
  2434                           ; BSR set to: 0
  2435  00764E  4B9E               	infsnz	sprintf@f& (0+255),f,b
  2436  007650  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  2437  007652                     l3432:
  2438                           
  2439                           ; BSR set to: 0
  2440  007652  C09E  FFF6         	movff	sprintf@f,tblptrl
  2441  007656  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  2442  00765A                     	if	0	;tblptru may be non-zero
  2443  00765A                     	endif
  2444  00765A                     	if	0	;tblptru may be non-zero
  2445  00765A                     	endif
  2446  00765A  0008               	tblrd		*
  2447  00765C  50F5               	movf	tablat,w,c
  2448  00765E  EC5A  F027         	call	_isdigit
  2449  007662  B0D8               	btfsc	status,0,c
  2450  007664  EF36  F03B         	goto	u3421
  2451  007668  EF38  F03B         	goto	u3420
  2452  00766C                     u3421:
  2453  00766C  EF04  F03B         	goto	l3426
  2454  007670                     u3420:
  2455  007670  EF44  F03B         	goto	l3442
  2456  007674                     l3434:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;doprnt.c: 652: prec = 0;
  2460  007674  0E00               	movlw	0
  2461  007676  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  2462  007678  0E00               	movlw	0
  2463  00767A  6FCE               	movwf	sprintf@prec& (0+255),b
  2464  00767C                     
  2465                           ; BSR set to: 0
  2466                           ;doprnt.c: 654: flag |= 0x1000;
  2467  00767C  89C3               	bsf	(sprintf@flag+1)& (0+255),4,b
  2468  00767E  EF44  F03B         	goto	l3442
  2469  007682                     l3438:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;doprnt.c: 689: flag |= 0x400;
  2473  007682  85C3               	bsf	(sprintf@flag+1)& (0+255),2,b
  2474                           
  2475                           ;doprnt.c: 690: break;
  2476  007684  EF59  F03B         	goto	l3444
  2477  007688                     l3442:
  2478  007688  C09E  FFF6         	movff	sprintf@f,tblptrl
  2479  00768C  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  2480  007690  0100               	movlb	0	; () banked
  2481  007692  4B9E               	infsnz	sprintf@f& (0+255),f,b
  2482  007694  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  2483  007696                     	if	0	;tblptru may be non-zero
  2484  007696                     	endif
  2485  007696                     	if	0	;tblptru may be non-zero
  2486  007696                     	endif
  2487  007696  0008               	tblrd		*
  2488  007698  CFF5 F0D4          	movff	tablat,sprintf@c
  2489  00769C  51D4               	movf	sprintf@c& (0+255),w,b
  2490                           
  2491                           ; Switch size 1, requested type "simple"
  2492                           ; Number of cases is 2, Range of values is 0 to 102
  2493                           ; switch strategies available:
  2494                           ; Name         Instructions Cycles
  2495                           ; simple_byte            7     4 (average)
  2496                           ;	Chosen strategy is simple_byte
  2497  00769E  0A00               	xorlw	0	; case 0
  2498  0076A0  B4D8               	btfsc	status,2,c
  2499  0076A2  EF50  F03F         	goto	l3614
  2500  0076A6  0A66               	xorlw	102	; case 102
  2501  0076A8  B4D8               	btfsc	status,2,c
  2502  0076AA  EF41  F03B         	goto	l3438
  2503  0076AE  EF3F  F03F         	goto	l3612
  2504  0076B2                     l3444:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;doprnt.c: 851: if(flag & (0x700)) {
  2508  0076B2  0E07               	movlw	7
  2509  0076B4  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  2510  0076B6  B4D8               	btfsc	status,2,c
  2511  0076B8  EF60  F03B         	goto	u3431
  2512  0076BC  EF62  F03B         	goto	u3430
  2513  0076C0                     u3431:
  2514  0076C0  EFEC  F03E         	goto	l3592
  2515  0076C4                     u3430:
  2516  0076C4                     
  2517                           ; BSR set to: 0
  2518                           ;doprnt.c: 853: if(flag & 0x1000)
  2519  0076C4  A9C3               	btfss	(sprintf@flag+1)& (0+255),4,b
  2520  0076C6  EF67  F03B         	goto	u3441
  2521  0076CA  EF69  F03B         	goto	u3440
  2522  0076CE                     u3441:
  2523  0076CE  EF6D  F03B         	goto	l3450
  2524  0076D2                     u3440:
  2525  0076D2                     
  2526                           ; BSR set to: 0
  2527                           ;doprnt.c: 855: prec = 6;
  2528  0076D2  0E00               	movlw	0
  2529  0076D4  6FCF               	movwf	(sprintf@prec+1)& (0+255),b
  2530  0076D6  0E06               	movlw	6
  2531  0076D8  6FCE               	movwf	sprintf@prec& (0+255),b
  2532  0076DA                     l3450:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2536  0076DA  C0C0  FFD9         	movff	sprintf@ap,fsr2l
  2537  0076DE  C0C1  FFDA         	movff	sprintf@ap+1,fsr2h
  2538  0076E2  CFDE F0D0          	movff	postinc2,sprintf@fval
  2539  0076E6  CFDE F0D1          	movff	postinc2,sprintf@fval+1
  2540  0076EA  CFDE F0D2          	movff	postinc2,sprintf@fval+2
  2541  0076EE  CFDE F0D3          	movff	postinc2,sprintf@fval+3
  2542  0076F2                     
  2543                           ; BSR set to: 0
  2544  0076F2  0E04               	movlw	4
  2545  0076F4  27C0               	addwf	sprintf@ap& (0+255),f,b
  2546  0076F6  0E00               	movlw	0
  2547  0076F8  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2548  0076FA                     
  2549                           ; BSR set to: 0
  2550                           ;doprnt.c: 857: if(fval < 0.0) {
  2551  0076FA  BFD3               	btfsc	(sprintf@fval+3)& (0+255),7,b
  2552  0076FC  EF84  F03B         	goto	u3450
  2553  007700  EF82  F03B         	goto	u3451
  2554  007704                     u3451:
  2555  007704  EF99  F03B         	goto	l3460
  2556  007708                     u3450:
  2557  007708                     
  2558                           ; BSR set to: 0
  2559                           ;doprnt.c: 858: fval = -fval;
  2560  007708  C0D0  F001         	movff	sprintf@fval,___flneg@f1
  2561  00770C  C0D1  F002         	movff	sprintf@fval+1,___flneg@f1+1
  2562  007710  C0D2  F003         	movff	sprintf@fval+2,___flneg@f1+2
  2563  007714  C0D3  F004         	movff	sprintf@fval+3,___flneg@f1+3
  2564  007718  ECA9  F027         	call	___flneg	;wreg free
  2565  00771C  C001  F0D0         	movff	?___flneg,sprintf@fval
  2566  007720  C002  F0D1         	movff	?___flneg+1,sprintf@fval+1
  2567  007724  C003  F0D2         	movff	?___flneg+2,sprintf@fval+2
  2568  007728  C004  F0D3         	movff	?___flneg+3,sprintf@fval+3
  2569  00772C                     
  2570                           ;doprnt.c: 859: flag |= 0x03;
  2571  00772C  0E03               	movlw	3
  2572  00772E  0100               	movlb	0	; () banked
  2573  007730  13C2               	iorwf	sprintf@flag& (0+255),f,b
  2574  007732                     l3460:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  2578  007732  0E00               	movlw	0
  2579  007734  6FC9               	movwf	(sprintf@eexp+1)& (0+255),b
  2580  007736  0E00               	movlw	0
  2581  007738  6FC8               	movwf	sprintf@eexp& (0+255),b
  2582  00773A                     
  2583                           ; BSR set to: 0
  2584                           ;doprnt.c: 862: if( fval!=0) {
  2585  00773A  C0D0  F001         	movff	sprintf@fval,___fleq@ff1
  2586  00773E  C0D1  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2587  007742  C0D2  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2588  007746  C0D3  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2589  00774A  0E00               	movlw	0
  2590  00774C  6E05               	movwf	___fleq@ff2^0,c
  2591  00774E  0E00               	movlw	0
  2592  007750  6E06               	movwf	(___fleq@ff2+1)^0,c
  2593  007752  0E00               	movlw	0
  2594  007754  6E07               	movwf	(___fleq@ff2+2)^0,c
  2595  007756  0E00               	movlw	0
  2596  007758  6E08               	movwf	(___fleq@ff2+3)^0,c
  2597  00775A  ECA1  F029         	call	___fleq	;wreg free
  2598  00775E  B0D8               	btfsc	status,0,c
  2599  007760  EFB4  F03B         	goto	u3461
  2600  007764  EFB6  F03B         	goto	u3460
  2601  007768                     u3461:
  2602  007768  EF49  F03C         	goto	l3488
  2603  00776C                     u3460:
  2604  00776C                     
  2605                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2606  00776C  0100               	movlb	0	; () banked
  2607  00776E  35D2               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2608  007770  35D3               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2609  007772  0F82               	addlw	130
  2610  007774  6FC8               	movwf	sprintf@eexp& (0+255),b
  2611  007776  6BC9               	clrf	(sprintf@eexp+1)& (0+255),b
  2612  007778  0EFF               	movlw	255
  2613  00777A  23C9               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2614  00777C                     
  2615                           ; BSR set to: 0
  2616                           ;doprnt.c: 864: eexp--;
  2617  00777C  07C8               	decf	sprintf@eexp& (0+255),f,b
  2618  00777E  A0D8               	btfss	status,0,c
  2619  007780  07C9               	decf	(sprintf@eexp+1)& (0+255),f,b
  2620  007782                     
  2621                           ; BSR set to: 0
  2622                           ;doprnt.c: 865: eexp *= 3;
  2623  007782  C0C8  F001         	movff	sprintf@eexp,___wmul@multiplier
  2624  007786  C0C9  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  2625  00778A  0E00               	movlw	0
  2626  00778C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2627  00778E  0E03               	movlw	3
  2628  007790  6E03               	movwf	___wmul@multiplicand^0,c
  2629  007792  EC19  F027         	call	___wmul	;wreg free
  2630  007796  C001  F0C8         	movff	?___wmul,sprintf@eexp
  2631  00779A  C002  F0C9         	movff	?___wmul+1,sprintf@eexp+1
  2632  00779E                     
  2633                           ;doprnt.c: 866: eexp /= 10;
  2634  00779E  C0C8  F007         	movff	sprintf@eexp,___awdiv@dividend
  2635  0077A2  C0C9  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  2636  0077A6  0E00               	movlw	0
  2637  0077A8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2638  0077AA  0E0A               	movlw	10
  2639  0077AC  6E09               	movwf	___awdiv@divisor^0,c
  2640  0077AE  EC4E  F02A         	call	___awdiv	;wreg free
  2641  0077B2  C007  F0C8         	movff	?___awdiv,sprintf@eexp
  2642  0077B6  C008  F0C9         	movff	?___awdiv+1,sprintf@eexp+1
  2643  0077BA                     
  2644                           ;doprnt.c: 867: if(eexp < 0)
  2645  0077BA  0100               	movlb	0	; () banked
  2646  0077BC  BFC9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2647  0077BE  EFE5  F03B         	goto	u3470
  2648  0077C2  EFE3  F03B         	goto	u3471
  2649  0077C6                     u3471:
  2650  0077C6  EFE8  F03B         	goto	l3476
  2651  0077CA                     u3470:
  2652  0077CA                     
  2653                           ; BSR set to: 0
  2654                           ;doprnt.c: 868: eexp--;
  2655  0077CA  07C8               	decf	sprintf@eexp& (0+255),f,b
  2656  0077CC  A0D8               	btfss	status,0,c
  2657  0077CE  07C9               	decf	(sprintf@eexp+1)& (0+255),f,b
  2658  0077D0                     l3476:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  2662  0077D0  51C8               	movf	sprintf@eexp& (0+255),w,b
  2663  0077D2  0800               	sublw	0
  2664  0077D4  EC9A  F031         	call	_scale
  2665  0077D8  C028  F0CA         	movff	?_scale,sprintf@tmpval
  2666  0077DC  C029  F0CB         	movff	?_scale+1,sprintf@tmpval+1
  2667  0077E0  C02A  F0CC         	movff	?_scale+2,sprintf@tmpval+2
  2668  0077E4  C02B  F0CD         	movff	?_scale+3,sprintf@tmpval+3
  2669  0077E8                     
  2670                           ;doprnt.c: 873: tmpval.integ *= fval;
  2671  0077E8  C0CA  F00F         	movff	sprintf@tmpval,___flmul@b
  2672  0077EC  C0CB  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  2673  0077F0  C0CC  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  2674  0077F4  C0CD  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  2675  0077F8  C0D0  F013         	movff	sprintf@fval,___flmul@a
  2676  0077FC  C0D1  F014         	movff	sprintf@fval+1,___flmul@a+1
  2677  007800  C0D2  F015         	movff	sprintf@fval+2,___flmul@a+2
  2678  007804  C0D3  F016         	movff	sprintf@fval+3,___flmul@a+3
  2679  007808  ECA0  F033         	call	___flmul	;wreg free
  2680  00780C  C00F  F0CA         	movff	?___flmul,sprintf@tmpval
  2681  007810  C010  F0CB         	movff	?___flmul+1,sprintf@tmpval+1
  2682  007814  C011  F0CC         	movff	?___flmul+2,sprintf@tmpval+2
  2683  007818  C012  F0CD         	movff	?___flmul+3,sprintf@tmpval+3
  2684  00781C                     
  2685                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  2686  00781C  C0CA  F001         	movff	sprintf@tmpval,___flge@ff1
  2687  007820  C0CB  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2688  007824  C0CC  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2689  007828  C0CD  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2690  00782C  0E00               	movlw	0
  2691  00782E  6E05               	movwf	___flge@ff2^0,c
  2692  007830  0E00               	movlw	0
  2693  007832  6E06               	movwf	(___flge@ff2+1)^0,c
  2694  007834  0E80               	movlw	128
  2695  007836  6E07               	movwf	(___flge@ff2+2)^0,c
  2696  007838  0E3F               	movlw	63
  2697  00783A  6E08               	movwf	(___flge@ff2+3)^0,c
  2698  00783C  ECB0  F02A         	call	___flge	;wreg free
  2699  007840  B0D8               	btfsc	status,0,c
  2700  007842  EF25  F03C         	goto	u3481
  2701  007846  EF27  F03C         	goto	u3480
  2702  00784A                     u3481:
  2703  00784A  EF2D  F03C         	goto	l3484
  2704  00784E                     u3480:
  2705  00784E                     
  2706                           ;doprnt.c: 875: eexp--;
  2707  00784E  0100               	movlb	0	; () banked
  2708  007850  07C8               	decf	sprintf@eexp& (0+255),f,b
  2709  007852  A0D8               	btfss	status,0,c
  2710  007854  07C9               	decf	(sprintf@eexp+1)& (0+255),f,b
  2711  007856  EF49  F03C         	goto	l3488
  2712  00785A                     l3484:
  2713                           
  2714                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  2715  00785A  C0CA  F001         	movff	sprintf@tmpval,___flge@ff1
  2716  00785E  C0CB  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2717  007862  C0CC  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2718  007866  C0CD  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2719  00786A  0E00               	movlw	0
  2720  00786C  6E05               	movwf	___flge@ff2^0,c
  2721  00786E  0E00               	movlw	0
  2722  007870  6E06               	movwf	(___flge@ff2+1)^0,c
  2723  007872  0E20               	movlw	32
  2724  007874  6E07               	movwf	(___flge@ff2+2)^0,c
  2725  007876  0E41               	movlw	65
  2726  007878  6E08               	movwf	(___flge@ff2+3)^0,c
  2727  00787A  ECB0  F02A         	call	___flge	;wreg free
  2728  00787E  A0D8               	btfss	status,0,c
  2729  007880  EF44  F03C         	goto	u3491
  2730  007884  EF46  F03C         	goto	u3490
  2731  007888                     u3491:
  2732  007888  EF49  F03C         	goto	l3488
  2733  00788C                     u3490:
  2734  00788C                     
  2735                           ;doprnt.c: 877: eexp++;
  2736  00788C  0100               	movlb	0	; () banked
  2737  00788E  4BC8               	infsnz	sprintf@eexp& (0+255),f,b
  2738  007890  2BC9               	incf	(sprintf@eexp+1)& (0+255),f,b
  2739  007892                     l3488:
  2740                           
  2741                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  2742  007892  0100               	movlb	0	; () banked
  2743  007894  BFCF               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2744  007896  EF58  F03C         	goto	u3500
  2745  00789A  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  2746  00789C  E107               	bnz	u3501
  2747  00789E  0E0D               	movlw	13
  2748  0078A0  5DCE               	subwf	sprintf@prec& (0+255),w,b
  2749  0078A2  B0D8               	btfsc	status,0,c
  2750  0078A4  EF56  F03C         	goto	u3501
  2751  0078A8  EF58  F03C         	goto	u3500
  2752  0078AC                     u3501:
  2753  0078AC  EF75  F03C         	goto	l3492
  2754  0078B0                     u3500:
  2755  0078B0                     
  2756                           ; BSR set to: 0
  2757                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  2758  0078B0  C0D0  F041         	movff	sprintf@fval,___fladd@b
  2759  0078B4  C0D1  F042         	movff	sprintf@fval+1,___fladd@b+1
  2760  0078B8  C0D2  F043         	movff	sprintf@fval+2,___fladd@b+2
  2761  0078BC  C0D3  F044         	movff	sprintf@fval+3,___fladd@b+3
  2762  0078C0  51CE               	movf	sprintf@prec& (0+255),w,b
  2763  0078C2  EC7C  F02E         	call	_fround
  2764  0078C6  C028  F045         	movff	?_fround,___fladd@a
  2765  0078CA  C029  F046         	movff	?_fround+1,___fladd@a+1
  2766  0078CE  C02A  F047         	movff	?_fround+2,___fladd@a+2
  2767  0078D2  C02B  F048         	movff	?_fround+3,___fladd@a+3
  2768  0078D6  ECB5  F035         	call	___fladd	;wreg free
  2769  0078DA  C041  F0D0         	movff	?___fladd,sprintf@fval
  2770  0078DE  C042  F0D1         	movff	?___fladd+1,sprintf@fval+1
  2771  0078E2  C043  F0D2         	movff	?___fladd+2,sprintf@fval+2
  2772  0078E6  C044  F0D3         	movff	?___fladd+3,sprintf@fval+3
  2773  0078EA                     l3492:
  2774                           
  2775                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2776  0078EA  0100               	movlb	0	; () banked
  2777  0078EC  BFC9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2778  0078EE  EF84  F03C         	goto	u3510
  2779  0078F2  51C9               	movf	(sprintf@eexp+1)& (0+255),w,b
  2780  0078F4  E107               	bnz	u3511
  2781  0078F6  0E0A               	movlw	10
  2782  0078F8  5DC8               	subwf	sprintf@eexp& (0+255),w,b
  2783  0078FA  B0D8               	btfsc	status,0,c
  2784  0078FC  EF82  F03C         	goto	u3511
  2785  007900  EF84  F03C         	goto	u3510
  2786  007904                     u3511:
  2787  007904  EFC1  F03C         	goto	l3500
  2788  007908                     u3510:
  2789  007908                     
  2790                           ; BSR set to: 0
  2791  007908  C0D0  F001         	movff	sprintf@fval,___fleq@ff1
  2792  00790C  C0D1  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2793  007910  C0D2  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2794  007914  C0D3  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2795  007918  0E00               	movlw	0
  2796  00791A  6E05               	movwf	___fleq@ff2^0,c
  2797  00791C  0E00               	movlw	0
  2798  00791E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2799  007920  0E00               	movlw	0
  2800  007922  6E07               	movwf	(___fleq@ff2+2)^0,c
  2801  007924  0E00               	movlw	0
  2802  007926  6E08               	movwf	(___fleq@ff2+3)^0,c
  2803  007928  ECA1  F029         	call	___fleq	;wreg free
  2804  00792C  B0D8               	btfsc	status,0,c
  2805  00792E  EF9B  F03C         	goto	u3521
  2806  007932  EF9D  F03C         	goto	u3520
  2807  007936                     u3521:
  2808  007936  EF16  F03D         	goto	l3514
  2809  00793A                     u3520:
  2810  00793A  C0D0  F031         	movff	sprintf@fval,___fltol@f1
  2811  00793E  C0D1  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2812  007942  C0D2  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2813  007946  C0D3  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2814  00794A  EC32  F02B         	call	___fltol	;wreg free
  2815  00794E  5031               	movf	?___fltol^0,w,c
  2816  007950  1032               	iorwf	(?___fltol+1)^0,w,c
  2817  007952  1033               	iorwf	(?___fltol+2)^0,w,c
  2818  007954  1034               	iorwf	(?___fltol+3)^0,w,c
  2819  007956  A4D8               	btfss	status,2,c
  2820  007958  EFB0  F03C         	goto	u3531
  2821  00795C  EFB2  F03C         	goto	u3530
  2822  007960                     u3531:
  2823  007960  EF16  F03D         	goto	l3514
  2824  007964                     u3530:
  2825  007964  0100               	movlb	0	; () banked
  2826  007966  BFC9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2827  007968  EFBF  F03C         	goto	u3541
  2828  00796C  51C9               	movf	(sprintf@eexp+1)& (0+255),w,b
  2829  00796E  E109               	bnz	u3540
  2830  007970  0E02               	movlw	2
  2831  007972  5DC8               	subwf	sprintf@eexp& (0+255),w,b
  2832  007974  A0D8               	btfss	status,0,c
  2833  007976  EFBF  F03C         	goto	u3541
  2834  00797A  EFC1  F03C         	goto	u3540
  2835  00797E                     u3541:
  2836  00797E  EF16  F03D         	goto	l3514
  2837  007982                     u3540:
  2838  007982                     l3500:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  2842  007982  C0CA  F001         	movff	sprintf@tmpval,___flge@ff1
  2843  007986  C0CB  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2844  00798A  C0CC  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2845  00798E  C0CD  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2846  007992  0E5F               	movlw	95
  2847  007994  6E05               	movwf	___flge@ff2^0,c
  2848  007996  0E70               	movlw	112
  2849  007998  6E06               	movwf	(___flge@ff2+1)^0,c
  2850  00799A  0E89               	movlw	137
  2851  00799C  6E07               	movwf	(___flge@ff2+2)^0,c
  2852  00799E  0E40               	movlw	64
  2853  0079A0  6E08               	movwf	(___flge@ff2+3)^0,c
  2854  0079A2  ECB0  F02A         	call	___flge	;wreg free
  2855  0079A6  B0D8               	btfsc	status,0,c
  2856  0079A8  EFD8  F03C         	goto	u3551
  2857  0079AC  EFDA  F03C         	goto	u3550
  2858  0079B0                     u3551:
  2859  0079B0  EFE1  F03C         	goto	l3504
  2860  0079B4                     u3550:
  2861  0079B4                     
  2862                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2863  0079B4  0100               	movlb	0	; () banked
  2864  0079B6  0EF7               	movlw	247
  2865  0079B8  27C8               	addwf	sprintf@eexp& (0+255),f,b
  2866  0079BA  0EFF               	movlw	255
  2867  0079BC  23C9               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2868                           
  2869                           ;doprnt.c: 1148: }else{
  2870  0079BE  EFE6  F03C         	goto	l3506
  2871  0079C2                     l3504:
  2872                           
  2873                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2874  0079C2  0100               	movlb	0	; () banked
  2875  0079C4  0EF8               	movlw	248
  2876  0079C6  27C8               	addwf	sprintf@eexp& (0+255),f,b
  2877  0079C8  0EFF               	movlw	255
  2878  0079CA  23C9               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2879  0079CC                     l3506:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2883  0079CC  51C8               	movf	sprintf@eexp& (0+255),w,b
  2884  0079CE  EC9A  F031         	call	_scale
  2885  0079D2  C028  F0CA         	movff	?_scale,sprintf@tmpval
  2886  0079D6  C029  F0CB         	movff	?_scale+1,sprintf@tmpval+1
  2887  0079DA  C02A  F0CC         	movff	?_scale+2,sprintf@tmpval+2
  2888  0079DE  C02B  F0CD         	movff	?_scale+3,sprintf@tmpval+3
  2889  0079E2  C0D0  F001         	movff	sprintf@fval,__div_to_l_@f1
  2890  0079E6  C0D1  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2891  0079EA  C0D2  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2892  0079EE  C0D3  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2893  0079F2  C0CA  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  2894  0079F6  C0CB  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2895  0079FA  C0CC  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2896  0079FE  C0CD  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2897  007A02  EC51  F02C         	call	__div_to_l_	;wreg free
  2898  007A06  C001  F0C4         	movff	?__div_to_l_,sprintf@val
  2899  007A0A  C002  F0C5         	movff	?__div_to_l_+1,sprintf@val+1
  2900  007A0E  C003  F0C6         	movff	?__div_to_l_+2,sprintf@val+2
  2901  007A12  C004  F0C7         	movff	?__div_to_l_+3,sprintf@val+3
  2902  007A16                     
  2903                           ;doprnt.c: 1155: fval = 0.0;
  2904  007A16  0E00               	movlw	0
  2905  007A18  0100               	movlb	0	; () banked
  2906  007A1A  6FD0               	movwf	sprintf@fval& (0+255),b
  2907  007A1C  0E00               	movlw	0
  2908  007A1E  6FD1               	movwf	(sprintf@fval+1)& (0+255),b
  2909  007A20  0E00               	movlw	0
  2910  007A22  6FD2               	movwf	(sprintf@fval+2)& (0+255),b
  2911  007A24  0E00               	movlw	0
  2912  007A26  6FD3               	movwf	(sprintf@fval+3)& (0+255),b
  2913                           
  2914                           ;doprnt.c: 1156: } else {
  2915  007A28  EF52  F03D         	goto	l3518
  2916  007A2C                     l3514:
  2917                           
  2918                           ;doprnt.c: 1157: val = (unsigned long)fval;
  2919  007A2C  C0D0  F031         	movff	sprintf@fval,___fltol@f1
  2920  007A30  C0D1  F032         	movff	sprintf@fval+1,___fltol@f1+1
  2921  007A34  C0D2  F033         	movff	sprintf@fval+2,___fltol@f1+2
  2922  007A38  C0D3  F034         	movff	sprintf@fval+3,___fltol@f1+3
  2923  007A3C  EC32  F02B         	call	___fltol	;wreg free
  2924  007A40  C031  F0C4         	movff	?___fltol,sprintf@val
  2925  007A44  C032  F0C5         	movff	?___fltol+1,sprintf@val+1
  2926  007A48  C033  F0C6         	movff	?___fltol+2,sprintf@val+2
  2927  007A4C  C034  F0C7         	movff	?___fltol+3,sprintf@val+3
  2928                           
  2929                           ;doprnt.c: 1158: fval -= (double)val;
  2930  007A50  C0D0  F051         	movff	sprintf@fval,___flsub@b
  2931  007A54  C0D1  F052         	movff	sprintf@fval+1,___flsub@b+1
  2932  007A58  C0D2  F053         	movff	sprintf@fval+2,___flsub@b+2
  2933  007A5C  C0D3  F054         	movff	sprintf@fval+3,___flsub@b+3
  2934  007A60  C0C4  F001         	movff	sprintf@val,___xxtofl@val
  2935  007A64  C0C5  F002         	movff	sprintf@val+1,___xxtofl@val+1
  2936  007A68  C0C6  F003         	movff	sprintf@val+2,___xxtofl@val+2
  2937  007A6C  C0C7  F004         	movff	sprintf@val+3,___xxtofl@val+3
  2938  007A70  0E00               	movlw	0
  2939  007A72  ECA2  F02D         	call	___xxtofl
  2940  007A76  C001  F055         	movff	?___xxtofl,___flsub@a
  2941  007A7A  C002  F056         	movff	?___xxtofl+1,___flsub@a+1
  2942  007A7E  C003  F057         	movff	?___xxtofl+2,___flsub@a+2
  2943  007A82  C004  F058         	movff	?___xxtofl+3,___flsub@a+3
  2944  007A86  ECC5  F027         	call	___flsub	;wreg free
  2945  007A8A  C051  F0D0         	movff	?___flsub,sprintf@fval
  2946  007A8E  C052  F0D1         	movff	?___flsub+1,sprintf@fval+1
  2947  007A92  C053  F0D2         	movff	?___flsub+2,sprintf@fval+2
  2948  007A96  C054  F0D3         	movff	?___flsub+3,sprintf@fval+3
  2949  007A9A                     
  2950                           ;doprnt.c: 1159: eexp = 0;
  2951  007A9A  0E00               	movlw	0
  2952  007A9C  0100               	movlb	0	; () banked
  2953  007A9E  6FC9               	movwf	(sprintf@eexp+1)& (0+255),b
  2954  007AA0  0E00               	movlw	0
  2955  007AA2  6FC8               	movwf	sprintf@eexp& (0+255),b
  2956  007AA4                     l3518:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2960  007AA4  0E01               	movlw	1
  2961  007AA6  6FD4               	movwf	sprintf@c& (0+255),b
  2962  007AA8                     l3524:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;doprnt.c: 1163: if(val < dpowers[c])
  2966  007AA8  51D4               	movf	sprintf@c& (0+255),w,b
  2967  007AAA  0D04               	mullw	4
  2968  007AAC  0E17               	movlw	low _dpowers
  2969  007AAE  24F3               	addwf	243,w,c
  2970  007AB0  6EF6               	movwf	tblptrl,c
  2971  007AB2  0E7F               	movlw	high _dpowers
  2972  007AB4  20F4               	addwfc	244,w,c
  2973  007AB6  6EF7               	movwf	tblptrh,c
  2974  007AB8                     	if	0	;There are less than 3 active tblptr bytes
  2975  007AB8                     	endif
  2976  007AB8  0009               	tblrd		*+
  2977  007ABA  50F5               	movf	tablat,w,c
  2978  007ABC  5DC4               	subwf	sprintf@val& (0+255),w,b
  2979  007ABE  0009               	tblrd		*+
  2980  007AC0  50F5               	movf	tablat,w,c
  2981  007AC2  59C5               	subwfb	(sprintf@val+1)& (0+255),w,b
  2982  007AC4  0009               	tblrd		*+
  2983  007AC6  50F5               	movf	tablat,w,c
  2984  007AC8  59C6               	subwfb	(sprintf@val+2)& (0+255),w,b
  2985  007ACA  0009               	tblrd		*+
  2986  007ACC  50F5               	movf	tablat,w,c
  2987  007ACE  59C7               	subwfb	(sprintf@val+3)& (0+255),w,b
  2988  007AD0  B0D8               	btfsc	status,0,c
  2989  007AD2  EF6D  F03D         	goto	u3561
  2990  007AD6  EF6F  F03D         	goto	u3560
  2991  007ADA                     u3561:
  2992  007ADA  EF71  F03D         	goto	l3528
  2993  007ADE                     u3560:
  2994  007ADE  EF7B  F03D         	goto	l3532
  2995  007AE2                     l3528:
  2996                           
  2997                           ; BSR set to: 0
  2998  007AE2  2BD4               	incf	sprintf@c& (0+255),f,b
  2999  007AE4                     
  3000                           ; BSR set to: 0
  3001  007AE4  0E0A               	movlw	10
  3002  007AE6  19D4               	xorwf	sprintf@c& (0+255),w,b
  3003  007AE8  A4D8               	btfss	status,2,c
  3004  007AEA  EF79  F03D         	goto	u3571
  3005  007AEE  EF7B  F03D         	goto	u3570
  3006  007AF2                     u3571:
  3007  007AF2  EF54  F03D         	goto	l3524
  3008  007AF6                     u3570:
  3009  007AF6                     l3532:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  3013  007AF6  0E03               	movlw	3
  3014  007AF8  15C2               	andwf	sprintf@flag& (0+255),w,b
  3015  007AFA  6E59               	movwf	??_sprintf^0,c
  3016  007AFC  0E00               	movlw	0
  3017  007AFE  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  3018  007B00  6E5A               	movwf	(??_sprintf+1)^0,c
  3019  007B02  5059               	movf	??_sprintf^0,w,c
  3020  007B04  105A               	iorwf	(??_sprintf+1)^0,w,c
  3021  007B06  B4D8               	btfsc	status,2,c
  3022  007B08  EF88  F03D         	goto	u3581
  3023  007B0C  EF8A  F03D         	goto	u3580
  3024  007B10                     u3581:
  3025  007B10  EFDE  F03D         	goto	l3546
  3026  007B14                     u3580:
  3027  007B14                     
  3028                           ; BSR set to: 0
  3029                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  3030  007B14  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3031  007B18  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3032  007B1C  0E2D               	movlw	45
  3033  007B1E  6EDF               	movwf	indf2,c
  3034  007B20                     l3536:
  3035                           
  3036                           ; BSR set to: 0
  3037  007B20  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3038  007B22  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3039  007B24  EFDE  F03D         	goto	l3546
  3040  007B28                     l3538:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  3044  007B28  C0C4  F001         	movff	sprintf@val,___lldiv@dividend
  3045  007B2C  C0C5  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  3046  007B30  C0C6  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  3047  007B34  C0C7  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  3048  007B38  51D4               	movf	sprintf@c& (0+255),w,b
  3049  007B3A  0D04               	mullw	4
  3050  007B3C  0E17               	movlw	low _dpowers
  3051  007B3E  24F3               	addwf	243,w,c
  3052  007B40  6EF6               	movwf	tblptrl,c
  3053  007B42  0E7F               	movlw	high _dpowers
  3054  007B44  20F4               	addwfc	244,w,c
  3055  007B46  6EF7               	movwf	tblptrh,c
  3056  007B48                     	if	0	;There are less than 3 active tblptr bytes
  3057  007B48                     	endif
  3058  007B48  0009               	tblrd		*+
  3059  007B4A  CFF5 F005          	movff	tablat,___lldiv@divisor
  3060  007B4E  0009               	tblrd		*+
  3061  007B50  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3062  007B54  0009               	tblrd		*+
  3063  007B56  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3064  007B5A  000A               	tblrd		*-
  3065  007B5C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3066  007B60  EC4F  F029         	call	___lldiv	;wreg free
  3067  007B64  C001  F0CA         	movff	?___lldiv,sprintf@tmpval
  3068  007B68  C002  F0CB         	movff	?___lldiv+1,sprintf@tmpval+1
  3069  007B6C  C003  F0CC         	movff	?___lldiv+2,sprintf@tmpval+2
  3070  007B70  C004  F0CD         	movff	?___lldiv+3,sprintf@tmpval+3
  3071  007B74                     
  3072                           ;doprnt.c: 1228: tmpval.vd %= 10;
  3073  007B74  C0CA  F001         	movff	sprintf@tmpval,___llmod@dividend
  3074  007B78  C0CB  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3075  007B7C  C0CC  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3076  007B80  C0CD  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3077  007B84  0E0A               	movlw	10
  3078  007B86  6E05               	movwf	___llmod@divisor^0,c
  3079  007B88  0E00               	movlw	0
  3080  007B8A  6E06               	movwf	(___llmod@divisor+1)^0,c
  3081  007B8C  0E00               	movlw	0
  3082  007B8E  6E07               	movwf	(___llmod@divisor+2)^0,c
  3083  007B90  0E00               	movlw	0
  3084  007B92  6E08               	movwf	(___llmod@divisor+3)^0,c
  3085  007B94  ECBA  F028         	call	___llmod	;wreg free
  3086  007B98  C001  F0CA         	movff	?___llmod,sprintf@tmpval
  3087  007B9C  C002  F0CB         	movff	?___llmod+1,sprintf@tmpval+1
  3088  007BA0  C003  F0CC         	movff	?___llmod+2,sprintf@tmpval+2
  3089  007BA4  C004  F0CD         	movff	?___llmod+3,sprintf@tmpval+3
  3090  007BA8                     
  3091                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  3092  007BA8  0100               	movlb	0	; () banked
  3093  007BAA  51CA               	movf	sprintf@tmpval& (0+255),w,b
  3094  007BAC  0F30               	addlw	48
  3095  007BAE  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3096  007BB2  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3097  007BB6  6EDF               	movwf	indf2,c
  3098  007BB8  EF90  F03D         	goto	l3536
  3099  007BBC                     l3546:
  3100                           
  3101                           ; BSR set to: 0
  3102  007BBC  07D4               	decf	sprintf@c& (0+255),f,b
  3103  007BBE  29D4               	incf	sprintf@c& (0+255),w,b
  3104  007BC0  A4D8               	btfss	status,2,c
  3105  007BC2  EFE5  F03D         	goto	u3591
  3106  007BC6  EFE7  F03D         	goto	u3590
  3107  007BCA                     u3591:
  3108  007BCA  EF94  F03D         	goto	l3538
  3109  007BCE                     u3590:
  3110  007BCE  EFF4  F03D         	goto	l3554
  3111  007BD2                     l3548:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  3115  007BD2  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3116  007BD6  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3117  007BDA  0E30               	movlw	48
  3118  007BDC  6EDF               	movwf	indf2,c
  3119  007BDE                     
  3120                           ; BSR set to: 0
  3121  007BDE  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3122  007BE0  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3123  007BE2                     
  3124                           ; BSR set to: 0
  3125                           ;doprnt.c: 1235: eexp--;
  3126  007BE2  07C8               	decf	sprintf@eexp& (0+255),f,b
  3127  007BE4  A0D8               	btfss	status,0,c
  3128  007BE6  07C9               	decf	(sprintf@eexp+1)& (0+255),f,b
  3129  007BE8                     l3554:
  3130                           
  3131                           ; BSR set to: 0
  3132  007BE8  BFC9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  3133  007BEA  EF01  F03E         	goto	u3600
  3134  007BEE  51C9               	movf	(sprintf@eexp+1)& (0+255),w,b
  3135  007BF0  E106               	bnz	u3601
  3136  007BF2  05C8               	decf	sprintf@eexp& (0+255),w,b
  3137  007BF4  B0D8               	btfsc	status,0,c
  3138  007BF6  EFFF  F03D         	goto	u3601
  3139  007BFA  EF01  F03E         	goto	u3600
  3140  007BFE                     u3601:
  3141  007BFE  EFE9  F03D         	goto	l3548
  3142  007C02                     u3600:
  3143  007C02                     
  3144                           ; BSR set to: 0
  3145                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3146  007C02  BFCF               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3147  007C04  EF0D  F03E         	goto	u3611
  3148  007C08  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  3149  007C0A  E109               	bnz	u3610
  3150  007C0C  0E09               	movlw	9
  3151  007C0E  5DCE               	subwf	sprintf@prec& (0+255),w,b
  3152  007C10  A0D8               	btfss	status,0,c
  3153  007C12  EF0D  F03E         	goto	u3611
  3154  007C16  EF0F  F03E         	goto	u3610
  3155  007C1A                     u3611:
  3156  007C1A  EF13  F03E         	goto	l322
  3157  007C1E                     u3610:
  3158  007C1E                     
  3159                           ; BSR set to: 0
  3160                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3161  007C1E  0E08               	movlw	8
  3162  007C20  6FD4               	movwf	sprintf@c& (0+255),b
  3163  007C22  EF15  F03E         	goto	l3560
  3164  007C26                     l322:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  3168  007C26  C0CE  F0D4         	movff	sprintf@prec,sprintf@c
  3169  007C2A                     l3560:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;doprnt.c: 1241: prec -= (int)c;
  3173  007C2A  51D4               	movf	sprintf@c& (0+255),w,b
  3174  007C2C  5FCE               	subwf	sprintf@prec& (0+255),f,b
  3175  007C2E  0E00               	movlw	0
  3176  007C30  5BCF               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3177  007C32                     
  3178                           ; BSR set to: 0
  3179                           ;doprnt.c: 1245: if(c)
  3180  007C32  51D4               	movf	sprintf@c& (0+255),w,b
  3181  007C34  B4D8               	btfsc	status,2,c
  3182  007C36  EF1F  F03E         	goto	u3621
  3183  007C3A  EF21  F03E         	goto	u3620
  3184  007C3E                     u3621:
  3185  007C3E  EF29  F03E         	goto	l3568
  3186  007C42                     u3620:
  3187  007C42                     
  3188                           ; BSR set to: 0
  3189                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  3190  007C42  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3191  007C46  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3192  007C4A  0E2E               	movlw	46
  3193  007C4C  6EDF               	movwf	indf2,c
  3194  007C4E                     
  3195                           ; BSR set to: 0
  3196  007C4E  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3197  007C50  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3198  007C52                     l3568:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3202  007C52  51D4               	movf	sprintf@c& (0+255),w,b
  3203  007C54  EC9A  F031         	call	_scale
  3204  007C58  C028  F0BC         	movff	?_scale,_sprintf$977
  3205  007C5C  C029  F0BD         	movff	?_scale+1,_sprintf$977+1
  3206  007C60  C02A  F0BE         	movff	?_scale+2,_sprintf$977+2
  3207  007C64  C02B  F0BF         	movff	?_scale+3,_sprintf$977+3
  3208  007C68                     
  3209                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3210  007C68  C0D0  F013         	movff	sprintf@fval,___flmul@a
  3211  007C6C  C0D1  F014         	movff	sprintf@fval+1,___flmul@a+1
  3212  007C70  C0D2  F015         	movff	sprintf@fval+2,___flmul@a+2
  3213  007C74  C0D3  F016         	movff	sprintf@fval+3,___flmul@a+3
  3214  007C78  C0BC  F00F         	movff	_sprintf$977,___flmul@b
  3215  007C7C  C0BD  F010         	movff	_sprintf$977+1,___flmul@b+1
  3216  007C80  C0BE  F011         	movff	_sprintf$977+2,___flmul@b+2
  3217  007C84  C0BF  F012         	movff	_sprintf$977+3,___flmul@b+3
  3218  007C88  ECA0  F033         	call	___flmul	;wreg free
  3219  007C8C  C00F  F031         	movff	?___flmul,___fltol@f1
  3220  007C90  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  3221  007C94  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  3222  007C98  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  3223  007C9C  EC32  F02B         	call	___fltol	;wreg free
  3224  007CA0  C031  F0C4         	movff	?___fltol,sprintf@val
  3225  007CA4  C032  F0C5         	movff	?___fltol+1,sprintf@val+1
  3226  007CA8  C033  F0C6         	movff	?___fltol+2,sprintf@val+2
  3227  007CAC  C034  F0C7         	movff	?___fltol+3,sprintf@val+3
  3228                           
  3229                           ;doprnt.c: 1254: while(c--) {
  3230  007CB0  EFCA  F03E         	goto	l3582
  3231  007CB4                     l3572:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  3235  007CB4  C0C4  F001         	movff	sprintf@val,___lldiv@dividend
  3236  007CB8  C0C5  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  3237  007CBC  C0C6  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  3238  007CC0  C0C7  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  3239  007CC4  51D4               	movf	sprintf@c& (0+255),w,b
  3240  007CC6  0D04               	mullw	4
  3241  007CC8  0E17               	movlw	low _dpowers
  3242  007CCA  24F3               	addwf	243,w,c
  3243  007CCC  6EF6               	movwf	tblptrl,c
  3244  007CCE  0E7F               	movlw	high _dpowers
  3245  007CD0  20F4               	addwfc	244,w,c
  3246  007CD2  6EF7               	movwf	tblptrh,c
  3247  007CD4                     	if	0	;There are less than 3 active tblptr bytes
  3248  007CD4                     	endif
  3249  007CD4  0009               	tblrd		*+
  3250  007CD6  CFF5 F005          	movff	tablat,___lldiv@divisor
  3251  007CDA  0009               	tblrd		*+
  3252  007CDC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3253  007CE0  0009               	tblrd		*+
  3254  007CE2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3255  007CE6  000A               	tblrd		*-
  3256  007CE8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3257  007CEC  EC4F  F029         	call	___lldiv	;wreg free
  3258  007CF0  C001  F0CA         	movff	?___lldiv,sprintf@tmpval
  3259  007CF4  C002  F0CB         	movff	?___lldiv+1,sprintf@tmpval+1
  3260  007CF8  C003  F0CC         	movff	?___lldiv+2,sprintf@tmpval+2
  3261  007CFC  C004  F0CD         	movff	?___lldiv+3,sprintf@tmpval+3
  3262  007D00                     
  3263                           ;doprnt.c: 1256: tmpval.vd %= 10;
  3264  007D00  C0CA  F001         	movff	sprintf@tmpval,___llmod@dividend
  3265  007D04  C0CB  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3266  007D08  C0CC  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3267  007D0C  C0CD  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3268  007D10  0E0A               	movlw	10
  3269  007D12  6E05               	movwf	___llmod@divisor^0,c
  3270  007D14  0E00               	movlw	0
  3271  007D16  6E06               	movwf	(___llmod@divisor+1)^0,c
  3272  007D18  0E00               	movlw	0
  3273  007D1A  6E07               	movwf	(___llmod@divisor+2)^0,c
  3274  007D1C  0E00               	movlw	0
  3275  007D1E  6E08               	movwf	(___llmod@divisor+3)^0,c
  3276  007D20  ECBA  F028         	call	___llmod	;wreg free
  3277  007D24  C001  F0CA         	movff	?___llmod,sprintf@tmpval
  3278  007D28  C002  F0CB         	movff	?___llmod+1,sprintf@tmpval+1
  3279  007D2C  C003  F0CC         	movff	?___llmod+2,sprintf@tmpval+2
  3280  007D30  C004  F0CD         	movff	?___llmod+3,sprintf@tmpval+3
  3281  007D34                     
  3282                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  3283  007D34  0100               	movlb	0	; () banked
  3284  007D36  51CA               	movf	sprintf@tmpval& (0+255),w,b
  3285  007D38  0F30               	addlw	48
  3286  007D3A  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3287  007D3E  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3288  007D42  6EDF               	movwf	indf2,c
  3289  007D44                     
  3290                           ; BSR set to: 0
  3291  007D44  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3292  007D46  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3293  007D48                     
  3294                           ; BSR set to: 0
  3295                           ;doprnt.c: 1258: val %= dpowers[c];
  3296  007D48  C0C4  F001         	movff	sprintf@val,___llmod@dividend
  3297  007D4C  C0C5  F002         	movff	sprintf@val+1,___llmod@dividend+1
  3298  007D50  C0C6  F003         	movff	sprintf@val+2,___llmod@dividend+2
  3299  007D54  C0C7  F004         	movff	sprintf@val+3,___llmod@dividend+3
  3300  007D58  51D4               	movf	sprintf@c& (0+255),w,b
  3301  007D5A  0D04               	mullw	4
  3302  007D5C  0E17               	movlw	low _dpowers
  3303  007D5E  24F3               	addwf	243,w,c
  3304  007D60  6EF6               	movwf	tblptrl,c
  3305  007D62  0E7F               	movlw	high _dpowers
  3306  007D64  20F4               	addwfc	244,w,c
  3307  007D66  6EF7               	movwf	tblptrh,c
  3308  007D68                     	if	0	;There are less than 3 active tblptr bytes
  3309  007D68                     	endif
  3310  007D68  0009               	tblrd		*+
  3311  007D6A  CFF5 F005          	movff	tablat,___llmod@divisor
  3312  007D6E  0009               	tblrd		*+
  3313  007D70  CFF5 F006          	movff	tablat,___llmod@divisor+1
  3314  007D74  0009               	tblrd		*+
  3315  007D76  CFF5 F007          	movff	tablat,___llmod@divisor+2
  3316  007D7A  000A               	tblrd		*-
  3317  007D7C  CFF5 F008          	movff	tablat,___llmod@divisor+3
  3318  007D80  ECBA  F028         	call	___llmod	;wreg free
  3319  007D84  C001  F0C4         	movff	?___llmod,sprintf@val
  3320  007D88  C002  F0C5         	movff	?___llmod+1,sprintf@val+1
  3321  007D8C  C003  F0C6         	movff	?___llmod+2,sprintf@val+2
  3322  007D90  C004  F0C7         	movff	?___llmod+3,sprintf@val+3
  3323  007D94                     l3582:
  3324  007D94  0100               	movlb	0	; () banked
  3325  007D96  07D4               	decf	sprintf@c& (0+255),f,b
  3326  007D98  29D4               	incf	sprintf@c& (0+255),w,b
  3327  007D9A  A4D8               	btfss	status,2,c
  3328  007D9C  EFD2  F03E         	goto	u3631
  3329  007DA0  EFD4  F03E         	goto	u3630
  3330  007DA4                     u3631:
  3331  007DA4  EF5A  F03E         	goto	l3572
  3332  007DA8                     u3630:
  3333  007DA8  EFE1  F03E         	goto	l3590
  3334  007DAC                     l3584:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  3338  007DAC  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3339  007DB0  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3340  007DB4  0E30               	movlw	48
  3341  007DB6  6EDF               	movwf	indf2,c
  3342  007DB8                     
  3343                           ; BSR set to: 0
  3344  007DB8  4B9C               	infsnz	sprintf@sp& (0+255),f,b
  3345  007DBA  2B9D               	incf	(sprintf@sp+1)& (0+255),f,b
  3346  007DBC                     
  3347                           ; BSR set to: 0
  3348                           ;doprnt.c: 1263: prec--;
  3349  007DBC  07CE               	decf	sprintf@prec& (0+255),f,b
  3350  007DBE  A0D8               	btfss	status,0,c
  3351  007DC0  07CF               	decf	(sprintf@prec+1)& (0+255),f,b
  3352  007DC2                     l3590:
  3353                           
  3354                           ; BSR set to: 0
  3355  007DC2  51CE               	movf	sprintf@prec& (0+255),w,b
  3356  007DC4  11CF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3357  007DC6  A4D8               	btfss	status,2,c
  3358  007DC8  EFE8  F03E         	goto	u3641
  3359  007DCC  EFEA  F03E         	goto	u3640
  3360  007DD0                     u3641:
  3361  007DD0  EFD6  F03E         	goto	l3584
  3362  007DD4                     u3640:
  3363  007DD4  EF3F  F03F         	goto	l3612
  3364  007DD8                     l3592:
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  3368  007DD8  51CE               	movf	sprintf@prec& (0+255),w,b
  3369  007DDA  11CF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3370  007DDC  A4D8               	btfss	status,2,c
  3371  007DDE  EFF3  F03E         	goto	u3651
  3372  007DE2  EFF5  F03E         	goto	u3650
  3373  007DE6                     u3651:
  3374  007DE6  EF02  F03F         	goto	l3598
  3375  007DEA                     u3650:
  3376  007DEA                     
  3377                           ; BSR set to: 0
  3378  007DEA  51C4               	movf	sprintf@val& (0+255),w,b
  3379  007DEC  11C5               	iorwf	(sprintf@val+1)& (0+255),w,b
  3380  007DEE  11C6               	iorwf	(sprintf@val+2)& (0+255),w,b
  3381  007DF0  11C7               	iorwf	(sprintf@val+3)& (0+255),w,b
  3382  007DF2  A4D8               	btfss	status,2,c
  3383  007DF4  EFFE  F03E         	goto	u3661
  3384  007DF8  EF00  F03F         	goto	u3660
  3385  007DFC                     u3661:
  3386  007DFC  EF02  F03F         	goto	l3598
  3387  007E00                     u3660:
  3388  007E00                     
  3389                           ; BSR set to: 0
  3390                           ;doprnt.c: 1317: prec++;
  3391  007E00  4BCE               	infsnz	sprintf@prec& (0+255),f,b
  3392  007E02  2BCF               	incf	(sprintf@prec+1)& (0+255),f,b
  3393  007E04                     l3598:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;doprnt.c: 1365: if(c < prec)
  3397  007E04  51D4               	movf	sprintf@c& (0+255),w,b
  3398  007E06  6E59               	movwf	??_sprintf^0,c
  3399  007E08  6A5A               	clrf	(??_sprintf+1)^0,c
  3400  007E0A  51CE               	movf	sprintf@prec& (0+255),w,b
  3401  007E0C  5C59               	subwf	??_sprintf^0,w,c
  3402  007E0E  505A               	movf	(??_sprintf+1)^0,w,c
  3403  007E10  0A80               	xorlw	128
  3404  007E12  6E5B               	movwf	(??_sprintf+2)^0,c
  3405  007E14  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  3406  007E16  0A80               	xorlw	128
  3407  007E18  585B               	subwfb	(??_sprintf+2)^0,w,c
  3408  007E1A  B0D8               	btfsc	status,0,c
  3409  007E1C  EF12  F03F         	goto	u3671
  3410  007E20  EF14  F03F         	goto	u3670
  3411  007E24                     u3671:
  3412  007E24  EF16  F03F         	goto	l3602
  3413  007E28                     u3670:
  3414  007E28                     
  3415                           ; BSR set to: 0
  3416  007E28  EF28  F03F         	goto	l3606
  3417  007E2C                     l3602:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;doprnt.c: 1367: else if(prec < c)
  3421  007E2C  51D4               	movf	sprintf@c& (0+255),w,b
  3422  007E2E  6E59               	movwf	??_sprintf^0,c
  3423  007E30  6A5A               	clrf	(??_sprintf+1)^0,c
  3424  007E32  5059               	movf	??_sprintf^0,w,c
  3425  007E34  5DCE               	subwf	sprintf@prec& (0+255),w,b
  3426  007E36  51CF               	movf	(sprintf@prec+1)& (0+255),w,b
  3427  007E38  0A80               	xorlw	128
  3428  007E3A  6E5B               	movwf	(??_sprintf+2)^0,c
  3429  007E3C  505A               	movf	(??_sprintf+1)^0,w,c
  3430  007E3E  0A80               	xorlw	128
  3431  007E40  585B               	subwfb	(??_sprintf+2)^0,w,c
  3432  007E42  B0D8               	btfsc	status,0,c
  3433  007E44  EF26  F03F         	goto	u3681
  3434  007E48  EF28  F03F         	goto	u3680
  3435  007E4C                     u3681:
  3436  007E4C  EF28  F03F         	goto	l3606
  3437  007E50                     u3680:
  3438  007E50                     l3606:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3442  007E50  0E03               	movlw	3
  3443  007E52  15C2               	andwf	sprintf@flag& (0+255),w,b
  3444  007E54  6E59               	movwf	??_sprintf^0,c
  3445  007E56  0E00               	movlw	0
  3446  007E58  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  3447  007E5A  6E5A               	movwf	(??_sprintf+1)^0,c
  3448  007E5C  5059               	movf	??_sprintf^0,w,c
  3449  007E5E  105A               	iorwf	(??_sprintf+1)^0,w,c
  3450  007E60  B4D8               	btfsc	status,2,c
  3451  007E62  EF35  F03F         	goto	u3691
  3452  007E66  EF37  F03F         	goto	u3690
  3453  007E6A                     u3691:
  3454  007E6A  EF3F  F03F         	goto	l3612
  3455  007E6E                     u3690:
  3456  007E6E                     
  3457                           ; BSR set to: 0
  3458                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3459  007E6E  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3460  007E72  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3461  007E76  0E2D               	movlw	45
  3462  007E78  6EDF               	movwf	indf2,c
  3463  007E7A  EFE5  F03A         	goto	l3416
  3464  007E7E                     l3612:
  3465                           
  3466                           ; BSR set to: 0
  3467  007E7E  C09E  FFF6         	movff	sprintf@f,tblptrl
  3468  007E82  C09F  FFF7         	movff	sprintf@f+1,tblptrh
  3469  007E86  4B9E               	infsnz	sprintf@f& (0+255),f,b
  3470  007E88  2B9F               	incf	(sprintf@f+1)& (0+255),f,b
  3471  007E8A                     	if	0	;tblptru may be non-zero
  3472  007E8A                     	endif
  3473  007E8A                     	if	0	;tblptru may be non-zero
  3474  007E8A                     	endif
  3475  007E8A  0008               	tblrd		*
  3476  007E8C  CFF5 F0D4          	movff	tablat,sprintf@c
  3477  007E90  51D4               	movf	sprintf@c& (0+255),w,b
  3478  007E92  A4D8               	btfss	status,2,c
  3479  007E94  EF4E  F03F         	goto	u3701
  3480  007E98  EF50  F03F         	goto	u3700
  3481  007E9C                     u3701:
  3482  007E9C  EFD6  F03A         	goto	l3412
  3483  007EA0                     u3700:
  3484  007EA0                     l3614:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;doprnt.c: 1564: *sp = 0;
  3488  007EA0  C09C  FFD9         	movff	sprintf@sp,fsr2l
  3489  007EA4  C09D  FFDA         	movff	sprintf@sp+1,fsr2h
  3490  007EA8  0E00               	movlw	0
  3491  007EAA  6EDF               	movwf	indf2,c
  3492  007EAC                     
  3493                           ; BSR set to: 0
  3494  007EAC  0012               	return		;funcret
  3495  007EAE                     __end_of_sprintf:
  3496                           	opt callstack 0
  3497                           
  3498 ;; *************** function _scale *****************
  3499 ;; Defined at:
  3500 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  scl             1    wreg     char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  scl             1   47[COMRAM] char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  4   39[COMRAM] char 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3514 ;;      Params:         4       0       0       0       0       0       0       0       0
  3515 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3517 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3518 ;;Total ram usage:        9 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    1
  3521 ;; This function calls:
  3522 ;;		___awdiv
  3523 ;;		___awmod
  3524 ;;		___flmul
  3525 ;; This function is called by:
  3526 ;;		_sprintf
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text6
  3531  006334                     __ptext6:
  3532                           	opt callstack 0
  3533  006334                     _scale:
  3534                           	opt callstack 28
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;incstack = 0
  3538                           ;scale@scl stored from wreg
  3539  006334  6E30               	movwf	scale@scl^0,c
  3540  006336                     
  3541                           ;doprnt.c: 436: if(scl < 0) {
  3542  006336  BE30               	btfsc	scale@scl^0,7,c
  3543  006338  EFA2  F031         	goto	u2830
  3544  00633C  EFA0  F031         	goto	u2831
  3545  006340                     u2831:
  3546  006340  EFA2  F032         	goto	l3060
  3547  006344                     u2830:
  3548  006344                     
  3549                           ;doprnt.c: 437: scl = -scl;
  3550  006344  6C30               	negf	scale@scl^0,c
  3551                           
  3552                           ;doprnt.c: 438: if(scl>=110)
  3553  006346  5030               	movf	scale@scl^0,w,c
  3554  006348  0A80               	xorlw	128
  3555  00634A  0F12               	addlw	-238
  3556  00634C  A0D8               	btfss	status,0,c
  3557  00634E  EFAB  F031         	goto	u2841
  3558  006352  EFAD  F031         	goto	u2840
  3559  006356                     u2841:
  3560  006356  EF36  F032         	goto	l3050
  3561  00635A                     u2840:
  3562  00635A                     
  3563                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3564  00635A  0E00               	movlw	0
  3565  00635C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3566  00635E  0E0A               	movlw	10
  3567  006360  6E09               	movwf	___awdiv@divisor^0,c
  3568  006362  0E00               	movlw	0
  3569  006364  6E04               	movwf	(___awmod@divisor+1)^0,c
  3570  006366  0E64               	movlw	100
  3571  006368  6E03               	movwf	___awmod@divisor^0,c
  3572  00636A  5030               	movf	scale@scl^0,w,c
  3573  00636C  6E01               	movwf	___awmod@dividend^0,c
  3574  00636E  6A02               	clrf	(___awmod@dividend+1)^0,c
  3575  006370  BE01               	btfsc	___awmod@dividend^0,7,c
  3576  006372  0602               	decf	(___awmod@dividend+1)^0,f,c
  3577  006374  ECF6  F029         	call	___awmod	;wreg free
  3578  006378  C001  F007         	movff	?___awmod,___awdiv@dividend
  3579  00637C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3580  006380  EC4E  F02A         	call	___awdiv	;wreg free
  3581  006384  0E09               	movlw	9
  3582  006386  2607               	addwf	?___awdiv^0,f,c
  3583  006388  5007               	movf	?___awdiv^0,w,c
  3584  00638A  0D04               	mullw	4
  3585  00638C  0EE3               	movlw	low __npowers_
  3586  00638E  24F3               	addwf	243,w,c
  3587  006390  6EF6               	movwf	tblptrl,c
  3588  006392  0E7E               	movlw	high __npowers_
  3589  006394  20F4               	addwfc	244,w,c
  3590  006396  6EF7               	movwf	tblptrh,c
  3591  006398                     	if	0	;There are less than 3 active tblptr bytes
  3592  006398                     	endif
  3593  006398  0009               	tblrd		*+
  3594  00639A  CFF5 F013          	movff	tablat,___flmul@a
  3595  00639E  0009               	tblrd		*+
  3596  0063A0  CFF5 F014          	movff	tablat,___flmul@a+1
  3597  0063A4  0009               	tblrd		*+
  3598  0063A6  CFF5 F015          	movff	tablat,___flmul@a+2
  3599  0063AA  000A               	tblrd		*-
  3600  0063AC  CFF5 F016          	movff	tablat,___flmul@a+3
  3601  0063B0  0E00               	movlw	0
  3602  0063B2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3603  0063B4  0E64               	movlw	100
  3604  0063B6  6E09               	movwf	___awdiv@divisor^0,c
  3605  0063B8  5030               	movf	scale@scl^0,w,c
  3606  0063BA  6E07               	movwf	___awdiv@dividend^0,c
  3607  0063BC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3608  0063BE  BE07               	btfsc	___awdiv@dividend^0,7,c
  3609  0063C0  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3610  0063C2  EC4E  F02A         	call	___awdiv	;wreg free
  3611  0063C6  0E12               	movlw	18
  3612  0063C8  2607               	addwf	?___awdiv^0,f,c
  3613  0063CA  5007               	movf	?___awdiv^0,w,c
  3614  0063CC  0D04               	mullw	4
  3615  0063CE  0EE3               	movlw	low __npowers_
  3616  0063D0  24F3               	addwf	243,w,c
  3617  0063D2  6EF6               	movwf	tblptrl,c
  3618  0063D4  0E7E               	movlw	high __npowers_
  3619  0063D6  20F4               	addwfc	244,w,c
  3620  0063D8  6EF7               	movwf	tblptrh,c
  3621  0063DA                     	if	0	;There are less than 3 active tblptr bytes
  3622  0063DA                     	endif
  3623  0063DA  0009               	tblrd		*+
  3624  0063DC  CFF5 F00F          	movff	tablat,___flmul@b
  3625  0063E0  0009               	tblrd		*+
  3626  0063E2  CFF5 F010          	movff	tablat,___flmul@b+1
  3627  0063E6  0009               	tblrd		*+
  3628  0063E8  CFF5 F011          	movff	tablat,___flmul@b+2
  3629  0063EC  000A               	tblrd		*-
  3630  0063EE  CFF5 F012          	movff	tablat,___flmul@b+3
  3631  0063F2  ECA0  F033         	call	___flmul	;wreg free
  3632  0063F6  C00F  F02C         	movff	?___flmul,_scale$976
  3633  0063FA  C010  F02D         	movff	?___flmul+1,_scale$976+1
  3634  0063FE  C011  F02E         	movff	?___flmul+2,_scale$976+2
  3635  006402  C012  F02F         	movff	?___flmul+3,_scale$976+3
  3636                           
  3637                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3638  006406  C02C  F00F         	movff	_scale$976,___flmul@b
  3639  00640A  C02D  F010         	movff	_scale$976+1,___flmul@b+1
  3640  00640E  C02E  F011         	movff	_scale$976+2,___flmul@b+2
  3641  006412  C02F  F012         	movff	_scale$976+3,___flmul@b+3
  3642  006416  0E00               	movlw	0
  3643  006418  6E04               	movwf	(___awmod@divisor+1)^0,c
  3644  00641A  0E0A               	movlw	10
  3645  00641C  6E03               	movwf	___awmod@divisor^0,c
  3646  00641E  5030               	movf	scale@scl^0,w,c
  3647  006420  6E01               	movwf	___awmod@dividend^0,c
  3648  006422  6A02               	clrf	(___awmod@dividend+1)^0,c
  3649  006424  BE01               	btfsc	___awmod@dividend^0,7,c
  3650  006426  0602               	decf	(___awmod@dividend+1)^0,f,c
  3651  006428  ECF6  F029         	call	___awmod	;wreg free
  3652  00642C  5001               	movf	?___awmod^0,w,c
  3653  00642E  0D04               	mullw	4
  3654  006430  0EE3               	movlw	low __npowers_
  3655  006432  24F3               	addwf	243,w,c
  3656  006434  6EF6               	movwf	tblptrl,c
  3657  006436  0E7E               	movlw	high __npowers_
  3658  006438  20F4               	addwfc	244,w,c
  3659  00643A  6EF7               	movwf	tblptrh,c
  3660  00643C                     	if	0	;There are less than 3 active tblptr bytes
  3661  00643C                     	endif
  3662  00643C  0009               	tblrd		*+
  3663  00643E  CFF5 F013          	movff	tablat,___flmul@a
  3664  006442  0009               	tblrd		*+
  3665  006444  CFF5 F014          	movff	tablat,___flmul@a+1
  3666  006448  0009               	tblrd		*+
  3667  00644A  CFF5 F015          	movff	tablat,___flmul@a+2
  3668  00644E  000A               	tblrd		*-
  3669  006450  CFF5 F016          	movff	tablat,___flmul@a+3
  3670  006454  ECA0  F033         	call	___flmul	;wreg free
  3671  006458  C00F  F028         	movff	?___flmul,?_scale
  3672  00645C  C010  F029         	movff	?___flmul+1,?_scale+1
  3673  006460  C011  F02A         	movff	?___flmul+2,?_scale+2
  3674  006464  C012  F02B         	movff	?___flmul+3,?_scale+3
  3675  006468  EF9F  F033         	goto	l271
  3676  00646C                     l3050:
  3677                           
  3678                           ;doprnt.c: 440: else if(scl > 10)
  3679  00646C  5030               	movf	scale@scl^0,w,c
  3680  00646E  0A80               	xorlw	128
  3681  006470  0F75               	addlw	-139
  3682  006472  A0D8               	btfss	status,0,c
  3683  006474  EF3E  F032         	goto	u2851
  3684  006478  EF40  F032         	goto	u2850
  3685  00647C                     u2851:
  3686  00647C  EF8C  F032         	goto	l3056
  3687  006480                     u2850:
  3688  006480                     
  3689                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3690  006480  0E00               	movlw	0
  3691  006482  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3692  006484  0E0A               	movlw	10
  3693  006486  6E09               	movwf	___awdiv@divisor^0,c
  3694  006488  5030               	movf	scale@scl^0,w,c
  3695  00648A  6E07               	movwf	___awdiv@dividend^0,c
  3696  00648C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3697  00648E  BE07               	btfsc	___awdiv@dividend^0,7,c
  3698  006490  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3699  006492  EC4E  F02A         	call	___awdiv	;wreg free
  3700  006496  0E09               	movlw	9
  3701  006498  2607               	addwf	?___awdiv^0,f,c
  3702  00649A  5007               	movf	?___awdiv^0,w,c
  3703  00649C  0D04               	mullw	4
  3704  00649E  0EE3               	movlw	low __npowers_
  3705  0064A0  24F3               	addwf	243,w,c
  3706  0064A2  6EF6               	movwf	tblptrl,c
  3707  0064A4  0E7E               	movlw	high __npowers_
  3708  0064A6  20F4               	addwfc	244,w,c
  3709  0064A8  6EF7               	movwf	tblptrh,c
  3710  0064AA                     	if	0	;There are less than 3 active tblptr bytes
  3711  0064AA                     	endif
  3712  0064AA  0009               	tblrd		*+
  3713  0064AC  CFF5 F00F          	movff	tablat,___flmul@b
  3714  0064B0  0009               	tblrd		*+
  3715  0064B2  CFF5 F010          	movff	tablat,___flmul@b+1
  3716  0064B6  0009               	tblrd		*+
  3717  0064B8  CFF5 F011          	movff	tablat,___flmul@b+2
  3718  0064BC  000A               	tblrd		*-
  3719  0064BE  CFF5 F012          	movff	tablat,___flmul@b+3
  3720  0064C2  0E00               	movlw	0
  3721  0064C4  6E04               	movwf	(___awmod@divisor+1)^0,c
  3722  0064C6  0E0A               	movlw	10
  3723  0064C8  6E03               	movwf	___awmod@divisor^0,c
  3724  0064CA  5030               	movf	scale@scl^0,w,c
  3725  0064CC  6E01               	movwf	___awmod@dividend^0,c
  3726  0064CE  6A02               	clrf	(___awmod@dividend+1)^0,c
  3727  0064D0  BE01               	btfsc	___awmod@dividend^0,7,c
  3728  0064D2  0602               	decf	(___awmod@dividend+1)^0,f,c
  3729  0064D4  ECF6  F029         	call	___awmod	;wreg free
  3730  0064D8  5001               	movf	?___awmod^0,w,c
  3731  0064DA  0D04               	mullw	4
  3732  0064DC  0EE3               	movlw	low __npowers_
  3733  0064DE  24F3               	addwf	243,w,c
  3734  0064E0  6EF6               	movwf	tblptrl,c
  3735  0064E2  0E7E               	movlw	high __npowers_
  3736  0064E4  20F4               	addwfc	244,w,c
  3737  0064E6  6EF7               	movwf	tblptrh,c
  3738  0064E8                     	if	0	;There are less than 3 active tblptr bytes
  3739  0064E8                     	endif
  3740  0064E8  0009               	tblrd		*+
  3741  0064EA  CFF5 F013          	movff	tablat,___flmul@a
  3742  0064EE  0009               	tblrd		*+
  3743  0064F0  CFF5 F014          	movff	tablat,___flmul@a+1
  3744  0064F4  0009               	tblrd		*+
  3745  0064F6  CFF5 F015          	movff	tablat,___flmul@a+2
  3746  0064FA  000A               	tblrd		*-
  3747  0064FC  CFF5 F016          	movff	tablat,___flmul@a+3
  3748  006500  ECA0  F033         	call	___flmul	;wreg free
  3749  006504  C00F  F028         	movff	?___flmul,?_scale
  3750  006508  C010  F029         	movff	?___flmul+1,?_scale+1
  3751  00650C  C011  F02A         	movff	?___flmul+2,?_scale+2
  3752  006510  C012  F02B         	movff	?___flmul+3,?_scale+3
  3753  006514  EF9F  F033         	goto	l271
  3754  006518                     l3056:
  3755                           
  3756                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3757  006518  5030               	movf	scale@scl^0,w,c
  3758  00651A  0D04               	mullw	4
  3759  00651C  0EE3               	movlw	low __npowers_
  3760  00651E  24F3               	addwf	243,w,c
  3761  006520  6EF6               	movwf	tblptrl,c
  3762  006522  0E7E               	movlw	high __npowers_
  3763  006524  20F4               	addwfc	244,w,c
  3764  006526  6EF7               	movwf	tblptrh,c
  3765  006528                     	if	0	;There are less than 3 active tblptr bytes
  3766  006528                     	endif
  3767  006528  0009               	tblrd		*+
  3768  00652A  CFF5 F028          	movff	tablat,?_scale
  3769  00652E  0009               	tblrd		*+
  3770  006530  CFF5 F029          	movff	tablat,?_scale+1
  3771  006534  0009               	tblrd		*+
  3772  006536  CFF5 F02A          	movff	tablat,?_scale+2
  3773  00653A  000A               	tblrd		*-
  3774  00653C  CFF5 F02B          	movff	tablat,?_scale+3
  3775  006540  EF9F  F033         	goto	l271
  3776  006544                     l3060:
  3777                           
  3778                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3779  006544  5030               	movf	scale@scl^0,w,c
  3780  006546  0A80               	xorlw	128
  3781  006548  0F12               	addlw	-238
  3782  00654A  A0D8               	btfss	status,0,c
  3783  00654C  EFAA  F032         	goto	u2861
  3784  006550  EFAC  F032         	goto	u2860
  3785  006554                     u2861:
  3786  006554  EF35  F033         	goto	l3068
  3787  006558                     u2860:
  3788  006558                     
  3789                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3790  006558  0E00               	movlw	0
  3791  00655A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3792  00655C  0E0A               	movlw	10
  3793  00655E  6E09               	movwf	___awdiv@divisor^0,c
  3794  006560  0E00               	movlw	0
  3795  006562  6E04               	movwf	(___awmod@divisor+1)^0,c
  3796  006564  0E64               	movlw	100
  3797  006566  6E03               	movwf	___awmod@divisor^0,c
  3798  006568  5030               	movf	scale@scl^0,w,c
  3799  00656A  6E01               	movwf	___awmod@dividend^0,c
  3800  00656C  6A02               	clrf	(___awmod@dividend+1)^0,c
  3801  00656E  BE01               	btfsc	___awmod@dividend^0,7,c
  3802  006570  0602               	decf	(___awmod@dividend+1)^0,f,c
  3803  006572  ECF6  F029         	call	___awmod	;wreg free
  3804  006576  C001  F007         	movff	?___awmod,___awdiv@dividend
  3805  00657A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3806  00657E  EC4E  F02A         	call	___awdiv	;wreg free
  3807  006582  0E09               	movlw	9
  3808  006584  2607               	addwf	?___awdiv^0,f,c
  3809  006586  5007               	movf	?___awdiv^0,w,c
  3810  006588  0D04               	mullw	4
  3811  00658A  0EAF               	movlw	low __powers_
  3812  00658C  24F3               	addwf	243,w,c
  3813  00658E  6EF6               	movwf	tblptrl,c
  3814  006590  0E7E               	movlw	high __powers_
  3815  006592  20F4               	addwfc	244,w,c
  3816  006594  6EF7               	movwf	tblptrh,c
  3817  006596                     	if	0	;There are less than 3 active tblptr bytes
  3818  006596                     	endif
  3819  006596  0009               	tblrd		*+
  3820  006598  CFF5 F013          	movff	tablat,___flmul@a
  3821  00659C  0009               	tblrd		*+
  3822  00659E  CFF5 F014          	movff	tablat,___flmul@a+1
  3823  0065A2  0009               	tblrd		*+
  3824  0065A4  CFF5 F015          	movff	tablat,___flmul@a+2
  3825  0065A8  000A               	tblrd		*-
  3826  0065AA  CFF5 F016          	movff	tablat,___flmul@a+3
  3827  0065AE  0E00               	movlw	0
  3828  0065B0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3829  0065B2  0E64               	movlw	100
  3830  0065B4  6E09               	movwf	___awdiv@divisor^0,c
  3831  0065B6  5030               	movf	scale@scl^0,w,c
  3832  0065B8  6E07               	movwf	___awdiv@dividend^0,c
  3833  0065BA  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3834  0065BC  BE07               	btfsc	___awdiv@dividend^0,7,c
  3835  0065BE  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3836  0065C0  EC4E  F02A         	call	___awdiv	;wreg free
  3837  0065C4  0E12               	movlw	18
  3838  0065C6  2607               	addwf	?___awdiv^0,f,c
  3839  0065C8  5007               	movf	?___awdiv^0,w,c
  3840  0065CA  0D04               	mullw	4
  3841  0065CC  0EAF               	movlw	low __powers_
  3842  0065CE  24F3               	addwf	243,w,c
  3843  0065D0  6EF6               	movwf	tblptrl,c
  3844  0065D2  0E7E               	movlw	high __powers_
  3845  0065D4  20F4               	addwfc	244,w,c
  3846  0065D6  6EF7               	movwf	tblptrh,c
  3847  0065D8                     	if	0	;There are less than 3 active tblptr bytes
  3848  0065D8                     	endif
  3849  0065D8  0009               	tblrd		*+
  3850  0065DA  CFF5 F00F          	movff	tablat,___flmul@b
  3851  0065DE  0009               	tblrd		*+
  3852  0065E0  CFF5 F010          	movff	tablat,___flmul@b+1
  3853  0065E4  0009               	tblrd		*+
  3854  0065E6  CFF5 F011          	movff	tablat,___flmul@b+2
  3855  0065EA  000A               	tblrd		*-
  3856  0065EC  CFF5 F012          	movff	tablat,___flmul@b+3
  3857  0065F0  ECA0  F033         	call	___flmul	;wreg free
  3858  0065F4  C00F  F02C         	movff	?___flmul,_scale$976
  3859  0065F8  C010  F02D         	movff	?___flmul+1,_scale$976+1
  3860  0065FC  C011  F02E         	movff	?___flmul+2,_scale$976+2
  3861  006600  C012  F02F         	movff	?___flmul+3,_scale$976+3
  3862                           
  3863                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3864  006604  C02C  F00F         	movff	_scale$976,___flmul@b
  3865  006608  C02D  F010         	movff	_scale$976+1,___flmul@b+1
  3866  00660C  C02E  F011         	movff	_scale$976+2,___flmul@b+2
  3867  006610  C02F  F012         	movff	_scale$976+3,___flmul@b+3
  3868  006614  0E00               	movlw	0
  3869  006616  6E04               	movwf	(___awmod@divisor+1)^0,c
  3870  006618  0E0A               	movlw	10
  3871  00661A  6E03               	movwf	___awmod@divisor^0,c
  3872  00661C  5030               	movf	scale@scl^0,w,c
  3873  00661E  6E01               	movwf	___awmod@dividend^0,c
  3874  006620  6A02               	clrf	(___awmod@dividend+1)^0,c
  3875  006622  BE01               	btfsc	___awmod@dividend^0,7,c
  3876  006624  0602               	decf	(___awmod@dividend+1)^0,f,c
  3877  006626  ECF6  F029         	call	___awmod	;wreg free
  3878  00662A  5001               	movf	?___awmod^0,w,c
  3879  00662C  0D04               	mullw	4
  3880  00662E  0EAF               	movlw	low __powers_
  3881  006630  24F3               	addwf	243,w,c
  3882  006632  6EF6               	movwf	tblptrl,c
  3883  006634  0E7E               	movlw	high __powers_
  3884  006636  20F4               	addwfc	244,w,c
  3885  006638  6EF7               	movwf	tblptrh,c
  3886  00663A                     	if	0	;There are less than 3 active tblptr bytes
  3887  00663A                     	endif
  3888  00663A  0009               	tblrd		*+
  3889  00663C  CFF5 F013          	movff	tablat,___flmul@a
  3890  006640  0009               	tblrd		*+
  3891  006642  CFF5 F014          	movff	tablat,___flmul@a+1
  3892  006646  0009               	tblrd		*+
  3893  006648  CFF5 F015          	movff	tablat,___flmul@a+2
  3894  00664C  000A               	tblrd		*-
  3895  00664E  CFF5 F016          	movff	tablat,___flmul@a+3
  3896  006652  ECA0  F033         	call	___flmul	;wreg free
  3897  006656  C00F  F028         	movff	?___flmul,?_scale
  3898  00665A  C010  F029         	movff	?___flmul+1,?_scale+1
  3899  00665E  C011  F02A         	movff	?___flmul+2,?_scale+2
  3900  006662  C012  F02B         	movff	?___flmul+3,?_scale+3
  3901  006666  EF9F  F033         	goto	l271
  3902  00666A                     l3068:
  3903                           
  3904                           ;doprnt.c: 446: else if(scl > 10)
  3905  00666A  5030               	movf	scale@scl^0,w,c
  3906  00666C  0A80               	xorlw	128
  3907  00666E  0F75               	addlw	-139
  3908  006670  A0D8               	btfss	status,0,c
  3909  006672  EF3D  F033         	goto	u2871
  3910  006676  EF3F  F033         	goto	u2870
  3911  00667A                     u2871:
  3912  00667A  EF8B  F033         	goto	l3074
  3913  00667E                     u2870:
  3914  00667E                     
  3915                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3916  00667E  0E00               	movlw	0
  3917  006680  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3918  006682  0E0A               	movlw	10
  3919  006684  6E09               	movwf	___awdiv@divisor^0,c
  3920  006686  5030               	movf	scale@scl^0,w,c
  3921  006688  6E07               	movwf	___awdiv@dividend^0,c
  3922  00668A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3923  00668C  BE07               	btfsc	___awdiv@dividend^0,7,c
  3924  00668E  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3925  006690  EC4E  F02A         	call	___awdiv	;wreg free
  3926  006694  0E09               	movlw	9
  3927  006696  2607               	addwf	?___awdiv^0,f,c
  3928  006698  5007               	movf	?___awdiv^0,w,c
  3929  00669A  0D04               	mullw	4
  3930  00669C  0EAF               	movlw	low __powers_
  3931  00669E  24F3               	addwf	243,w,c
  3932  0066A0  6EF6               	movwf	tblptrl,c
  3933  0066A2  0E7E               	movlw	high __powers_
  3934  0066A4  20F4               	addwfc	244,w,c
  3935  0066A6  6EF7               	movwf	tblptrh,c
  3936  0066A8                     	if	0	;There are less than 3 active tblptr bytes
  3937  0066A8                     	endif
  3938  0066A8  0009               	tblrd		*+
  3939  0066AA  CFF5 F00F          	movff	tablat,___flmul@b
  3940  0066AE  0009               	tblrd		*+
  3941  0066B0  CFF5 F010          	movff	tablat,___flmul@b+1
  3942  0066B4  0009               	tblrd		*+
  3943  0066B6  CFF5 F011          	movff	tablat,___flmul@b+2
  3944  0066BA  000A               	tblrd		*-
  3945  0066BC  CFF5 F012          	movff	tablat,___flmul@b+3
  3946  0066C0  0E00               	movlw	0
  3947  0066C2  6E04               	movwf	(___awmod@divisor+1)^0,c
  3948  0066C4  0E0A               	movlw	10
  3949  0066C6  6E03               	movwf	___awmod@divisor^0,c
  3950  0066C8  5030               	movf	scale@scl^0,w,c
  3951  0066CA  6E01               	movwf	___awmod@dividend^0,c
  3952  0066CC  6A02               	clrf	(___awmod@dividend+1)^0,c
  3953  0066CE  BE01               	btfsc	___awmod@dividend^0,7,c
  3954  0066D0  0602               	decf	(___awmod@dividend+1)^0,f,c
  3955  0066D2  ECF6  F029         	call	___awmod	;wreg free
  3956  0066D6  5001               	movf	?___awmod^0,w,c
  3957  0066D8  0D04               	mullw	4
  3958  0066DA  0EAF               	movlw	low __powers_
  3959  0066DC  24F3               	addwf	243,w,c
  3960  0066DE  6EF6               	movwf	tblptrl,c
  3961  0066E0  0E7E               	movlw	high __powers_
  3962  0066E2  20F4               	addwfc	244,w,c
  3963  0066E4  6EF7               	movwf	tblptrh,c
  3964  0066E6                     	if	0	;There are less than 3 active tblptr bytes
  3965  0066E6                     	endif
  3966  0066E6  0009               	tblrd		*+
  3967  0066E8  CFF5 F013          	movff	tablat,___flmul@a
  3968  0066EC  0009               	tblrd		*+
  3969  0066EE  CFF5 F014          	movff	tablat,___flmul@a+1
  3970  0066F2  0009               	tblrd		*+
  3971  0066F4  CFF5 F015          	movff	tablat,___flmul@a+2
  3972  0066F8  000A               	tblrd		*-
  3973  0066FA  CFF5 F016          	movff	tablat,___flmul@a+3
  3974  0066FE  ECA0  F033         	call	___flmul	;wreg free
  3975  006702  C00F  F028         	movff	?___flmul,?_scale
  3976  006706  C010  F029         	movff	?___flmul+1,?_scale+1
  3977  00670A  C011  F02A         	movff	?___flmul+2,?_scale+2
  3978  00670E  C012  F02B         	movff	?___flmul+3,?_scale+3
  3979  006712  EF9F  F033         	goto	l271
  3980  006716                     l3074:
  3981                           
  3982                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3983  006716  5030               	movf	scale@scl^0,w,c
  3984  006718  0D04               	mullw	4
  3985  00671A  0EAF               	movlw	low __powers_
  3986  00671C  24F3               	addwf	243,w,c
  3987  00671E  6EF6               	movwf	tblptrl,c
  3988  006720  0E7E               	movlw	high __powers_
  3989  006722  20F4               	addwfc	244,w,c
  3990  006724  6EF7               	movwf	tblptrh,c
  3991  006726                     	if	0	;There are less than 3 active tblptr bytes
  3992  006726                     	endif
  3993  006726  0009               	tblrd		*+
  3994  006728  CFF5 F028          	movff	tablat,?_scale
  3995  00672C  0009               	tblrd		*+
  3996  00672E  CFF5 F029          	movff	tablat,?_scale+1
  3997  006732  0009               	tblrd		*+
  3998  006734  CFF5 F02A          	movff	tablat,?_scale+2
  3999  006738  000A               	tblrd		*-
  4000  00673A  CFF5 F02B          	movff	tablat,?_scale+3
  4001  00673E                     l271:
  4002  00673E  0012               	return		;funcret
  4003  006740                     __end_of_scale:
  4004                           	opt callstack 0
  4005                           
  4006 ;; *************** function ___awmod *****************
  4007 ;; Defined at:
  4008 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  dividend        2    0[COMRAM] int 
  4011 ;;  divisor         2    2[COMRAM] int 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  sign            1    5[COMRAM] unsigned char 
  4014 ;;  counter         1    4[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2    0[COMRAM] int 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         4       0       0       0       0       0       0       0       0
  4025 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4027 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4028 ;;Total ram usage:        6 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_scale
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text7
  4038  0053EC                     __ptext7:
  4039                           	opt callstack 0
  4040  0053EC                     ___awmod:
  4041                           	opt callstack 28
  4042  0053EC  0E00               	movlw	0
  4043  0053EE  6E06               	movwf	___awmod@sign^0,c
  4044  0053F0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4045  0053F2  EFFF  F029         	goto	u2660
  4046  0053F6  EFFD  F029         	goto	u2661
  4047  0053FA                     u2661:
  4048  0053FA  EF05  F02A         	goto	l2914
  4049  0053FE                     u2660:
  4050  0053FE  6C01               	negf	___awmod@dividend^0,c
  4051  005400  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4052  005402  B0D8               	btfsc	status,0,c
  4053  005404  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4054  005406  0E01               	movlw	1
  4055  005408  6E06               	movwf	___awmod@sign^0,c
  4056  00540A                     l2914:
  4057  00540A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4058  00540C  EF0C  F02A         	goto	u2670
  4059  005410  EF0A  F02A         	goto	u2671
  4060  005414                     u2671:
  4061  005414  EF10  F02A         	goto	l2918
  4062  005418                     u2670:
  4063  005418  6C03               	negf	___awmod@divisor^0,c
  4064  00541A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4065  00541C  B0D8               	btfsc	status,0,c
  4066  00541E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4067  005420                     l2918:
  4068  005420  5003               	movf	___awmod@divisor^0,w,c
  4069  005422  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4070  005424  B4D8               	btfsc	status,2,c
  4071  005426  EF17  F02A         	goto	u2681
  4072  00542A  EF19  F02A         	goto	u2680
  4073  00542E                     u2681:
  4074  00542E  EF3D  F02A         	goto	l2934
  4075  005432                     u2680:
  4076  005432  0E01               	movlw	1
  4077  005434  6E05               	movwf	___awmod@counter^0,c
  4078  005436  EF21  F02A         	goto	l2924
  4079  00543A                     l2922:
  4080  00543A  90D8               	bcf	status,0,c
  4081  00543C  3603               	rlcf	___awmod@divisor^0,f,c
  4082  00543E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4083  005440  2A05               	incf	___awmod@counter^0,f,c
  4084  005442                     l2924:
  4085  005442  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4086  005444  EF26  F02A         	goto	u2691
  4087  005448  EF28  F02A         	goto	u2690
  4088  00544C                     u2691:
  4089  00544C  EF1D  F02A         	goto	l2922
  4090  005450                     u2690:
  4091  005450                     l2926:
  4092  005450  5003               	movf	___awmod@divisor^0,w,c
  4093  005452  5C01               	subwf	___awmod@dividend^0,w,c
  4094  005454  5004               	movf	(___awmod@divisor+1)^0,w,c
  4095  005456  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4096  005458  A0D8               	btfss	status,0,c
  4097  00545A  EF31  F02A         	goto	u2701
  4098  00545E  EF33  F02A         	goto	u2700
  4099  005462                     u2701:
  4100  005462  EF37  F02A         	goto	l2930
  4101  005466                     u2700:
  4102  005466  5003               	movf	___awmod@divisor^0,w,c
  4103  005468  5E01               	subwf	___awmod@dividend^0,f,c
  4104  00546A  5004               	movf	(___awmod@divisor+1)^0,w,c
  4105  00546C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4106  00546E                     l2930:
  4107  00546E  90D8               	bcf	status,0,c
  4108  005470  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4109  005472  3203               	rrcf	___awmod@divisor^0,f,c
  4110  005474  2E05               	decfsz	___awmod@counter^0,f,c
  4111  005476  EF28  F02A         	goto	l2926
  4112  00547A                     l2934:
  4113  00547A  5006               	movf	___awmod@sign^0,w,c
  4114  00547C  B4D8               	btfsc	status,2,c
  4115  00547E  EF43  F02A         	goto	u2711
  4116  005482  EF45  F02A         	goto	u2710
  4117  005486                     u2711:
  4118  005486  EF49  F02A         	goto	l2938
  4119  00548A                     u2710:
  4120  00548A  6C01               	negf	___awmod@dividend^0,c
  4121  00548C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4122  00548E  B0D8               	btfsc	status,0,c
  4123  005490  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4124  005492                     l2938:
  4125  005492  C001  F001         	movff	___awmod@dividend,?___awmod
  4126  005496  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4127  00549A  0012               	return		;funcret
  4128  00549C                     __end_of___awmod:
  4129                           	opt callstack 0
  4130                           
  4131 ;; *************** function ___awdiv *****************
  4132 ;; Defined at:
  4133 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  dividend        2    6[COMRAM] int 
  4136 ;;  divisor         2    8[COMRAM] int 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  quotient        2   12[COMRAM] int 
  4139 ;;  sign            1   11[COMRAM] unsigned char 
  4140 ;;  counter         1   10[COMRAM] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  2    6[COMRAM] int 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4150 ;;      Params:         4       0       0       0       0       0       0       0       0
  4151 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4153 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4154 ;;Total ram usage:        8 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_scale
  4160 ;;		_sprintf
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text8
  4165  00549C                     __ptext8:
  4166                           	opt callstack 0
  4167  00549C                     ___awdiv:
  4168                           	opt callstack 28
  4169  00549C  0E00               	movlw	0
  4170  00549E  6E0C               	movwf	___awdiv@sign^0,c
  4171  0054A0  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  4172  0054A2  EF57  F02A         	goto	u2600
  4173  0054A6  EF55  F02A         	goto	u2601
  4174  0054AA                     u2601:
  4175  0054AA  EF5D  F02A         	goto	l2870
  4176  0054AE                     u2600:
  4177  0054AE  6C09               	negf	___awdiv@divisor^0,c
  4178  0054B0  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  4179  0054B2  B0D8               	btfsc	status,0,c
  4180  0054B4  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  4181  0054B6  0E01               	movlw	1
  4182  0054B8  6E0C               	movwf	___awdiv@sign^0,c
  4183  0054BA                     l2870:
  4184  0054BA  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  4185  0054BC  EF64  F02A         	goto	u2610
  4186  0054C0  EF62  F02A         	goto	u2611
  4187  0054C4                     u2611:
  4188  0054C4  EF6A  F02A         	goto	l2876
  4189  0054C8                     u2610:
  4190  0054C8  6C07               	negf	___awdiv@dividend^0,c
  4191  0054CA  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  4192  0054CC  B0D8               	btfsc	status,0,c
  4193  0054CE  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  4194  0054D0  0E01               	movlw	1
  4195  0054D2  1A0C               	xorwf	___awdiv@sign^0,f,c
  4196  0054D4                     l2876:
  4197  0054D4  0E00               	movlw	0
  4198  0054D6  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  4199  0054D8  0E00               	movlw	0
  4200  0054DA  6E0D               	movwf	___awdiv@quotient^0,c
  4201  0054DC  5009               	movf	___awdiv@divisor^0,w,c
  4202  0054DE  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  4203  0054E0  B4D8               	btfsc	status,2,c
  4204  0054E2  EF75  F02A         	goto	u2621
  4205  0054E6  EF77  F02A         	goto	u2620
  4206  0054EA                     u2621:
  4207  0054EA  EF9F  F02A         	goto	l2898
  4208  0054EE                     u2620:
  4209  0054EE  0E01               	movlw	1
  4210  0054F0  6E0B               	movwf	___awdiv@counter^0,c
  4211  0054F2  EF7F  F02A         	goto	l2884
  4212  0054F6                     l2882:
  4213  0054F6  90D8               	bcf	status,0,c
  4214  0054F8  3609               	rlcf	___awdiv@divisor^0,f,c
  4215  0054FA  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  4216  0054FC  2A0B               	incf	___awdiv@counter^0,f,c
  4217  0054FE                     l2884:
  4218  0054FE  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  4219  005500  EF84  F02A         	goto	u2631
  4220  005504  EF86  F02A         	goto	u2630
  4221  005508                     u2631:
  4222  005508  EF7B  F02A         	goto	l2882
  4223  00550C                     u2630:
  4224  00550C                     l2886:
  4225  00550C  90D8               	bcf	status,0,c
  4226  00550E  360D               	rlcf	___awdiv@quotient^0,f,c
  4227  005510  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  4228  005512  5009               	movf	___awdiv@divisor^0,w,c
  4229  005514  5C07               	subwf	___awdiv@dividend^0,w,c
  4230  005516  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4231  005518  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  4232  00551A  A0D8               	btfss	status,0,c
  4233  00551C  EF92  F02A         	goto	u2641
  4234  005520  EF94  F02A         	goto	u2640
  4235  005524                     u2641:
  4236  005524  EF99  F02A         	goto	l2894
  4237  005528                     u2640:
  4238  005528  5009               	movf	___awdiv@divisor^0,w,c
  4239  00552A  5E07               	subwf	___awdiv@dividend^0,f,c
  4240  00552C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  4241  00552E  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  4242  005530  800D               	bsf	___awdiv@quotient^0,0,c
  4243  005532                     l2894:
  4244  005532  90D8               	bcf	status,0,c
  4245  005534  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  4246  005536  3209               	rrcf	___awdiv@divisor^0,f,c
  4247  005538  2E0B               	decfsz	___awdiv@counter^0,f,c
  4248  00553A  EF86  F02A         	goto	l2886
  4249  00553E                     l2898:
  4250  00553E  500C               	movf	___awdiv@sign^0,w,c
  4251  005540  B4D8               	btfsc	status,2,c
  4252  005542  EFA5  F02A         	goto	u2651
  4253  005546  EFA7  F02A         	goto	u2650
  4254  00554A                     u2651:
  4255  00554A  EFAB  F02A         	goto	l2902
  4256  00554E                     u2650:
  4257  00554E  6C0D               	negf	___awdiv@quotient^0,c
  4258  005550  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  4259  005552  B0D8               	btfsc	status,0,c
  4260  005554  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  4261  005556                     l2902:
  4262  005556  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4263  00555A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4264  00555E  0012               	return		;funcret
  4265  005560                     __end_of___awdiv:
  4266                           	opt callstack 0
  4267                           
  4268 ;; *************** function _isdigit *****************
  4269 ;; Defined at:
  4270 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  c               1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  c               1    2[COMRAM] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;		None               void
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        3 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_sprintf
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text9
  4298  004EB4                     __ptext9:
  4299                           	opt callstack 0
  4300  004EB4                     _isdigit:
  4301                           	opt callstack 29
  4302                           
  4303                           ;incstack = 0
  4304                           ;isdigit@c stored from wreg
  4305  004EB4  6E03               	movwf	isdigit@c^0,c
  4306  004EB6  0E00               	movlw	0
  4307  004EB8  6E02               	movwf	_isdigit$792^0,c
  4308  004EBA  0E3A               	movlw	58
  4309  004EBC  6003               	cpfslt	isdigit@c^0,c
  4310  004EBE  EF63  F027         	goto	u2881
  4311  004EC2  EF65  F027         	goto	u2880
  4312  004EC6                     u2881:
  4313  004EC6  EF6F  F027         	goto	l3086
  4314  004ECA                     u2880:
  4315  004ECA  0E2F               	movlw	47
  4316  004ECC  6403               	cpfsgt	isdigit@c^0,c
  4317  004ECE  EF6B  F027         	goto	u2891
  4318  004ED2  EF6D  F027         	goto	u2890
  4319  004ED6                     u2891:
  4320  004ED6  EF6F  F027         	goto	l3086
  4321  004EDA                     u2890:
  4322  004EDA  0E01               	movlw	1
  4323  004EDC  6E02               	movwf	_isdigit$792^0,c
  4324  004EDE                     l3086:
  4325  004EDE  C002  F001         	movff	_isdigit$792,??_isdigit
  4326  004EE2  3001               	rrcf	??_isdigit^0,w,c
  4327  004EE4  0012               	return		;funcret
  4328  004EE6                     __end_of_isdigit:
  4329                           	opt callstack 0
  4330                           
  4331 ;; *************** function _fround *****************
  4332 ;; Defined at:
  4333 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  prec            1    wreg     unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  prec            1   51[COMRAM] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  4   39[COMRAM] unsigned char 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:         4       0       0       0       0       0       0       0       0
  4348 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4350 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4351 ;;Total ram usage:       13 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    1
  4354 ;; This function calls:
  4355 ;;		___flmul
  4356 ;;		___lwdiv
  4357 ;;		___lwmod
  4358 ;; This function is called by:
  4359 ;;		_sprintf
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text10
  4364  005CF8                     __ptext10:
  4365                           	opt callstack 0
  4366  005CF8                     _fround:
  4367                           	opt callstack 28
  4368                           
  4369                           ;incstack = 0
  4370                           ;fround@prec stored from wreg
  4371  005CF8  6E34               	movwf	fround@prec^0,c
  4372  005CFA                     
  4373                           ;doprnt.c: 421: if(prec>=110)
  4374  005CFA  0E6D               	movlw	109
  4375  005CFC  6434               	cpfsgt	fround@prec^0,c
  4376  005CFE  EF83  F02E         	goto	u2811
  4377  005D02  EF85  F02E         	goto	u2810
  4378  005D06                     u2811:
  4379  005D06  EF32  F02F         	goto	l3030
  4380  005D0A                     u2810:
  4381  005D0A                     
  4382                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4383  005D0A  0E00               	movlw	0
  4384  005D0C  6E13               	movwf	___flmul@a^0,c
  4385  005D0E  0E00               	movlw	0
  4386  005D10  6E14               	movwf	(___flmul@a+1)^0,c
  4387  005D12  0E00               	movlw	0
  4388  005D14  6E15               	movwf	(___flmul@a+2)^0,c
  4389  005D16  0E3F               	movlw	63
  4390  005D18  6E16               	movwf	(___flmul@a+3)^0,c
  4391  005D1A  0E00               	movlw	0
  4392  005D1C  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4393  005D1E  0E64               	movlw	100
  4394  005D20  6E08               	movwf	___lwdiv@divisor^0,c
  4395  005D22  C034  F006         	movff	fround@prec,___lwdiv@dividend
  4396  005D26  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  4397  005D28  EC80  F028         	call	___lwdiv	;wreg free
  4398  005D2C  90D8               	bcf	status,0,c
  4399  005D2E  3606               	rlcf	?___lwdiv^0,f,c
  4400  005D30  3607               	rlcf	(?___lwdiv+1)^0,f,c
  4401  005D32  90D8               	bcf	status,0,c
  4402  005D34  3606               	rlcf	?___lwdiv^0,f,c
  4403  005D36  3607               	rlcf	(?___lwdiv+1)^0,f,c
  4404  005D38  0E48               	movlw	72
  4405  005D3A  2606               	addwf	?___lwdiv^0,f,c
  4406  005D3C  0E00               	movlw	0
  4407  005D3E  2207               	addwfc	(?___lwdiv+1)^0,f,c
  4408  005D40  0EE3               	movlw	low __npowers_
  4409  005D42  2406               	addwf	?___lwdiv^0,w,c
  4410  005D44  6EF6               	movwf	tblptrl,c
  4411  005D46  0E7E               	movlw	high __npowers_
  4412  005D48  2007               	addwfc	(?___lwdiv+1)^0,w,c
  4413  005D4A  6EF7               	movwf	tblptrh,c
  4414  005D4C                     	if	0	;There are less than 3 active tblptr bytes
  4415  005D4C                     	endif
  4416  005D4C  0009               	tblrd		*+
  4417  005D4E  CFF5 F00F          	movff	tablat,___flmul@b
  4418  005D52  0009               	tblrd		*+
  4419  005D54  CFF5 F010          	movff	tablat,___flmul@b+1
  4420  005D58  0009               	tblrd		*+
  4421  005D5A  CFF5 F011          	movff	tablat,___flmul@b+2
  4422  005D5E  000A               	tblrd		*-
  4423  005D60  CFF5 F012          	movff	tablat,___flmul@b+3
  4424  005D64  ECA0  F033         	call	___flmul	;wreg free
  4425  005D68  C00F  F030         	movff	?___flmul,_fround$974
  4426  005D6C  C010  F031         	movff	?___flmul+1,_fround$974+1
  4427  005D70  C011  F032         	movff	?___flmul+2,_fround$974+2
  4428  005D74  C012  F033         	movff	?___flmul+3,_fround$974+3
  4429                           
  4430                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4431  005D78  0E00               	movlw	0
  4432  005D7A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4433  005D7C  0E0A               	movlw	10
  4434  005D7E  6E08               	movwf	___lwdiv@divisor^0,c
  4435  005D80  0E00               	movlw	0
  4436  005D82  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4437  005D84  0E64               	movlw	100
  4438  005D86  6E03               	movwf	___lwmod@divisor^0,c
  4439  005D88  C034  F001         	movff	fround@prec,___lwmod@dividend
  4440  005D8C  6A02               	clrf	(___lwmod@dividend+1)^0,c
  4441  005D8E  EC19  F028         	call	___lwmod	;wreg free
  4442  005D92  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4443  005D96  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4444  005D9A  EC80  F028         	call	___lwdiv	;wreg free
  4445  005D9E  90D8               	bcf	status,0,c
  4446  005DA0  3606               	rlcf	?___lwdiv^0,f,c
  4447  005DA2  3607               	rlcf	(?___lwdiv+1)^0,f,c
  4448  005DA4  90D8               	bcf	status,0,c
  4449  005DA6  3606               	rlcf	?___lwdiv^0,f,c
  4450  005DA8  3607               	rlcf	(?___lwdiv+1)^0,f,c
  4451  005DAA  0E24               	movlw	36
  4452  005DAC  2606               	addwf	?___lwdiv^0,f,c
  4453  005DAE  0E00               	movlw	0
  4454  005DB0  2207               	addwfc	(?___lwdiv+1)^0,f,c
  4455  005DB2  0EE3               	movlw	low __npowers_
  4456  005DB4  2406               	addwf	?___lwdiv^0,w,c
  4457  005DB6  6EF6               	movwf	tblptrl,c
  4458  005DB8  0E7E               	movlw	high __npowers_
  4459  005DBA  2007               	addwfc	(?___lwdiv+1)^0,w,c
  4460  005DBC  6EF7               	movwf	tblptrh,c
  4461  005DBE                     	if	0	;There are less than 3 active tblptr bytes
  4462  005DBE                     	endif
  4463  005DBE  0009               	tblrd		*+
  4464  005DC0  CFF5 F013          	movff	tablat,___flmul@a
  4465  005DC4  0009               	tblrd		*+
  4466  005DC6  CFF5 F014          	movff	tablat,___flmul@a+1
  4467  005DCA  0009               	tblrd		*+
  4468  005DCC  CFF5 F015          	movff	tablat,___flmul@a+2
  4469  005DD0  000A               	tblrd		*-
  4470  005DD2  CFF5 F016          	movff	tablat,___flmul@a+3
  4471  005DD6  C030  F00F         	movff	_fround$974,___flmul@b
  4472  005DDA  C031  F010         	movff	_fround$974+1,___flmul@b+1
  4473  005DDE  C032  F011         	movff	_fround$974+2,___flmul@b+2
  4474  005DE2  C033  F012         	movff	_fround$974+3,___flmul@b+3
  4475  005DE6  ECA0  F033         	call	___flmul	;wreg free
  4476  005DEA  C00F  F02C         	movff	?___flmul,_fround$975
  4477  005DEE  C010  F02D         	movff	?___flmul+1,_fround$975+1
  4478  005DF2  C011  F02E         	movff	?___flmul+2,_fround$975+2
  4479  005DF6  C012  F02F         	movff	?___flmul+3,_fround$975+3
  4480                           
  4481                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4482  005DFA  C02C  F00F         	movff	_fround$975,___flmul@b
  4483  005DFE  C02D  F010         	movff	_fround$975+1,___flmul@b+1
  4484  005E02  C02E  F011         	movff	_fround$975+2,___flmul@b+2
  4485  005E06  C02F  F012         	movff	_fround$975+3,___flmul@b+3
  4486  005E0A  0E00               	movlw	0
  4487  005E0C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4488  005E0E  0E0A               	movlw	10
  4489  005E10  6E03               	movwf	___lwmod@divisor^0,c
  4490  005E12  C034  F001         	movff	fround@prec,___lwmod@dividend
  4491  005E16  6A02               	clrf	(___lwmod@dividend+1)^0,c
  4492  005E18  EC19  F028         	call	___lwmod	;wreg free
  4493  005E1C  90D8               	bcf	status,0,c
  4494  005E1E  3601               	rlcf	?___lwmod^0,f,c
  4495  005E20  3602               	rlcf	(?___lwmod+1)^0,f,c
  4496  005E22  90D8               	bcf	status,0,c
  4497  005E24  3601               	rlcf	?___lwmod^0,f,c
  4498  005E26  3602               	rlcf	(?___lwmod+1)^0,f,c
  4499  005E28  0EE3               	movlw	low __npowers_
  4500  005E2A  2401               	addwf	?___lwmod^0,w,c
  4501  005E2C  6EF6               	movwf	tblptrl,c
  4502  005E2E  0E7E               	movlw	high __npowers_
  4503  005E30  2002               	addwfc	(?___lwmod+1)^0,w,c
  4504  005E32  6EF7               	movwf	tblptrh,c
  4505  005E34                     	if	0	;There are less than 3 active tblptr bytes
  4506  005E34                     	endif
  4507  005E34  0009               	tblrd		*+
  4508  005E36  CFF5 F013          	movff	tablat,___flmul@a
  4509  005E3A  0009               	tblrd		*+
  4510  005E3C  CFF5 F014          	movff	tablat,___flmul@a+1
  4511  005E40  0009               	tblrd		*+
  4512  005E42  CFF5 F015          	movff	tablat,___flmul@a+2
  4513  005E46  000A               	tblrd		*-
  4514  005E48  CFF5 F016          	movff	tablat,___flmul@a+3
  4515  005E4C  ECA0  F033         	call	___flmul	;wreg free
  4516  005E50  C00F  F028         	movff	?___flmul,?_fround
  4517  005E54  C010  F029         	movff	?___flmul+1,?_fround+1
  4518  005E58  C011  F02A         	movff	?___flmul+2,?_fround+2
  4519  005E5C  C012  F02B         	movff	?___flmul+3,?_fround+3
  4520  005E60  EFCC  F02F         	goto	l264
  4521  005E64                     l3030:
  4522                           
  4523                           ;doprnt.c: 423: else if(prec > 10)
  4524  005E64  0E0A               	movlw	10
  4525  005E66  6434               	cpfsgt	fround@prec^0,c
  4526  005E68  EF38  F02F         	goto	u2821
  4527  005E6C  EF3A  F02F         	goto	u2820
  4528  005E70                     u2821:
  4529  005E70  EFA6  F02F         	goto	l3036
  4530  005E74                     u2820:
  4531  005E74                     
  4532                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4533  005E74  0E00               	movlw	0
  4534  005E76  6E13               	movwf	___flmul@a^0,c
  4535  005E78  0E00               	movlw	0
  4536  005E7A  6E14               	movwf	(___flmul@a+1)^0,c
  4537  005E7C  0E00               	movlw	0
  4538  005E7E  6E15               	movwf	(___flmul@a+2)^0,c
  4539  005E80  0E3F               	movlw	63
  4540  005E82  6E16               	movwf	(___flmul@a+3)^0,c
  4541  005E84  0E00               	movlw	0
  4542  005E86  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  4543  005E88  0E0A               	movlw	10
  4544  005E8A  6E08               	movwf	___lwdiv@divisor^0,c
  4545  005E8C  C034  F006         	movff	fround@prec,___lwdiv@dividend
  4546  005E90  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  4547  005E92  EC80  F028         	call	___lwdiv	;wreg free
  4548  005E96  90D8               	bcf	status,0,c
  4549  005E98  3606               	rlcf	?___lwdiv^0,f,c
  4550  005E9A  3607               	rlcf	(?___lwdiv+1)^0,f,c
  4551  005E9C  90D8               	bcf	status,0,c
  4552  005E9E  3606               	rlcf	?___lwdiv^0,f,c
  4553  005EA0  3607               	rlcf	(?___lwdiv+1)^0,f,c
  4554  005EA2  0E24               	movlw	36
  4555  005EA4  2606               	addwf	?___lwdiv^0,f,c
  4556  005EA6  0E00               	movlw	0
  4557  005EA8  2207               	addwfc	(?___lwdiv+1)^0,f,c
  4558  005EAA  0EE3               	movlw	low __npowers_
  4559  005EAC  2406               	addwf	?___lwdiv^0,w,c
  4560  005EAE  6EF6               	movwf	tblptrl,c
  4561  005EB0  0E7E               	movlw	high __npowers_
  4562  005EB2  2007               	addwfc	(?___lwdiv+1)^0,w,c
  4563  005EB4  6EF7               	movwf	tblptrh,c
  4564  005EB6                     	if	0	;There are less than 3 active tblptr bytes
  4565  005EB6                     	endif
  4566  005EB6  0009               	tblrd		*+
  4567  005EB8  CFF5 F00F          	movff	tablat,___flmul@b
  4568  005EBC  0009               	tblrd		*+
  4569  005EBE  CFF5 F010          	movff	tablat,___flmul@b+1
  4570  005EC2  0009               	tblrd		*+
  4571  005EC4  CFF5 F011          	movff	tablat,___flmul@b+2
  4572  005EC8  000A               	tblrd		*-
  4573  005ECA  CFF5 F012          	movff	tablat,___flmul@b+3
  4574  005ECE  ECA0  F033         	call	___flmul	;wreg free
  4575  005ED2  C00F  F030         	movff	?___flmul,_fround$974
  4576  005ED6  C010  F031         	movff	?___flmul+1,_fround$974+1
  4577  005EDA  C011  F032         	movff	?___flmul+2,_fround$974+2
  4578  005EDE  C012  F033         	movff	?___flmul+3,_fround$974+3
  4579                           
  4580                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4581  005EE2  C030  F00F         	movff	_fround$974,___flmul@b
  4582  005EE6  C031  F010         	movff	_fround$974+1,___flmul@b+1
  4583  005EEA  C032  F011         	movff	_fround$974+2,___flmul@b+2
  4584  005EEE  C033  F012         	movff	_fround$974+3,___flmul@b+3
  4585  005EF2  0E00               	movlw	0
  4586  005EF4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4587  005EF6  0E0A               	movlw	10
  4588  005EF8  6E03               	movwf	___lwmod@divisor^0,c
  4589  005EFA  C034  F001         	movff	fround@prec,___lwmod@dividend
  4590  005EFE  6A02               	clrf	(___lwmod@dividend+1)^0,c
  4591  005F00  EC19  F028         	call	___lwmod	;wreg free
  4592  005F04  90D8               	bcf	status,0,c
  4593  005F06  3601               	rlcf	?___lwmod^0,f,c
  4594  005F08  3602               	rlcf	(?___lwmod+1)^0,f,c
  4595  005F0A  90D8               	bcf	status,0,c
  4596  005F0C  3601               	rlcf	?___lwmod^0,f,c
  4597  005F0E  3602               	rlcf	(?___lwmod+1)^0,f,c
  4598  005F10  0EE3               	movlw	low __npowers_
  4599  005F12  2401               	addwf	?___lwmod^0,w,c
  4600  005F14  6EF6               	movwf	tblptrl,c
  4601  005F16  0E7E               	movlw	high __npowers_
  4602  005F18  2002               	addwfc	(?___lwmod+1)^0,w,c
  4603  005F1A  6EF7               	movwf	tblptrh,c
  4604  005F1C                     	if	0	;There are less than 3 active tblptr bytes
  4605  005F1C                     	endif
  4606  005F1C  0009               	tblrd		*+
  4607  005F1E  CFF5 F013          	movff	tablat,___flmul@a
  4608  005F22  0009               	tblrd		*+
  4609  005F24  CFF5 F014          	movff	tablat,___flmul@a+1
  4610  005F28  0009               	tblrd		*+
  4611  005F2A  CFF5 F015          	movff	tablat,___flmul@a+2
  4612  005F2E  000A               	tblrd		*-
  4613  005F30  CFF5 F016          	movff	tablat,___flmul@a+3
  4614  005F34  ECA0  F033         	call	___flmul	;wreg free
  4615  005F38  C00F  F028         	movff	?___flmul,?_fround
  4616  005F3C  C010  F029         	movff	?___flmul+1,?_fround+1
  4617  005F40  C011  F02A         	movff	?___flmul+2,?_fround+2
  4618  005F44  C012  F02B         	movff	?___flmul+3,?_fround+3
  4619  005F48  EFCC  F02F         	goto	l264
  4620  005F4C                     l3036:
  4621                           
  4622                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4623  005F4C  5034               	movf	fround@prec^0,w,c
  4624  005F4E  0D04               	mullw	4
  4625  005F50  0EE3               	movlw	low __npowers_
  4626  005F52  24F3               	addwf	243,w,c
  4627  005F54  6EF6               	movwf	tblptrl,c
  4628  005F56  0E7E               	movlw	high __npowers_
  4629  005F58  20F4               	addwfc	244,w,c
  4630  005F5A  6EF7               	movwf	tblptrh,c
  4631  005F5C                     	if	0	;There are less than 3 active tblptr bytes
  4632  005F5C                     	endif
  4633  005F5C  0009               	tblrd		*+
  4634  005F5E  CFF5 F00F          	movff	tablat,___flmul@b
  4635  005F62  0009               	tblrd		*+
  4636  005F64  CFF5 F010          	movff	tablat,___flmul@b+1
  4637  005F68  0009               	tblrd		*+
  4638  005F6A  CFF5 F011          	movff	tablat,___flmul@b+2
  4639  005F6E  000A               	tblrd		*-
  4640  005F70  CFF5 F012          	movff	tablat,___flmul@b+3
  4641  005F74  0E00               	movlw	0
  4642  005F76  6E13               	movwf	___flmul@a^0,c
  4643  005F78  0E00               	movlw	0
  4644  005F7A  6E14               	movwf	(___flmul@a+1)^0,c
  4645  005F7C  0E00               	movlw	0
  4646  005F7E  6E15               	movwf	(___flmul@a+2)^0,c
  4647  005F80  0E3F               	movlw	63
  4648  005F82  6E16               	movwf	(___flmul@a+3)^0,c
  4649  005F84  ECA0  F033         	call	___flmul	;wreg free
  4650  005F88  C00F  F028         	movff	?___flmul,?_fround
  4651  005F8C  C010  F029         	movff	?___flmul+1,?_fround+1
  4652  005F90  C011  F02A         	movff	?___flmul+2,?_fround+2
  4653  005F94  C012  F02B         	movff	?___flmul+3,?_fround+3
  4654  005F98                     l264:
  4655  005F98  0012               	return		;funcret
  4656  005F9A                     __end_of_fround:
  4657                           	opt callstack 0
  4658                           
  4659 ;; *************** function ___lwmod *****************
  4660 ;; Defined at:
  4661 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  dividend        2    0[COMRAM] unsigned int 
  4664 ;;  divisor         2    2[COMRAM] unsigned int 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  counter         1    4[COMRAM] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  2    0[COMRAM] unsigned int 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         4       0       0       0       0       0       0       0       0
  4677 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4679 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4680 ;;Total ram usage:        5 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_fround
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text11
  4690  005032                     __ptext11:
  4691                           	opt callstack 0
  4692  005032                     ___lwmod:
  4693                           	opt callstack 28
  4694  005032  5003               	movf	___lwmod@divisor^0,w,c
  4695  005034  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4696  005036  B4D8               	btfsc	status,2,c
  4697  005038  EF20  F028         	goto	u2751
  4698  00503C  EF22  F028         	goto	u2750
  4699  005040                     u2751:
  4700  005040  EF46  F028         	goto	l863
  4701  005044                     u2750:
  4702  005044  0E01               	movlw	1
  4703  005046  6E05               	movwf	___lwmod@counter^0,c
  4704  005048  EF2A  F028         	goto	l2970
  4705  00504C                     l2968:
  4706  00504C  90D8               	bcf	status,0,c
  4707  00504E  3603               	rlcf	___lwmod@divisor^0,f,c
  4708  005050  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4709  005052  2A05               	incf	___lwmod@counter^0,f,c
  4710  005054                     l2970:
  4711  005054  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4712  005056  EF2F  F028         	goto	u2761
  4713  00505A  EF31  F028         	goto	u2760
  4714  00505E                     u2761:
  4715  00505E  EF26  F028         	goto	l2968
  4716  005062                     u2760:
  4717  005062                     l2972:
  4718  005062  5003               	movf	___lwmod@divisor^0,w,c
  4719  005064  5C01               	subwf	___lwmod@dividend^0,w,c
  4720  005066  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4721  005068  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4722  00506A  A0D8               	btfss	status,0,c
  4723  00506C  EF3A  F028         	goto	u2771
  4724  005070  EF3C  F028         	goto	u2770
  4725  005074                     u2771:
  4726  005074  EF40  F028         	goto	l2976
  4727  005078                     u2770:
  4728  005078  5003               	movf	___lwmod@divisor^0,w,c
  4729  00507A  5E01               	subwf	___lwmod@dividend^0,f,c
  4730  00507C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4731  00507E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4732  005080                     l2976:
  4733  005080  90D8               	bcf	status,0,c
  4734  005082  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4735  005084  3203               	rrcf	___lwmod@divisor^0,f,c
  4736  005086  2E05               	decfsz	___lwmod@counter^0,f,c
  4737  005088  EF31  F028         	goto	l2972
  4738  00508C                     l863:
  4739  00508C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4740  005090  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4741  005094  0012               	return		;funcret
  4742  005096                     __end_of___lwmod:
  4743                           	opt callstack 0
  4744                           
  4745 ;; *************** function ___lwdiv *****************
  4746 ;; Defined at:
  4747 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  dividend        2    5[COMRAM] unsigned int 
  4750 ;;  divisor         2    7[COMRAM] unsigned int 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  quotient        2    9[COMRAM] unsigned int 
  4753 ;;  counter         1   11[COMRAM] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  2    5[COMRAM] unsigned int 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4763 ;;      Params:         4       0       0       0       0       0       0       0       0
  4764 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4766 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4767 ;;Total ram usage:        7 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_fround
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text12
  4777  005100                     __ptext12:
  4778                           	opt callstack 0
  4779  005100                     ___lwdiv:
  4780                           	opt callstack 28
  4781  005100  0E00               	movlw	0
  4782  005102  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  4783  005104  0E00               	movlw	0
  4784  005106  6E0A               	movwf	___lwdiv@quotient^0,c
  4785  005108  5008               	movf	___lwdiv@divisor^0,w,c
  4786  00510A  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4787  00510C  B4D8               	btfsc	status,2,c
  4788  00510E  EF8B  F028         	goto	u2721
  4789  005112  EF8D  F028         	goto	u2720
  4790  005116                     u2721:
  4791  005116  EFB5  F028         	goto	l853
  4792  00511A                     u2720:
  4793  00511A  0E01               	movlw	1
  4794  00511C  6E0C               	movwf	___lwdiv@counter^0,c
  4795  00511E  EF95  F028         	goto	l2950
  4796  005122                     l2948:
  4797  005122  90D8               	bcf	status,0,c
  4798  005124  3608               	rlcf	___lwdiv@divisor^0,f,c
  4799  005126  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4800  005128  2A0C               	incf	___lwdiv@counter^0,f,c
  4801  00512A                     l2950:
  4802  00512A  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  4803  00512C  EF9A  F028         	goto	u2731
  4804  005130  EF9C  F028         	goto	u2730
  4805  005134                     u2731:
  4806  005134  EF91  F028         	goto	l2948
  4807  005138                     u2730:
  4808  005138                     l2952:
  4809  005138  90D8               	bcf	status,0,c
  4810  00513A  360A               	rlcf	___lwdiv@quotient^0,f,c
  4811  00513C  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4812  00513E  5008               	movf	___lwdiv@divisor^0,w,c
  4813  005140  5C06               	subwf	___lwdiv@dividend^0,w,c
  4814  005142  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4815  005144  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4816  005146  A0D8               	btfss	status,0,c
  4817  005148  EFA8  F028         	goto	u2741
  4818  00514C  EFAA  F028         	goto	u2740
  4819  005150                     u2741:
  4820  005150  EFAF  F028         	goto	l2960
  4821  005154                     u2740:
  4822  005154  5008               	movf	___lwdiv@divisor^0,w,c
  4823  005156  5E06               	subwf	___lwdiv@dividend^0,f,c
  4824  005158  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4825  00515A  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4826  00515C  800A               	bsf	___lwdiv@quotient^0,0,c
  4827  00515E                     l2960:
  4828  00515E  90D8               	bcf	status,0,c
  4829  005160  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4830  005162  3208               	rrcf	___lwdiv@divisor^0,f,c
  4831  005164  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4832  005166  EF9C  F028         	goto	l2952
  4833  00516A                     l853:
  4834  00516A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4835  00516E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4836  005172  0012               	return		;funcret
  4837  005174                     __end_of___lwdiv:
  4838                           	opt callstack 0
  4839                           
  4840 ;; *************** function ___flmul *****************
  4841 ;; Defined at:
  4842 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  b               4   14[COMRAM] unsigned int 
  4845 ;;  a               4   18[COMRAM] unsigned int 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  prod            4   33[COMRAM] struct .
  4848 ;;  grs             4   27[COMRAM] unsigned long 
  4849 ;;  temp            2   37[COMRAM] struct .
  4850 ;;  bexp            1   32[COMRAM] unsigned char 
  4851 ;;  aexp            1   31[COMRAM] unsigned char 
  4852 ;;  sign            1   26[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  4   14[COMRAM] unsigned char 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, prodl, prodh
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4862 ;;      Params:         8       0       0       0       0       0       0       0       0
  4863 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4864 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4865 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4866 ;;Total ram usage:       25 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_main
  4872 ;;		_fround
  4873 ;;		_scale
  4874 ;;		_sprintf
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text13
  4879  006740                     __ptext13:
  4880                           	opt callstack 0
  4881  006740                     ___flmul:
  4882                           	opt callstack 28
  4883  006740  5012               	movf	(___flmul@b+3)^0,w,c
  4884  006742  0B80               	andlw	128
  4885  006744  6E1B               	movwf	___flmul@sign^0,c
  4886  006746  5012               	movf	(___flmul@b+3)^0,w,c
  4887  006748  2412               	addwf	(___flmul@b+3)^0,w,c
  4888  00674A  6E21               	movwf	___flmul@bexp^0,c
  4889  00674C  AE11               	btfss	(___flmul@b+2)^0,7,c
  4890  00674E  EFAB  F033         	goto	u2411
  4891  006752  EFAD  F033         	goto	u2410
  4892  006756                     u2411:
  4893  006756  EFAE  F033         	goto	l2738
  4894  00675A                     u2410:
  4895  00675A  8021               	bsf	___flmul@bexp^0,0,c
  4896  00675C                     l2738:
  4897  00675C  5021               	movf	___flmul@bexp^0,w,c
  4898  00675E  B4D8               	btfsc	status,2,c
  4899  006760  EFB4  F033         	goto	u2421
  4900  006764  EFB6  F033         	goto	u2420
  4901  006768                     u2421:
  4902  006768  EFC9  F033         	goto	l2746
  4903  00676C                     u2420:
  4904  00676C  2821               	incf	___flmul@bexp^0,w,c
  4905  00676E  A4D8               	btfss	status,2,c
  4906  006770  EFBC  F033         	goto	u2431
  4907  006774  EFBE  F033         	goto	u2430
  4908  006778                     u2431:
  4909  006778  EFC6  F033         	goto	l2744
  4910  00677C                     u2430:
  4911  00677C  0E00               	movlw	0
  4912  00677E  6E0F               	movwf	___flmul@b^0,c
  4913  006780  0E00               	movlw	0
  4914  006782  6E10               	movwf	(___flmul@b+1)^0,c
  4915  006784  0E00               	movlw	0
  4916  006786  6E11               	movwf	(___flmul@b+2)^0,c
  4917  006788  0E00               	movlw	0
  4918  00678A  6E12               	movwf	(___flmul@b+3)^0,c
  4919  00678C                     l2744:
  4920  00678C  8E11               	bsf	(___flmul@b+2)^0,7,c
  4921  00678E  EFD1  F033         	goto	l2748
  4922  006792                     l2746:
  4923  006792  0E00               	movlw	0
  4924  006794  6E0F               	movwf	___flmul@b^0,c
  4925  006796  0E00               	movlw	0
  4926  006798  6E10               	movwf	(___flmul@b+1)^0,c
  4927  00679A  0E00               	movlw	0
  4928  00679C  6E11               	movwf	(___flmul@b+2)^0,c
  4929  00679E  0E00               	movlw	0
  4930  0067A0  6E12               	movwf	(___flmul@b+3)^0,c
  4931  0067A2                     l2748:
  4932  0067A2  5016               	movf	(___flmul@a+3)^0,w,c
  4933  0067A4  0B80               	andlw	128
  4934  0067A6  1A1B               	xorwf	___flmul@sign^0,f,c
  4935  0067A8  5016               	movf	(___flmul@a+3)^0,w,c
  4936  0067AA  2416               	addwf	(___flmul@a+3)^0,w,c
  4937  0067AC  6E20               	movwf	___flmul@aexp^0,c
  4938  0067AE  AE15               	btfss	(___flmul@a+2)^0,7,c
  4939  0067B0  EFDC  F033         	goto	u2441
  4940  0067B4  EFDE  F033         	goto	u2440
  4941  0067B8                     u2441:
  4942  0067B8  EFDF  F033         	goto	l2756
  4943  0067BC                     u2440:
  4944  0067BC  8020               	bsf	___flmul@aexp^0,0,c
  4945  0067BE                     l2756:
  4946  0067BE  5020               	movf	___flmul@aexp^0,w,c
  4947  0067C0  B4D8               	btfsc	status,2,c
  4948  0067C2  EFE5  F033         	goto	u2451
  4949  0067C6  EFE7  F033         	goto	u2450
  4950  0067CA                     u2451:
  4951  0067CA  EFFA  F033         	goto	l2764
  4952  0067CE                     u2450:
  4953  0067CE  2820               	incf	___flmul@aexp^0,w,c
  4954  0067D0  A4D8               	btfss	status,2,c
  4955  0067D2  EFED  F033         	goto	u2461
  4956  0067D6  EFEF  F033         	goto	u2460
  4957  0067DA                     u2461:
  4958  0067DA  EFF7  F033         	goto	l2762
  4959  0067DE                     u2460:
  4960  0067DE  0E00               	movlw	0
  4961  0067E0  6E13               	movwf	___flmul@a^0,c
  4962  0067E2  0E00               	movlw	0
  4963  0067E4  6E14               	movwf	(___flmul@a+1)^0,c
  4964  0067E6  0E00               	movlw	0
  4965  0067E8  6E15               	movwf	(___flmul@a+2)^0,c
  4966  0067EA  0E00               	movlw	0
  4967  0067EC  6E16               	movwf	(___flmul@a+3)^0,c
  4968  0067EE                     l2762:
  4969  0067EE  8E15               	bsf	(___flmul@a+2)^0,7,c
  4970  0067F0  EF02  F034         	goto	l976
  4971  0067F4                     l2764:
  4972  0067F4  0E00               	movlw	0
  4973  0067F6  6E13               	movwf	___flmul@a^0,c
  4974  0067F8  0E00               	movlw	0
  4975  0067FA  6E14               	movwf	(___flmul@a+1)^0,c
  4976  0067FC  0E00               	movlw	0
  4977  0067FE  6E15               	movwf	(___flmul@a+2)^0,c
  4978  006800  0E00               	movlw	0
  4979  006802  6E16               	movwf	(___flmul@a+3)^0,c
  4980  006804                     l976:
  4981  006804  5020               	movf	___flmul@aexp^0,w,c
  4982  006806  B4D8               	btfsc	status,2,c
  4983  006808  EF08  F034         	goto	u2471
  4984  00680C  EF0A  F034         	goto	u2470
  4985  006810                     u2471:
  4986  006810  EF12  F034         	goto	l2768
  4987  006814                     u2470:
  4988  006814  5021               	movf	___flmul@bexp^0,w,c
  4989  006816  A4D8               	btfss	status,2,c
  4990  006818  EF10  F034         	goto	u2481
  4991  00681C  EF12  F034         	goto	u2480
  4992  006820                     u2481:
  4993  006820  EF1C  F034         	goto	l2772
  4994  006824                     u2480:
  4995  006824                     l2768:
  4996  006824  0E00               	movlw	0
  4997  006826  6E0F               	movwf	?___flmul^0,c
  4998  006828  0E00               	movlw	0
  4999  00682A  6E10               	movwf	(?___flmul+1)^0,c
  5000  00682C  0E00               	movlw	0
  5001  00682E  6E11               	movwf	(?___flmul+2)^0,c
  5002  006830  0E00               	movlw	0
  5003  006832  6E12               	movwf	(?___flmul+3)^0,c
  5004  006834  EFB4  F035         	goto	l980
  5005  006838                     l2772:
  5006  006838  5015               	movf	(___flmul@a+2)^0,w,c
  5007  00683A  020F               	mulwf	___flmul@b^0,c
  5008  00683C  CFF3 F026          	movff	prodl,___flmul@temp
  5009  006840  CFF4 F027          	movff	prodh,___flmul@temp+1
  5010  006844  5026               	movf	___flmul@temp^0,w,c
  5011  006846  6E1C               	movwf	___flmul@grs^0,c
  5012  006848  6A1D               	clrf	(___flmul@grs+1)^0,c
  5013  00684A  6A1E               	clrf	(___flmul@grs+2)^0,c
  5014  00684C  6A1F               	clrf	(___flmul@grs+3)^0,c
  5015  00684E  5027               	movf	(___flmul@temp+1)^0,w,c
  5016  006850  6E22               	movwf	___flmul@prod^0,c
  5017  006852  6A23               	clrf	(___flmul@prod+1)^0,c
  5018  006854  6A24               	clrf	(___flmul@prod+2)^0,c
  5019  006856  6A25               	clrf	(___flmul@prod+3)^0,c
  5020  006858  5014               	movf	(___flmul@a+1)^0,w,c
  5021  00685A  0210               	mulwf	(___flmul@b+1)^0,c
  5022  00685C  CFF3 F026          	movff	prodl,___flmul@temp
  5023  006860  CFF4 F027          	movff	prodh,___flmul@temp+1
  5024  006864  5026               	movf	___flmul@temp^0,w,c
  5025  006866  261C               	addwf	___flmul@grs^0,f,c
  5026  006868  0E00               	movlw	0
  5027  00686A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5028  00686C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5029  00686E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5030  006870  5027               	movf	(___flmul@temp+1)^0,w,c
  5031  006872  2622               	addwf	___flmul@prod^0,f,c
  5032  006874  0E00               	movlw	0
  5033  006876  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5034  006878  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5035  00687A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5036  00687C  5013               	movf	___flmul@a^0,w,c
  5037  00687E  0211               	mulwf	(___flmul@b+2)^0,c
  5038  006880  CFF3 F026          	movff	prodl,___flmul@temp
  5039  006884  CFF4 F027          	movff	prodh,___flmul@temp+1
  5040  006888  5026               	movf	___flmul@temp^0,w,c
  5041  00688A  261C               	addwf	___flmul@grs^0,f,c
  5042  00688C  0E00               	movlw	0
  5043  00688E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5044  006890  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5045  006892  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5046  006894  5027               	movf	(___flmul@temp+1)^0,w,c
  5047  006896  2622               	addwf	___flmul@prod^0,f,c
  5048  006898  0E00               	movlw	0
  5049  00689A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5050  00689C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5051  00689E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5052  0068A0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5053  0068A4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5054  0068A8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5055  0068AC  6A1C               	clrf	___flmul@grs^0,c
  5056  0068AE  5013               	movf	___flmul@a^0,w,c
  5057  0068B0  0210               	mulwf	(___flmul@b+1)^0,c
  5058  0068B2  CFF3 F026          	movff	prodl,___flmul@temp
  5059  0068B6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5060  0068BA  5026               	movf	___flmul@temp^0,w,c
  5061  0068BC  261C               	addwf	___flmul@grs^0,f,c
  5062  0068BE  5027               	movf	(___flmul@temp+1)^0,w,c
  5063  0068C0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5064  0068C2  0E00               	movlw	0
  5065  0068C4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5066  0068C6  0E00               	movlw	0
  5067  0068C8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5068  0068CA  5014               	movf	(___flmul@a+1)^0,w,c
  5069  0068CC  020F               	mulwf	___flmul@b^0,c
  5070  0068CE  CFF3 F026          	movff	prodl,___flmul@temp
  5071  0068D2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5072  0068D6  5026               	movf	___flmul@temp^0,w,c
  5073  0068D8  261C               	addwf	___flmul@grs^0,f,c
  5074  0068DA  5027               	movf	(___flmul@temp+1)^0,w,c
  5075  0068DC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5076  0068DE  0E00               	movlw	0
  5077  0068E0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5078  0068E2  0E00               	movlw	0
  5079  0068E4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5080  0068E6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5081  0068EA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5082  0068EE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5083  0068F2  6A1C               	clrf	___flmul@grs^0,c
  5084  0068F4  5013               	movf	___flmul@a^0,w,c
  5085  0068F6  020F               	mulwf	___flmul@b^0,c
  5086  0068F8  CFF3 F026          	movff	prodl,___flmul@temp
  5087  0068FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5088  006900  5026               	movf	___flmul@temp^0,w,c
  5089  006902  261C               	addwf	___flmul@grs^0,f,c
  5090  006904  5027               	movf	(___flmul@temp+1)^0,w,c
  5091  006906  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5092  006908  0E00               	movlw	0
  5093  00690A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5094  00690C  0E00               	movlw	0
  5095  00690E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5096  006910  5015               	movf	(___flmul@a+2)^0,w,c
  5097  006912  0210               	mulwf	(___flmul@b+1)^0,c
  5098  006914  CFF3 F026          	movff	prodl,___flmul@temp
  5099  006918  CFF4 F027          	movff	prodh,___flmul@temp+1
  5100  00691C  5026               	movf	___flmul@temp^0,w,c
  5101  00691E  2622               	addwf	___flmul@prod^0,f,c
  5102  006920  5027               	movf	(___flmul@temp+1)^0,w,c
  5103  006922  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5104  006924  0E00               	movlw	0
  5105  006926  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5106  006928  0E00               	movlw	0
  5107  00692A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5108  00692C  5014               	movf	(___flmul@a+1)^0,w,c
  5109  00692E  0211               	mulwf	(___flmul@b+2)^0,c
  5110  006930  CFF3 F026          	movff	prodl,___flmul@temp
  5111  006934  CFF4 F027          	movff	prodh,___flmul@temp+1
  5112  006938  5026               	movf	___flmul@temp^0,w,c
  5113  00693A  2622               	addwf	___flmul@prod^0,f,c
  5114  00693C  5027               	movf	(___flmul@temp+1)^0,w,c
  5115  00693E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5116  006940  0E00               	movlw	0
  5117  006942  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5118  006944  0E00               	movlw	0
  5119  006946  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5120  006948  5015               	movf	(___flmul@a+2)^0,w,c
  5121  00694A  0211               	mulwf	(___flmul@b+2)^0,c
  5122  00694C  CFF3 F026          	movff	prodl,___flmul@temp
  5123  006950  CFF4 F027          	movff	prodh,___flmul@temp+1
  5124  006954  5026               	movf	___flmul@temp^0,w,c
  5125  006956  6E17               	movwf	??___flmul^0,c
  5126  006958  5027               	movf	(___flmul@temp+1)^0,w,c
  5127  00695A  6E18               	movwf	(??___flmul+1)^0,c
  5128  00695C  6A19               	clrf	(??___flmul+2)^0,c
  5129  00695E  6A1A               	clrf	(??___flmul+3)^0,c
  5130  006960  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5131  006964  C018  F019         	movff	??___flmul+1,??___flmul+2
  5132  006968  C017  F018         	movff	??___flmul,??___flmul+1
  5133  00696C  6A17               	clrf	??___flmul^0,c
  5134  00696E  5017               	movf	??___flmul^0,w,c
  5135  006970  2622               	addwf	___flmul@prod^0,f,c
  5136  006972  5018               	movf	(??___flmul+1)^0,w,c
  5137  006974  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5138  006976  5019               	movf	(??___flmul+2)^0,w,c
  5139  006978  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5140  00697A  501A               	movf	(??___flmul+3)^0,w,c
  5141  00697C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5142  00697E  C01C  F017         	movff	___flmul@grs,??___flmul
  5143  006982  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5144  006986  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5145  00698A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5146  00698E  0E19               	movlw	25
  5147  006990  EFCF  F034         	goto	u2490
  5148  006994                     u2495:
  5149  006994  90D8               	bcf	status,0,c
  5150  006996  321A               	rrcf	(??___flmul+3)^0,f,c
  5151  006998  3219               	rrcf	(??___flmul+2)^0,f,c
  5152  00699A  3218               	rrcf	(??___flmul+1)^0,f,c
  5153  00699C  3217               	rrcf	??___flmul^0,f,c
  5154  00699E                     u2490:
  5155  00699E  2EE8               	decfsz	wreg,f,c
  5156  0069A0  EFCA  F034         	goto	u2495
  5157  0069A4  5017               	movf	??___flmul^0,w,c
  5158  0069A6  2622               	addwf	___flmul@prod^0,f,c
  5159  0069A8  5018               	movf	(??___flmul+1)^0,w,c
  5160  0069AA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5161  0069AC  5019               	movf	(??___flmul+2)^0,w,c
  5162  0069AE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5163  0069B0  501A               	movf	(??___flmul+3)^0,w,c
  5164  0069B2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5165  0069B4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5166  0069B8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5167  0069BC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5168  0069C0  6A1C               	clrf	___flmul@grs^0,c
  5169  0069C2  5020               	movf	___flmul@aexp^0,w,c
  5170  0069C4  C021  F017         	movff	___flmul@bexp,??___flmul
  5171  0069C8  6A18               	clrf	(??___flmul+1)^0,c
  5172  0069CA  2617               	addwf	??___flmul^0,f,c
  5173  0069CC  0E00               	movlw	0
  5174  0069CE  2218               	addwfc	(??___flmul+1)^0,f,c
  5175  0069D0  0E82               	movlw	130
  5176  0069D2  2417               	addwf	??___flmul^0,w,c
  5177  0069D4  6E26               	movwf	___flmul@temp^0,c
  5178  0069D6  0EFF               	movlw	255
  5179  0069D8  2018               	addwfc	(??___flmul+1)^0,w,c
  5180  0069DA  6E27               	movwf	(___flmul@temp+1)^0,c
  5181  0069DC  EF05  F035         	goto	l2820
  5182  0069E0                     l2814:
  5183  0069E0  90D8               	bcf	status,0,c
  5184  0069E2  3622               	rlcf	___flmul@prod^0,f,c
  5185  0069E4  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5186  0069E6  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5187  0069E8  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5188  0069EA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5189  0069EC  EFFA  F034         	goto	u2501
  5190  0069F0  EFFC  F034         	goto	u2500
  5191  0069F4                     u2501:
  5192  0069F4  EFFD  F034         	goto	l983
  5193  0069F8                     u2500:
  5194  0069F8  8022               	bsf	___flmul@prod^0,0,c
  5195  0069FA                     l983:
  5196  0069FA  90D8               	bcf	status,0,c
  5197  0069FC  361C               	rlcf	___flmul@grs^0,f,c
  5198  0069FE  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5199  006A00  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5200  006A02  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5201  006A04  0626               	decf	___flmul@temp^0,f,c
  5202  006A06  A0D8               	btfss	status,0,c
  5203  006A08  0627               	decf	(___flmul@temp+1)^0,f,c
  5204  006A0A                     l2820:
  5205  006A0A  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5206  006A0C  EF0A  F035         	goto	u2511
  5207  006A10  EF0C  F035         	goto	u2510
  5208  006A14                     u2511:
  5209  006A14  EFF0  F034         	goto	l2814
  5210  006A18                     u2510:
  5211  006A18  0E00               	movlw	0
  5212  006A1A  6E20               	movwf	___flmul@aexp^0,c
  5213  006A1C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5214  006A1E  EF13  F035         	goto	u2521
  5215  006A22  EF15  F035         	goto	u2520
  5216  006A26                     u2521:
  5217  006A26  EF39  F035         	goto	l985
  5218  006A2A                     u2520:
  5219  006A2A  0EFF               	movlw	255
  5220  006A2C  141C               	andwf	___flmul@grs^0,w,c
  5221  006A2E  6E17               	movwf	??___flmul^0,c
  5222  006A30  0EFF               	movlw	255
  5223  006A32  141D               	andwf	(___flmul@grs+1)^0,w,c
  5224  006A34  6E18               	movwf	(??___flmul+1)^0,c
  5225  006A36  0EFF               	movlw	255
  5226  006A38  141E               	andwf	(___flmul@grs+2)^0,w,c
  5227  006A3A  6E19               	movwf	(??___flmul+2)^0,c
  5228  006A3C  0E7F               	movlw	127
  5229  006A3E  141F               	andwf	(___flmul@grs+3)^0,w,c
  5230  006A40  6E1A               	movwf	(??___flmul+3)^0,c
  5231  006A42  5017               	movf	??___flmul^0,w,c
  5232  006A44  1018               	iorwf	(??___flmul+1)^0,w,c
  5233  006A46  1019               	iorwf	(??___flmul+2)^0,w,c
  5234  006A48  101A               	iorwf	(??___flmul+3)^0,w,c
  5235  006A4A  B4D8               	btfsc	status,2,c
  5236  006A4C  EF2A  F035         	goto	u2531
  5237  006A50  EF2C  F035         	goto	u2530
  5238  006A54                     u2531:
  5239  006A54  EF30  F035         	goto	l986
  5240  006A58                     u2530:
  5241  006A58                     l2828:
  5242  006A58  0E01               	movlw	1
  5243  006A5A  6E20               	movwf	___flmul@aexp^0,c
  5244  006A5C  EF39  F035         	goto	l985
  5245  006A60                     l986:
  5246  006A60  A022               	btfss	___flmul@prod^0,0,c
  5247  006A62  EF35  F035         	goto	u2541
  5248  006A66  EF37  F035         	goto	u2540
  5249  006A6A                     u2541:
  5250  006A6A  EF39  F035         	goto	l985
  5251  006A6E                     u2540:
  5252  006A6E  EF2C  F035         	goto	l2828
  5253  006A72                     l985:
  5254  006A72  5020               	movf	___flmul@aexp^0,w,c
  5255  006A74  B4D8               	btfsc	status,2,c
  5256  006A76  EF3F  F035         	goto	u2551
  5257  006A7A  EF41  F035         	goto	u2550
  5258  006A7E                     u2551:
  5259  006A7E  EF65  F035         	goto	l2840
  5260  006A82                     u2550:
  5261  006A82  0E01               	movlw	1
  5262  006A84  2622               	addwf	___flmul@prod^0,f,c
  5263  006A86  0E00               	movlw	0
  5264  006A88  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5265  006A8A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5266  006A8C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5267  006A8E  A025               	btfss	(___flmul@prod+3)^0,0,c
  5268  006A90  EF4C  F035         	goto	u2561
  5269  006A94  EF4E  F035         	goto	u2560
  5270  006A98                     u2561:
  5271  006A98  EF65  F035         	goto	l2840
  5272  006A9C                     u2560:
  5273  006A9C  C022  F017         	movff	___flmul@prod,??___flmul
  5274  006AA0  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5275  006AA4  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5276  006AA8  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5277  006AAC  341A               	rlcf	(??___flmul+3)^0,w,c
  5278  006AAE  321A               	rrcf	(??___flmul+3)^0,f,c
  5279  006AB0  3219               	rrcf	(??___flmul+2)^0,f,c
  5280  006AB2  3218               	rrcf	(??___flmul+1)^0,f,c
  5281  006AB4  3217               	rrcf	??___flmul^0,f,c
  5282  006AB6  C017  F022         	movff	??___flmul,___flmul@prod
  5283  006ABA  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5284  006ABE  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5285  006AC2  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5286  006AC6  4A26               	infsnz	___flmul@temp^0,f,c
  5287  006AC8  2A27               	incf	(___flmul@temp+1)^0,f,c
  5288  006ACA                     l2840:
  5289  006ACA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5290  006ACC  EF70  F035         	goto	u2571
  5291  006AD0  5027               	movf	(___flmul@temp+1)^0,w,c
  5292  006AD2  E108               	bnz	u2570
  5293  006AD4  2826               	incf	___flmul@temp^0,w,c
  5294  006AD6  A0D8               	btfss	status,0,c
  5295  006AD8  EF70  F035         	goto	u2571
  5296  006ADC  EF72  F035         	goto	u2570
  5297  006AE0                     u2571:
  5298  006AE0  EF7C  F035         	goto	l2844
  5299  006AE4                     u2570:
  5300  006AE4  0E00               	movlw	0
  5301  006AE6  6E22               	movwf	___flmul@prod^0,c
  5302  006AE8  0E00               	movlw	0
  5303  006AEA  6E23               	movwf	(___flmul@prod+1)^0,c
  5304  006AEC  0E80               	movlw	128
  5305  006AEE  6E24               	movwf	(___flmul@prod+2)^0,c
  5306  006AF0  0E7F               	movlw	127
  5307  006AF2  6E25               	movwf	(___flmul@prod+3)^0,c
  5308  006AF4  EFAA  F035         	goto	l2856
  5309  006AF8                     l2844:
  5310  006AF8  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5311  006AFA  EF89  F035         	goto	u2580
  5312  006AFE  5027               	movf	(___flmul@temp+1)^0,w,c
  5313  006B00  E106               	bnz	u2581
  5314  006B02  0426               	decf	___flmul@temp^0,w,c
  5315  006B04  B0D8               	btfsc	status,0,c
  5316  006B06  EF87  F035         	goto	u2581
  5317  006B0A  EF89  F035         	goto	u2580
  5318  006B0E                     u2581:
  5319  006B0E  EF95  F035         	goto	l993
  5320  006B12                     u2580:
  5321  006B12  0E00               	movlw	0
  5322  006B14  6E22               	movwf	___flmul@prod^0,c
  5323  006B16  0E00               	movlw	0
  5324  006B18  6E23               	movwf	(___flmul@prod+1)^0,c
  5325  006B1A  0E00               	movlw	0
  5326  006B1C  6E24               	movwf	(___flmul@prod+2)^0,c
  5327  006B1E  0E00               	movlw	0
  5328  006B20  6E25               	movwf	(___flmul@prod+3)^0,c
  5329  006B22  0E00               	movlw	0
  5330  006B24  6E1B               	movwf	___flmul@sign^0,c
  5331  006B26  EFAA  F035         	goto	l2856
  5332  006B2A                     l993:
  5333  006B2A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5334  006B2E  0EFF               	movlw	255
  5335  006B30  1622               	andwf	___flmul@prod^0,f,c
  5336  006B32  0EFF               	movlw	255
  5337  006B34  1623               	andwf	(___flmul@prod+1)^0,f,c
  5338  006B36  0E7F               	movlw	127
  5339  006B38  1624               	andwf	(___flmul@prod+2)^0,f,c
  5340  006B3A  0E00               	movlw	0
  5341  006B3C  1625               	andwf	(___flmul@prod+3)^0,f,c
  5342  006B3E  A021               	btfss	___flmul@bexp^0,0,c
  5343  006B40  EFA4  F035         	goto	u2591
  5344  006B44  EFA6  F035         	goto	u2590
  5345  006B48                     u2591:
  5346  006B48  EFA7  F035         	goto	l2854
  5347  006B4C                     u2590:
  5348  006B4C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5349  006B4E                     l2854:
  5350  006B4E  90D8               	bcf	status,0,c
  5351  006B50  3021               	rrcf	___flmul@bexp^0,w,c
  5352  006B52  6E25               	movwf	(___flmul@prod+3)^0,c
  5353  006B54                     l2856:
  5354  006B54  501B               	movf	___flmul@sign^0,w,c
  5355  006B56  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5356  006B58  C022  F00F         	movff	___flmul@prod,?___flmul
  5357  006B5C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5358  006B60  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5359  006B64  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5360  006B68                     l980:
  5361  006B68  0012               	return		;funcret
  5362  006B6A                     __end_of___flmul:
  5363                           	opt callstack 0
  5364                           
  5365 ;; *************** function __tdiv_to_l_ *****************
  5366 ;; Defined at:
  5367 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  f1              4    0[COMRAM] float 
  5370 ;;  f2              4    4[COMRAM] float 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  quot            4   11[COMRAM] unsigned long 
  5373 ;;  exp1            1   16[COMRAM] unsigned char 
  5374 ;;  cntr            1   15[COMRAM] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  4    0[COMRAM] unsigned long 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5384 ;;      Params:         8       0       0       0       0       0       0       0       0
  5385 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5386 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5387 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5388 ;;Total ram usage:       17 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_sprintf
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text14
  5398  0059EE                     __ptext14:
  5399                           	opt callstack 0
  5400  0059EE                     __tdiv_to_l_:
  5401                           	opt callstack 29
  5402  0059EE  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5403  0059F2  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  5404  0059F4  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  5405  0059F6  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  5406  0059F8  3609               	rlcf	??__tdiv_to_l_^0,f,c
  5407  0059FA  E301               	bnc	u2901
  5408  0059FC  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  5409  0059FE                     u2901:
  5410  0059FE  5009               	movf	??__tdiv_to_l_^0,w,c
  5411  005A00  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  5412  005A02  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5413  005A04  A4D8               	btfss	status,2,c
  5414  005A06  EF07  F02D         	goto	u2911
  5415  005A0A  EF09  F02D         	goto	u2910
  5416  005A0E                     u2911:
  5417  005A0E  EF13  F02D         	goto	l3096
  5418  005A12                     u2910:
  5419  005A12                     l3092:
  5420  005A12  0E00               	movlw	0
  5421  005A14  6E01               	movwf	?__tdiv_to_l_^0,c
  5422  005A16  0E00               	movlw	0
  5423  005A18  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  5424  005A1A  0E00               	movlw	0
  5425  005A1C  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  5426  005A1E  0E00               	movlw	0
  5427  005A20  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  5428  005A22  EFA1  F02D         	goto	l703
  5429  005A26                     l3096:
  5430  005A26  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5431  005A2A  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  5432  005A2C  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  5433  005A2E  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  5434  005A30  3609               	rlcf	??__tdiv_to_l_^0,f,c
  5435  005A32  E301               	bnc	u2921
  5436  005A34  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  5437  005A36                     u2921:
  5438  005A36  5009               	movf	??__tdiv_to_l_^0,w,c
  5439  005A38  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  5440  005A3A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  5441  005A3C  A4D8               	btfss	status,2,c
  5442  005A3E  EF23  F02D         	goto	u2931
  5443  005A42  EF25  F02D         	goto	u2930
  5444  005A46                     u2931:
  5445  005A46  EF27  F02D         	goto	l3102
  5446  005A4A                     u2930:
  5447  005A4A  EF09  F02D         	goto	l3092
  5448  005A4E                     l3102:
  5449  005A4E  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  5450  005A50  0EFF               	movlw	255
  5451  005A52  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  5452  005A54  0EFF               	movlw	255
  5453  005A56  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  5454  005A58  0E00               	movlw	0
  5455  005A5A  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  5456  005A5C  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  5457  005A5E  0EFF               	movlw	255
  5458  005A60  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  5459  005A62  0EFF               	movlw	255
  5460  005A64  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  5461  005A66  0E00               	movlw	0
  5462  005A68  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  5463  005A6A  0E00               	movlw	0
  5464  005A6C  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  5465  005A6E  0E00               	movlw	0
  5466  005A70  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  5467  005A72  0E00               	movlw	0
  5468  005A74  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  5469  005A76  0E00               	movlw	0
  5470  005A78  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  5471  005A7A  0E7F               	movlw	127
  5472  005A7C  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  5473  005A7E  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  5474  005A80  0F98               	addlw	152
  5475  005A82  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  5476  005A84  0E18               	movlw	24
  5477  005A86  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  5478  005A88                     l705:
  5479  005A88  90D8               	bcf	status,0,c
  5480  005A8A  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  5481  005A8C  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  5482  005A8E  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  5483  005A90  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  5484  005A92  5005               	movf	__tdiv_to_l_@f2^0,w,c
  5485  005A94  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  5486  005A96  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  5487  005A98  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  5488  005A9A  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  5489  005A9C  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  5490  005A9E  A0D8               	btfss	status,0,c
  5491  005AA0  EF54  F02D         	goto	u2941
  5492  005AA4  EF56  F02D         	goto	u2940
  5493  005AA8                     u2941:
  5494  005AA8  EF5D  F02D         	goto	l706
  5495  005AAC                     u2940:
  5496  005AAC  5005               	movf	__tdiv_to_l_@f2^0,w,c
  5497  005AAE  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  5498  005AB0  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  5499  005AB2  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  5500  005AB4  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  5501  005AB6  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  5502  005AB8  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  5503  005ABA                     l706:
  5504  005ABA  90D8               	bcf	status,0,c
  5505  005ABC  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  5506  005ABE  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  5507  005AC0  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  5508  005AC2  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  5509  005AC4  EF44  F02D         	goto	l705
  5510  005AC8  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  5511  005ACA  EF6B  F02D         	goto	u2950
  5512  005ACE  EF69  F02D         	goto	u2951
  5513  005AD2                     u2951:
  5514  005AD2  EF81  F02D         	goto	l3136
  5515  005AD6                     u2950:
  5516  005AD6  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5517  005AD8  0A80               	xorlw	128
  5518  005ADA  0F97               	addlw	151
  5519  005ADC  B0D8               	btfsc	status,0,c
  5520  005ADE  EF73  F02D         	goto	u2961
  5521  005AE2  EF75  F02D         	goto	u2960
  5522  005AE6                     u2961:
  5523  005AE6  EF77  F02D         	goto	l3132
  5524  005AEA                     u2960:
  5525  005AEA  EF09  F02D         	goto	l3092
  5526  005AEE                     l3132:
  5527  005AEE  90D8               	bcf	status,0,c
  5528  005AF0  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  5529  005AF2  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  5530  005AF4  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  5531  005AF6  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  5532  005AF8  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  5533  005AFA  EF77  F02D         	goto	l3132
  5534  005AFE  EF99  F02D         	goto	l712
  5535  005B02                     l3136:
  5536  005B02  0E17               	movlw	23
  5537  005B04  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  5538  005B06  EF87  F02D         	goto	u2971
  5539  005B0A  EF89  F02D         	goto	u2970
  5540  005B0E                     u2971:
  5541  005B0E  EF91  F02D         	goto	l3144
  5542  005B12                     u2970:
  5543  005B12  EF09  F02D         	goto	l3092
  5544  005B16                     l3142:
  5545  005B16  90D8               	bcf	status,0,c
  5546  005B18  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  5547  005B1A  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  5548  005B1C  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  5549  005B1E  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  5550  005B20  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  5551  005B22                     l3144:
  5552  005B22  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  5553  005B24  A4D8               	btfss	status,2,c
  5554  005B26  EF97  F02D         	goto	u2981
  5555  005B2A  EF99  F02D         	goto	u2980
  5556  005B2E                     u2981:
  5557  005B2E  EF8B  F02D         	goto	l3142
  5558  005B32                     u2980:
  5559  005B32                     l712:
  5560  005B32  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5561  005B36  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5562  005B3A  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5563  005B3E  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5564  005B42                     l703:
  5565  005B42  0012               	return		;funcret
  5566  005B44                     __end_of__tdiv_to_l_:
  5567                           	opt callstack 0
  5568                           
  5569 ;; *************** function __div_to_l_ *****************
  5570 ;; Defined at:
  5571 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  f1              4    0[COMRAM] unsigned long 
  5574 ;;  f2              4    4[COMRAM] unsigned long 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  quot            4    8[COMRAM] unsigned long 
  5577 ;;  exp1            1   13[COMRAM] unsigned char 
  5578 ;;  cntr            1   12[COMRAM] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  4    0[COMRAM] unsigned long 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5588 ;;      Params:         8       0       0       0       0       0       0       0       0
  5589 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5591 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5592 ;;Total ram usage:       14 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_sprintf
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text15
  5602  0058A2                     __ptext15:
  5603                           	opt callstack 0
  5604  0058A2                     __div_to_l_:
  5605                           	opt callstack 29
  5606  0058A2  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  5607  0058A4  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  5608  0058A6  6E0E               	movwf	__div_to_l_@exp1^0,c
  5609  0058A8  500E               	movf	__div_to_l_@exp1^0,w,c
  5610  0058AA  A4D8               	btfss	status,2,c
  5611  0058AC  EF5A  F02C         	goto	u2991
  5612  0058B0  EF5C  F02C         	goto	u2990
  5613  0058B4                     u2991:
  5614  0058B4  EF66  F02C         	goto	l3152
  5615  0058B8                     u2990:
  5616  0058B8                     l3148:
  5617  0058B8  0E00               	movlw	0
  5618  0058BA  6E01               	movwf	?__div_to_l_^0,c
  5619  0058BC  0E00               	movlw	0
  5620  0058BE  6E02               	movwf	(?__div_to_l_+1)^0,c
  5621  0058C0  0E00               	movlw	0
  5622  0058C2  6E03               	movwf	(?__div_to_l_+2)^0,c
  5623  0058C4  0E00               	movlw	0
  5624  0058C6  6E04               	movwf	(?__div_to_l_+3)^0,c
  5625  0058C8  EFF6  F02C         	goto	l594
  5626  0058CC                     l3152:
  5627  0058CC  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  5628  0058CE  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  5629  0058D0  6E0D               	movwf	__div_to_l_@cntr^0,c
  5630  0058D2  500D               	movf	__div_to_l_@cntr^0,w,c
  5631  0058D4  A4D8               	btfss	status,2,c
  5632  0058D6  EF6F  F02C         	goto	u3001
  5633  0058DA  EF71  F02C         	goto	u3000
  5634  0058DE                     u3001:
  5635  0058DE  EF73  F02C         	goto	l3158
  5636  0058E2                     u3000:
  5637  0058E2  EF5C  F02C         	goto	l3148
  5638  0058E6                     l3158:
  5639  0058E6  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  5640  0058E8  0EFF               	movlw	255
  5641  0058EA  1601               	andwf	__div_to_l_@f1^0,f,c
  5642  0058EC  0EFF               	movlw	255
  5643  0058EE  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  5644  0058F0  0EFF               	movlw	255
  5645  0058F2  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  5646  0058F4  0E00               	movlw	0
  5647  0058F6  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  5648  0058F8  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  5649  0058FA  0EFF               	movlw	255
  5650  0058FC  1605               	andwf	__div_to_l_@f2^0,f,c
  5651  0058FE  0EFF               	movlw	255
  5652  005900  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  5653  005902  0EFF               	movlw	255
  5654  005904  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  5655  005906  0E00               	movlw	0
  5656  005908  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  5657  00590A  0E00               	movlw	0
  5658  00590C  6E09               	movwf	__div_to_l_@quot^0,c
  5659  00590E  0E00               	movlw	0
  5660  005910  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  5661  005912  0E00               	movlw	0
  5662  005914  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  5663  005916  0E00               	movlw	0
  5664  005918  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  5665  00591A  0E7F               	movlw	127
  5666  00591C  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5667  00591E  500D               	movf	__div_to_l_@cntr^0,w,c
  5668  005920  0FA0               	addlw	160
  5669  005922  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5670  005924  0E20               	movlw	32
  5671  005926  6E0D               	movwf	__div_to_l_@cntr^0,c
  5672  005928                     l3172:
  5673  005928  90D8               	bcf	status,0,c
  5674  00592A  3609               	rlcf	__div_to_l_@quot^0,f,c
  5675  00592C  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5676  00592E  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5677  005930  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5678  005932  5005               	movf	__div_to_l_@f2^0,w,c
  5679  005934  5C01               	subwf	__div_to_l_@f1^0,w,c
  5680  005936  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5681  005938  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  5682  00593A  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5683  00593C  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  5684  00593E  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5685  005940  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  5686  005942  A0D8               	btfss	status,0,c
  5687  005944  EFA6  F02C         	goto	u3011
  5688  005948  EFA8  F02C         	goto	u3010
  5689  00594C                     u3011:
  5690  00594C  EFB1  F02C         	goto	l3180
  5691  005950                     u3010:
  5692  005950  5005               	movf	__div_to_l_@f2^0,w,c
  5693  005952  5E01               	subwf	__div_to_l_@f1^0,f,c
  5694  005954  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5695  005956  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  5696  005958  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5697  00595A  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  5698  00595C  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5699  00595E  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  5700  005960  8009               	bsf	__div_to_l_@quot^0,0,c
  5701  005962                     l3180:
  5702  005962  90D8               	bcf	status,0,c
  5703  005964  3601               	rlcf	__div_to_l_@f1^0,f,c
  5704  005966  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  5705  005968  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  5706  00596A  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  5707  00596C  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  5708  00596E  EF94  F02C         	goto	l3172
  5709  005972  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  5710  005974  EFC0  F02C         	goto	u3020
  5711  005978  EFBE  F02C         	goto	u3021
  5712  00597C                     u3021:
  5713  00597C  EFD6  F02C         	goto	l3196
  5714  005980                     u3020:
  5715  005980  500E               	movf	__div_to_l_@exp1^0,w,c
  5716  005982  0A80               	xorlw	128
  5717  005984  0F9F               	addlw	159
  5718  005986  B0D8               	btfsc	status,0,c
  5719  005988  EFC8  F02C         	goto	u3031
  5720  00598C  EFCA  F02C         	goto	u3030
  5721  005990                     u3031:
  5722  005990  EFCC  F02C         	goto	l3192
  5723  005994                     u3030:
  5724  005994  EF5C  F02C         	goto	l3148
  5725  005998                     l3192:
  5726  005998  90D8               	bcf	status,0,c
  5727  00599A  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  5728  00599C  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  5729  00599E  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  5730  0059A0  3209               	rrcf	__div_to_l_@quot^0,f,c
  5731  0059A2  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  5732  0059A4  EFCC  F02C         	goto	l3192
  5733  0059A8  EFEE  F02C         	goto	l603
  5734  0059AC                     l3196:
  5735  0059AC  0E1F               	movlw	31
  5736  0059AE  640E               	cpfsgt	__div_to_l_@exp1^0,c
  5737  0059B0  EFDC  F02C         	goto	u3041
  5738  0059B4  EFDE  F02C         	goto	u3040
  5739  0059B8                     u3041:
  5740  0059B8  EFE6  F02C         	goto	l3204
  5741  0059BC                     u3040:
  5742  0059BC  EF5C  F02C         	goto	l3148
  5743  0059C0                     l3202:
  5744  0059C0  90D8               	bcf	status,0,c
  5745  0059C2  3609               	rlcf	__div_to_l_@quot^0,f,c
  5746  0059C4  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5747  0059C6  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5748  0059C8  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5749  0059CA  060E               	decf	__div_to_l_@exp1^0,f,c
  5750  0059CC                     l3204:
  5751  0059CC  500E               	movf	__div_to_l_@exp1^0,w,c
  5752  0059CE  A4D8               	btfss	status,2,c
  5753  0059D0  EFEC  F02C         	goto	u3051
  5754  0059D4  EFEE  F02C         	goto	u3050
  5755  0059D8                     u3051:
  5756  0059D8  EFE0  F02C         	goto	l3202
  5757  0059DC                     u3050:
  5758  0059DC                     l603:
  5759  0059DC  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5760  0059E0  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5761  0059E4  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5762  0059E8  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5763  0059EC                     l594:
  5764  0059EC  0012               	return		;funcret
  5765  0059EE                     __end_of__div_to_l_:
  5766                           	opt callstack 0
  5767                           
  5768 ;; *************** function ___xxtofl *****************
  5769 ;; Defined at:
  5770 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  sign            1    wreg     unsigned char 
  5773 ;;  val             4    0[COMRAM] long 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  sign            1    8[COMRAM] unsigned char 
  5776 ;;  arg             4   10[COMRAM] unsigned long 
  5777 ;;  exp             1    9[COMRAM] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  4    0[COMRAM] unsigned char 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5787 ;;      Params:         4       0       0       0       0       0       0       0       0
  5788 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5789 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5790 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5791 ;;Total ram usage:       14 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_main
  5797 ;;		_sprintf
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text16
  5802  005B44                     __ptext16:
  5803                           	opt callstack 0
  5804  005B44                     ___xxtofl:
  5805                           	opt callstack 29
  5806                           
  5807                           ;incstack = 0
  5808                           ;___xxtofl@sign stored from wreg
  5809  005B44  6E09               	movwf	___xxtofl@sign^0,c
  5810  005B46  5009               	movf	___xxtofl@sign^0,w,c
  5811  005B48  B4D8               	btfsc	status,2,c
  5812  005B4A  EFA9  F02D         	goto	u3281
  5813  005B4E  EFAB  F02D         	goto	u3280
  5814  005B52                     u3281:
  5815  005B52  EFCD  F02D         	goto	l1017
  5816  005B56                     u3280:
  5817  005B56  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5818  005B58  EFB2  F02D         	goto	u3290
  5819  005B5C  EFB0  F02D         	goto	u3291
  5820  005B60                     u3291:
  5821  005B60  EFCD  F02D         	goto	l1017
  5822  005B64                     u3290:
  5823  005B64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5824  005B68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5825  005B6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5826  005B70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5827  005B74  1E05               	comf	??___xxtofl^0,f,c
  5828  005B76  1E06               	comf	(??___xxtofl+1)^0,f,c
  5829  005B78  1E07               	comf	(??___xxtofl+2)^0,f,c
  5830  005B7A  1E08               	comf	(??___xxtofl+3)^0,f,c
  5831  005B7C  2A05               	incf	??___xxtofl^0,f,c
  5832  005B7E  0E00               	movlw	0
  5833  005B80  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5834  005B82  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5835  005B84  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5836  005B86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5837  005B8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5838  005B8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5839  005B92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5840  005B96  EFD5  F02D         	goto	l3352
  5841  005B9A                     l1017:
  5842  005B9A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5843  005B9E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5844  005BA2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5845  005BA6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5846  005BAA                     l3352:
  5847  005BAA  5001               	movf	___xxtofl@val^0,w,c
  5848  005BAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5849  005BAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5850  005BB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5851  005BB2  A4D8               	btfss	status,2,c
  5852  005BB4  EFDE  F02D         	goto	u3301
  5853  005BB8  EFE0  F02D         	goto	u3300
  5854  005BBC                     u3301:
  5855  005BBC  EFEA  F02D         	goto	l3358
  5856  005BC0                     u3300:
  5857  005BC0  0E00               	movlw	0
  5858  005BC2  6E01               	movwf	?___xxtofl^0,c
  5859  005BC4  0E00               	movlw	0
  5860  005BC6  6E02               	movwf	(?___xxtofl+1)^0,c
  5861  005BC8  0E00               	movlw	0
  5862  005BCA  6E03               	movwf	(?___xxtofl+2)^0,c
  5863  005BCC  0E00               	movlw	0
  5864  005BCE  6E04               	movwf	(?___xxtofl+3)^0,c
  5865  005BD0  EF7B  F02E         	goto	l1020
  5866  005BD4                     l3358:
  5867  005BD4  0E96               	movlw	150
  5868  005BD6  6E0A               	movwf	___xxtofl@exp^0,c
  5869  005BD8  EFF4  F02D         	goto	l3362
  5870  005BDC                     l3360:
  5871  005BDC  2A0A               	incf	___xxtofl@exp^0,f,c
  5872  005BDE  90D8               	bcf	status,0,c
  5873  005BE0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5874  005BE2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5875  005BE4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5876  005BE6  320B               	rrcf	___xxtofl@arg^0,f,c
  5877  005BE8                     l3362:
  5878  005BE8  0E00               	movlw	0
  5879  005BEA  140B               	andwf	___xxtofl@arg^0,w,c
  5880  005BEC  6E05               	movwf	??___xxtofl^0,c
  5881  005BEE  0E00               	movlw	0
  5882  005BF0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5883  005BF2  6E06               	movwf	(??___xxtofl+1)^0,c
  5884  005BF4  0E00               	movlw	0
  5885  005BF6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5886  005BF8  6E07               	movwf	(??___xxtofl+2)^0,c
  5887  005BFA  0EFE               	movlw	254
  5888  005BFC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5889  005BFE  6E08               	movwf	(??___xxtofl+3)^0,c
  5890  005C00  5005               	movf	??___xxtofl^0,w,c
  5891  005C02  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5892  005C04  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5893  005C06  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5894  005C08  A4D8               	btfss	status,2,c
  5895  005C0A  EF09  F02E         	goto	u3311
  5896  005C0E  EF0B  F02E         	goto	u3310
  5897  005C12                     u3311:
  5898  005C12  EFEE  F02D         	goto	l3360
  5899  005C16                     u3310:
  5900  005C16  EF19  F02E         	goto	l1024
  5901  005C1A                     l3364:
  5902  005C1A  2A0A               	incf	___xxtofl@exp^0,f,c
  5903  005C1C  0E01               	movlw	1
  5904  005C1E  260B               	addwf	___xxtofl@arg^0,f,c
  5905  005C20  0E00               	movlw	0
  5906  005C22  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5907  005C24  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5908  005C26  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5909  005C28  90D8               	bcf	status,0,c
  5910  005C2A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5911  005C2C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5912  005C2E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5913  005C30  320B               	rrcf	___xxtofl@arg^0,f,c
  5914  005C32                     l1024:
  5915  005C32  0E00               	movlw	0
  5916  005C34  140B               	andwf	___xxtofl@arg^0,w,c
  5917  005C36  6E05               	movwf	??___xxtofl^0,c
  5918  005C38  0E00               	movlw	0
  5919  005C3A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5920  005C3C  6E06               	movwf	(??___xxtofl+1)^0,c
  5921  005C3E  0E00               	movlw	0
  5922  005C40  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5923  005C42  6E07               	movwf	(??___xxtofl+2)^0,c
  5924  005C44  0EFF               	movlw	255
  5925  005C46  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5926  005C48  6E08               	movwf	(??___xxtofl+3)^0,c
  5927  005C4A  5005               	movf	??___xxtofl^0,w,c
  5928  005C4C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5929  005C4E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5930  005C50  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5931  005C52  A4D8               	btfss	status,2,c
  5932  005C54  EF2E  F02E         	goto	u3321
  5933  005C58  EF30  F02E         	goto	u3320
  5934  005C5C                     u3321:
  5935  005C5C  EF0D  F02E         	goto	l3364
  5936  005C60                     u3320:
  5937  005C60  EF38  F02E         	goto	l3372
  5938  005C64                     l3370:
  5939  005C64  060A               	decf	___xxtofl@exp^0,f,c
  5940  005C66  90D8               	bcf	status,0,c
  5941  005C68  360B               	rlcf	___xxtofl@arg^0,f,c
  5942  005C6A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5943  005C6C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5944  005C6E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5945  005C70                     l3372:
  5946  005C70  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5947  005C72  EF3D  F02E         	goto	u3331
  5948  005C76  EF3F  F02E         	goto	u3330
  5949  005C7A                     u3331:
  5950  005C7A  EF47  F02E         	goto	l1031
  5951  005C7E                     u3330:
  5952  005C7E  0E02               	movlw	2
  5953  005C80  600A               	cpfslt	___xxtofl@exp^0,c
  5954  005C82  EF45  F02E         	goto	u3341
  5955  005C86  EF47  F02E         	goto	u3340
  5956  005C8A                     u3341:
  5957  005C8A  EF32  F02E         	goto	l3370
  5958  005C8E                     u3340:
  5959  005C8E                     l1031:
  5960  005C8E  B00A               	btfsc	___xxtofl@exp^0,0,c
  5961  005C90  EF4C  F02E         	goto	u3351
  5962  005C94  EF4E  F02E         	goto	u3350
  5963  005C98                     u3351:
  5964  005C98  EF4F  F02E         	goto	l3378
  5965  005C9C                     u3350:
  5966  005C9C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5967  005C9E                     l3378:
  5968  005C9E  90D8               	bcf	status,0,c
  5969  005CA0  320A               	rrcf	___xxtofl@exp^0,f,c
  5970  005CA2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5971  005CA6  6A06               	clrf	(??___xxtofl+1)^0,c
  5972  005CA8  6A07               	clrf	(??___xxtofl+2)^0,c
  5973  005CAA  6A08               	clrf	(??___xxtofl+3)^0,c
  5974  005CAC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5975  005CB0  6A07               	clrf	(??___xxtofl+2)^0,c
  5976  005CB2  6A06               	clrf	(??___xxtofl+1)^0,c
  5977  005CB4  6A05               	clrf	??___xxtofl^0,c
  5978  005CB6  5005               	movf	??___xxtofl^0,w,c
  5979  005CB8  120B               	iorwf	___xxtofl@arg^0,f,c
  5980  005CBA  5006               	movf	(??___xxtofl+1)^0,w,c
  5981  005CBC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5982  005CBE  5007               	movf	(??___xxtofl+2)^0,w,c
  5983  005CC0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5984  005CC2  5008               	movf	(??___xxtofl+3)^0,w,c
  5985  005CC4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5986  005CC6  5009               	movf	___xxtofl@sign^0,w,c
  5987  005CC8  B4D8               	btfsc	status,2,c
  5988  005CCA  EF69  F02E         	goto	u3361
  5989  005CCE  EF6B  F02E         	goto	u3360
  5990  005CD2                     u3361:
  5991  005CD2  EF73  F02E         	goto	l3388
  5992  005CD6                     u3360:
  5993  005CD6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5994  005CD8  EF72  F02E         	goto	u3370
  5995  005CDC  EF70  F02E         	goto	u3371
  5996  005CE0                     u3371:
  5997  005CE0  EF73  F02E         	goto	l3388
  5998  005CE4                     u3370:
  5999  005CE4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6000  005CE6                     l3388:
  6001  005CE6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6002  005CEA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6003  005CEE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6004  005CF2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6005  005CF6                     l1020:
  6006  005CF6  0012               	return		;funcret
  6007  005CF8                     __end_of___xxtofl:
  6008                           	opt callstack 0
  6009                           
  6010 ;; *************** function ___wmul *****************
  6011 ;; Defined at:
  6012 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  multiplier      2    0[COMRAM] unsigned int 
  6015 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  product         2    4[COMRAM] unsigned int 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  2    0[COMRAM] unsigned int 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0, prodl, prodh
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6027 ;;      Params:         4       0       0       0       0       0       0       0       0
  6028 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6030 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6031 ;;Total ram usage:        6 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_sprintf
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text17
  6041  004E32                     __ptext17:
  6042                           	opt callstack 0
  6043  004E32                     ___wmul:
  6044                           	opt callstack 29
  6045  004E32  5001               	movf	___wmul@multiplier^0,w,c
  6046  004E34  0203               	mulwf	___wmul@multiplicand^0,c
  6047  004E36  CFF3 F005          	movff	prodl,___wmul@product
  6048  004E3A  CFF4 F006          	movff	prodh,___wmul@product+1
  6049  004E3E  5001               	movf	___wmul@multiplier^0,w,c
  6050  004E40  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6051  004E42  50F3               	movf	243,w,c
  6052  004E44  2606               	addwf	(___wmul@product+1)^0,f,c
  6053  004E46  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6054  004E48  0203               	mulwf	___wmul@multiplicand^0,c
  6055  004E4A  50F3               	movf	243,w,c
  6056  004E4C  2606               	addwf	(___wmul@product+1)^0,f,c
  6057  004E4E  C005  F001         	movff	___wmul@product,?___wmul
  6058  004E52  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6059  004E56  0012               	return		;funcret
  6060  004E58                     __end_of___wmul:
  6061                           	opt callstack 0
  6062                           
  6063 ;; *************** function ___llmod *****************
  6064 ;; Defined at:
  6065 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  dividend        4    0[COMRAM] unsigned long 
  6068 ;;  divisor         4    4[COMRAM] unsigned long 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  counter         1    8[COMRAM] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  4    0[COMRAM] unsigned long 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6080 ;;      Params:         8       0       0       0       0       0       0       0       0
  6081 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6083 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6084 ;;Total ram usage:        9 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_sprintf
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text18
  6094  005174                     __ptext18:
  6095                           	opt callstack 0
  6096  005174                     ___llmod:
  6097                           	opt callstack 29
  6098  005174  5005               	movf	___llmod@divisor^0,w,c
  6099  005176  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  6100  005178  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  6101  00517A  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  6102  00517C  B4D8               	btfsc	status,2,c
  6103  00517E  EFC3  F028         	goto	u3251
  6104  005182  EFC5  F028         	goto	u3250
  6105  005186                     u3251:
  6106  005186  EFF5  F028         	goto	l782
  6107  00518A                     u3250:
  6108  00518A  0E01               	movlw	1
  6109  00518C  6E09               	movwf	___llmod@counter^0,c
  6110  00518E  EFCF  F028         	goto	l3336
  6111  005192                     l3334:
  6112  005192  90D8               	bcf	status,0,c
  6113  005194  3605               	rlcf	___llmod@divisor^0,f,c
  6114  005196  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  6115  005198  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  6116  00519A  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  6117  00519C  2A09               	incf	___llmod@counter^0,f,c
  6118  00519E                     l3336:
  6119  00519E  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  6120  0051A0  EFD4  F028         	goto	u3261
  6121  0051A4  EFD6  F028         	goto	u3260
  6122  0051A8                     u3261:
  6123  0051A8  EFC9  F028         	goto	l3334
  6124  0051AC                     u3260:
  6125  0051AC                     l3338:
  6126  0051AC  5005               	movf	___llmod@divisor^0,w,c
  6127  0051AE  5C01               	subwf	___llmod@dividend^0,w,c
  6128  0051B0  5006               	movf	(___llmod@divisor+1)^0,w,c
  6129  0051B2  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  6130  0051B4  5007               	movf	(___llmod@divisor+2)^0,w,c
  6131  0051B6  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  6132  0051B8  5008               	movf	(___llmod@divisor+3)^0,w,c
  6133  0051BA  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  6134  0051BC  A0D8               	btfss	status,0,c
  6135  0051BE  EFE3  F028         	goto	u3271
  6136  0051C2  EFE5  F028         	goto	u3270
  6137  0051C6                     u3271:
  6138  0051C6  EFED  F028         	goto	l3342
  6139  0051CA                     u3270:
  6140  0051CA  5005               	movf	___llmod@divisor^0,w,c
  6141  0051CC  5E01               	subwf	___llmod@dividend^0,f,c
  6142  0051CE  5006               	movf	(___llmod@divisor+1)^0,w,c
  6143  0051D0  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  6144  0051D2  5007               	movf	(___llmod@divisor+2)^0,w,c
  6145  0051D4  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  6146  0051D6  5008               	movf	(___llmod@divisor+3)^0,w,c
  6147  0051D8  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  6148  0051DA                     l3342:
  6149  0051DA  90D8               	bcf	status,0,c
  6150  0051DC  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  6151  0051DE  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  6152  0051E0  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  6153  0051E2  3205               	rrcf	___llmod@divisor^0,f,c
  6154  0051E4  2E09               	decfsz	___llmod@counter^0,f,c
  6155  0051E6  EFD6  F028         	goto	l3338
  6156  0051EA                     l782:
  6157  0051EA  C001  F001         	movff	___llmod@dividend,?___llmod
  6158  0051EE  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  6159  0051F2  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  6160  0051F6  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  6161  0051FA  0012               	return		;funcret
  6162  0051FC                     __end_of___llmod:
  6163                           	opt callstack 0
  6164                           
  6165 ;; *************** function ___lldiv *****************
  6166 ;; Defined at:
  6167 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  dividend        4    0[COMRAM] unsigned long 
  6170 ;;  divisor         4    4[COMRAM] unsigned long 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  quotient        4    8[COMRAM] unsigned long 
  6173 ;;  counter         1   12[COMRAM] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  4    0[COMRAM] unsigned long 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6183 ;;      Params:         8       0       0       0       0       0       0       0       0
  6184 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6186 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6187 ;;Total ram usage:       13 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_sprintf
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text19
  6197  00529E                     __ptext19:
  6198                           	opt callstack 0
  6199  00529E                     ___lldiv:
  6200                           	opt callstack 29
  6201  00529E  0E00               	movlw	0
  6202  0052A0  6E09               	movwf	___lldiv@quotient^0,c
  6203  0052A2  0E00               	movlw	0
  6204  0052A4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6205  0052A6  0E00               	movlw	0
  6206  0052A8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6207  0052AA  0E00               	movlw	0
  6208  0052AC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6209  0052AE  5005               	movf	___lldiv@divisor^0,w,c
  6210  0052B0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6211  0052B2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6212  0052B4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6213  0052B6  B4D8               	btfsc	status,2,c
  6214  0052B8  EF60  F029         	goto	u3061
  6215  0052BC  EF62  F029         	goto	u3060
  6216  0052C0                     u3061:
  6217  0052C0  EF98  F029         	goto	l367
  6218  0052C4                     u3060:
  6219  0052C4  0E01               	movlw	1
  6220  0052C6  6E0D               	movwf	___lldiv@counter^0,c
  6221  0052C8  EF6C  F029         	goto	l3220
  6222  0052CC                     l3218:
  6223  0052CC  90D8               	bcf	status,0,c
  6224  0052CE  3605               	rlcf	___lldiv@divisor^0,f,c
  6225  0052D0  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6226  0052D2  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6227  0052D4  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6228  0052D6  2A0D               	incf	___lldiv@counter^0,f,c
  6229  0052D8                     l3220:
  6230  0052D8  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6231  0052DA  EF71  F029         	goto	u3071
  6232  0052DE  EF73  F029         	goto	u3070
  6233  0052E2                     u3071:
  6234  0052E2  EF66  F029         	goto	l3218
  6235  0052E6                     u3070:
  6236  0052E6                     l3222:
  6237  0052E6  90D8               	bcf	status,0,c
  6238  0052E8  3609               	rlcf	___lldiv@quotient^0,f,c
  6239  0052EA  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6240  0052EC  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6241  0052EE  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6242  0052F0  5005               	movf	___lldiv@divisor^0,w,c
  6243  0052F2  5C01               	subwf	___lldiv@dividend^0,w,c
  6244  0052F4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6245  0052F6  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6246  0052F8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6247  0052FA  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6248  0052FC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6249  0052FE  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6250  005300  A0D8               	btfss	status,0,c
  6251  005302  EF85  F029         	goto	u3081
  6252  005306  EF87  F029         	goto	u3080
  6253  00530A                     u3081:
  6254  00530A  EF90  F029         	goto	l3230
  6255  00530E                     u3080:
  6256  00530E  5005               	movf	___lldiv@divisor^0,w,c
  6257  005310  5E01               	subwf	___lldiv@dividend^0,f,c
  6258  005312  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6259  005314  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6260  005316  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6261  005318  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6262  00531A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6263  00531C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6264  00531E  8009               	bsf	___lldiv@quotient^0,0,c
  6265  005320                     l3230:
  6266  005320  90D8               	bcf	status,0,c
  6267  005322  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6268  005324  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6269  005326  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6270  005328  3205               	rrcf	___lldiv@divisor^0,f,c
  6271  00532A  2E0D               	decfsz	___lldiv@counter^0,f,c
  6272  00532C  EF73  F029         	goto	l3222
  6273  005330                     l367:
  6274  005330  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6275  005334  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6276  005338  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6277  00533C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6278  005340  0012               	return		;funcret
  6279  005342                     __end_of___lldiv:
  6280                           	opt callstack 0
  6281                           
  6282 ;; *************** function ___fltol *****************
  6283 ;; Defined at:
  6284 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  f1              4   48[COMRAM] unsigned long 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  exp1            1   57[COMRAM] unsigned char 
  6289 ;;  sign1           1   56[COMRAM] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  4   48[COMRAM] long 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6299 ;;      Params:         4       0       0       0       0       0       0       0       0
  6300 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6301 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6302 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6303 ;;Total ram usage:       10 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_sprintf
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text20
  6313  005664                     __ptext20:
  6314                           	opt callstack 0
  6315  005664                     ___fltol:
  6316                           	opt callstack 29
  6317  005664  3433               	rlcf	(___fltol@f1+2)^0,w,c
  6318  005666  3434               	rlcf	(___fltol@f1+3)^0,w,c
  6319  005668  6E3A               	movwf	___fltol@exp1^0,c
  6320  00566A  503A               	movf	___fltol@exp1^0,w,c
  6321  00566C  A4D8               	btfss	status,2,c
  6322  00566E  EF3B  F02B         	goto	u3181
  6323  005672  EF3D  F02B         	goto	u3180
  6324  005676                     u3181:
  6325  005676  EF47  F02B         	goto	l3292
  6326  00567A                     u3180:
  6327  00567A                     l3288:
  6328  00567A  0E00               	movlw	0
  6329  00567C  6E31               	movwf	?___fltol^0,c
  6330  00567E  0E00               	movlw	0
  6331  005680  6E32               	movwf	(?___fltol+1)^0,c
  6332  005682  0E00               	movlw	0
  6333  005684  6E33               	movwf	(?___fltol+2)^0,c
  6334  005686  0E00               	movlw	0
  6335  005688  6E34               	movwf	(?___fltol+3)^0,c
  6336  00568A  EFB4  F02B         	goto	l646
  6337  00568E                     l3292:
  6338  00568E  C031  F035         	movff	___fltol@f1,??___fltol
  6339  005692  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  6340  005696  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  6341  00569A  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  6342  00569E  0E20               	movlw	32
  6343  0056A0  EF57  F02B         	goto	u3190
  6344  0056A4                     u3195:
  6345  0056A4  90D8               	bcf	status,0,c
  6346  0056A6  3238               	rrcf	(??___fltol+3)^0,f,c
  6347  0056A8  3237               	rrcf	(??___fltol+2)^0,f,c
  6348  0056AA  3236               	rrcf	(??___fltol+1)^0,f,c
  6349  0056AC  3235               	rrcf	??___fltol^0,f,c
  6350  0056AE                     u3190:
  6351  0056AE  2EE8               	decfsz	wreg,f,c
  6352  0056B0  EF52  F02B         	goto	u3195
  6353  0056B4  5035               	movf	??___fltol^0,w,c
  6354  0056B6  6E39               	movwf	___fltol@sign1^0,c
  6355  0056B8  8E33               	bsf	(___fltol@f1+2)^0,7,c
  6356  0056BA  0EFF               	movlw	255
  6357  0056BC  1631               	andwf	___fltol@f1^0,f,c
  6358  0056BE  0EFF               	movlw	255
  6359  0056C0  1632               	andwf	(___fltol@f1+1)^0,f,c
  6360  0056C2  0EFF               	movlw	255
  6361  0056C4  1633               	andwf	(___fltol@f1+2)^0,f,c
  6362  0056C6  0E00               	movlw	0
  6363  0056C8  1634               	andwf	(___fltol@f1+3)^0,f,c
  6364  0056CA  0E96               	movlw	150
  6365  0056CC  5E3A               	subwf	___fltol@exp1^0,f,c
  6366  0056CE  BE3A               	btfsc	___fltol@exp1^0,7,c
  6367  0056D0  EF6E  F02B         	goto	u3200
  6368  0056D4  EF6C  F02B         	goto	u3201
  6369  0056D8                     u3201:
  6370  0056D8  EF84  F02B         	goto	l3312
  6371  0056DC                     u3200:
  6372  0056DC  503A               	movf	___fltol@exp1^0,w,c
  6373  0056DE  0A80               	xorlw	128
  6374  0056E0  0F97               	addlw	151
  6375  0056E2  B0D8               	btfsc	status,0,c
  6376  0056E4  EF76  F02B         	goto	u3211
  6377  0056E8  EF78  F02B         	goto	u3210
  6378  0056EC                     u3211:
  6379  0056EC  EF7A  F02B         	goto	l3308
  6380  0056F0                     u3210:
  6381  0056F0  EF3D  F02B         	goto	l3288
  6382  0056F4                     l3308:
  6383  0056F4  90D8               	bcf	status,0,c
  6384  0056F6  3234               	rrcf	(___fltol@f1+3)^0,f,c
  6385  0056F8  3233               	rrcf	(___fltol@f1+2)^0,f,c
  6386  0056FA  3232               	rrcf	(___fltol@f1+1)^0,f,c
  6387  0056FC  3231               	rrcf	___fltol@f1^0,f,c
  6388  0056FE  3E3A               	incfsz	___fltol@exp1^0,f,c
  6389  005700  EF7A  F02B         	goto	l3308
  6390  005704  EF9C  F02B         	goto	l3322
  6391  005708                     l3312:
  6392  005708  0E1F               	movlw	31
  6393  00570A  643A               	cpfsgt	___fltol@exp1^0,c
  6394  00570C  EF8A  F02B         	goto	u3221
  6395  005710  EF8C  F02B         	goto	u3220
  6396  005714                     u3221:
  6397  005714  EF94  F02B         	goto	l3320
  6398  005718                     u3220:
  6399  005718  EF3D  F02B         	goto	l3288
  6400  00571C                     l3318:
  6401  00571C  90D8               	bcf	status,0,c
  6402  00571E  3631               	rlcf	___fltol@f1^0,f,c
  6403  005720  3632               	rlcf	(___fltol@f1+1)^0,f,c
  6404  005722  3633               	rlcf	(___fltol@f1+2)^0,f,c
  6405  005724  3634               	rlcf	(___fltol@f1+3)^0,f,c
  6406  005726  063A               	decf	___fltol@exp1^0,f,c
  6407  005728                     l3320:
  6408  005728  503A               	movf	___fltol@exp1^0,w,c
  6409  00572A  A4D8               	btfss	status,2,c
  6410  00572C  EF9A  F02B         	goto	u3231
  6411  005730  EF9C  F02B         	goto	u3230
  6412  005734                     u3231:
  6413  005734  EF8E  F02B         	goto	l3318
  6414  005738                     u3230:
  6415  005738                     l3322:
  6416  005738  5039               	movf	___fltol@sign1^0,w,c
  6417  00573A  B4D8               	btfsc	status,2,c
  6418  00573C  EFA2  F02B         	goto	u3241
  6419  005740  EFA4  F02B         	goto	u3240
  6420  005744                     u3241:
  6421  005744  EFAC  F02B         	goto	l3326
  6422  005748                     u3240:
  6423  005748  1E34               	comf	(___fltol@f1+3)^0,f,c
  6424  00574A  1E33               	comf	(___fltol@f1+2)^0,f,c
  6425  00574C  1E32               	comf	(___fltol@f1+1)^0,f,c
  6426  00574E  6C31               	negf	___fltol@f1^0,c
  6427  005750  0E00               	movlw	0
  6428  005752  2232               	addwfc	(___fltol@f1+1)^0,f,c
  6429  005754  2233               	addwfc	(___fltol@f1+2)^0,f,c
  6430  005756  2234               	addwfc	(___fltol@f1+3)^0,f,c
  6431  005758                     l3326:
  6432  005758  C031  F031         	movff	___fltol@f1,?___fltol
  6433  00575C  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  6434  005760  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  6435  005764  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  6436  005768                     l646:
  6437  005768  0012               	return		;funcret
  6438  00576A                     __end_of___fltol:
  6439                           	opt callstack 0
  6440                           
  6441 ;; *************** function ___flsub *****************
  6442 ;; Defined at:
  6443 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  b               4   80[COMRAM] long 
  6446 ;;  a               4   84[COMRAM] long 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  4   80[COMRAM] long 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6458 ;;      Params:         8       0       0       0       0       0       0       0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6461 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6462 ;;Total ram usage:        8 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    1
  6465 ;; This function calls:
  6466 ;;		___fladd
  6467 ;; This function is called by:
  6468 ;;		_sprintf
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text21
  6473  004F8A                     __ptext21:
  6474                           	opt callstack 0
  6475  004F8A                     ___flsub:
  6476                           	opt callstack 28
  6477  004F8A  0E00               	movlw	0
  6478  004F8C  1A55               	xorwf	___flsub@a^0,f,c
  6479  004F8E  0E00               	movlw	0
  6480  004F90  1A56               	xorwf	(___flsub@a+1)^0,f,c
  6481  004F92  0E00               	movlw	0
  6482  004F94  1A57               	xorwf	(___flsub@a+2)^0,f,c
  6483  004F96  0E80               	movlw	128
  6484  004F98  1A58               	xorwf	(___flsub@a+3)^0,f,c
  6485  004F9A  C051  F041         	movff	___flsub@b,___fladd@b
  6486  004F9E  C052  F042         	movff	___flsub@b+1,___fladd@b+1
  6487  004FA2  C053  F043         	movff	___flsub@b+2,___fladd@b+2
  6488  004FA6  C054  F044         	movff	___flsub@b+3,___fladd@b+3
  6489  004FAA  C055  F045         	movff	___flsub@a,___fladd@a
  6490  004FAE  C056  F046         	movff	___flsub@a+1,___fladd@a+1
  6491  004FB2  C057  F047         	movff	___flsub@a+2,___fladd@a+2
  6492  004FB6  C058  F048         	movff	___flsub@a+3,___fladd@a+3
  6493  004FBA  ECB5  F035         	call	___fladd	;wreg free
  6494  004FBE  C041  F051         	movff	?___fladd,?___flsub
  6495  004FC2  C042  F052         	movff	?___fladd+1,?___flsub+1
  6496  004FC6  C043  F053         	movff	?___fladd+2,?___flsub+2
  6497  004FCA  C044  F054         	movff	?___fladd+3,?___flsub+3
  6498  004FCE  0012               	return		;funcret
  6499  004FD0                     __end_of___flsub:
  6500                           	opt callstack 0
  6501                           
  6502 ;; *************** function ___fladd *****************
  6503 ;; Defined at:
  6504 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  b               4   64[COMRAM] long 
  6507 ;;  a               4   68[COMRAM] long 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  grs             1   79[COMRAM] unsigned char 
  6510 ;;  bexp            1   78[COMRAM] unsigned char 
  6511 ;;  aexp            1   77[COMRAM] unsigned char 
  6512 ;;  signs           1   76[COMRAM] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  4   64[COMRAM] unsigned char 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6522 ;;      Params:         8       0       0       0       0       0       0       0       0
  6523 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6524 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6525 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6526 ;;Total ram usage:       16 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;;		_sprintf
  6533 ;;		___flsub
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text22
  6538  006B6A                     __ptext22:
  6539                           	opt callstack 0
  6540  006B6A                     ___fladd:
  6541                           	opt callstack 28
  6542  006B6A  5044               	movf	(___fladd@b+3)^0,w,c
  6543  006B6C  0B80               	andlw	128
  6544  006B6E  6E4D               	movwf	___fladd@signs^0,c
  6545  006B70  5044               	movf	(___fladd@b+3)^0,w,c
  6546  006B72  2444               	addwf	(___fladd@b+3)^0,w,c
  6547  006B74  6E4F               	movwf	___fladd@bexp^0,c
  6548  006B76  AE43               	btfss	(___fladd@b+2)^0,7,c
  6549  006B78  EFC0  F035         	goto	u2021
  6550  006B7C  EFC2  F035         	goto	u2020
  6551  006B80                     u2021:
  6552  006B80  EFC3  F035         	goto	l2536
  6553  006B84                     u2020:
  6554  006B84  804F               	bsf	___fladd@bexp^0,0,c
  6555  006B86                     l2536:
  6556  006B86  504F               	movf	___fladd@bexp^0,w,c
  6557  006B88  B4D8               	btfsc	status,2,c
  6558  006B8A  EFC9  F035         	goto	u2031
  6559  006B8E  EFCB  F035         	goto	u2030
  6560  006B92                     u2031:
  6561  006B92  EFE0  F035         	goto	l2546
  6562  006B96                     u2030:
  6563  006B96  284F               	incf	___fladd@bexp^0,w,c
  6564  006B98  A4D8               	btfss	status,2,c
  6565  006B9A  EFD1  F035         	goto	u2041
  6566  006B9E  EFD3  F035         	goto	u2040
  6567  006BA2                     u2041:
  6568  006BA2  EFDB  F035         	goto	l2542
  6569  006BA6                     u2040:
  6570  006BA6  0E00               	movlw	0
  6571  006BA8  6E41               	movwf	___fladd@b^0,c
  6572  006BAA  0E00               	movlw	0
  6573  006BAC  6E42               	movwf	(___fladd@b+1)^0,c
  6574  006BAE  0E00               	movlw	0
  6575  006BB0  6E43               	movwf	(___fladd@b+2)^0,c
  6576  006BB2  0E00               	movlw	0
  6577  006BB4  6E44               	movwf	(___fladd@b+3)^0,c
  6578  006BB6                     l2542:
  6579  006BB6  8E43               	bsf	(___fladd@b+2)^0,7,c
  6580  006BB8  0E00               	movlw	0
  6581  006BBA  6E44               	movwf	(___fladd@b+3)^0,c
  6582  006BBC  EFE8  F035         	goto	l2548
  6583  006BC0                     l2546:
  6584  006BC0  0E00               	movlw	0
  6585  006BC2  6E41               	movwf	___fladd@b^0,c
  6586  006BC4  0E00               	movlw	0
  6587  006BC6  6E42               	movwf	(___fladd@b+1)^0,c
  6588  006BC8  0E00               	movlw	0
  6589  006BCA  6E43               	movwf	(___fladd@b+2)^0,c
  6590  006BCC  0E00               	movlw	0
  6591  006BCE  6E44               	movwf	(___fladd@b+3)^0,c
  6592  006BD0                     l2548:
  6593  006BD0  5048               	movf	(___fladd@a+3)^0,w,c
  6594  006BD2  0B80               	andlw	128
  6595  006BD4  6E4E               	movwf	___fladd@aexp^0,c
  6596  006BD6  504D               	movf	___fladd@signs^0,w,c
  6597  006BD8  184E               	xorwf	___fladd@aexp^0,w,c
  6598  006BDA  B4D8               	btfsc	status,2,c
  6599  006BDC  EFF2  F035         	goto	u2051
  6600  006BE0  EFF4  F035         	goto	u2050
  6601  006BE4                     u2051:
  6602  006BE4  EFF5  F035         	goto	l2554
  6603  006BE8                     u2050:
  6604  006BE8  8C4D               	bsf	___fladd@signs^0,6,c
  6605  006BEA                     l2554:
  6606  006BEA  5048               	movf	(___fladd@a+3)^0,w,c
  6607  006BEC  2448               	addwf	(___fladd@a+3)^0,w,c
  6608  006BEE  6E4E               	movwf	___fladd@aexp^0,c
  6609  006BF0  AE47               	btfss	(___fladd@a+2)^0,7,c
  6610  006BF2  EFFD  F035         	goto	u2061
  6611  006BF6  EFFF  F035         	goto	u2060
  6612  006BFA                     u2061:
  6613  006BFA  EF00  F036         	goto	l2560
  6614  006BFE                     u2060:
  6615  006BFE  804E               	bsf	___fladd@aexp^0,0,c
  6616  006C00                     l2560:
  6617  006C00  504E               	movf	___fladd@aexp^0,w,c
  6618  006C02  B4D8               	btfsc	status,2,c
  6619  006C04  EF06  F036         	goto	u2071
  6620  006C08  EF08  F036         	goto	u2070
  6621  006C0C                     u2071:
  6622  006C0C  EF1D  F036         	goto	l2570
  6623  006C10                     u2070:
  6624  006C10  284E               	incf	___fladd@aexp^0,w,c
  6625  006C12  A4D8               	btfss	status,2,c
  6626  006C14  EF0E  F036         	goto	u2081
  6627  006C18  EF10  F036         	goto	u2080
  6628  006C1C                     u2081:
  6629  006C1C  EF18  F036         	goto	l2566
  6630  006C20                     u2080:
  6631  006C20  0E00               	movlw	0
  6632  006C22  6E45               	movwf	___fladd@a^0,c
  6633  006C24  0E00               	movlw	0
  6634  006C26  6E46               	movwf	(___fladd@a+1)^0,c
  6635  006C28  0E00               	movlw	0
  6636  006C2A  6E47               	movwf	(___fladd@a+2)^0,c
  6637  006C2C  0E00               	movlw	0
  6638  006C2E  6E48               	movwf	(___fladd@a+3)^0,c
  6639  006C30                     l2566:
  6640  006C30  8E47               	bsf	(___fladd@a+2)^0,7,c
  6641  006C32  0E00               	movlw	0
  6642  006C34  6E48               	movwf	(___fladd@a+3)^0,c
  6643  006C36  EF25  F036         	goto	l2572
  6644  006C3A                     l2570:
  6645  006C3A  0E00               	movlw	0
  6646  006C3C  6E45               	movwf	___fladd@a^0,c
  6647  006C3E  0E00               	movlw	0
  6648  006C40  6E46               	movwf	(___fladd@a+1)^0,c
  6649  006C42  0E00               	movlw	0
  6650  006C44  6E47               	movwf	(___fladd@a+2)^0,c
  6651  006C46  0E00               	movlw	0
  6652  006C48  6E48               	movwf	(___fladd@a+3)^0,c
  6653  006C4A                     l2572:
  6654  006C4A  504F               	movf	___fladd@bexp^0,w,c
  6655  006C4C  5C4E               	subwf	___fladd@aexp^0,w,c
  6656  006C4E  B0D8               	btfsc	status,0,c
  6657  006C50  EF2C  F036         	goto	u2091
  6658  006C54  EF2E  F036         	goto	u2090
  6659  006C58                     u2091:
  6660  006C58  EF55  F036         	goto	l2608
  6661  006C5C                     u2090:
  6662  006C5C  AC4D               	btfss	___fladd@signs^0,6,c
  6663  006C5E  EF33  F036         	goto	u2101
  6664  006C62  EF35  F036         	goto	u2100
  6665  006C66                     u2101:
  6666  006C66  EF37  F036         	goto	l2578
  6667  006C6A                     u2100:
  6668  006C6A  0E80               	movlw	128
  6669  006C6C  1A4D               	xorwf	___fladd@signs^0,f,c
  6670  006C6E                     l2578:
  6671  006C6E  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  6672  006C72  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6673  006C76  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  6674  006C7A  C041  F050         	movff	___fladd@b,___fladd@grs
  6675  006C7E  C045  F041         	movff	___fladd@a,___fladd@b
  6676  006C82  C050  F045         	movff	___fladd@grs,___fladd@a
  6677  006C86  C042  F050         	movff	___fladd@b+1,___fladd@grs
  6678  006C8A  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  6679  006C8E  C050  F046         	movff	___fladd@grs,___fladd@a+1
  6680  006C92  C043  F050         	movff	___fladd@b+2,___fladd@grs
  6681  006C96  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  6682  006C9A  C050  F047         	movff	___fladd@grs,___fladd@a+2
  6683  006C9E  C044  F050         	movff	___fladd@b+3,___fladd@grs
  6684  006CA2  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  6685  006CA6  C050  F048         	movff	___fladd@grs,___fladd@a+3
  6686  006CAA                     l2608:
  6687  006CAA  0E00               	movlw	0
  6688  006CAC  6E50               	movwf	___fladd@grs^0,c
  6689  006CAE  504F               	movf	___fladd@bexp^0,w,c
  6690  006CB0  C04E  F049         	movff	___fladd@aexp,??___fladd
  6691  006CB4  6A4A               	clrf	(??___fladd+1)^0,c
  6692  006CB6  5E49               	subwf	??___fladd^0,f,c
  6693  006CB8  0E00               	movlw	0
  6694  006CBA  5A4A               	subwfb	(??___fladd+1)^0,f,c
  6695  006CBC  BE4A               	btfsc	(??___fladd+1)^0,7,c
  6696  006CBE  EF6A  F036         	goto	u2111
  6697  006CC2  504A               	movf	(??___fladd+1)^0,w,c
  6698  006CC4  E109               	bnz	u2110
  6699  006CC6  0E1A               	movlw	26
  6700  006CC8  5C49               	subwf	??___fladd^0,w,c
  6701  006CCA  A0D8               	btfss	status,0,c
  6702  006CCC  EF6A  F036         	goto	u2111
  6703  006CD0  EF6C  F036         	goto	u2110
  6704  006CD4                     u2111:
  6705  006CD4  EFA3  F036         	goto	l891
  6706  006CD8                     u2110:
  6707  006CD8  5041               	movf	___fladd@b^0,w,c
  6708  006CDA  1042               	iorwf	(___fladd@b+1)^0,w,c
  6709  006CDC  1043               	iorwf	(___fladd@b+2)^0,w,c
  6710  006CDE  1044               	iorwf	(___fladd@b+3)^0,w,c
  6711  006CE0  A4D8               	btfss	status,2,c
  6712  006CE2  EF75  F036         	goto	u2121
  6713  006CE6  EF78  F036         	goto	u2120
  6714  006CEA                     u2121:
  6715  006CEA  0E01               	movlw	1
  6716  006CEC  EF79  F036         	goto	u2130
  6717  006CF0                     u2120:
  6718  006CF0  0E00               	movlw	0
  6719  006CF2                     u2130:
  6720  006CF2  6E50               	movwf	___fladd@grs^0,c
  6721  006CF4  0E00               	movlw	0
  6722  006CF6  6E41               	movwf	___fladd@b^0,c
  6723  006CF8  0E00               	movlw	0
  6724  006CFA  6E42               	movwf	(___fladd@b+1)^0,c
  6725  006CFC  0E00               	movlw	0
  6726  006CFE  6E43               	movwf	(___fladd@b+2)^0,c
  6727  006D00  0E00               	movlw	0
  6728  006D02  6E44               	movwf	(___fladd@b+3)^0,c
  6729  006D04  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  6730  006D08  EFAC  F036         	goto	l890
  6731  006D0C                     l892:
  6732  006D0C  A050               	btfss	___fladd@grs^0,0,c
  6733  006D0E  EF8B  F036         	goto	u2141
  6734  006D12  EF8D  F036         	goto	u2140
  6735  006D16                     u2141:
  6736  006D16  EF93  F036         	goto	l2620
  6737  006D1A                     u2140:
  6738  006D1A  90D8               	bcf	status,0,c
  6739  006D1C  3050               	rrcf	___fladd@grs^0,w,c
  6740  006D1E  0901               	iorlw	1
  6741  006D20  6E50               	movwf	___fladd@grs^0,c
  6742  006D22  EF95  F036         	goto	l2622
  6743  006D26                     l2620:
  6744  006D26  90D8               	bcf	status,0,c
  6745  006D28  3250               	rrcf	___fladd@grs^0,f,c
  6746  006D2A                     l2622:
  6747  006D2A  A041               	btfss	___fladd@b^0,0,c
  6748  006D2C  EF9A  F036         	goto	u2151
  6749  006D30  EF9C  F036         	goto	u2150
  6750  006D34                     u2151:
  6751  006D34  EF9D  F036         	goto	l2626
  6752  006D38                     u2150:
  6753  006D38  8E50               	bsf	___fladd@grs^0,7,c
  6754  006D3A                     l2626:
  6755  006D3A  3444               	rlcf	(___fladd@b+3)^0,w,c
  6756  006D3C  3244               	rrcf	(___fladd@b+3)^0,f,c
  6757  006D3E  3243               	rrcf	(___fladd@b+2)^0,f,c
  6758  006D40  3242               	rrcf	(___fladd@b+1)^0,f,c
  6759  006D42  3241               	rrcf	___fladd@b^0,f,c
  6760  006D44  2A4F               	incf	___fladd@bexp^0,f,c
  6761  006D46                     l891:
  6762  006D46  504E               	movf	___fladd@aexp^0,w,c
  6763  006D48  5C4F               	subwf	___fladd@bexp^0,w,c
  6764  006D4A  A0D8               	btfss	status,0,c
  6765  006D4C  EFAA  F036         	goto	u2161
  6766  006D50  EFAC  F036         	goto	u2160
  6767  006D54                     u2161:
  6768  006D54  EF86  F036         	goto	l892
  6769  006D58                     u2160:
  6770  006D58                     l890:
  6771  006D58  BC4D               	btfsc	___fladd@signs^0,6,c
  6772  006D5A  EFB1  F036         	goto	u2171
  6773  006D5E  EFB3  F036         	goto	u2170
  6774  006D62                     u2171:
  6775  006D62  EFF3  F036         	goto	l2654
  6776  006D66                     u2170:
  6777  006D66  504F               	movf	___fladd@bexp^0,w,c
  6778  006D68  A4D8               	btfss	status,2,c
  6779  006D6A  EFB9  F036         	goto	u2181
  6780  006D6E  EFBB  F036         	goto	u2180
  6781  006D72                     u2181:
  6782  006D72  EFC5  F036         	goto	l2636
  6783  006D76                     u2180:
  6784  006D76  0E00               	movlw	0
  6785  006D78  6E41               	movwf	?___fladd^0,c
  6786  006D7A  0E00               	movlw	0
  6787  006D7C  6E42               	movwf	(?___fladd+1)^0,c
  6788  006D7E  0E00               	movlw	0
  6789  006D80  6E43               	movwf	(?___fladd+2)^0,c
  6790  006D82  0E00               	movlw	0
  6791  006D84  6E44               	movwf	(?___fladd+3)^0,c
  6792  006D86  EF14  F038         	goto	l899
  6793  006D8A                     l2636:
  6794  006D8A  5045               	movf	___fladd@a^0,w,c
  6795  006D8C  2641               	addwf	___fladd@b^0,f,c
  6796  006D8E  5046               	movf	(___fladd@a+1)^0,w,c
  6797  006D90  2242               	addwfc	(___fladd@b+1)^0,f,c
  6798  006D92  5047               	movf	(___fladd@a+2)^0,w,c
  6799  006D94  2243               	addwfc	(___fladd@b+2)^0,f,c
  6800  006D96  5048               	movf	(___fladd@a+3)^0,w,c
  6801  006D98  2244               	addwfc	(___fladd@b+3)^0,f,c
  6802  006D9A  A044               	btfss	(___fladd@b+3)^0,0,c
  6803  006D9C  EFD2  F036         	goto	u2191
  6804  006DA0  EFD4  F036         	goto	u2190
  6805  006DA4                     u2191:
  6806  006DA4  EF80  F037         	goto	l2690
  6807  006DA8                     u2190:
  6808  006DA8  A050               	btfss	___fladd@grs^0,0,c
  6809  006DAA  EFD9  F036         	goto	u2201
  6810  006DAE  EFDB  F036         	goto	u2200
  6811  006DB2                     u2201:
  6812  006DB2  EFE1  F036         	goto	l2644
  6813  006DB6                     u2200:
  6814  006DB6  90D8               	bcf	status,0,c
  6815  006DB8  3050               	rrcf	___fladd@grs^0,w,c
  6816  006DBA  0901               	iorlw	1
  6817  006DBC  6E50               	movwf	___fladd@grs^0,c
  6818  006DBE  EFE3  F036         	goto	l2646
  6819  006DC2                     l2644:
  6820  006DC2  90D8               	bcf	status,0,c
  6821  006DC4  3250               	rrcf	___fladd@grs^0,f,c
  6822  006DC6                     l2646:
  6823  006DC6  A041               	btfss	___fladd@b^0,0,c
  6824  006DC8  EFE8  F036         	goto	u2211
  6825  006DCC  EFEA  F036         	goto	u2210
  6826  006DD0                     u2211:
  6827  006DD0  EFEB  F036         	goto	l2650
  6828  006DD4                     u2210:
  6829  006DD4  8E50               	bsf	___fladd@grs^0,7,c
  6830  006DD6                     l2650:
  6831  006DD6  3444               	rlcf	(___fladd@b+3)^0,w,c
  6832  006DD8  3244               	rrcf	(___fladd@b+3)^0,f,c
  6833  006DDA  3243               	rrcf	(___fladd@b+2)^0,f,c
  6834  006DDC  3242               	rrcf	(___fladd@b+1)^0,f,c
  6835  006DDE  3241               	rrcf	___fladd@b^0,f,c
  6836  006DE0  2A4F               	incf	___fladd@bexp^0,f,c
  6837  006DE2  EF80  F037         	goto	l2690
  6838  006DE6                     l2654:
  6839  006DE6  5045               	movf	___fladd@a^0,w,c
  6840  006DE8  5C41               	subwf	___fladd@b^0,w,c
  6841  006DEA  5046               	movf	(___fladd@a+1)^0,w,c
  6842  006DEC  5842               	subwfb	(___fladd@b+1)^0,w,c
  6843  006DEE  5047               	movf	(___fladd@a+2)^0,w,c
  6844  006DF0  5843               	subwfb	(___fladd@b+2)^0,w,c
  6845  006DF2  5044               	movf	(___fladd@b+3)^0,w,c
  6846  006DF4  0A80               	xorlw	128
  6847  006DF6  6E49               	movwf	??___fladd^0,c
  6848  006DF8  5048               	movf	(___fladd@a+3)^0,w,c
  6849  006DFA  0A80               	xorlw	128
  6850  006DFC  5849               	subwfb	??___fladd^0,w,c
  6851  006DFE  B0D8               	btfsc	status,0,c
  6852  006E00  EF04  F037         	goto	u2221
  6853  006E04  EF06  F037         	goto	u2220
  6854  006E08                     u2221:
  6855  006E08  EF31  F037         	goto	l2664
  6856  006E0C                     u2220:
  6857  006E0C  5041               	movf	___fladd@b^0,w,c
  6858  006E0E  5C45               	subwf	___fladd@a^0,w,c
  6859  006E10  6E49               	movwf	??___fladd^0,c
  6860  006E12  5042               	movf	(___fladd@b+1)^0,w,c
  6861  006E14  5846               	subwfb	(___fladd@a+1)^0,w,c
  6862  006E16  6E4A               	movwf	(??___fladd+1)^0,c
  6863  006E18  5043               	movf	(___fladd@b+2)^0,w,c
  6864  006E1A  5847               	subwfb	(___fladd@a+2)^0,w,c
  6865  006E1C  6E4B               	movwf	(??___fladd+2)^0,c
  6866  006E1E  5044               	movf	(___fladd@b+3)^0,w,c
  6867  006E20  5848               	subwfb	(___fladd@a+3)^0,w,c
  6868  006E22  6E4C               	movwf	(??___fladd+3)^0,c
  6869  006E24  0EFF               	movlw	255
  6870  006E26  2449               	addwf	??___fladd^0,w,c
  6871  006E28  6E41               	movwf	___fladd@b^0,c
  6872  006E2A  0EFF               	movlw	255
  6873  006E2C  204A               	addwfc	(??___fladd+1)^0,w,c
  6874  006E2E  6E42               	movwf	(___fladd@b+1)^0,c
  6875  006E30  0EFF               	movlw	255
  6876  006E32  204B               	addwfc	(??___fladd+2)^0,w,c
  6877  006E34  6E43               	movwf	(___fladd@b+2)^0,c
  6878  006E36  0EFF               	movlw	255
  6879  006E38  204C               	addwfc	(??___fladd+3)^0,w,c
  6880  006E3A  6E44               	movwf	(___fladd@b+3)^0,c
  6881  006E3C  0E80               	movlw	128
  6882  006E3E  1A4D               	xorwf	___fladd@signs^0,f,c
  6883  006E40  6C50               	negf	___fladd@grs^0,c
  6884  006E42  5050               	movf	___fladd@grs^0,w,c
  6885  006E44  A4D8               	btfss	status,2,c
  6886  006E46  EF27  F037         	goto	u2231
  6887  006E4A  EF29  F037         	goto	u2230
  6888  006E4E                     u2231:
  6889  006E4E  EF39  F037         	goto	l907
  6890  006E52                     u2230:
  6891  006E52  0E01               	movlw	1
  6892  006E54  2641               	addwf	___fladd@b^0,f,c
  6893  006E56  0E00               	movlw	0
  6894  006E58  2242               	addwfc	(___fladd@b+1)^0,f,c
  6895  006E5A  2243               	addwfc	(___fladd@b+2)^0,f,c
  6896  006E5C  2244               	addwfc	(___fladd@b+3)^0,f,c
  6897  006E5E  EF39  F037         	goto	l907
  6898  006E62                     l2664:
  6899  006E62  5045               	movf	___fladd@a^0,w,c
  6900  006E64  5E41               	subwf	___fladd@b^0,f,c
  6901  006E66  5046               	movf	(___fladd@a+1)^0,w,c
  6902  006E68  5A42               	subwfb	(___fladd@b+1)^0,f,c
  6903  006E6A  5047               	movf	(___fladd@a+2)^0,w,c
  6904  006E6C  5A43               	subwfb	(___fladd@b+2)^0,f,c
  6905  006E6E  5048               	movf	(___fladd@a+3)^0,w,c
  6906  006E70  5A44               	subwfb	(___fladd@b+3)^0,f,c
  6907  006E72                     l907:
  6908  006E72  5041               	movf	___fladd@b^0,w,c
  6909  006E74  1042               	iorwf	(___fladd@b+1)^0,w,c
  6910  006E76  1043               	iorwf	(___fladd@b+2)^0,w,c
  6911  006E78  1044               	iorwf	(___fladd@b+3)^0,w,c
  6912  006E7A  A4D8               	btfss	status,2,c
  6913  006E7C  EF42  F037         	goto	u2241
  6914  006E80  EF44  F037         	goto	u2240
  6915  006E84                     u2241:
  6916  006E84  EF79  F037         	goto	l2688
  6917  006E88                     u2240:
  6918  006E88  5050               	movf	___fladd@grs^0,w,c
  6919  006E8A  A4D8               	btfss	status,2,c
  6920  006E8C  EF4A  F037         	goto	u2251
  6921  006E90  EF4C  F037         	goto	u2250
  6922  006E94                     u2251:
  6923  006E94  EF79  F037         	goto	l2688
  6924  006E98                     u2250:
  6925  006E98  0E00               	movlw	0
  6926  006E9A  6E41               	movwf	?___fladd^0,c
  6927  006E9C  0E00               	movlw	0
  6928  006E9E  6E42               	movwf	(?___fladd+1)^0,c
  6929  006EA0  0E00               	movlw	0
  6930  006EA2  6E43               	movwf	(?___fladd+2)^0,c
  6931  006EA4  0E00               	movlw	0
  6932  006EA6  6E44               	movwf	(?___fladd+3)^0,c
  6933  006EA8  EF14  F038         	goto	l899
  6934  006EAC                     l2672:
  6935  006EAC  90D8               	bcf	status,0,c
  6936  006EAE  3641               	rlcf	___fladd@b^0,f,c
  6937  006EB0  3642               	rlcf	(___fladd@b+1)^0,f,c
  6938  006EB2  3643               	rlcf	(___fladd@b+2)^0,f,c
  6939  006EB4  3644               	rlcf	(___fladd@b+3)^0,f,c
  6940  006EB6  AE50               	btfss	___fladd@grs^0,7,c
  6941  006EB8  EF60  F037         	goto	u2261
  6942  006EBC  EF62  F037         	goto	u2260
  6943  006EC0                     u2261:
  6944  006EC0  EF63  F037         	goto	l2678
  6945  006EC4                     u2260:
  6946  006EC4  8041               	bsf	___fladd@b^0,0,c
  6947  006EC6                     l2678:
  6948  006EC6  A050               	btfss	___fladd@grs^0,0,c
  6949  006EC8  EF68  F037         	goto	u2271
  6950  006ECC  EF6A  F037         	goto	u2270
  6951  006ED0                     u2271:
  6952  006ED0  EF6E  F037         	goto	l2682
  6953  006ED4                     u2270:
  6954  006ED4  80D8               	bsf	status,0,c
  6955  006ED6  3650               	rlcf	___fladd@grs^0,f,c
  6956  006ED8  EF70  F037         	goto	l2684
  6957  006EDC                     l2682:
  6958  006EDC  90D8               	bcf	status,0,c
  6959  006EDE  3650               	rlcf	___fladd@grs^0,f,c
  6960  006EE0                     l2684:
  6961  006EE0  504F               	movf	___fladd@bexp^0,w,c
  6962  006EE2  B4D8               	btfsc	status,2,c
  6963  006EE4  EF76  F037         	goto	u2281
  6964  006EE8  EF78  F037         	goto	u2280
  6965  006EEC                     u2281:
  6966  006EEC  EF79  F037         	goto	l2688
  6967  006EF0                     u2280:
  6968  006EF0  064F               	decf	___fladd@bexp^0,f,c
  6969  006EF2                     l2688:
  6970  006EF2  AE43               	btfss	(___fladd@b+2)^0,7,c
  6971  006EF4  EF7E  F037         	goto	u2291
  6972  006EF8  EF80  F037         	goto	u2290
  6973  006EFC                     u2291:
  6974  006EFC  EF56  F037         	goto	l2672
  6975  006F00                     u2290:
  6976  006F00                     l2690:
  6977  006F00  0E00               	movlw	0
  6978  006F02  6E4E               	movwf	___fladd@aexp^0,c
  6979  006F04  AE50               	btfss	___fladd@grs^0,7,c
  6980  006F06  EF87  F037         	goto	u2301
  6981  006F0A  EF89  F037         	goto	u2300
  6982  006F0E                     u2301:
  6983  006F0E  EFA1  F037         	goto	l916
  6984  006F12                     u2300:
  6985  006F12  C050  F049         	movff	___fladd@grs,??___fladd
  6986  006F16  0E7F               	movlw	127
  6987  006F18  1649               	andwf	??___fladd^0,f,c
  6988  006F1A  B4D8               	btfsc	status,2,c
  6989  006F1C  EF92  F037         	goto	u2311
  6990  006F20  EF94  F037         	goto	u2310
  6991  006F24                     u2311:
  6992  006F24  EF98  F037         	goto	l917
  6993  006F28                     u2310:
  6994  006F28                     l2696:
  6995  006F28  0E01               	movlw	1
  6996  006F2A  6E4E               	movwf	___fladd@aexp^0,c
  6997  006F2C  EFA1  F037         	goto	l916
  6998  006F30                     l917:
  6999  006F30  A041               	btfss	___fladd@b^0,0,c
  7000  006F32  EF9D  F037         	goto	u2321
  7001  006F36  EF9F  F037         	goto	u2320
  7002  006F3A                     u2321:
  7003  006F3A  EFA1  F037         	goto	l916
  7004  006F3E                     u2320:
  7005  006F3E  EF94  F037         	goto	l2696
  7006  006F42                     l916:
  7007  006F42  504E               	movf	___fladd@aexp^0,w,c
  7008  006F44  B4D8               	btfsc	status,2,c
  7009  006F46  EFA7  F037         	goto	u2331
  7010  006F4A  EFA9  F037         	goto	u2330
  7011  006F4E                     u2331:
  7012  006F4E  EFD4  F037         	goto	l2708
  7013  006F52                     u2330:
  7014  006F52  0E01               	movlw	1
  7015  006F54  2641               	addwf	___fladd@b^0,f,c
  7016  006F56  0E00               	movlw	0
  7017  006F58  2242               	addwfc	(___fladd@b+1)^0,f,c
  7018  006F5A  2243               	addwfc	(___fladd@b+2)^0,f,c
  7019  006F5C  2244               	addwfc	(___fladd@b+3)^0,f,c
  7020  006F5E  A044               	btfss	(___fladd@b+3)^0,0,c
  7021  006F60  EFB4  F037         	goto	u2341
  7022  006F64  EFB6  F037         	goto	u2340
  7023  006F68                     u2341:
  7024  006F68  EFD4  F037         	goto	l2708
  7025  006F6C                     u2340:
  7026  006F6C  C041  F049         	movff	___fladd@b,??___fladd
  7027  006F70  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  7028  006F74  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  7029  006F78  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  7030  006F7C  344C               	rlcf	(??___fladd+3)^0,w,c
  7031  006F7E  324C               	rrcf	(??___fladd+3)^0,f,c
  7032  006F80  324B               	rrcf	(??___fladd+2)^0,f,c
  7033  006F82  324A               	rrcf	(??___fladd+1)^0,f,c
  7034  006F84  3249               	rrcf	??___fladd^0,f,c
  7035  006F86  C049  F041         	movff	??___fladd,___fladd@b
  7036  006F8A  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  7037  006F8E  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  7038  006F92  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  7039  006F96  284F               	incf	___fladd@bexp^0,w,c
  7040  006F98  B4D8               	btfsc	status,2,c
  7041  006F9A  EFD1  F037         	goto	u2351
  7042  006F9E  EFD3  F037         	goto	u2350
  7043  006FA2                     u2351:
  7044  006FA2  EFD4  F037         	goto	l2708
  7045  006FA6                     u2350:
  7046  006FA6  2A4F               	incf	___fladd@bexp^0,f,c
  7047  006FA8                     l2708:
  7048  006FA8  284F               	incf	___fladd@bexp^0,w,c
  7049  006FAA  B4D8               	btfsc	status,2,c
  7050  006FAC  EFDA  F037         	goto	u2361
  7051  006FB0  EFDC  F037         	goto	u2360
  7052  006FB4                     u2361:
  7053  006FB4  EFE4  F037         	goto	l2712
  7054  006FB8                     u2360:
  7055  006FB8  504F               	movf	___fladd@bexp^0,w,c
  7056  006FBA  A4D8               	btfss	status,2,c
  7057  006FBC  EFE2  F037         	goto	u2371
  7058  006FC0  EFE4  F037         	goto	u2370
  7059  006FC4                     u2371:
  7060  006FC4  EFF6  F037         	goto	l2716
  7061  006FC8                     u2370:
  7062  006FC8                     l2712:
  7063  006FC8  0E00               	movlw	0
  7064  006FCA  6E41               	movwf	___fladd@b^0,c
  7065  006FCC  0E00               	movlw	0
  7066  006FCE  6E42               	movwf	(___fladd@b+1)^0,c
  7067  006FD0  0E00               	movlw	0
  7068  006FD2  6E43               	movwf	(___fladd@b+2)^0,c
  7069  006FD4  0E00               	movlw	0
  7070  006FD6  6E44               	movwf	(___fladd@b+3)^0,c
  7071  006FD8  504F               	movf	___fladd@bexp^0,w,c
  7072  006FDA  A4D8               	btfss	status,2,c
  7073  006FDC  EFF2  F037         	goto	u2381
  7074  006FE0  EFF4  F037         	goto	u2380
  7075  006FE4                     u2381:
  7076  006FE4  EFF6  F037         	goto	l2716
  7077  006FE8                     u2380:
  7078  006FE8  0E00               	movlw	0
  7079  006FEA  6E4D               	movwf	___fladd@signs^0,c
  7080  006FEC                     l2716:
  7081  006FEC  A04F               	btfss	___fladd@bexp^0,0,c
  7082  006FEE  EFFB  F037         	goto	u2391
  7083  006FF2  EFFD  F037         	goto	u2390
  7084  006FF6                     u2391:
  7085  006FF6  EF00  F038         	goto	l2720
  7086  006FFA                     u2390:
  7087  006FFA  8E43               	bsf	(___fladd@b+2)^0,7,c
  7088  006FFC  EF01  F038         	goto	l2722
  7089  007000                     l2720:
  7090  007000  9E43               	bcf	(___fladd@b+2)^0,7,c
  7091  007002                     l2722:
  7092  007002  90D8               	bcf	status,0,c
  7093  007004  304F               	rrcf	___fladd@bexp^0,w,c
  7094  007006  6E44               	movwf	(___fladd@b+3)^0,c
  7095  007008  AE4D               	btfss	___fladd@signs^0,7,c
  7096  00700A  EF09  F038         	goto	u2401
  7097  00700E  EF0B  F038         	goto	u2400
  7098  007012                     u2401:
  7099  007012  EF0C  F038         	goto	l2728
  7100  007016                     u2400:
  7101  007016  8E44               	bsf	(___fladd@b+3)^0,7,c
  7102  007018                     l2728:
  7103  007018  C041  F041         	movff	___fladd@b,?___fladd
  7104  00701C  C042  F042         	movff	___fladd@b+1,?___fladd+1
  7105  007020  C043  F043         	movff	___fladd@b+2,?___fladd+2
  7106  007024  C044  F044         	movff	___fladd@b+3,?___fladd+3
  7107  007028                     l899:
  7108  007028  0012               	return		;funcret
  7109  00702A                     __end_of___fladd:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function ___flneg *****************
  7113 ;; Defined at:
  7114 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  f1              4    0[COMRAM] unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  4    0[COMRAM] unsigned char 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7128 ;;      Params:         4       0       0       0       0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7131 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7132 ;;Total ram usage:        4 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_sprintf
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text23
  7142  004F52                     __ptext23:
  7143                           	opt callstack 0
  7144  004F52                     ___flneg:
  7145                           	opt callstack 29
  7146  004F52  5001               	movf	___flneg@f1^0,w,c
  7147  004F54  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7148  004F56  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7149  004F58  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7150  004F5A  B4D8               	btfsc	status,2,c
  7151  004F5C  EFB2  F027         	goto	u3171
  7152  004F60  EFB4  F027         	goto	u3170
  7153  004F64                     u3171:
  7154  004F64  EFBC  F027         	goto	l3282
  7155  004F68                     u3170:
  7156  004F68  0E00               	movlw	0
  7157  004F6A  1A01               	xorwf	___flneg@f1^0,f,c
  7158  004F6C  0E00               	movlw	0
  7159  004F6E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7160  004F70  0E00               	movlw	0
  7161  004F72  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7162  004F74  0E80               	movlw	128
  7163  004F76  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7164  004F78                     l3282:
  7165  004F78  C001  F001         	movff	___flneg@f1,?___flneg
  7166  004F7C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7167  004F80  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7168  004F84  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7169  004F88  0012               	return		;funcret
  7170  004F8A                     __end_of___flneg:
  7171                           	opt callstack 0
  7172                           
  7173 ;; *************** function ___flge *****************
  7174 ;; Defined at:
  7175 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  ff1             4    0[COMRAM] unsigned char 
  7178 ;;  ff2             4    4[COMRAM] unsigned char 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;		None
  7181 ;; Return value:  Size  Location     Type
  7182 ;;		None               void
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7190 ;;      Params:         8       0       0       0       0       0       0       0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7192 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7193 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7194 ;;Total ram usage:       12 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_sprintf
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text24
  7204  005560                     __ptext24:
  7205                           	opt callstack 0
  7206  005560                     ___flge:
  7207                           	opt callstack 29
  7208  005560  0E00               	movlw	0
  7209  005562  1401               	andwf	___flge@ff1^0,w,c
  7210  005564  6E09               	movwf	??___flge^0,c
  7211  005566  0E00               	movlw	0
  7212  005568  1402               	andwf	(___flge@ff1+1)^0,w,c
  7213  00556A  6E0A               	movwf	(??___flge+1)^0,c
  7214  00556C  0E80               	movlw	128
  7215  00556E  1403               	andwf	(___flge@ff1+2)^0,w,c
  7216  005570  6E0B               	movwf	(??___flge+2)^0,c
  7217  005572  0E7F               	movlw	127
  7218  005574  1404               	andwf	(___flge@ff1+3)^0,w,c
  7219  005576  6E0C               	movwf	(??___flge+3)^0,c
  7220  005578  5009               	movf	??___flge^0,w,c
  7221  00557A  100A               	iorwf	(??___flge+1)^0,w,c
  7222  00557C  100B               	iorwf	(??___flge+2)^0,w,c
  7223  00557E  100C               	iorwf	(??___flge+3)^0,w,c
  7224  005580  A4D8               	btfss	status,2,c
  7225  005582  EFC5  F02A         	goto	u3121
  7226  005586  EFC7  F02A         	goto	u3120
  7227  00558A                     u3121:
  7228  00558A  EFCF  F02A         	goto	l3260
  7229  00558E                     u3120:
  7230  00558E  0E00               	movlw	0
  7231  005590  6E01               	movwf	___flge@ff1^0,c
  7232  005592  0E00               	movlw	0
  7233  005594  6E02               	movwf	(___flge@ff1+1)^0,c
  7234  005596  0E00               	movlw	0
  7235  005598  6E03               	movwf	(___flge@ff1+2)^0,c
  7236  00559A  0E00               	movlw	0
  7237  00559C  6E04               	movwf	(___flge@ff1+3)^0,c
  7238  00559E                     l3260:
  7239  00559E  0E00               	movlw	0
  7240  0055A0  1405               	andwf	___flge@ff2^0,w,c
  7241  0055A2  6E09               	movwf	??___flge^0,c
  7242  0055A4  0E00               	movlw	0
  7243  0055A6  1406               	andwf	(___flge@ff2+1)^0,w,c
  7244  0055A8  6E0A               	movwf	(??___flge+1)^0,c
  7245  0055AA  0E80               	movlw	128
  7246  0055AC  1407               	andwf	(___flge@ff2+2)^0,w,c
  7247  0055AE  6E0B               	movwf	(??___flge+2)^0,c
  7248  0055B0  0E7F               	movlw	127
  7249  0055B2  1408               	andwf	(___flge@ff2+3)^0,w,c
  7250  0055B4  6E0C               	movwf	(??___flge+3)^0,c
  7251  0055B6  5009               	movf	??___flge^0,w,c
  7252  0055B8  100A               	iorwf	(??___flge+1)^0,w,c
  7253  0055BA  100B               	iorwf	(??___flge+2)^0,w,c
  7254  0055BC  100C               	iorwf	(??___flge+3)^0,w,c
  7255  0055BE  A4D8               	btfss	status,2,c
  7256  0055C0  EFE4  F02A         	goto	u3131
  7257  0055C4  EFE6  F02A         	goto	u3130
  7258  0055C8                     u3131:
  7259  0055C8  EFEE  F02A         	goto	l3264
  7260  0055CC                     u3130:
  7261  0055CC  0E00               	movlw	0
  7262  0055CE  6E05               	movwf	___flge@ff2^0,c
  7263  0055D0  0E00               	movlw	0
  7264  0055D2  6E06               	movwf	(___flge@ff2+1)^0,c
  7265  0055D4  0E00               	movlw	0
  7266  0055D6  6E07               	movwf	(___flge@ff2+2)^0,c
  7267  0055D8  0E00               	movlw	0
  7268  0055DA  6E08               	movwf	(___flge@ff2+3)^0,c
  7269  0055DC                     l3264:
  7270  0055DC  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7271  0055DE  EFF3  F02A         	goto	u3141
  7272  0055E2  EFF5  F02A         	goto	u3140
  7273  0055E6                     u3141:
  7274  0055E6  EFFE  F02A         	goto	l3268
  7275  0055EA                     u3140:
  7276  0055EA  6C01               	negf	___flge@ff1^0,c
  7277  0055EC  1E02               	comf	(___flge@ff1+1)^0,f,c
  7278  0055EE  B0D8               	btfsc	status,0,c
  7279  0055F0  2A02               	incf	(___flge@ff1+1)^0,f,c
  7280  0055F2  1E03               	comf	(___flge@ff1+2)^0,f,c
  7281  0055F4  B0D8               	btfsc	status,0,c
  7282  0055F6  2A03               	incf	(___flge@ff1+2)^0,f,c
  7283  0055F8  0E80               	movlw	128
  7284  0055FA  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7285  0055FC                     l3268:
  7286  0055FC  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7287  0055FE  EF03  F02B         	goto	u3151
  7288  005602  EF05  F02B         	goto	u3150
  7289  005606                     u3151:
  7290  005606  EF0E  F02B         	goto	l618
  7291  00560A                     u3150:
  7292  00560A  6C05               	negf	___flge@ff2^0,c
  7293  00560C  1E06               	comf	(___flge@ff2+1)^0,f,c
  7294  00560E  B0D8               	btfsc	status,0,c
  7295  005610  2A06               	incf	(___flge@ff2+1)^0,f,c
  7296  005612  1E07               	comf	(___flge@ff2+2)^0,f,c
  7297  005614  B0D8               	btfsc	status,0,c
  7298  005616  2A07               	incf	(___flge@ff2+2)^0,f,c
  7299  005618  0E80               	movlw	128
  7300  00561A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7301  00561C                     l618:
  7302  00561C  0E00               	movlw	0
  7303  00561E  1A01               	xorwf	___flge@ff1^0,f,c
  7304  005620  0E00               	movlw	0
  7305  005622  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7306  005624  0E00               	movlw	0
  7307  005626  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7308  005628  0E80               	movlw	128
  7309  00562A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7310  00562C  0E00               	movlw	0
  7311  00562E  1A05               	xorwf	___flge@ff2^0,f,c
  7312  005630  0E00               	movlw	0
  7313  005632  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7314  005634  0E00               	movlw	0
  7315  005636  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7316  005638  0E80               	movlw	128
  7317  00563A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7318  00563C  5005               	movf	___flge@ff2^0,w,c
  7319  00563E  5C01               	subwf	___flge@ff1^0,w,c
  7320  005640  5006               	movf	(___flge@ff2+1)^0,w,c
  7321  005642  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7322  005644  5007               	movf	(___flge@ff2+2)^0,w,c
  7323  005646  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7324  005648  5008               	movf	(___flge@ff2+3)^0,w,c
  7325  00564A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7326  00564C  B0D8               	btfsc	status,0,c
  7327  00564E  EF2B  F02B         	goto	u3161
  7328  005652  EF2D  F02B         	goto	u3160
  7329  005656                     u3161:
  7330  005656  EF30  F02B         	goto	l3274
  7331  00565A                     u3160:
  7332  00565A  90D8               	bcf	status,0,c
  7333  00565C  EF31  F02B         	goto	l619
  7334  005660                     l3274:
  7335  005660  80D8               	bsf	status,0,c
  7336  005662                     l619:
  7337  005662  0012               	return		;funcret
  7338  005664                     __end_of___flge:
  7339                           	opt callstack 0
  7340                           
  7341 ;; *************** function ___fleq *****************
  7342 ;; Defined at:
  7343 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  ff1             4    0[COMRAM] unsigned char 
  7346 ;;  ff2             4    4[COMRAM] unsigned char 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;		None               void
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7358 ;;      Params:         8       0       0       0       0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7360 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7361 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7362 ;;Total ram usage:       12 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_sprintf
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text25
  7372  005342                     __ptext25:
  7373                           	opt callstack 0
  7374  005342                     ___fleq:
  7375                           	opt callstack 29
  7376  005342  0E00               	movlw	0
  7377  005344  1401               	andwf	___fleq@ff1^0,w,c
  7378  005346  6E09               	movwf	??___fleq^0,c
  7379  005348  0E00               	movlw	0
  7380  00534A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7381  00534C  6E0A               	movwf	(??___fleq+1)^0,c
  7382  00534E  0E80               	movlw	128
  7383  005350  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7384  005352  6E0B               	movwf	(??___fleq+2)^0,c
  7385  005354  0E7F               	movlw	127
  7386  005356  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7387  005358  6E0C               	movwf	(??___fleq+3)^0,c
  7388  00535A  5009               	movf	??___fleq^0,w,c
  7389  00535C  100A               	iorwf	(??___fleq+1)^0,w,c
  7390  00535E  100B               	iorwf	(??___fleq+2)^0,w,c
  7391  005360  100C               	iorwf	(??___fleq+3)^0,w,c
  7392  005362  A4D8               	btfss	status,2,c
  7393  005364  EFB6  F029         	goto	u3091
  7394  005368  EFB8  F029         	goto	u3090
  7395  00536C                     u3091:
  7396  00536C  EFC0  F029         	goto	l3244
  7397  005370                     u3090:
  7398  005370  0E00               	movlw	0
  7399  005372  6E01               	movwf	___fleq@ff1^0,c
  7400  005374  0E00               	movlw	0
  7401  005376  6E02               	movwf	(___fleq@ff1+1)^0,c
  7402  005378  0E00               	movlw	0
  7403  00537A  6E03               	movwf	(___fleq@ff1+2)^0,c
  7404  00537C  0E00               	movlw	0
  7405  00537E  6E04               	movwf	(___fleq@ff1+3)^0,c
  7406  005380                     l3244:
  7407  005380  0E00               	movlw	0
  7408  005382  1405               	andwf	___fleq@ff2^0,w,c
  7409  005384  6E09               	movwf	??___fleq^0,c
  7410  005386  0E00               	movlw	0
  7411  005388  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7412  00538A  6E0A               	movwf	(??___fleq+1)^0,c
  7413  00538C  0E80               	movlw	128
  7414  00538E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7415  005390  6E0B               	movwf	(??___fleq+2)^0,c
  7416  005392  0E7F               	movlw	127
  7417  005394  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7418  005396  6E0C               	movwf	(??___fleq+3)^0,c
  7419  005398  5009               	movf	??___fleq^0,w,c
  7420  00539A  100A               	iorwf	(??___fleq+1)^0,w,c
  7421  00539C  100B               	iorwf	(??___fleq+2)^0,w,c
  7422  00539E  100C               	iorwf	(??___fleq+3)^0,w,c
  7423  0053A0  A4D8               	btfss	status,2,c
  7424  0053A2  EFD5  F029         	goto	u3101
  7425  0053A6  EFD7  F029         	goto	u3100
  7426  0053AA                     u3101:
  7427  0053AA  EFDF  F029         	goto	l3248
  7428  0053AE                     u3100:
  7429  0053AE  0E00               	movlw	0
  7430  0053B0  6E05               	movwf	___fleq@ff2^0,c
  7431  0053B2  0E00               	movlw	0
  7432  0053B4  6E06               	movwf	(___fleq@ff2+1)^0,c
  7433  0053B6  0E00               	movlw	0
  7434  0053B8  6E07               	movwf	(___fleq@ff2+2)^0,c
  7435  0053BA  0E00               	movlw	0
  7436  0053BC  6E08               	movwf	(___fleq@ff2+3)^0,c
  7437  0053BE                     l3248:
  7438  0053BE  5005               	movf	___fleq@ff2^0,w,c
  7439  0053C0  1801               	xorwf	___fleq@ff1^0,w,c
  7440  0053C2  E10F               	bnz	u3110
  7441  0053C4  5006               	movf	(___fleq@ff2+1)^0,w,c
  7442  0053C6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7443  0053C8  E10C               	bnz	u3110
  7444  0053CA  5007               	movf	(___fleq@ff2+2)^0,w,c
  7445  0053CC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7446  0053CE  E109               	bnz	u3110
  7447  0053D0  5008               	movf	(___fleq@ff2+3)^0,w,c
  7448  0053D2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7449  0053D4  B4D8               	btfsc	status,2,c
  7450  0053D6  EFEF  F029         	goto	u3111
  7451  0053DA  EFF1  F029         	goto	u3110
  7452  0053DE                     u3111:
  7453  0053DE  EFF4  F029         	goto	l3252
  7454  0053E2                     u3110:
  7455  0053E2  90D8               	bcf	status,0,c
  7456  0053E4  EFF5  F029         	goto	l612
  7457  0053E8                     l3252:
  7458  0053E8  80D8               	bsf	status,0,c
  7459  0053EA                     l612:
  7460  0053EA  0012               	return		;funcret
  7461  0053EC                     __end_of___fleq:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function _readI2C *****************
  7465 ;; Defined at:
  7466 ;;		line 196 in file "Main_IMU.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  Address         1    wreg     unsigned char 
  7469 ;;  Register        1    3[COMRAM] unsigned char 
  7470 ;;  Data            2    4[COMRAM] PTR unsigned char 
  7471 ;;		 -> data(1), GirAcel(14), 
  7472 ;;  bytes           2    6[COMRAM] int 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  Address         1   10[COMRAM] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7484 ;;      Params:         5       0       0       0       0       0       0       0       0
  7485 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7486 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7487 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7488 ;;Total ram usage:        8 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    2
  7491 ;; This function calls:
  7492 ;;		_receiveI2C
  7493 ;;		_repeatedStart
  7494 ;;		_sendI2C
  7495 ;;		_startI2C
  7496 ;;		_stopI2C
  7497 ;; This function is called by:
  7498 ;;		_main
  7499 ;;		_settings
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text26
  7504  0051FC                     __ptext26:
  7505                           	opt callstack 0
  7506  0051FC                     _readI2C:
  7507                           	opt callstack 27
  7508                           
  7509                           ;incstack = 0
  7510                           ;readI2C@Address stored from wreg
  7511  0051FC  6E0B               	movwf	readI2C@Address^0,c
  7512  0051FE                     
  7513                           ;Main_IMU.c: 197: startI2C();
  7514  0051FE  ECE8  F026         	call	_startI2C	;wreg free
  7515                           
  7516                           ;Main_IMU.c: 198: sendI2C(Address);
  7517  005202  500B               	movf	readI2C@Address^0,w,c
  7518  005204  ECF0  F026         	call	_sendI2C
  7519                           
  7520                           ;Main_IMU.c: 199: sendI2C(Register);
  7521  005208  5004               	movf	readI2C@Register^0,w,c
  7522  00520A  ECF0  F026         	call	_sendI2C
  7523                           
  7524                           ;Main_IMU.c: 200: repeatedStart();
  7525  00520E  ECE4  F026         	call	_repeatedStart	;wreg free
  7526                           
  7527                           ;Main_IMU.c: 201: sendI2C(Address|0x01);
  7528  005212  500B               	movf	readI2C@Address^0,w,c
  7529  005214  0901               	iorlw	1
  7530  005216  ECF0  F026         	call	_sendI2C
  7531  00521A                     
  7532                           ;Main_IMU.c: 203: for(i=0;i<bytes;i++){
  7533  00521A  0E00               	movlw	0
  7534  00521C  0100               	movlb	0	; () banked
  7535  00521E  6F8B               	movwf	(_i+1)& (0+255),b
  7536  005220  0E00               	movlw	0
  7537  005222  6F8A               	movwf	_i& (0+255),b
  7538  005224  EF3D  F029         	goto	l3406
  7539  005228                     l3396:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;Main_IMU.c: 204: if(i+1 == bytes){
  7543  005228  0E01               	movlw	1
  7544  00522A  258A               	addwf	_i& (0+255),w,b
  7545  00522C  6E09               	movwf	??_readI2C^0,c
  7546  00522E  0E00               	movlw	0
  7547  005230  218B               	addwfc	(_i+1)& (0+255),w,b
  7548  005232  6E0A               	movwf	(??_readI2C+1)^0,c
  7549  005234  5007               	movf	readI2C@bytes^0,w,c
  7550  005236  1809               	xorwf	??_readI2C^0,w,c
  7551  005238  E107               	bnz	u3381
  7552  00523A  5008               	movf	(readI2C@bytes+1)^0,w,c
  7553  00523C  180A               	xorwf	(??_readI2C+1)^0,w,c
  7554  00523E  A4D8               	btfss	status,2,c
  7555  005240  EF24  F029         	goto	u3381
  7556  005244  EF26  F029         	goto	u3380
  7557  005248                     u3381:
  7558  005248  EF30  F029         	goto	l3400
  7559  00524C                     u3380:
  7560  00524C                     
  7561                           ; BSR set to: 0
  7562                           ;Main_IMU.c: 205: *Data = receiveI2C(1);
  7563  00524C  0E01               	movlw	1
  7564  00524E  EC41  F027         	call	_receiveI2C
  7565  005252  C005  FFD9         	movff	readI2C@Data,fsr2l
  7566  005256  C006  FFDA         	movff	readI2C@Data+1,fsr2h
  7567  00525A  6EDF               	movwf	indf2,c
  7568                           
  7569                           ;Main_IMU.c: 206: }
  7570  00525C  EF38  F029         	goto	l3402
  7571  005260                     l3400:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;Main_IMU.c: 207: else{;Main_IMU.c: 208: *Data = receiveI2C(0);
  7575  005260  0E00               	movlw	0
  7576  005262  EC41  F027         	call	_receiveI2C
  7577  005266  C005  FFD9         	movff	readI2C@Data,fsr2l
  7578  00526A  C006  FFDA         	movff	readI2C@Data+1,fsr2h
  7579  00526E  6EDF               	movwf	indf2,c
  7580  005270                     l3402:
  7581                           
  7582                           ;Main_IMU.c: 209: };Main_IMU.c: 211: Data++;
  7583  005270  4A05               	infsnz	readI2C@Data^0,f,c
  7584  005272  2A06               	incf	(readI2C@Data+1)^0,f,c
  7585  005274  0100               	movlb	0	; () banked
  7586  005276  4B8A               	infsnz	_i& (0+255),f,b
  7587  005278  2B8B               	incf	(_i+1)& (0+255),f,b
  7588  00527A                     l3406:
  7589                           
  7590                           ; BSR set to: 0
  7591  00527A  5007               	movf	readI2C@bytes^0,w,c
  7592  00527C  5D8A               	subwf	_i& (0+255),w,b
  7593  00527E  518B               	movf	(_i+1)& (0+255),w,b
  7594  005280  0A80               	xorlw	128
  7595  005282  6E09               	movwf	??_readI2C^0,c
  7596  005284  5008               	movf	(readI2C@bytes+1)^0,w,c
  7597  005286  0A80               	xorlw	128
  7598  005288  5809               	subwfb	??_readI2C^0,w,c
  7599  00528A  A0D8               	btfss	status,0,c
  7600  00528C  EF4A  F029         	goto	u3391
  7601  005290  EF4C  F029         	goto	u3390
  7602  005294                     u3391:
  7603  005294  EF14  F029         	goto	l3396
  7604  005298                     u3390:
  7605  005298                     
  7606                           ; BSR set to: 0
  7607                           ;Main_IMU.c: 212: };Main_IMU.c: 214: stopI2C();
  7608  005298  ECEC  F026         	call	_stopI2C	;wreg free
  7609  00529C  0012               	return		;funcret
  7610  00529E                     __end_of_readI2C:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function _stopI2C *****************
  7614 ;; Defined at:
  7615 ;;		line 190 in file "Main_IMU.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7632 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7633 ;;Total ram usage:        0 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    1
  7636 ;; This function calls:
  7637 ;;		_readyI2C
  7638 ;; This function is called by:
  7639 ;;		_readI2C
  7640 ;;		_writeI2C1
  7641 ;;		_writeI2C
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text27
  7646  004DD8                     __ptext27:
  7647                           	opt callstack 0
  7648  004DD8                     _stopI2C:
  7649                           	opt callstack 27
  7650  004DD8                     
  7651                           ;Main_IMU.c: 192: readyI2C();
  7652  004DD8  EC06  F027         	call	_readyI2C	;wreg free
  7653  004DDC                     
  7654                           ;Main_IMU.c: 193: PEN = 1;
  7655  004DDC  84C5               	bsf	4037,2,c	;volatile
  7656  004DDE  0012               	return		;funcret
  7657  004DE0                     __end_of_stopI2C:
  7658                           	opt callstack 0
  7659                           
  7660 ;; *************** function _startI2C *****************
  7661 ;; Defined at:
  7662 ;;		line 171 in file "Main_IMU.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7676 ;;      Params:         0       0       0       0       0       0       0       0       0
  7677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7680 ;;Total ram usage:        0 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    1
  7683 ;; This function calls:
  7684 ;;		_readyI2C
  7685 ;; This function is called by:
  7686 ;;		_readI2C
  7687 ;;		_writeI2C1
  7688 ;;		_writeI2C
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text28
  7693  004DD0                     __ptext28:
  7694                           	opt callstack 0
  7695  004DD0                     _startI2C:
  7696                           	opt callstack 27
  7697  004DD0                     
  7698                           ;Main_IMU.c: 172: readyI2C();
  7699  004DD0  EC06  F027         	call	_readyI2C	;wreg free
  7700  004DD4                     
  7701                           ;Main_IMU.c: 173: SEN = 1;
  7702  004DD4  80C5               	bsf	4037,0,c	;volatile
  7703  004DD6  0012               	return		;funcret
  7704  004DD8                     __end_of_startI2C:
  7705                           	opt callstack 0
  7706                           
  7707 ;; *************** function _sendI2C *****************
  7708 ;; Defined at:
  7709 ;;		line 185 in file "Main_IMU.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  data            1    wreg     unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  data            1    1[COMRAM] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0
  7724 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7726 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7727 ;;Total ram usage:        1 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    1
  7730 ;; This function calls:
  7731 ;;		_readyI2C
  7732 ;; This function is called by:
  7733 ;;		_readI2C
  7734 ;;		_writeI2C1
  7735 ;;		_writeI2C
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text29
  7740  004DE0                     __ptext29:
  7741                           	opt callstack 0
  7742  004DE0                     _sendI2C:
  7743                           	opt callstack 27
  7744                           
  7745                           ;incstack = 0
  7746                           ;sendI2C@data stored from wreg
  7747  004DE0  6E02               	movwf	sendI2C@data^0,c
  7748  004DE2                     
  7749                           ;Main_IMU.c: 186: readyI2C();
  7750  004DE2  EC06  F027         	call	_readyI2C	;wreg free
  7751  004DE6                     
  7752                           ;Main_IMU.c: 187: SSPBUF = data;
  7753  004DE6  C002  FFC9         	movff	sendI2C@data,4041	;volatile
  7754  004DEA  0012               	return		;funcret
  7755  004DEC                     __end_of_sendI2C:
  7756                           	opt callstack 0
  7757                           
  7758 ;; *************** function _repeatedStart *****************
  7759 ;; Defined at:
  7760 ;;		line 218 in file "Main_IMU.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    1
  7781 ;; This function calls:
  7782 ;;		_readyI2C
  7783 ;; This function is called by:
  7784 ;;		_readI2C
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text30
  7789  004DC8                     __ptext30:
  7790                           	opt callstack 0
  7791  004DC8                     _repeatedStart:
  7792                           	opt callstack 27
  7793  004DC8                     
  7794                           ;Main_IMU.c: 219: readyI2C();
  7795  004DC8  EC06  F027         	call	_readyI2C	;wreg free
  7796  004DCC                     
  7797                           ;Main_IMU.c: 220: RSEN = 1;
  7798  004DCC  82C5               	bsf	4037,1,c	;volatile
  7799  004DCE  0012               	return		;funcret
  7800  004DD0                     __end_of_repeatedStart:
  7801                           	opt callstack 0
  7802                           
  7803 ;; *************** function _receiveI2C *****************
  7804 ;; Defined at:
  7805 ;;		line 223 in file "Main_IMU.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  flag            1    wreg     unsigned char 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  flag            1    1[COMRAM] unsigned char 
  7810 ;;  buffer          1    2[COMRAM] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      unsigned char 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0
  7821 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7823 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7824 ;;Total ram usage:        2 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    1
  7827 ;; This function calls:
  7828 ;;		_readyI2C
  7829 ;; This function is called by:
  7830 ;;		_readI2C
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text31
  7835  004E82                     __ptext31:
  7836                           	opt callstack 0
  7837  004E82                     _receiveI2C:
  7838                           	opt callstack 27
  7839                           
  7840                           ;incstack = 0
  7841                           ;receiveI2C@flag stored from wreg
  7842  004E82  6E02               	movwf	receiveI2C@flag^0,c
  7843  004E84                     
  7844                           ;Main_IMU.c: 224: unsigned char buffer;;Main_IMU.c: 225: readyI2C();
  7845  004E84  EC06  F027         	call	_readyI2C	;wreg free
  7846  004E88                     
  7847                           ;Main_IMU.c: 226: RCEN = 1;
  7848  004E88  86C5               	bsf	4037,3,c	;volatile
  7849                           
  7850                           ;Main_IMU.c: 227: readyI2C();
  7851  004E8A  EC06  F027         	call	_readyI2C	;wreg free
  7852  004E8E                     
  7853                           ;Main_IMU.c: 228: buffer = SSPBUF;
  7854  004E8E  CFC9 F003          	movff	4041,receiveI2C@buffer	;volatile
  7855                           
  7856                           ;Main_IMU.c: 229: readyI2C();
  7857  004E92  EC06  F027         	call	_readyI2C	;wreg free
  7858  004E96                     
  7859                           ;Main_IMU.c: 230: ACKDT = flag==1? 1 : 0;
  7860  004E96  0402               	decf	receiveI2C@flag^0,w,c
  7861  004E98  B4D8               	btfsc	status,2,c
  7862  004E9A  EF51  F027         	goto	u2791
  7863  004E9E  EF54  F027         	goto	u2790
  7864  004EA2                     u2791:
  7865  004EA2  8AC5               	bsf	4037,5,c	;volatile
  7866  004EA4  EF55  F027         	goto	u2805
  7867  004EA8                     u2790:
  7868  004EA8  9AC5               	bcf	4037,5,c	;volatile
  7869  004EAA                     u2805:
  7870  004EAA                     
  7871                           ;Main_IMU.c: 231: ACKEN = 1;
  7872  004EAA  88C5               	bsf	4037,4,c	;volatile
  7873  004EAC                     
  7874                           ;Main_IMU.c: 232: readyI2C();
  7875  004EAC  EC06  F027         	call	_readyI2C	;wreg free
  7876  004EB0                     
  7877                           ;Main_IMU.c: 233: return buffer;
  7878  004EB0  5003               	movf	receiveI2C@buffer^0,w,c
  7879  004EB2  0012               	return		;funcret
  7880  004EB4                     __end_of_receiveI2C:
  7881                           	opt callstack 0
  7882                           
  7883 ;; *************** function _readyI2C *****************
  7884 ;; Defined at:
  7885 ;;		line 176 in file "Main_IMU.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7899 ;;      Params:         0       0       0       0       0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7901 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7902 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7903 ;;Total ram usage:        1 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_startI2C
  7909 ;;		_sendI2C
  7910 ;;		_stopI2C
  7911 ;;		_repeatedStart
  7912 ;;		_receiveI2C
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text32
  7917  004E0C                     __ptext32:
  7918                           	opt callstack 0
  7919  004E0C                     _readyI2C:
  7920                           	opt callstack 27
  7921  004E0C                     l2526:
  7922  004E0C  CFC5 F001          	movff	4037,??_readyI2C	;volatile
  7923  004E10  0E1F               	movlw	31
  7924  004E12  1601               	andwf	??_readyI2C^0,f,c
  7925  004E14  A4D8               	btfss	status,2,c
  7926  004E16  EF0F  F027         	goto	u2001
  7927  004E1A  EF11  F027         	goto	u2000
  7928  004E1E                     u2001:
  7929  004E1E  EF06  F027         	goto	l2526
  7930  004E22                     u2000:
  7931  004E22  B4C7               	btfsc	199,2,c	;volatile
  7932  004E24  EF16  F027         	goto	u2011
  7933  004E28  EF18  F027         	goto	u2010
  7934  004E2C                     u2011:
  7935  004E2C  EF06  F027         	goto	l2526
  7936  004E30                     u2010:
  7937  004E30  0012               	return		;funcret
  7938  004E32                     __end_of_readyI2C:
  7939                           	opt callstack 0
  7940                           
  7941 ;; *************** function ___fldiv *****************
  7942 ;; Defined at:
  7943 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  b               4   39[COMRAM] void 
  7946 ;;  a               4   43[COMRAM] void 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  grs             4   58[COMRAM] unsigned long 
  7949 ;;  rem             4   51[COMRAM] unsigned long 
  7950 ;;  new_exp         2   56[COMRAM] int 
  7951 ;;  aexp            1   63[COMRAM] unsigned char 
  7952 ;;  bexp            1   62[COMRAM] unsigned char 
  7953 ;;  sign            1   55[COMRAM] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  4   39[COMRAM] unsigned char 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7963 ;;      Params:         8       0       0       0       0       0       0       0       0
  7964 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7965 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7966 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7967 ;;Total ram usage:       25 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_main
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text33
  7977  005F9A                     __ptext33:
  7978                           	opt callstack 0
  7979  005F9A                     ___fldiv:
  7980                           	opt callstack 30
  7981  005F9A  502B               	movf	(___fldiv@b+3)^0,w,c
  7982  005F9C  0B80               	andlw	128
  7983  005F9E  6E38               	movwf	___fldiv@sign^0,c
  7984  005FA0  502B               	movf	(___fldiv@b+3)^0,w,c
  7985  005FA2  242B               	addwf	(___fldiv@b+3)^0,w,c
  7986  005FA4  6E3F               	movwf	___fldiv@bexp^0,c
  7987  005FA6  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7988  005FA8  EFD8  F02F         	goto	u3751
  7989  005FAC  EFDA  F02F         	goto	u3750
  7990  005FB0                     u3751:
  7991  005FB0  EFDB  F02F         	goto	l3684
  7992  005FB4                     u3750:
  7993  005FB4  803F               	bsf	___fldiv@bexp^0,0,c
  7994  005FB6                     l3684:
  7995  005FB6  503F               	movf	___fldiv@bexp^0,w,c
  7996  005FB8  B4D8               	btfsc	status,2,c
  7997  005FBA  EFE1  F02F         	goto	u3761
  7998  005FBE  EFE3  F02F         	goto	u3760
  7999  005FC2                     u3761:
  8000  005FC2  EFF8  F02F         	goto	l3694
  8001  005FC6                     u3760:
  8002  005FC6  283F               	incf	___fldiv@bexp^0,w,c
  8003  005FC8  A4D8               	btfss	status,2,c
  8004  005FCA  EFE9  F02F         	goto	u3771
  8005  005FCE  EFEB  F02F         	goto	u3770
  8006  005FD2                     u3771:
  8007  005FD2  EFF3  F02F         	goto	l3690
  8008  005FD6                     u3770:
  8009  005FD6  0E00               	movlw	0
  8010  005FD8  6E28               	movwf	___fldiv@b^0,c
  8011  005FDA  0E00               	movlw	0
  8012  005FDC  6E29               	movwf	(___fldiv@b+1)^0,c
  8013  005FDE  0E00               	movlw	0
  8014  005FE0  6E2A               	movwf	(___fldiv@b+2)^0,c
  8015  005FE2  0E00               	movlw	0
  8016  005FE4  6E2B               	movwf	(___fldiv@b+3)^0,c
  8017  005FE6                     l3690:
  8018  005FE6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8019  005FE8  0E00               	movlw	0
  8020  005FEA  6E2B               	movwf	(___fldiv@b+3)^0,c
  8021  005FEC  EF00  F030         	goto	l3696
  8022  005FF0                     l3694:
  8023  005FF0  0E00               	movlw	0
  8024  005FF2  6E28               	movwf	___fldiv@b^0,c
  8025  005FF4  0E00               	movlw	0
  8026  005FF6  6E29               	movwf	(___fldiv@b+1)^0,c
  8027  005FF8  0E00               	movlw	0
  8028  005FFA  6E2A               	movwf	(___fldiv@b+2)^0,c
  8029  005FFC  0E00               	movlw	0
  8030  005FFE  6E2B               	movwf	(___fldiv@b+3)^0,c
  8031  006000                     l3696:
  8032  006000  502F               	movf	(___fldiv@a+3)^0,w,c
  8033  006002  0B80               	andlw	128
  8034  006004  1A38               	xorwf	___fldiv@sign^0,f,c
  8035  006006  502F               	movf	(___fldiv@a+3)^0,w,c
  8036  006008  242F               	addwf	(___fldiv@a+3)^0,w,c
  8037  00600A  6E40               	movwf	___fldiv@aexp^0,c
  8038  00600C  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  8039  00600E  EF0B  F030         	goto	u3781
  8040  006012  EF0D  F030         	goto	u3780
  8041  006016                     u3781:
  8042  006016  EF0E  F030         	goto	l3704
  8043  00601A                     u3780:
  8044  00601A  8040               	bsf	___fldiv@aexp^0,0,c
  8045  00601C                     l3704:
  8046  00601C  5040               	movf	___fldiv@aexp^0,w,c
  8047  00601E  B4D8               	btfsc	status,2,c
  8048  006020  EF14  F030         	goto	u3791
  8049  006024  EF16  F030         	goto	u3790
  8050  006028                     u3791:
  8051  006028  EF2B  F030         	goto	l3714
  8052  00602C                     u3790:
  8053  00602C  2840               	incf	___fldiv@aexp^0,w,c
  8054  00602E  A4D8               	btfss	status,2,c
  8055  006030  EF1C  F030         	goto	u3801
  8056  006034  EF1E  F030         	goto	u3800
  8057  006038                     u3801:
  8058  006038  EF26  F030         	goto	l3710
  8059  00603C                     u3800:
  8060  00603C  0E00               	movlw	0
  8061  00603E  6E2C               	movwf	___fldiv@a^0,c
  8062  006040  0E00               	movlw	0
  8063  006042  6E2D               	movwf	(___fldiv@a+1)^0,c
  8064  006044  0E00               	movlw	0
  8065  006046  6E2E               	movwf	(___fldiv@a+2)^0,c
  8066  006048  0E00               	movlw	0
  8067  00604A  6E2F               	movwf	(___fldiv@a+3)^0,c
  8068  00604C                     l3710:
  8069  00604C  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  8070  00604E  0E00               	movlw	0
  8071  006050  6E2F               	movwf	(___fldiv@a+3)^0,c
  8072  006052  EF33  F030         	goto	l3716
  8073  006056                     l3714:
  8074  006056  0E00               	movlw	0
  8075  006058  6E2C               	movwf	___fldiv@a^0,c
  8076  00605A  0E00               	movlw	0
  8077  00605C  6E2D               	movwf	(___fldiv@a+1)^0,c
  8078  00605E  0E00               	movlw	0
  8079  006060  6E2E               	movwf	(___fldiv@a+2)^0,c
  8080  006062  0E00               	movlw	0
  8081  006064  6E2F               	movwf	(___fldiv@a+3)^0,c
  8082  006066                     l3716:
  8083  006066  502C               	movf	___fldiv@a^0,w,c
  8084  006068  102D               	iorwf	(___fldiv@a+1)^0,w,c
  8085  00606A  102E               	iorwf	(___fldiv@a+2)^0,w,c
  8086  00606C  102F               	iorwf	(___fldiv@a+3)^0,w,c
  8087  00606E  A4D8               	btfss	status,2,c
  8088  006070  EF3C  F030         	goto	u3811
  8089  006074  EF3E  F030         	goto	u3810
  8090  006078                     u3811:
  8091  006078  EF56  F030         	goto	l3728
  8092  00607C                     u3810:
  8093  00607C  0E00               	movlw	0
  8094  00607E  6E28               	movwf	___fldiv@b^0,c
  8095  006080  0E00               	movlw	0
  8096  006082  6E29               	movwf	(___fldiv@b+1)^0,c
  8097  006084  0E00               	movlw	0
  8098  006086  6E2A               	movwf	(___fldiv@b+2)^0,c
  8099  006088  0E00               	movlw	0
  8100  00608A  6E2B               	movwf	(___fldiv@b+3)^0,c
  8101  00608C  0E80               	movlw	128
  8102  00608E  122A               	iorwf	(___fldiv@b+2)^0,f,c
  8103  006090  0E7F               	movlw	127
  8104  006092  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8105  006094                     l3722:
  8106  006094  5038               	movf	___fldiv@sign^0,w,c
  8107  006096  122B               	iorwf	(___fldiv@b+3)^0,f,c
  8108  006098  C028  F028         	movff	___fldiv@b,?___fldiv
  8109  00609C  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  8110  0060A0  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  8111  0060A4  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  8112  0060A8  EF99  F031         	goto	l944
  8113  0060AC                     l3728:
  8114  0060AC  503F               	movf	___fldiv@bexp^0,w,c
  8115  0060AE  A4D8               	btfss	status,2,c
  8116  0060B0  EF5C  F030         	goto	u3821
  8117  0060B4  EF5E  F030         	goto	u3820
  8118  0060B8                     u3821:
  8119  0060B8  EF68  F030         	goto	l3736
  8120  0060BC                     u3820:
  8121  0060BC  0E00               	movlw	0
  8122  0060BE  6E28               	movwf	?___fldiv^0,c
  8123  0060C0  0E00               	movlw	0
  8124  0060C2  6E29               	movwf	(?___fldiv+1)^0,c
  8125  0060C4  0E00               	movlw	0
  8126  0060C6  6E2A               	movwf	(?___fldiv+2)^0,c
  8127  0060C8  0E00               	movlw	0
  8128  0060CA  6E2B               	movwf	(?___fldiv+3)^0,c
  8129  0060CC  EF99  F031         	goto	l944
  8130  0060D0                     l3736:
  8131  0060D0  5040               	movf	___fldiv@aexp^0,w,c
  8132  0060D2  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  8133  0060D6  6A31               	clrf	(??___fldiv+1)^0,c
  8134  0060D8  5E30               	subwf	??___fldiv^0,f,c
  8135  0060DA  0E00               	movlw	0
  8136  0060DC  5A31               	subwfb	(??___fldiv+1)^0,f,c
  8137  0060DE  0E7F               	movlw	127
  8138  0060E0  2430               	addwf	??___fldiv^0,w,c
  8139  0060E2  6E39               	movwf	___fldiv@new_exp^0,c
  8140  0060E4  0E00               	movlw	0
  8141  0060E6  2031               	addwfc	(??___fldiv+1)^0,w,c
  8142  0060E8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8143  0060EA  C028  F034         	movff	___fldiv@b,___fldiv@rem
  8144  0060EE  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  8145  0060F2  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  8146  0060F6  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  8147  0060FA  0E00               	movlw	0
  8148  0060FC  6E28               	movwf	___fldiv@b^0,c
  8149  0060FE  0E00               	movlw	0
  8150  006100  6E29               	movwf	(___fldiv@b+1)^0,c
  8151  006102  0E00               	movlw	0
  8152  006104  6E2A               	movwf	(___fldiv@b+2)^0,c
  8153  006106  0E00               	movlw	0
  8154  006108  6E2B               	movwf	(___fldiv@b+3)^0,c
  8155  00610A  0E00               	movlw	0
  8156  00610C  6E3B               	movwf	___fldiv@grs^0,c
  8157  00610E  0E00               	movlw	0
  8158  006110  6E3C               	movwf	(___fldiv@grs+1)^0,c
  8159  006112  0E00               	movlw	0
  8160  006114  6E3D               	movwf	(___fldiv@grs+2)^0,c
  8161  006116  0E00               	movlw	0
  8162  006118  6E3E               	movwf	(___fldiv@grs+3)^0,c
  8163  00611A  0E00               	movlw	0
  8164  00611C  6E40               	movwf	___fldiv@aexp^0,c
  8165  00611E  EFC9  F030         	goto	l946
  8166  006122                     l3746:
  8167  006122  5040               	movf	___fldiv@aexp^0,w,c
  8168  006124  B4D8               	btfsc	status,2,c
  8169  006126  EF97  F030         	goto	u3831
  8170  00612A  EF99  F030         	goto	u3830
  8171  00612E                     u3831:
  8172  00612E  EFB0  F030         	goto	l3754
  8173  006132                     u3830:
  8174  006132  90D8               	bcf	status,0,c
  8175  006134  3634               	rlcf	___fldiv@rem^0,f,c
  8176  006136  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  8177  006138  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  8178  00613A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  8179  00613C  90D8               	bcf	status,0,c
  8180  00613E  3628               	rlcf	___fldiv@b^0,f,c
  8181  006140  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8182  006142  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8183  006144  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8184  006146  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8185  006148  EFA8  F030         	goto	u3841
  8186  00614C  EFAA  F030         	goto	u3840
  8187  006150                     u3841:
  8188  006150  EFAB  F030         	goto	l949
  8189  006154                     u3840:
  8190  006154  8028               	bsf	___fldiv@b^0,0,c
  8191  006156                     l949:
  8192  006156  90D8               	bcf	status,0,c
  8193  006158  363B               	rlcf	___fldiv@grs^0,f,c
  8194  00615A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8195  00615C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8196  00615E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8197  006160                     l3754:
  8198  006160  502C               	movf	___fldiv@a^0,w,c
  8199  006162  5C34               	subwf	___fldiv@rem^0,w,c
  8200  006164  502D               	movf	(___fldiv@a+1)^0,w,c
  8201  006166  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  8202  006168  502E               	movf	(___fldiv@a+2)^0,w,c
  8203  00616A  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  8204  00616C  502F               	movf	(___fldiv@a+3)^0,w,c
  8205  00616E  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  8206  006170  A0D8               	btfss	status,0,c
  8207  006172  EFBD  F030         	goto	u3851
  8208  006176  EFBF  F030         	goto	u3850
  8209  00617A                     u3851:
  8210  00617A  EFC8  F030         	goto	l3760
  8211  00617E                     u3850:
  8212  00617E  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  8213  006180  502C               	movf	___fldiv@a^0,w,c
  8214  006182  5E34               	subwf	___fldiv@rem^0,f,c
  8215  006184  502D               	movf	(___fldiv@a+1)^0,w,c
  8216  006186  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  8217  006188  502E               	movf	(___fldiv@a+2)^0,w,c
  8218  00618A  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  8219  00618C  502F               	movf	(___fldiv@a+3)^0,w,c
  8220  00618E  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  8221  006190                     l3760:
  8222  006190  2A40               	incf	___fldiv@aexp^0,f,c
  8223  006192                     l946:
  8224  006192  0E19               	movlw	25
  8225  006194  6440               	cpfsgt	___fldiv@aexp^0,c
  8226  006196  EFCF  F030         	goto	u3861
  8227  00619A  EFD1  F030         	goto	u3860
  8228  00619E                     u3861:
  8229  00619E  EF91  F030         	goto	l3746
  8230  0061A2                     u3860:
  8231  0061A2  5034               	movf	___fldiv@rem^0,w,c
  8232  0061A4  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  8233  0061A6  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  8234  0061A8  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  8235  0061AA  B4D8               	btfsc	status,2,c
  8236  0061AC  EFDA  F030         	goto	u3871
  8237  0061B0  EFDC  F030         	goto	u3870
  8238  0061B4                     u3871:
  8239  0061B4  EFF4  F030         	goto	l3772
  8240  0061B8                     u3870:
  8241  0061B8  803B               	bsf	___fldiv@grs^0,0,c
  8242  0061BA  EFF4  F030         	goto	l3772
  8243  0061BE                     l3766:
  8244  0061BE  90D8               	bcf	status,0,c
  8245  0061C0  3628               	rlcf	___fldiv@b^0,f,c
  8246  0061C2  3629               	rlcf	(___fldiv@b+1)^0,f,c
  8247  0061C4  362A               	rlcf	(___fldiv@b+2)^0,f,c
  8248  0061C6  362B               	rlcf	(___fldiv@b+3)^0,f,c
  8249  0061C8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8250  0061CA  EFE9  F030         	goto	u3881
  8251  0061CE  EFEB  F030         	goto	u3880
  8252  0061D2                     u3881:
  8253  0061D2  EFEC  F030         	goto	l955
  8254  0061D6                     u3880:
  8255  0061D6  8028               	bsf	___fldiv@b^0,0,c
  8256  0061D8                     l955:
  8257  0061D8  90D8               	bcf	status,0,c
  8258  0061DA  363B               	rlcf	___fldiv@grs^0,f,c
  8259  0061DC  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  8260  0061DE  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  8261  0061E0  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  8262  0061E2  0639               	decf	___fldiv@new_exp^0,f,c
  8263  0061E4  A0D8               	btfss	status,0,c
  8264  0061E6  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  8265  0061E8                     l3772:
  8266  0061E8  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  8267  0061EA  EFF9  F030         	goto	u3891
  8268  0061EE  EFFB  F030         	goto	u3890
  8269  0061F2                     u3891:
  8270  0061F2  EFDF  F030         	goto	l3766
  8271  0061F6                     u3890:
  8272  0061F6  0E00               	movlw	0
  8273  0061F8  6E40               	movwf	___fldiv@aexp^0,c
  8274  0061FA  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  8275  0061FC  EF02  F031         	goto	u3901
  8276  006200  EF04  F031         	goto	u3900
  8277  006204                     u3901:
  8278  006204  EF28  F031         	goto	l957
  8279  006208                     u3900:
  8280  006208  0EFF               	movlw	255
  8281  00620A  143B               	andwf	___fldiv@grs^0,w,c
  8282  00620C  6E30               	movwf	??___fldiv^0,c
  8283  00620E  0EFF               	movlw	255
  8284  006210  143C               	andwf	(___fldiv@grs+1)^0,w,c
  8285  006212  6E31               	movwf	(??___fldiv+1)^0,c
  8286  006214  0EFF               	movlw	255
  8287  006216  143D               	andwf	(___fldiv@grs+2)^0,w,c
  8288  006218  6E32               	movwf	(??___fldiv+2)^0,c
  8289  00621A  0E7F               	movlw	127
  8290  00621C  143E               	andwf	(___fldiv@grs+3)^0,w,c
  8291  00621E  6E33               	movwf	(??___fldiv+3)^0,c
  8292  006220  5030               	movf	??___fldiv^0,w,c
  8293  006222  1031               	iorwf	(??___fldiv+1)^0,w,c
  8294  006224  1032               	iorwf	(??___fldiv+2)^0,w,c
  8295  006226  1033               	iorwf	(??___fldiv+3)^0,w,c
  8296  006228  B4D8               	btfsc	status,2,c
  8297  00622A  EF19  F031         	goto	u3911
  8298  00622E  EF1B  F031         	goto	u3910
  8299  006232                     u3911:
  8300  006232  EF1F  F031         	goto	l958
  8301  006236                     u3910:
  8302  006236                     l3780:
  8303  006236  0E01               	movlw	1
  8304  006238  6E40               	movwf	___fldiv@aexp^0,c
  8305  00623A  EF28  F031         	goto	l957
  8306  00623E                     l958:
  8307  00623E  A028               	btfss	___fldiv@b^0,0,c
  8308  006240  EF24  F031         	goto	u3921
  8309  006244  EF26  F031         	goto	u3920
  8310  006248                     u3921:
  8311  006248  EF28  F031         	goto	l957
  8312  00624C                     u3920:
  8313  00624C  EF1B  F031         	goto	l3780
  8314  006250                     l957:
  8315  006250  5040               	movf	___fldiv@aexp^0,w,c
  8316  006252  B4D8               	btfsc	status,2,c
  8317  006254  EF2E  F031         	goto	u3931
  8318  006258  EF30  F031         	goto	u3930
  8319  00625C                     u3931:
  8320  00625C  EF54  F031         	goto	l3792
  8321  006260                     u3930:
  8322  006260  0E01               	movlw	1
  8323  006262  2628               	addwf	___fldiv@b^0,f,c
  8324  006264  0E00               	movlw	0
  8325  006266  2229               	addwfc	(___fldiv@b+1)^0,f,c
  8326  006268  222A               	addwfc	(___fldiv@b+2)^0,f,c
  8327  00626A  222B               	addwfc	(___fldiv@b+3)^0,f,c
  8328  00626C  A02B               	btfss	(___fldiv@b+3)^0,0,c
  8329  00626E  EF3B  F031         	goto	u3941
  8330  006272  EF3D  F031         	goto	u3940
  8331  006276                     u3941:
  8332  006276  EF54  F031         	goto	l3792
  8333  00627A                     u3940:
  8334  00627A  C028  F030         	movff	___fldiv@b,??___fldiv
  8335  00627E  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  8336  006282  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  8337  006286  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  8338  00628A  3433               	rlcf	(??___fldiv+3)^0,w,c
  8339  00628C  3233               	rrcf	(??___fldiv+3)^0,f,c
  8340  00628E  3232               	rrcf	(??___fldiv+2)^0,f,c
  8341  006290  3231               	rrcf	(??___fldiv+1)^0,f,c
  8342  006292  3230               	rrcf	??___fldiv^0,f,c
  8343  006294  C030  F028         	movff	??___fldiv,___fldiv@b
  8344  006298  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  8345  00629C  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  8346  0062A0  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  8347  0062A4  4A39               	infsnz	___fldiv@new_exp^0,f,c
  8348  0062A6  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  8349  0062A8                     l3792:
  8350  0062A8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8351  0062AA  EF5F  F031         	goto	u3951
  8352  0062AE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  8353  0062B0  E108               	bnz	u3950
  8354  0062B2  2839               	incf	___fldiv@new_exp^0,w,c
  8355  0062B4  A0D8               	btfss	status,0,c
  8356  0062B6  EF5F  F031         	goto	u3951
  8357  0062BA  EF61  F031         	goto	u3950
  8358  0062BE                     u3951:
  8359  0062BE  EF6C  F031         	goto	l3796
  8360  0062C2                     u3950:
  8361  0062C2  0E00               	movlw	0
  8362  0062C4  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8363  0062C6  6839               	setf	___fldiv@new_exp^0,c
  8364  0062C8  0E00               	movlw	0
  8365  0062CA  6E28               	movwf	___fldiv@b^0,c
  8366  0062CC  0E00               	movlw	0
  8367  0062CE  6E29               	movwf	(___fldiv@b+1)^0,c
  8368  0062D0  0E00               	movlw	0
  8369  0062D2  6E2A               	movwf	(___fldiv@b+2)^0,c
  8370  0062D4  0E00               	movlw	0
  8371  0062D6  6E2B               	movwf	(___fldiv@b+3)^0,c
  8372  0062D8                     l3796:
  8373  0062D8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8374  0062DA  EF79  F031         	goto	u3960
  8375  0062DE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  8376  0062E0  E106               	bnz	u3961
  8377  0062E2  0439               	decf	___fldiv@new_exp^0,w,c
  8378  0062E4  B0D8               	btfsc	status,0,c
  8379  0062E6  EF77  F031         	goto	u3961
  8380  0062EA  EF79  F031         	goto	u3960
  8381  0062EE                     u3961:
  8382  0062EE  EF87  F031         	goto	l3800
  8383  0062F2                     u3960:
  8384  0062F2  0E00               	movlw	0
  8385  0062F4  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  8386  0062F6  0E00               	movlw	0
  8387  0062F8  6E39               	movwf	___fldiv@new_exp^0,c
  8388  0062FA  0E00               	movlw	0
  8389  0062FC  6E28               	movwf	___fldiv@b^0,c
  8390  0062FE  0E00               	movlw	0
  8391  006300  6E29               	movwf	(___fldiv@b+1)^0,c
  8392  006302  0E00               	movlw	0
  8393  006304  6E2A               	movwf	(___fldiv@b+2)^0,c
  8394  006306  0E00               	movlw	0
  8395  006308  6E2B               	movwf	(___fldiv@b+3)^0,c
  8396  00630A  0E00               	movlw	0
  8397  00630C  6E38               	movwf	___fldiv@sign^0,c
  8398  00630E                     l3800:
  8399  00630E  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  8400  006312  A03F               	btfss	___fldiv@bexp^0,0,c
  8401  006314  EF8E  F031         	goto	u3971
  8402  006318  EF90  F031         	goto	u3970
  8403  00631C                     u3971:
  8404  00631C  EF93  F031         	goto	l3806
  8405  006320                     u3970:
  8406  006320  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  8407  006322  EF94  F031         	goto	l3808
  8408  006326                     l3806:
  8409  006326  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  8410  006328                     l3808:
  8411  006328  90D8               	bcf	status,0,c
  8412  00632A  303F               	rrcf	___fldiv@bexp^0,w,c
  8413  00632C  6E2B               	movwf	(___fldiv@b+3)^0,c
  8414  00632E  EF4A  F030         	goto	l3722
  8415  006332                     l944:
  8416  006332  0012               	return		;funcret
  8417  006334                     __end_of___fldiv:
  8418                           	opt callstack 0
  8419                           
  8420                           	psect	rparam
  8421  0000                     tosu	equ	0xFFF
  8422                           tosh	equ	0xFFE
  8423                           tosl	equ	0xFFD
  8424                           stkptr	equ	0xFFC
  8425                           pclatu	equ	0xFFB
  8426                           pclath	equ	0xFFA
  8427                           pcl	equ	0xFF9
  8428                           tblptru	equ	0xFF8
  8429                           tblptrh	equ	0xFF7
  8430                           tblptrl	equ	0xFF6
  8431                           tablat	equ	0xFF5
  8432                           prodh	equ	0xFF4
  8433                           prodl	equ	0xFF3
  8434                           indf0	equ	0xFEF
  8435                           postinc0	equ	0xFEE
  8436                           postdec0	equ	0xFED
  8437                           preinc0	equ	0xFEC
  8438                           plusw0	equ	0xFEB
  8439                           fsr0h	equ	0xFEA
  8440                           fsr0l	equ	0xFE9
  8441                           wreg	equ	0xFE8
  8442                           indf1	equ	0xFE7
  8443                           postinc1	equ	0xFE6
  8444                           postdec1	equ	0xFE5
  8445                           preinc1	equ	0xFE4
  8446                           plusw1	equ	0xFE3
  8447                           fsr1h	equ	0xFE2
  8448                           fsr1l	equ	0xFE1
  8449                           bsr	equ	0xFE0
  8450                           indf2	equ	0xFDF
  8451                           postinc2	equ	0xFDE
  8452                           postdec2	equ	0xFDD
  8453                           preinc2	equ	0xFDC
  8454                           plusw2	equ	0xFDB
  8455                           fsr2h	equ	0xFDA
  8456                           fsr2l	equ	0xFD9
  8457                           status	equ	0xFD8


Data Sizes:
    Strings     191
    Constant    144
    Data        74
    BSS         172
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     57     159
    BANK1           256      0     144
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_6(CODE[24]), STR_5(CODE[24]), STR_4(CODE[30]), STR_3(CODE[16]), 
		 -> STR_2(CODE[34]), STR_1(CODE[63]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    readI2C@Data	PTR unsigned char  size(2) Largest target is 14
		 -> data(BANK0[1]), GirAcel(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->_settings
    _settings->_sprintf
    _writeI2C1->_sendI2C
    _start->_strlen
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___fldiv
    _readI2C->_receiveI2C
    _stopI2C->_readyI2C
    _startI2C->_readyI2C
    _sendI2C->_readyI2C
    _repeatedStart->_readyI2C
    _receiveI2C->_readyI2C
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _settings->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   80913
                                             93 COMRAM     2     2      0
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _readI2C
                           _settings
                            _sprintf
                              _start
 ---------------------------------------------------------------------------------
 (1) _settings                                             1     1      0   35243
                                             92 COMRAM     1     1      0
                            _readI2C
                            _sprintf
                              _start
                          _writeI2C1
 ---------------------------------------------------------------------------------
 (2) _writeI2C1                                            5     3      2     544
                                              2 COMRAM     5     3      2
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0     166
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             69    37     32   33855
                                             88 COMRAM     4     4      0
                                              0 BANK0     57    25     32
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    7647
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6110
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4632
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1462
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2889
                                             80 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2566
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _readI2C                                              8     3      5     678
                                              3 COMRAM     8     3      5
                         _receiveI2C
                      _repeatedStart
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      22
                                              1 COMRAM     1     1      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _repeatedStart                                        0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _receiveI2C                                           2     2      0      45
                                              1 COMRAM     2     2      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _readyI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _readI2C
     _receiveI2C
       _readyI2C
     _repeatedStart
       _readyI2C
     _sendI2C
       _readyI2C
     _startI2C
       _readyI2C
     _stopI2C
       _readyI2C
   _settings
     _readI2C
       _receiveI2C
         _readyI2C
       _repeatedStart
         _readyI2C
       _sendI2C
         _readyI2C
       _startI2C
         _readyI2C
       _stopI2C
         _readyI2C
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     _start
       _strlen
     _writeI2C1
       _sendI2C
         _readyI2C
       _startI2C
         _readyI2C
       _stopI2C
         _readyI2C
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      90       7       56.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18E      20        0.0%
DATA                 0      0     18E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 29 18:01:49 2020

           ___fldiv@aexp 0040             ___fldiv@bexp 003F                        _i 008A  
                      _t 0100             ___fldiv@sign 0038             ___awdiv@sign 000C  
    ___wmul@multiplicand 0003                      l203 50EC                      l221 4E30  
                    l206 50FE                      l215 4DD6                      l224 4DEA  
                    l241 4EB2                      l322 7C26                      l227 4DDE  
                    l235 529C                      l340 4E56                      l244 4F50  
                    l238 4DCE                      l190 5848                      l271 673E  
                    l191 5848                      l264 5F98                      l337 7EAC  
                    l194 58A0                      l603 59DC                      l612 53EA  
                    l374 5340                      l623 4F88                      l367 5330  
                    l703 5B42                      l199 50A4                      l712 5B32  
                    l705 5A88                      l618 561C                      l706 5ABA  
                    l619 5662                      l571 555E                      l646 5768  
                    l584 549A                      l594 59EC                      l907 6E72  
                    l916 6F42                      l932 4FCE                      l860 5172  
                    l917 6F30                      l853 516A                      l782 51EA  
                    l870 5094                      l863 508C                      l944 6332  
                    l946 6192                      l890 6D58                      l955 61D8  
                    l891 6D46                      l892 6D0C                      l980 6B68  
                    l957 6250                      l949 6156                      l789 51FA  
                    l958 623E                      l983 69FA                      l976 6804  
                    l993 6B2A                      l985 6A72                      l986 6A60  
                    l899 7028                      _PEN 007E2A                      _SEN 007E28  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021              _sprintf$977 00BC             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022             __CFG_LVP$OFF 000000  
           ___fltol@exp1 003A             __CFG_WDT$OFF 000000                     l1020 5CF6  
                   l1031 5C8E                     l1024 5C32                     l1017 5B9A  
                   l1038 4EE4                     l3000 4DDC                     l1048 4F1A  
                   l3010 4E8E                     l3002 4DC8                     l3012 4E96  
                   l3004 4DCC                     l3014 4EAA                     l3006 4E84  
                   l3110 5A7A                     l3102 5A4E                     l3030 5E64  
                   l3022 5CFA                     l3016 4EAC                     l3008 4E88  
                   l3120 5AB8                     l3112 5A7E                     l3104 5A50  
                   l3032 5E74                     l3024 5D0A                     l3040 6336  
                   l3018 4EB0                     l3202 59C0                     l3122 5AC2  
                   l3114 5A84                     l3106 5A5E                     l3050 646C  
                   l3042 6344                     l3300 56CE                     l3220 52D8  
                   l3212 529E                     l3204 59CC                     l3132 5AEE  
                   l3124 5AC8                     l3116 5A92                     l3108 5A6A  
                   l3036 5F4C                     l3052 6480                     l3044 635A  
                   l3060 6544                     l3310 56FE                     l3302 56DC  
                   l3230 5320                     l3222 52E6                     l3214 52AE  
                   l3206 4E32                     l3142 5B16                     l3134 5AF8  
                   l3126 5AD6                     l3118 5AAC                     l3070 667E  
                   l3062 6558                     l3400 5260                     l3240 5342  
                   l2600 6C9A                     l3320 5728                     l3312 5708  
                   l3232 532A                     l3224 52F0                     l3216 52C4  
                   l3208 4E4E                     l3160 58E8                     l3152 58CC  
                   l3144 5B22                     l3136 5B02                     l3080 4EBA  
                   l3056 6518                     l3402 5270                     l3250 53E2  
                   l3242 5370                     l2610 6CAE                     l2602 6C9E  
                   l2530 6B6A                     l3234 4F8A                     l3322 5738  
                   l3226 530E                     l3218 52CC                     l3330 5174  
                   l3170 5924                     l3162 58F8                     l3146 58A2  
                   l3090 59EE                     l3082 4ECA                     l3074 6716  
                   l3410 759E                     l2524 4E0C                     l3404 5274  
                   l3252 53E8                     l3244 5380                     l3260 559E  
                   l2700 6F52                     l2620 6D26                     l2612 6CD8  
                   l2604 6CA2                     l2540 6BA6                     l2532 6B76  
                   l3236 4F9A                     l3324 5748                     l3308 56F4  
                   l3228 531E                     l3340 51CA                     l3332 518A  
                   l3180 5962                     l3172 5928                     l3164 590A  
                   l3148 58B8                     l3092 5A12                     l3084 4EDA  
                   l3068 666A                     l3500 7982                     l3420 75DA  
                   l3412 75AC                     l2526 4E0C                     l3406 527A  
                   l3246 53AE                     l3270 560A                     l3262 55CC  
                   l2710 6FB8                     l2702 6F5E                     l2630 6D66  
                   l2622 6D2A                     l2614 6CF4                     l2606 6CA6  
                   l2550 6BD6                     l2542 6BB6                     l2534 6B84  
                   l3326 5758                     l3318 571C                     l3342 51DA  
                   l3334 5192                     l3350 5B64                     l3182 596C  
                   l3174 5932                     l3166 591A                     l3158 58E6  
                   l3086 4EDE                     l3078 4EB6                     l3502 79B4  
                   l3430 764E                     l3422 75F6                     l3414 75BE  
                   l2528 4E22                     l3408 5298                     l3248 53BE  
                   l3272 565A                     l3264 55DC                     l3256 5560  
                   l3280 4F68                     l2720 7000                     l2712 6FC8  
                   l2704 6F6C                     l2640 6DA8                     l2632 6D76  
                   l2624 6D38                     l2616 6D04                     l2608 6CAA  
                   l2560 6C00                     l2552 6BE8                     l2544 6BB8  
                   l2536 6B86                     l3344 51E4                     l3336 519E  
                   l3360 5BDC                     l3352 5BAA                     l3192 5998  
                   l3184 5972                     l3176 5950                     l3168 591E  
                   l3096 5A26                     l2800 6910                     l3600 7E28  
                   l3512 7A16                     l3504 79C2                     l3432 7652  
                   l3424 75FC                     l3416 75CA                     l3274 5660  
                   l3266 55EA                     l3258 558E                     l3282 4F78  
                   l2722 7002                     l2714 6FE8                     l2706 6FA6  
                   l2650 6DD6                     l2642 6DB6                     l2626 6D3A  
                   l2618 6D1A                     l2562 6C10                     l2570 6C3A  
                   l2554 6BEA                     l2538 6B96                     l2546 6BC0  
                   l3338 51AC                     l3370 5C64                     l3362 5BE8  
                   l3354 5BC0                     l3346 5B46                     l3194 59A2  
                   l3186 5980                     l3178 5960                     l2810 69B4  
                   l2802 692C                     l3602 7E2C                     l3530 7AE4  
                   l3506 79CC                     l3514 7A2C                     l3450 76DA  
                   l3442 7688                     l3426 7608                     l3434 7674  
                   l3418 75D2                     l3700 600C                     l3268 55FC  
                   l2724 7008                     l2716 6FEC                     l2708 6FA8  
                   l2660 6E42                     l2652 6DE0                     l2644 6DC2  
                   l2636 6D8A                     l2628 6D44                     l2580 6C72  
                   l2572 6C4A                     l2564 6C20                     l2556 6BF0  
                   l2548 6BD0                     l3292 568E                     l3380 5CA2  
                   l3372 5C70                     l3364 5C1A                     l3348 5B56  
                   l3196 59AC                     l2820 6A0A                     l2812 69C2  
                   l2804 6938                     l2740 676C                     l2732 6740  
                   l2900 554E                     l3604 7E50                     l3540 7B74  
                   l3532 7AF6                     l3524 7AA8                     l3516 7A9A  
                   l3508 79E2                     l3460 7732                     l3452 76F2  
                   l3444 76B2                     l3436 767C                     l3428 7624  
                   l3612 7E7E                     l3620 50B2                     l3710 604C  
                   l3702 601A                     l3278 4F52                     l2726 7016  
                   l2718 6FFA                     l2662 6E52                     l2646 6DC6  
                   l2638 6D9A                     l2654 6DE6                     l2590 6C86  
                   l2582 6C76                     l2574 6C5C                     l2566 6C30  
                   l2558 6BFE                     l3294 56B8                     l3286 5664  
                   l3382 5CC6                     l3374 5C7E                     l3366 5C1C  
                   l3358 5BD4                     l2822 6A18                     l2814 69E0  
                   l2806 6954                     l2750 67A8                     l2742 677C  
                   l2734 674C                     l2902 5556                     l2910 53FE  
                   l3606 7E50                     l3550 7BDE                     l3542 7BA8  
                   l3534 7B14                     l3518 7AA4                     l3470 779E  
                   l3462 773A                     l3454 76FA                     l3446 76C4  
                   l3614 7EA0                     l3438 7682                     l3622 50C4  
                   l3630 4F38                     l3800 630E                     l3720 608C  
                   l3712 604E                     l3704 601C                     l3392 51FE  
                   l2728 7018                     l2680 6ED4                     l2672 6EAC  
                   l2656 6E0C                     l2664 6E62                     l2648 6DD4  
                   l2592 6C8A                     l2584 6C7A                     l2576 6C6A  
                   l2568 6C32                     l3296 56BA                     l3288 567A  
                   l3384 5CD6                     l3376 5C9C                     l3368 5C28  
                   l2832 6A82                     l2840 6ACA                     l2824 6A1C  
                   l2816 69EA                     l2808 697E                     l2760 67DE  
                   l2752 67AE                     l2744 678C                     l2736 675A  
                   l2920 5432                     l2912 5406                     l3608 7E6E  
                   l3560 7C2A                     l3552 7BE2                     l3536 7B20  
                   l3528 7AE2                     l3480 781C                     l3472 77BA  
                   l3464 776C                     l3456 7708                     l3448 76D2  
                   l3624 50C8                     l3640 5788                     l3632 576A  
                   l3802 6312                     l3730 60BC                     l3722 6094  
                   l3706 602C                     l3714 6056                     l3394 521A  
                   l2682 6EDC                     l2674 6EB6                     l2666 6E88  
                   l2658 6E40                     l2690 6F00                     l2594 6C8E  
                   l2586 6C7E                     l2578 6C6E                     l3298 56CA  
                   l3386 5CE4                     l3378 5C9E                     l2850 6B3E  
                   l2842 6AE4                     l2834 6A8E                     l2826 6A2A  
                   l2818 69F8                     l2762 67EE                     l2754 67BC  
                   l2746 6792                     l2738 675C                     l2930 546E  
                   l2922 543A                     l2914 540A                     l2906 53EC  
                   l3570 7C68                     l3562 7C32                     l3554 7BE8  
                   l3538 7B28                     l3546 7BBC                     l3490 78B0  
                   l3482 784E                     l3474 77CA                     l3466 777C  
                   l3458 772C                     l3626 50FA                     l3618 5096  
                   l3650 57CA                     l3642 5796                     l3634 5772  
                   l3804 6320                     l3740 60FA                     l3732 60BC  
                   l3724 6098                     l3716 6066                     l3708 603C  
                   l3396 5228                     l2692 6F04                     l2684 6EE0  
                   l2676 6EC4                     l2668 6E98                     l2596 6C92  
                   l2588 6C82                     l3388 5CE6                     l2852 6B4C  
                   l2844 6AF8                     l2836 6A9C                     l2828 6A58  
                   l2780 6870                     l2772 6838                     l2764 67F4  
                   l2756 67BE                     l2748 67A2                     l2932 5474  
                   l2924 5442                     l2916 5418                     l2908 53F0  
                   l3580 7D48                     l3572 7CB4                     l3564 7C42  
                   l3556 7C02                     l3548 7BD2                     l3492 78EA  
                   l3484 785A                     l3476 77D0                     l3468 7782  
                   l3628 4F1E                     l3660 581C                     l3652 57D8  
                   l3644 57AC                     l3636 5774                     l3820 7048  
                   l3806 6326                     l3750 6146                     l3742 610A  
                   l3718 607C                     l3398 524C                     l2694 6F12  
                   l2686 6EF0                     l2678 6EC6                     l2598 6C96  
                   l2854 6B4E                     l2846 6B12                     l2838 6AC6  
                   l2790 68BA                     l2782 6888                     l2774 6844  
                   l2766 6814                     l2758 67CE                     l2950 512A  
                   l2942 5100                     l2870 54BA                     l2862 549C  
                   l2926 5450                     l2934 547A                     l2918 5420  
                   l3590 7DC2                     l3574 7D00                     l3582 7D94  
                   l3566 7C4E                     l3558 7C1E                     l3494 7908  
                   l3486 788C                     l3478 77E8                     l3670 5864  
                   l3662 5830                     l3654 57E8                     l3646 57B0  
                   l3638 5786                     l3830 70B8                     l3822 7060  
                   l3808 6328                     l3760 6190                     l3752 6154  
                   l3744 611A                     l3736 60D0                     l3728 60AC  
                   l3680 5FA6                     l2696 6F28                     l2688 6EF2  
                   l2848 6B2E                     l2856 6B54                     l2792 68CA  
                   l2784 6894                     l2776 684E                     l2768 6824  
                   l2960 515E                     l2952 5138                     l2944 5108  
                   l2880 54EE                     l2872 54C8                     l2864 54A0  
                   l2936 548A                     l2928 5466                     l3584 7DAC  
                   l3576 7D34                     l3568 7C52                     l3496 793A  
                   l3488 7892                     l3592 7DD8                     l3672 5874  
                   l3664 5844                     l3656 57FE                     l3648 57C6  
                   l3840 715C                     l3832 70CE                     l3824 7076  
                   l3816 702A                     l3770 61D6                     l3762 61A2  
                   l3754 6160                     l3746 6122                     l3738 60EA  
                   l3690 5FE6                     l3682 5FB4                     l2858 6B58  
                   l2794 68D6                     l2786 68A0                     l2778 6864  
                   l2962 5164                     l2954 513E                     l2946 511A  
                   l2970 5054                     l2890 5528                     l2882 54F6  
                   l2874 54D0                     l2866 54AE                     l2938 5492  
                   l3594 7DEA                     l3586 7DB8                     l3578 7D44  
                   l3498 7964                     l3674 5882                     l3666 584C  
                   l3658 5802                     l3850 726C                     l3842 7184  
                   l3834 70E4                     l3826 708C                     l3818 702E  
                   l3780 6236                     l3764 61B8                     l3772 61E8  
                   l3756 617E                     l3748 6132                     l3692 5FE8  
                   l3684 5FB6                     l2796 68E6                     l2788 68AE  
                   l2956 5154                     l2948 5122                     l2972 5062  
                   l2964 5032                     l2892 5530                     l2884 54FE  
                   l2876 54D4                     l2868 54B6                     l3596 7E00  
                   l3588 7DBC                     l2980 4EE6                     l3676 5890  
                   l3668 5860                     l3860 749C                     l3852 72DC  
                   l3844 71AC                     l3836 710C                     l3828 70A2  
                   l3790 62A4                     l3774 61F6                     l3766 61BE  
                   l3758 6180                     l3686 5FC6                     l3694 5FF0  
                   l3678 5F9A                     l2990 4DD0                     l2798 6900  
                   l2958 515C                     l2974 5078                     l2966 5044  
                   l2894 5532                     l2886 550C                     l2878 54DC  
                   l3598 7E04                     l2982 4EF2                     l3862 750C  
                   l3854 734C                     l3846 71D4                     l3838 7134  
                   l3784 6260                     l3792 62A8                     l3776 61FA  
                   l3768 61C8                     l3696 6000                     l3688 5FD6  
                   l2992 4DD4                     l2976 5080                     l2968 504C  
                   l2896 5538                     l2888 5512                     l2984 4EF6  
                   l3864 7592                     l3856 73BC                     l3848 71FC  
                   l3794 62C2                     l3786 626C                     l3778 6208  
                   l3698 6006                     l2994 4DE2                     l2978 5086  
                   l2898 553E                     l2986 4F0E                     l3858 742C  
                   l3796 62D8                     l3788 627A                     l2996 4DE6  
                   l3798 62F2                     l2998 4DD8                     STR_1 7F3F  
                   STR_2 7F7E                     STR_3 7FEE                     STR_4 7FA0  
                   STR_5 7FBE                     STR_6 7FD6                     u2000 4E22  
                   u2001 4E1E                     u2010 4E30                     u2011 4E2C  
                   u2100 6C6A                     u2020 6B84                     u2101 6C66  
                   u2021 6B80                     u2110 6CD8                     u2030 6B96  
                   u2111 6CD4                     u2031 6B92                     u2200 6DB6  
                   u2120 6CF0                     u2040 6BA6                     u3000 58E2  
                   u2201 6DB2                     u2121 6CEA                     u2041 6BA2  
                   u3001 58DE                     u2210 6DD4                     u2130 6CF2  
                   u2050 6BE8                     u3010 5950                     u2211 6DD0  
                   u2051 6BE4                     u3011 594C                     u3100 53AE  
                   u2300 6F12                     u2220 6E0C                     u2140 6D1A  
                   u2060 6BFE                     u3020 5980                     u3101 53AA  
                   u2301 6F0E                     u2221 6E08                     u2141 6D16  
                   u2061 6BFA                     u3021 597C                     u3110 53E2  
                   u2310 6F28                     u2230 6E52                     u2150 6D38  
                   u2070 6C10                     u3030 5994                     u3111 53DE  
                   u2311 6F24                     u2231 6E4E                     u2151 6D34  
                   u2071 6C0C                     u3031 5990                     u3120 558E  
                   u2400 7016                     u2320 6F3E                     u2240 6E88  
                   u2160 6D58                     u2080 6C20                     u3200 56DC  
                   u3040 59BC                     u3121 558A                     u2401 7012  
                   u2321 6F3A                     u2241 6E84                     u2161 6D54  
                   u2081 6C1C                     u3201 56D8                     u3041 59B8  
                   u3130 55CC                     u2330 6F52                     u2250 6E98  
                   u2170 6D66                     u2090 6C5C                     u3210 56F0  
                   u3050 59DC                     u2410 675A                     u3131 55C8  
                   u2331 6F4E                     u2251 6E94                     u2171 6D62  
                   u2091 6C58                     u3211 56EC                     u3051 59D8  
                   u2411 6756                     u3140 55EA                     u2340 6F6C  
                   u2260 6EC4                     u2180 6D76                     u3220 5718  
                   u3060 52C4                     u3300 5BC0                     u2500 69F8  
                   u2420 676C                     u3141 55E6                     u2341 6F68  
                   u2261 6EC0                     u2181 6D72                     u3221 5714  
                   u3061 52C0                     u3301 5BBC                     u2501 69F4  
                   u2421 6768                     u3150 560A                     u2350 6FA6  
                   u2270 6ED4                     u2190 6DA8                     u3230 5738  
                   u3070 52E6                     u3310 5C16                     u2510 6A18  
                   u2430 677C                     u3151 5606                     u2351 6FA2  
                   u2271 6ED0                     u2191 6DA4                     u3231 5734  
                   u3071 52E2                     u3311 5C12                     u2511 6A14  
                   u2431 6778                     u4007 586A                     u3160 565A  
                   u2360 6FB8                     u2280 6EF0                     u3240 5748  
                   u3080 530E                     u3320 5C60                     u2520 6A2A  
                   u2440 67BC                     u2600 54AE                     u3400 75BE  
                   u3161 5656                     u2361 6FB4                     u2281 6EEC  
                   u3241 5744                     u3081 530A                     u3321 5C5C  
                   u2521 6A26                     u2441 67B8                     u2601 54AA  
                   u3401 75BA                     u4017 5896                     u3090 5370  
                   u3170 4F68                     u2370 6FC8                     u2290 6F00  
                   u3250 518A                     u3330 5C7E                     u2530 6A58  
                   u2450 67CE                     u2610 54C8                     u3410 75F6  
                   u3091 536C                     u3171 4F64                     u2371 6FC4  
                   u2291 6EFC                     u3251 5186                     u3331 5C7A  
                   u2531 6A54                     u2451 67CA                     u2611 54C4  
                   u3411 75F2                     u4027 4F42                     u2380 6FE8  
                   u3180 567A                     u3260 51AC                     u3340 5C8E  
                   u2540 6A6E                     u2460 67DE                     u2620 54EE  
                   u2700 5466                     u3500 78B0                     u3420 7670  
                   u2381 6FE4                     u3181 5676                     u3261 51A8  
                   u3341 5C8A                     u2541 6A6A                     u2461 67DA  
                   u2621 54EA                     u2701 5462                     u3501 78AC  
                   u3421 766C                     u2390 6FFA                     u3190 56AE  
                   u3270 51CA                     u3350 5C9C                     u2550 6A82  
                   u2470 6814                     u2630 550C                     u2710 548A  
                   u3510 7908                     u3430 76C4                     u2391 6FF6  
                   u3271 51C6                     u3351 5C98                     u2551 6A7E  
                   u2471 6810                     u2631 5508                     u2711 5486  
                   u3511 7904                     u3431 76C0                     u3360 5CD6  
                   u3280 5B56                     u2560 6A9C                     u2480 6824  
                   u2720 511A                     u2640 5528                     u3600 7C02  
                   u3520 793A                     u3440 76D2                     u3361 5CD2  
                   u3281 5B52                     u2561 6A98                     u2481 6820  
                   u2721 5116                     u2641 5524                     u3601 7BFE  
                   u3521 7936                     u3441 76CE                     u3370 5CE4  
                   u3290 5B64                     u2570 6AE4                     u2490 699E  
                   u2730 5138                     u2810 5D0A                     u2650 554E  
                   u3610 7C1E                     u3530 7964                     u3450 7708  
                   u3195 56A4                     u3371 5CE0                     u3291 5B60  
                   u2571 6AE0                     u2731 5134                     u2811 5D06  
                   u2651 554A                     u3611 7C1A                     u3531 7960  
                   u3451 7704                     u3380 524C                     u2580 6B12  
                   u2740 5154                     u2820 5E74                     u2660 53FE  
                   u3700 7EA0                     u3620 7C42                     u3540 7982  
                   u3460 776C                     u2805 4EAA                     u3381 5248  
                   u2901 59FE                     u2581 6B0E                     u2741 5150  
                   u2821 5E70                     u2661 53FA                     u3701 7E9C  
                   u3621 7C3E                     u3541 797E                     u3461 7768  
                   u3390 5298                     u2910 5A12                     u2590 6B4C  
                   u2750 5044                     u2670 5418                     u2830 6344  
                   u3630 7DA8                     u3550 79B4                     u3470 77CA  
                   u3710 50B2                     u3391 5294                     u2911 5A0E  
                   u2591 6B48                     u2495 6994                     u2751 5040  
                   u2671 5414                     u2831 6340                     u3631 7DA4  
                   u3551 79B0                     u3471 77C6                     u3711 50AE  
                   u3800 603C                     u2760 5062                     u2680 5432  
                   u2840 635A                     u3640 7DD4                     u3560 7ADE  
                   u3480 784E                     u3720 50EC                     u3801 6038  
                   u2921 5A36                     u2761 505E                     u2681 542E  
                   u2841 6356                     u3641 7DD0                     u3561 7ADA  
                   u3481 784A                     u3721 50E8                     u3810 607C  
                   u2930 5A4A                     u2770 5078                     u2690 5450  
                   u2850 6480                     u3650 7DEA                     u3570 7AF6  
                   u3490 788C                     u3730 50FA                     u3811 6078  
                   u2931 5A46                     u2771 5074                     u2691 544C  
                   u2851 647C                     u3651 7DE6                     u3571 7AF2  
                   u3491 7888                     u3731 50F6                     u3900 6208  
                   u3820 60BC                     u2940 5AAC                     u2860 6558  
                   u3660 7E00                     u3580 7B14                     u2780 4F0E  
                   u3740 5830                     u3901 6204                     u3821 60B8  
                   u2941 5AA8                     u2861 6554                     u3661 7DFC  
                   u3581 7B10                     u2781 4F0A                     u3741 582C  
                   u3910 6236                     u3830 6132                     u3750 5FB4  
                   u2790 4EA8                     u2950 5AD6                     u2870 667E  
                   u3670 7E28                     u3590 7BCE                     u3911 6232  
                   u3831 612E                     u3751 5FB0                     u2791 4EA2  
                   u2951 5AD2                     u2871 667A                     u3671 7E24  
                   u3591 7BCA                     u3920 624C                     u3840 6154  
                   u3760 5FC6                     u2960 5AEA                     u2880 4ECA  
                   u3680 7E50                     u3921 6248                     u3841 6150  
                   u3761 5FC2                     u2961 5AE6                     u2881 4EC6  
                   u3681 7E4C                     u3930 6260                     u3850 617E  
                   u3770 5FD6                     u2970 5B12                     u2890 4EDA  
                   u3690 7E6E                     u3931 625C                     u3851 617A  
                   u3771 5FD2                     u2971 5B0E                     u2891 4ED6  
                   u3691 7E6A                     u3940 627A                     u3860 61A2  
                   u3780 601A                     u2980 5B32                     _RCEN 007E2B  
                   u3941 6276                     u3861 619E                     u3781 6016  
                   u2981 5B2E                     u3950 62C2                     u3870 61B8  
                   u3790 602C                     u2990 58B8                     u3951 62BE  
                   u3871 61B4                     u3791 6028                     u2991 58B4  
                   u3960 62F2                     u3880 61D6                     u3961 62EE  
                   u3881 61D2                     u3970 6320                     u3890 61F6  
                   u3971 631C                     u3891 61F2                     u3997 57DE  
                   _RSEN 007E29                     _TXIF 007CF4                     _data 009B  
                   _main 702A                     _temp 0060                     _text 0148  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0039         writeI2C1@Address 0007  
           ___param_bank 000000            ___fltol@sign1 0039          __end_of___fladd 702A  
                  ?_main 0001                    _ACKEN 007E2C                    _ACKDT 007E2D  
        __end_of___fldiv 6334          __end_of___awdiv 5560          __end_of___flneg 4F8A  
        __end_of___awmod 549C          __end_of___flmul 6B6A          __end_of___flsub 4FD0  
        __end_of___fltol 576A          __end_of___lldiv 5342          ___awdiv@divisor 0009  
        __end_of___llmod 51FC          __end_of___lwdiv 5174          __end_of___lwmod 5096  
        ___awdiv@counter 000B                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC              readI2C@Data 0005  
        __end_of_readI2C 529E          __end_of_dpowers 7F3F                    _scale 6334  
                  _t_fim 0104          __end_of_isdigit 4EE6                    _t_ini 0108  
        __end_of_sendI2C 4DEC                    _gyrox 006C                    _gyroy 0068  
                  _gyroz 0064                    _start 5096                    tablat 000FF5  
        __end_of_stopI2C 4DE0                    status 000FD8          __end_of_sprintf 7EAE  
        __initialization 4FD0             __end_of_main 759E    __end_of_repeatedStart 4DD0  
                 ??_main 005E            __activetblptr 000002     __size_of__tdiv_to_l_ 0156  
      writeI2C1@Register 0003           receiveI2C@flag 0002               _Raw_accelx 0144  
             _Raw_accely 0140               _Raw_accelz 013C                   _ADCON1 000FC1  
       ___llmod@dividend 0001                   ?_scale 0028         ___awdiv@dividend 0007  
                 ?_start 0001                   _OSCCON 000FD3                   _SSPADD 000FC8  
                 _SSPBUF 000FC9         __end_of___xxtofl 5CF8         __end_of__powers_ 7EE3  
           readI2C@bytes 0007                   ___flge 5560                   ___fleq 5342  
                 _accelx 0078                   _accely 0074                   _accelz 0070  
              ??___fladd 0049                   ___wmul 4E32                ??___fldiv 0030  
              ??___awdiv 000B                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 0059                ??___fltol 0035  
              ??___lldiv 0009                ??___llmod 0009                ??___lwdiv 000A  
              ??___lwmod 0005         __end_of_readyI2C 4E32                   _fround 5CF8  
                 clear_0 5016                   clear_1 5022         ___awdiv@quotient 000D  
        ___awmod@divisor 0003          ___awmod@counter 0005                   _strlen 4EE6  
              ??_readI2C 0009                ??_isdigit 0001                ??_sendI2C 0002  
           __mediumconst 7EAE         __end_of_settings 58A2                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_startI2C 4DD8  
              ??_stopI2C 0002                ??_sprintf 0059              sendI2C@data 0002  
             ___flge@ff1 0001               ___flge@ff2 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 5028  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0031  
         __pcstackCOMRAM 0001             __pidataBANK0 4E58             __pidataBANK1 4DEC  
          __end_of_scale 6740            __end_of_start 5100               __div_to_l_ 58A2  
        __div_to_l_@exp1 000E          __div_to_l_@cntr 000D                  ??_scale 002C  
        __div_to_l_@quot 0009                  ??_start 0005               __pbssBANK0 0060  
             __pbssBANK1 0100            __div_to_l_@f1 0001            __div_to_l_@f2 0005  
                ?___flge 0001                  ?___fleq 0001                  ?___wmul 0001  
                ?_fround 0028                  ?_strlen 0001                ?___xxtofl 0001  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
                _GirAcel 008D       __size_of_writeI2C1 0036                ?_readyI2C 0001  
      __end_of__npowers_ 7F17                  __Hparam 0000                  __Lparam 0000  
             _max_accelx 00E1               _max_accely 00D9               _max_accelz 018C  
             _newMagData 008C          __size_of___flge 0104                ?_settings 0001  
        __size_of___fleq 00AA                  ___fladd 6B6A                  ___fldiv 5F9A  
                ___awdiv 549C                  ___flneg 4F52                ?_startI2C 0001  
                ___awmod 53EC                  ___flmul 6740                  ___flsub 4F8A  
                ___fltol 5664                  ___lldiv 529E          __size_of___wmul 0026  
                ___llmod 5174                  ___lwdiv 5100               _fround$974 0030  
             _fround$975 002C                  ___lwmod 5032            _offset_accelx 00F9  
          _offset_accely 00F5            _offset_accelz 00F1               _min_accelx 00DD  
             _min_accely 00D5               _min_accelz 0188                  __pcinit 4FD0  
             _t_fim1_cal 011C               _t_fim2_cal 0114               _t_fim3_cal 010C  
        __size_of_fround 02A2                  __ramtop 0800                  __ptext0 702A  
                __ptext1 576A                  __ptext2 4F1C                  __ptext3 5096  
                __ptext4 4EE6                  __ptext5 759E                  __ptext6 6334  
                __ptext7 53EC                  __ptext8 549C                  __ptext9 4EB4  
                _readI2C 51FC          __size_of_strlen 0036              ?__div_to_l_ 0001  
             _t_ini1_cal 0120               _t_ini2_cal 0118                  _dpowers 7F17  
             _t_ini3_cal 0110               _receiveI2C 4E82                  _isdigit 4EB4  
                _sendI2C 4DE0               ??___xxtofl 0005         ___awmod@dividend 0001  
                _stopI2C 4DD8               _raw_accelx 0088               _raw_accely 0086  
             _raw_accelz 0084                  _sprintf 759E     end_of_initialization 5028  
          __Lmediumconst 7EAE               ??_readyI2C 0001          ___lldiv@divisor 0005  
        ___lldiv@counter 000D                  postdec1 000FE5               ??_settings 005D  
                postinc0 000FEE                  postinc2 000FDE               ??_startI2C 0002  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0005                  strlen@s 0001  
          ??__tdiv_to_l_ 0009        __end_of_writeI2C1 4F52              ___fladd@grs 0050  
          ___xxtofl@sign 0009                _TRISBbits 000F93                _TRISCbits 000F94  
            ___fldiv@grs 003B              ___fldiv@rem 0034              ___flmul@grs 001C  
 __size_of_repeatedStart 0008      __size_of__div_to_l_ 014C           __end_of___flge 5664  
         __end_of___fleq 53EC           __end_of___wmul 4E58           __end_of_fround 5F9A  
            ?_receiveI2C 0001           __end_of_strlen 4F1C          readI2C@Register 0004  
    start_initialization 4FD0      __end_of__tdiv_to_l_ 5B44          ___llmod@divisor 0005  
        ___llmod@counter 0009                _Raw_gyrox 0138                _Raw_gyroy 0134  
              _Raw_gyroz 0130                 ??___flge 0009                 ??___fleq 0009  
               ??___wmul 0005              __pdataBANK0 00D5              __pdataBANK1 0170  
               ??_fround 002C            sprintf@tmpval 00CA            _repeatedStart 4DC8  
               ??_strlen 0003                ___fladd@a 0045                ___fladd@b 0041  
             fround@prec 0034                ___fldiv@a 002C                ___fldiv@b 0028  
              ___flmul@a 0013                ___flmul@b 000F                ___flsub@a 0055  
              ___flsub@b 0051            __pcstackBANK0 009C        __size_of___xxtofl 01B4  
            sprintf@flag 00C2              sprintf@eexp 00C8              sprintf@fval 00D0  
            sprintf@prec 00CE        __size_of_readyI2C 0026      __size_of_receiveI2C 0032  
       ___lwdiv@dividend 0006         receiveI2C@buffer 0003            __pmediumconst 7EAE  
               ?___fladd 0041                 ?___fldiv 0028                 ?___awdiv 0007  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 000F  
               ?___flsub 0051                 ?___fltol 0031                 ?___lldiv 0001  
               ?___llmod 0001                __npowers_ 7EE3                 ?___lwdiv 0006  
               ?___lwmod 0001        __size_of_settings 0138        __size_of_startI2C 0008  
         ?_repeatedStart 0001              __tdiv_to_l_ 59EE             ??__div_to_l_ 0009  
               ?_readI2C 0004                 ?_isdigit 0001                 ?_sendI2C 0001  
              _scale$976 002C                 ?_stopI2C 0001         ___lwdiv@quotient 000A  
              _max_gyrox 0184                _max_gyroy 017C                _max_gyroz 0174  
               ?_sprintf 009C           __size_of_scale 040C           __size_of_start 006A  
           _offset_gyrox 00ED             _offset_gyroy 00E9             _offset_gyroz 00E5  
              _min_gyrox 0180                _min_gyroy 0178                _min_gyroz 0170  
           _t_fim_config 0124           ___wmul@product 0005                _raw_gyrox 0082  
              _raw_gyroy 0080                _raw_gyroz 007E       __end_of__div_to_l_ 59EE  
      ___wmul@multiplier 0001             _t_ini_config 0128            writeI2C1@Data 0004  
         readI2C@Address 000B                _writeI2C1 4F1C                copy_data0 4FE4  
              copy_data1 5004                 _Raw_temp 012C                 __Hrparam 0000  
               __Lrparam 0000          ??_repeatedStart 0002         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074         __size_of___lwmod 0064              _isdigit$792 0002  
           ??_receiveI2C 0002               sprintf@val 00C4         __size_of_readI2C 00A2  
               ___xxtofl 5B44         __size_of_isdigit 0032               ?_writeI2C1 0003  
       __size_of_sendI2C 000C          ___lwdiv@divisor 0008          ___lwdiv@counter 000C  
               __ptext10 5CF8                 __ptext11 5032                 __ptext20 5664  
               __ptext12 5100                 __ptext21 4F8A                 __ptext13 6740  
               __ptext30 4DC8                 __ptext22 6B6A                 __ptext14 59EE  
               __ptext31 4E82                 __ptext23 4F52                 __ptext15 58A2  
               __ptext32 4E0C                 __ptext24 5560                 __ptext16 5B44  
               __ptext33 5F9A                 __ptext25 5342                 __ptext17 4E32  
               __ptext26 51FC                 __ptext18 5174                 __ptext27 4DD8  
               __ptext19 529E                 __ptext28 4DD0                 __ptext29 4DE0  
               __powers_ 7EAF         __size_of_stopI2C 0008         __size_of_sprintf 0910  
         _offset_samples 00FD                 _readyI2C 4E0C            __size_of_main 0574  
               _raw_temp 007C       __end_of_receiveI2C 4EB4                 _settings 576A  
               _startI2C 4DD0                 isdigit@c 0003                 scale@scl 0030  
              sprintf@ap 00C0         __tdiv_to_l_@exp1 0011         __tdiv_to_l_@cntr 0010  
              sprintf@sp 009C         __tdiv_to_l_@quot 000C         ___lwmod@dividend 0001  
       ___lldiv@dividend 0001             ?__tdiv_to_l_ 0001      __CFG_FOSC$INTOSC_EC 000000  
               sprintf@c 00D4                 sprintf@f 009E         ___lldiv@quotient 0009  
        ___lwmod@divisor 0003                 strlen@cp 0003          ___lwmod@counter 0005  
            ??_writeI2C1 0005            ___fladd@signs 004D             ___fladd@aexp 004E  
           ___fladd@bexp 004F  

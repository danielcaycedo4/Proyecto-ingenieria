

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 17:32:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 12/02/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F4550 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataBANK0
   123  003F36                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _servos
   127  003F36  0005               	dw	5
   128                           
   129                           	psect	idataBANK1
   130  003EEA                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for _angle_servos
   134  003EEA  005A               	dw	90
   135  003EEC  005A               	dw	90
   136  003EEE  005A               	dw	90
   137  003EF0  005A               	dw	90
   138  003EF2  005A               	dw	90
   139  003EF4  005A               	dw	90
   140  0000                     _LATDbits	set	3980
   141  0000                     _SSPBUF	set	4041
   142  0000                     _TXREG	set	4013
   143  0000                     _RCREG	set	4014
   144  0000                     _PORTBbits	set	3969
   145  0000                     _TXSTA	set	4012
   146  0000                     _RCSTA	set	4011
   147  0000                     _SPBRG	set	4015
   148  0000                     _TRISCbits	set	3988
   149  0000                     _SSPADD	set	4040
   150  0000                     _SSPCON2	set	4037
   151  0000                     _SSPCON1	set	4038
   152  0000                     _SSPSTAT	set	4039
   153  0000                     _LATE	set	3981
   154  0000                     _LATD	set	3980
   155  0000                     _TRISE	set	3990
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISBbits	set	3987
   158  0000                     _ADCON1	set	4033
   159  0000                     _OSCCON	set	4051
   160  0000                     _LATE0	set	31848
   161  0000                     _LATE1	set	31849
   162  0000                     _ACKEN	set	32300
   163  0000                     _ACKDT	set	32301
   164  0000                     _RCEN	set	32299
   165  0000                     _RSEN	set	32297
   166  0000                     _PEN	set	32298
   167  0000                     _SEN	set	32296
   168  0000                     _TXIF	set	31988
   169  0000                     _RCIF	set	31989
   170  0000                     _RCIE	set	31981
   171  0000                     _PEIE	set	32662
   172  0000                     _GIE	set	32663
   173                           
   174                           	psect	smallconst
   175  000800                     __psmallconst:
   176                           	callstack 0
   177  000800  00                 	db	0
   178  000801                     STR_4:
   179  000801  20                 	db	32
   180  000802  45                 	db	69	;'E'
   181  000803  6C                 	db	108	;'l'
   182  000804  20                 	db	32
   183  000805  63                 	db	99	;'c'
   184  000806  61                 	db	97	;'a'
   185  000807  72                 	db	114	;'r'
   186  000808  61                 	db	97	;'a'
   187  000809  63                 	db	99	;'c'
   188  00080A  74                 	db	116	;'t'
   189  00080B  65                 	db	101	;'e'
   190  00080C  72                 	db	114	;'r'
   191  00080D  20                 	db	32
   192  00080E  72                 	db	114	;'r'
   193  00080F  65                 	db	101	;'e'
   194  000810  63                 	db	99	;'c'
   195  000811  69                 	db	105	;'i'
   196  000812  62                 	db	98	;'b'
   197  000813  69                 	db	105	;'i'
   198  000814  64                 	db	100	;'d'
   199  000815  6F                 	db	111	;'o'
   200  000816  20                 	db	32
   201  000817  66                 	db	102	;'f'
   202  000818  75                 	db	117	;'u'
   203  000819  65                 	db	101	;'e'
   204  00081A  3A                 	db	58	;':'
   205  00081B  20                 	db	32
   206  00081C  25                 	db	37
   207  00081D  63                 	db	99	;'c'
   208  00081E  00                 	db	0
   209  00081F                     STR_3:
   210  00081F  61                 	db	97	;'a'
   211  000820  6E                 	db	110	;'n'
   212  000821  67                 	db	103	;'g'
   213  000822  75                 	db	117	;'u'
   214  000823  6C                 	db	108	;'l'
   215  000824  6F                 	db	111	;'o'
   216  000825  20                 	db	32
   217  000826  61                 	db	97	;'a'
   218  000827  74                 	db	116	;'t'
   219  000828  6F                 	db	111	;'o'
   220  000829  69                 	db	105	;'i'
   221  00082A  20                 	db	32
   222  00082B  25                 	db	37
   223  00082C  64                 	db	100	;'d'
   224  00082D  20                 	db	32
   225  00082E  0A                 	db	10
   226  00082F  00                 	db	0
   227  000830                     STR_2:
   228  000830  61                 	db	97	;'a'
   229  000831  6E                 	db	110	;'n'
   230  000832  67                 	db	103	;'g'
   231  000833  75                 	db	117	;'u'
   232  000834  6C                 	db	108	;'l'
   233  000835  6F                 	db	111	;'o'
   234  000836  20                 	db	32
   235  000837  7A                 	db	122	;'z'
   236  000838  20                 	db	32
   237  000839  25                 	db	37
   238  00083A  63                 	db	99	;'c'
   239  00083B  20                 	db	32
   240  00083C  0A                 	db	10
   241  00083D  00                 	db	0
   242  00083E                     STR_6:
   243  00083E  20                 	db	32
   244  00083F  41                 	db	65	;'A'
   245  000840  6E                 	db	110	;'n'
   246  000841  67                 	db	103	;'g'
   247  000842  75                 	db	117	;'u'
   248  000843  6C                 	db	108	;'l'
   249  000844  6F                 	db	111	;'o'
   250  000845  3A                 	db	58	;':'
   251  000846  20                 	db	32
   252  000847  25                 	db	37
   253  000848  64                 	db	100	;'d'
   254  000849  20                 	db	32
   255  00084A  0A                 	db	10
   256  00084B  00                 	db	0
   257  00084C                     STR_5:
   258  00084C  20                 	db	32
   259  00084D  53                 	db	83	;'S'
   260  00084E  65                 	db	101	;'e'
   261  00084F  72                 	db	114	;'r'
   262  000850  76                 	db	118	;'v'
   263  000851  6F                 	db	111	;'o'
   264  000852  3A                 	db	58	;':'
   265  000853  20                 	db	32
   266  000854  25                 	db	37
   267  000855  64                 	db	100	;'d'
   268  000856  20                 	db	32
   269  000857  0A                 	db	10
   270  000858  00                 	db	0
   271  000859                     STR_1:
   272  000859  53                 	db	83	;'S'
   273  00085A  65                 	db	101	;'e'
   274  00085B  74                 	db	116	;'t'
   275  00085C  74                 	db	116	;'t'
   276  00085D  69                 	db	105	;'i'
   277  00085E  6E                 	db	110	;'n'
   278  00085F  67                 	db	103	;'g'
   279  000860  73                 	db	115	;'s'
   280  000861  00                 	db	0
   281  000862  00                 	db	0	; dummy byte at the end
   282  0000                     
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286  003962                     __pcinit:
   287                           	callstack 0
   288  003962                     start_initialization:
   289                           	callstack 0
   290  003962                     __initialization:
   291                           	callstack 0
   292                           
   293                           ; Initialize objects allocated to BANK1 (12 bytes)
   294                           ; load TBLPTR registers with __pidataBANK1
   295  003962  0EEA               	movlw	low __pidataBANK1
   296  003964  6EF6               	movwf	tblptrl,c
   297  003966  0E3E               	movlw	high __pidataBANK1
   298  003968  6EF7               	movwf	tblptrh,c
   299  00396A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   300  00396C  6EF8               	movwf	tblptru,c
   301  00396E  EE01  F095         	lfsr	0,__pdataBANK1
   302  003972  EE10 F00C          	lfsr	1,12
   303  003976                     copy_data0:
   304  003976  0009               	tblrd		*+
   305  003978  CFF5 FFEE          	movff	tablat,postinc0
   306  00397C  50E5               	movf	postdec1,w,c
   307  00397E  50E1               	movf	fsr1l,w,c
   308  003980  E1FA               	bnz	copy_data0
   309                           
   310                           ; Initialize objects allocated to BANK0 (2 bytes)
   311                           ; load TBLPTR registers with __pidataBANK0
   312  003982  0E36               	movlw	low __pidataBANK0
   313  003984  6EF6               	movwf	tblptrl,c
   314  003986  0E3F               	movlw	high __pidataBANK0
   315  003988  6EF7               	movwf	tblptrh,c
   316  00398A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   317  00398C  6EF8               	movwf	tblptru,c
   318  00398E  0009               	tblrd		*+	;fetch initializer
   319  003990  CFF5 F0E0          	movff	tablat,__pdataBANK0
   320  003994  0009               	tblrd		*+	;fetch initializer
   321  003996  CFF5 F0E1          	movff	tablat,__pdataBANK0+1
   322                           
   323                           ; Clear objects allocated to BANK1 (110 bytes)
   324  00399A  EE01  F000         	lfsr	0,__pbssBANK1
   325  00399E  0E6E               	movlw	110
   326  0039A0                     clear_0:
   327  0039A0  6AEE               	clrf	postinc0,c
   328  0039A2  06E8               	decf	wreg,f,c
   329  0039A4  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to BANK0 (26 bytes)
   332  0039A6  EE00  F0C6         	lfsr	0,__pbssBANK0
   333  0039AA  0E1A               	movlw	26
   334  0039AC                     clear_1:
   335  0039AC  6AEE               	clrf	postinc0,c
   336  0039AE  06E8               	decf	wreg,f,c
   337  0039B0  E1FD               	bnz	clear_1
   338  0039B2                     end_of_initialization:
   339                           	callstack 0
   340  0039B2                     __end_of__initialization:
   341                           	callstack 0
   342  0039B2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343  0039B4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344  0039B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   345  0039B8  6EF8               	movwf	tblptru,c
   346  0039BA  0100               	movlb	0
   347  0039BC  EF7B  F01F         	goto	_main	;jump to C main() function
   348                           
   349                           	psect	bssBANK0
   350  0000C6                     __pbssBANK0:
   351                           	callstack 0
   352  0000C6                     _nout:
   353                           	callstack 0
   354  0000C6                     	ds	2
   355  0000C8                     _width:
   356                           	callstack 0
   357  0000C8                     	ds	2
   358  0000CA                     _prec:
   359                           	callstack 0
   360  0000CA                     	ds	2
   361  0000CC                     _flags:
   362                           	callstack 0
   363  0000CC                     	ds	2
   364  0000CE                     _coor:
   365                           	callstack 0
   366  0000CE                     	ds	2
   367  0000D0                     _Angle:
   368                           	callstack 0
   369  0000D0                     	ds	2
   370  0000D2                     _z:
   371                           	callstack 0
   372  0000D2                     	ds	2
   373  0000D4                     _pos:
   374                           	callstack 0
   375  0000D4                     	ds	2
   376  0000D6                     _i:
   377                           	callstack 0
   378  0000D6                     	ds	2
   379  0000D8                     _d:
   380                           	callstack 0
   381  0000D8                     	ds	1
   382  0000D9                     _flag:
   383                           	callstack 0
   384  0000D9                     	ds	1
   385  0000DA                     _data2:
   386                           	callstack 0
   387  0000DA                     	ds	4
   388  0000DE                     _d1:
   389                           	callstack 0
   390  0000DE                     	ds	1
   391  0000DF                     _data1:
   392                           	callstack 0
   393  0000DF                     	ds	1
   394                           
   395                           	psect	dataBANK0
   396  0000E0                     __pdataBANK0:
   397                           	callstack 0
   398  0000E0                     _servos:
   399                           	callstack 0
   400  0000E0                     	ds	2
   401                           
   402                           	psect	bssBANK1
   403  000100                     __pbssBANK1:
   404                           	callstack 0
   405  000100                     _texto_LCD:
   406                           	callstack 0
   407  000100                     	ds	16
   408  000110                     _Coordinate_z:
   409                           	callstack 0
   410  000110                     	ds	2
   411  000112                     _Coordinate_x:
   412                           	callstack 0
   413  000112                     	ds	2
   414  000114                     _Coordinate_y:
   415                           	callstack 0
   416  000114                     	ds	2
   417  000116                     _DriverPin:
   418                           	callstack 0
   419  000116                     	ds	2
   420  000118                     _dato:
   421                           	callstack 0
   422  000118                     	ds	2
   423  00011A                     _text:
   424                           	callstack 0
   425  00011A                     	ds	40
   426  000142                     _dbuf:
   427                           	callstack 0
   428  000142                     	ds	32
   429  000162                     _coordinate_z:
   430                           	callstack 0
   431  000162                     	ds	3
   432  000165                     _coordinate_y:
   433                           	callstack 0
   434  000165                     	ds	3
   435  000168                     _coordinate_x:
   436                           	callstack 0
   437  000168                     	ds	3
   438  00016B                     _angle:
   439                           	callstack 0
   440  00016B                     	ds	3
   441                           
   442                           	psect	dataBANK1
   443  000195                     __pdataBANK1:
   444                           	callstack 0
   445  000195                     _angle_servos:
   446                           	callstack 0
   447  000195                     	ds	12
   448                           
   449                           	psect	cstackBANK1
   450  00016E                     __pcstackBANK1:
   451                           	callstack 0
   452  00016E                     vfpfcnvrt@ll:
   453                           	callstack 0
   454                           
   455                           ; 8 bytes @ 0x0
   456  00016E                     	ds	8
   457  000176                     vfpfcnvrt@c:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x8
   461  000176                     	ds	1
   462  000177                     ?_vfprintf:
   463                           	callstack 0
   464  000177                     vfprintf@fp:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x9
   468  000177                     	ds	2
   469  000179                     vfprintf@fmt:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0xB
   473  000179                     	ds	2
   474  00017B                     vfprintf@ap:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xD
   478  00017B                     	ds	2
   479  00017D                     ?_sprintf:
   480                           	callstack 0
   481  00017D                     sprintf@s:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xF
   485  00017D                     	ds	2
   486  00017F                     sprintf@fmt:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x11
   490  00017F                     	ds	6
   491  000185                     sprintf@ap:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x17
   495  000185                     	ds	2
   496  000187                     sprintf@f:
   497                           	callstack 0
   498                           
   499                           ; 6 bytes @ 0x19
   500  000187                     	ds	6
   501  00018D                     mover_servo@servo:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x1F
   505  00018D                     	ds	2
   506  00018F                     mover_servo@angulo:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x21
   510  00018F                     	ds	2
   511  000191                     ??_mover_servo:
   512                           
   513                           ; 1 bytes @ 0x23
   514  000191                     	ds	2
   515  000193                     ??_settings:
   516                           
   517                           ; 1 bytes @ 0x25
   518  000193                     	ds	2
   519                           
   520                           	psect	cstackBANK0
   521  000060                     __pcstackBANK0:
   522                           	callstack 0
   523  000060                     	ds	2
   524  000062                     i2sprintf@ap:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x2
   528  000062                     	ds	2
   529  000064                     i2sprintf@f:
   530                           	callstack 0
   531                           
   532                           ; 6 bytes @ 0x4
   533  000064                     	ds	6
   534  00006A                     i2mover_servo@servo:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xA
   538  00006A                     	ds	2
   539  00006C                     i2mover_servo@angulo:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xC
   543  00006C                     	ds	2
   544  00006E                     ??i2_mover_servo:
   545                           
   546                           ; 1 bytes @ 0xE
   547  00006E                     	ds	2
   548  000070                     ??_algoritm:
   549                           
   550                           ; 1 bytes @ 0x10
   551  000070                     	ds	1
   552  000071                     algoritm@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x11
   556  000071                     	ds	2
   557  000073                     ??_receive:
   558                           
   559                           ; 1 bytes @ 0x13
   560  000073                     	ds	10
   561  00007D                     ??_readyI2C:
   562  00007D                     ??_LCD:
   563  00007D                     ?_strlen:
   564                           	callstack 0
   565  00007D                     ?___awdiv:
   566                           	callstack 0
   567  00007D                     ?___fladd:
   568                           	callstack 0
   569  00007D                     ?___fldiv:
   570                           	callstack 0
   571  00007D                     ?___fltol:
   572                           	callstack 0
   573  00007D                     ?___aodiv:
   574                           	callstack 0
   575  00007D                     ?___aomod:
   576                           	callstack 0
   577  00007D                     ___awdiv@dividend:
   578                           	callstack 0
   579  00007D                     fputc@c:
   580                           	callstack 0
   581  00007D                     strlen@s:
   582                           	callstack 0
   583  00007D                     ___flge@ff1:
   584                           	callstack 0
   585  00007D                     ___fltol@f1:
   586                           	callstack 0
   587  00007D                     ___fladd@b:
   588                           	callstack 0
   589  00007D                     ___fldiv@b:
   590                           	callstack 0
   591  00007D                     ___aodiv@dividend:
   592                           	callstack 0
   593  00007D                     ___aomod@dividend:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x1D
   597  00007D                     	ds	1
   598  00007E                     sendI2C@data:
   599                           	callstack 0
   600  00007E                     receiveI2C@flag:
   601                           	callstack 0
   602  00007E                     LCD@data:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x1E
   606  00007E                     	ds	1
   607  00007F                     writeI2C@Register:
   608                           	callstack 0
   609  00007F                     receiveI2C@buffer:
   610                           	callstack 0
   611  00007F                     SettingsLCD@word:
   612                           	callstack 0
   613  00007F                     ___awdiv@divisor:
   614                           	callstack 0
   615  00007F                     fputc@fp:
   616                           	callstack 0
   617  00007F                     strlen@a:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x1F
   621  00007F                     	ds	1
   622  000080                     readI2C@Register:
   623                           	callstack 0
   624  000080                     writeI2C@Data:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x20
   628  000080                     	ds	1
   629  000081                     ??_fputc:
   630  000081                     ??___fltol:
   631  000081                     ___awdiv@counter:
   632                           	callstack 0
   633  000081                     readI2C@Data:
   634                           	callstack 0
   635  000081                     ___flge@ff2:
   636                           	callstack 0
   637  000081                     ___fladd@a:
   638                           	callstack 0
   639  000081                     ___fldiv@a:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x21
   643  000081                     	ds	1
   644  000082                     ___awdiv@sign:
   645                           	callstack 0
   646  000082                     writeI2C@bytes:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x22
   650  000082                     	ds	1
   651  000083                     readI2C@bytes:
   652                           	callstack 0
   653  000083                     ___awdiv@quotient:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x23
   657  000083                     	ds	1
   658  000084                     ??_writeI2C:
   659                           
   660                           ; 1 bytes @ 0x24
   661  000084                     	ds	1
   662  000085                     ??___fladd:
   663  000085                     ??___fldiv:
   664  000085                     ??_readI2C:
   665  000085                     ??___flge:
   666  000085                     ?___wmul:
   667                           	callstack 0
   668  000085                     ___fltol@sign1:
   669                           	callstack 0
   670  000085                     ___wmul@multiplier:
   671                           	callstack 0
   672  000085                     ___aodiv@divisor:
   673                           	callstack 0
   674  000085                     ___aomod@divisor:
   675                           	callstack 0
   676                           
   677                           ; 8 bytes @ 0x25
   678  000085                     	ds	1
   679  000086                     ?_ctoa:
   680                           	callstack 0
   681  000086                     writeI2C@Address:
   682                           	callstack 0
   683  000086                     ___fltol@exp1:
   684                           	callstack 0
   685  000086                     ctoa@fp:
   686                           	callstack 0
   687  000086                     fputs@s:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x26
   691  000086                     	ds	1
   692  000087                     readI2C@Address:
   693                           	callstack 0
   694  000087                     ___wmul@multiplicand:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x27
   698  000087                     	ds	1
   699  000088                     ctoa@c:
   700                           	callstack 0
   701  000088                     fputs@fp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x28
   705  000088                     	ds	1
   706  000089                     ??_ctoa:
   707  000089                     ___fladd@signs:
   708                           	callstack 0
   709  000089                     ___wmul@product:
   710                           	callstack 0
   711  000089                     ___fldiv@rem:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x29
   715  000089                     	ds	1
   716  00008A                     ___fladd@aexp:
   717                           	callstack 0
   718  00008A                     fputs@c:
   719                           	callstack 0
   720  00008A                     ctoa@l:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2A
   724  00008A                     	ds	1
   725  00008B                     ?_map:
   726                           	callstack 0
   727  00008B                     ___fladd@bexp:
   728                           	callstack 0
   729  00008B                     map@x:
   730                           	callstack 0
   731  00008B                     fputs@i:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x2B
   735  00008B                     	ds	1
   736  00008C                     ___fladd@grs:
   737                           	callstack 0
   738  00008C                     ctoa@w:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x2C
   742  00008C                     	ds	1
   743  00008D                     ?_pad:
   744                           	callstack 0
   745  00008D                     ?___flsub:
   746                           	callstack 0
   747  00008D                     ___aodiv@counter:
   748                           	callstack 0
   749  00008D                     ___aomod@counter:
   750                           	callstack 0
   751  00008D                     ___fldiv@sign:
   752                           	callstack 0
   753  00008D                     map@In_Min:
   754                           	callstack 0
   755  00008D                     pad@fp:
   756                           	callstack 0
   757  00008D                     ___flsub@b:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x2D
   761  00008D                     	ds	1
   762  00008E                     ___aodiv@sign:
   763                           	callstack 0
   764  00008E                     ___aomod@sign:
   765                           	callstack 0
   766  00008E                     ___fldiv@new_exp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x2E
   770  00008E                     	ds	1
   771  00008F                     ?_abs:
   772                           	callstack 0
   773  00008F                     map@In_Max:
   774                           	callstack 0
   775  00008F                     pad@buf:
   776                           	callstack 0
   777  00008F                     abs@a:
   778                           	callstack 0
   779  00008F                     ___aodiv@quotient:
   780                           	callstack 0
   781                           
   782                           ; 8 bytes @ 0x2F
   783  00008F                     	ds	1
   784  000090                     ___fldiv@grs:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x30
   788  000090                     	ds	1
   789  000091                     ??_abs:
   790  000091                     map@Out_Min:
   791                           	callstack 0
   792  000091                     pad@p:
   793                           	callstack 0
   794  000091                     ___flsub@a:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x31
   798  000091                     	ds	2
   799  000093                     ??_pad:
   800  000093                     map@Out_Max:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x33
   804  000093                     	ds	1
   805  000094                     ___fldiv@bexp:
   806                           	callstack 0
   807  000094                     pad@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x34
   811  000094                     	ds	1
   812  000095                     ___fldiv@aexp:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x35
   816  000095                     	ds	1
   817  000096                     pad@w:
   818                           	callstack 0
   819  000096                     setPWMFreq@freq:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x36
   823  000096                     	ds	2
   824  000098                     ?_dtoa:
   825                           	callstack 0
   826  000098                     dtoa@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x38
   830  000098                     	ds	2
   831  00009A                     ??_setPWMFreq:
   832  00009A                     dtoa@d:
   833                           	callstack 0
   834                           
   835                           ; 8 bytes @ 0x3A
   836  00009A                     	ds	1
   837  00009B                     setPWMFreq@prescale:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x3B
   841  00009B                     	ds	1
   842  00009C                     setPWMFreq@newmode:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x3C
   846  00009C                     	ds	1
   847  00009D                     setPWMFreq@prescaleval:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x3D
   851  00009D                     	ds	5
   852  0000A2                     ??_dtoa:
   853                           
   854                           ; 1 bytes @ 0x42
   855  0000A2                     	ds	8
   856  0000AA                     _dtoa$962:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x4A
   860  0000AA                     	ds	2
   861  0000AC                     dtoa@p:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x4C
   865  0000AC                     	ds	2
   866  0000AE                     dtoa@w:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x4E
   870  0000AE                     	ds	2
   871  0000B0                     dtoa@s:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x50
   875  0000B0                     	ds	2
   876  0000B2                     dtoa@n:
   877                           	callstack 0
   878                           
   879                           ; 8 bytes @ 0x52
   880  0000B2                     	ds	8
   881  0000BA                     dtoa@i:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x5A
   885  0000BA                     	ds	2
   886  0000BC                     ?_vfpfcnvrt:
   887                           	callstack 0
   888  0000BC                     vfpfcnvrt@fp:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x5C
   892  0000BC                     	ds	2
   893  0000BE                     vfpfcnvrt@fmt:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x5E
   897  0000BE                     	ds	2
   898  0000C0                     vfpfcnvrt@ap:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x60
   902  0000C0                     	ds	2
   903  0000C2                     ??_vfpfcnvrt:
   904                           
   905                           ; 1 bytes @ 0x62
   906  0000C2                     	ds	2
   907  0000C4                     vfprintf@cfmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x64
   911  0000C4                     	ds	2
   912  0000C6                     
   913                           ; 1 bytes @ 0x66
   914                           
   915                           	psect	cstackCOMRAM
   916  000001                     __pcstackCOMRAM:
   917                           	callstack 0
   918  000001                     ??i2_readyI2C:
   919  000001                     ?_isspace:
   920                           	callstack 0
   921  000001                     ?_isdigit:
   922                           	callstack 0
   923  000001                     ?i2___awdiv:
   924                           	callstack 0
   925  000001                     ?i2_strlen:
   926                           	callstack 0
   927  000001                     ?i2___aodiv:
   928                           	callstack 0
   929  000001                     ?i2___aomod:
   930                           	callstack 0
   931  000001                     isdigit@c:
   932                           	callstack 0
   933  000001                     isspace@c:
   934                           	callstack 0
   935  000001                     i2___awdiv@dividend:
   936                           	callstack 0
   937  000001                     i2fputc@c:
   938                           	callstack 0
   939  000001                     i2strlen@s:
   940                           	callstack 0
   941  000001                     i2___aodiv@dividend:
   942                           	callstack 0
   943  000001                     i2___aomod@dividend:
   944                           	callstack 0
   945                           
   946                           ; 8 bytes @ 0x0
   947  000001                     	ds	1
   948  000002                     i2sendI2C@data:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x1
   952  000002                     	ds	1
   953  000003                     ??_isspace:
   954  000003                     ??_isdigit:
   955  000003                     i2writeI2C@Register:
   956                           	callstack 0
   957  000003                     i2___awdiv@divisor:
   958                           	callstack 0
   959  000003                     i2fputc@fp:
   960                           	callstack 0
   961  000003                     i2strlen@a:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x2
   965  000003                     	ds	1
   966  000004                     i2writeI2C@Data:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x3
   970  000004                     	ds	1
   971  000005                     ??i2_fputc:
   972  000005                     i2___awdiv@counter:
   973                           	callstack 0
   974                           
   975                           ; 1 bytes @ 0x4
   976  000005                     	ds	1
   977  000006                     i2___awdiv@sign:
   978                           	callstack 0
   979  000006                     i2writeI2C@bytes:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x5
   983  000006                     	ds	1
   984  000007                     _isspace$884:
   985                           	callstack 0
   986  000007                     i2___awdiv@quotient:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x6
   990  000007                     	ds	1
   991  000008                     ??i2_writeI2C:
   992                           
   993                           ; 1 bytes @ 0x7
   994  000008                     	ds	1
   995  000009                     ?i2___wmul:
   996                           	callstack 0
   997  000009                     i2___wmul@multiplier:
   998                           	callstack 0
   999  000009                     i2___aodiv@divisor:
  1000                           	callstack 0
  1001  000009                     i2___aomod@divisor:
  1002                           	callstack 0
  1003                           
  1004                           ; 8 bytes @ 0x8
  1005  000009                     	ds	1
  1006  00000A                     ?i2_ctoa:
  1007                           	callstack 0
  1008  00000A                     i2writeI2C@Address:
  1009                           	callstack 0
  1010  00000A                     i2ctoa@fp:
  1011                           	callstack 0
  1012  00000A                     i2fputs@s:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x9
  1016  00000A                     	ds	1
  1017  00000B                     i2___wmul@multiplicand:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0xA
  1021  00000B                     	ds	1
  1022  00000C                     i2ctoa@c:
  1023                           	callstack 0
  1024  00000C                     i2fputs@fp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0xB
  1028  00000C                     	ds	1
  1029  00000D                     ??i2_ctoa:
  1030  00000D                     i2___wmul@product:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0xC
  1034  00000D                     	ds	1
  1035  00000E                     i2fputs@c:
  1036                           	callstack 0
  1037  00000E                     i2ctoa@l:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xD
  1041  00000E                     	ds	1
  1042  00000F                     ?_atoi:
  1043                           	callstack 0
  1044  00000F                     ?i2_map:
  1045                           	callstack 0
  1046  00000F                     atoi@s:
  1047                           	callstack 0
  1048  00000F                     i2map@x:
  1049                           	callstack 0
  1050  00000F                     i2fputs@i:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0xE
  1054  00000F                     	ds	1
  1055  000010                     i2ctoa@w:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0xF
  1059  000010                     	ds	1
  1060  000011                     ??_atoi:
  1061  000011                     ?i2_pad:
  1062                           	callstack 0
  1063  000011                     i2___aodiv@counter:
  1064                           	callstack 0
  1065  000011                     i2___aomod@counter:
  1066                           	callstack 0
  1067  000011                     i2map@In_Min:
  1068                           	callstack 0
  1069  000011                     i2pad@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x10
  1073  000011                     	ds	1
  1074  000012                     i2___aodiv@sign:
  1075                           	callstack 0
  1076  000012                     i2___aomod@sign:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x11
  1080  000012                     	ds	1
  1081  000013                     ?i2_abs:
  1082                           	callstack 0
  1083  000013                     i2map@In_Max:
  1084                           	callstack 0
  1085  000013                     i2pad@buf:
  1086                           	callstack 0
  1087  000013                     i2abs@a:
  1088                           	callstack 0
  1089  000013                     i2___aodiv@quotient:
  1090                           	callstack 0
  1091                           
  1092                           ; 8 bytes @ 0x12
  1093  000013                     	ds	2
  1094  000015                     ??i2_abs:
  1095  000015                     atoi@neg:
  1096                           	callstack 0
  1097  000015                     i2map@Out_Min:
  1098                           	callstack 0
  1099  000015                     i2pad@p:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x14
  1103  000015                     	ds	2
  1104  000017                     ??i2_pad:
  1105  000017                     _atoi$866:
  1106                           	callstack 0
  1107  000017                     i2map@Out_Max:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x16
  1111  000017                     	ds	1
  1112  000018                     i2pad@i:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x17
  1116  000018                     	ds	1
  1117  000019                     _atoi$868:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x18
  1121  000019                     	ds	1
  1122  00001A                     i2pad@w:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x19
  1126  00001A                     	ds	1
  1127  00001B                     _atoi$867:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x1A
  1131  00001B                     	ds	1
  1132  00001C                     ?i2_dtoa:
  1133                           	callstack 0
  1134  00001C                     atoi@n:
  1135                           	callstack 0
  1136  00001C                     i2dtoa@fp:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x1B
  1140  00001C                     	ds	2
  1141  00001E                     i2dtoa@d:
  1142                           	callstack 0
  1143                           
  1144                           ; 8 bytes @ 0x1D
  1145  00001E                     	ds	8
  1146  000026                     ??i2_dtoa:
  1147                           
  1148                           ; 1 bytes @ 0x25
  1149  000026                     	ds	8
  1150  00002E                     i2_dtoa$962:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2D
  1154  00002E                     	ds	2
  1155  000030                     i2dtoa@p:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2F
  1159  000030                     	ds	2
  1160  000032                     i2dtoa@w:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x31
  1164  000032                     	ds	2
  1165  000034                     i2dtoa@s:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x33
  1169  000034                     	ds	2
  1170  000036                     i2dtoa@n:
  1171                           	callstack 0
  1172                           
  1173                           ; 8 bytes @ 0x35
  1174  000036                     	ds	8
  1175  00003E                     i2dtoa@i:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x3D
  1179  00003E                     	ds	2
  1180  000040                     ?i2_vfpfcnvrt:
  1181                           	callstack 0
  1182  000040                     i2vfpfcnvrt@fp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x3F
  1186  000040                     	ds	2
  1187  000042                     i2vfpfcnvrt@fmt:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x41
  1191  000042                     	ds	2
  1192  000044                     i2vfpfcnvrt@ap:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x43
  1196  000044                     	ds	2
  1197  000046                     ??i2_vfpfcnvrt:
  1198                           
  1199                           ; 1 bytes @ 0x45
  1200  000046                     	ds	2
  1201  000048                     i2vfpfcnvrt@ll:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x47
  1205  000048                     	ds	8
  1206  000050                     i2vfpfcnvrt@c:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x4F
  1210  000050                     	ds	1
  1211  000051                     ?i2_vfprintf:
  1212                           	callstack 0
  1213  000051                     i2vfprintf@fp:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x50
  1217  000051                     	ds	2
  1218  000053                     i2vfprintf@fmt:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x52
  1222  000053                     	ds	2
  1223  000055                     i2vfprintf@ap:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x54
  1227  000055                     	ds	2
  1228  000057                     i2vfprintf@cfmt:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x56
  1232  000057                     	ds	2
  1233  000059                     ?i2_sprintf:
  1234                           	callstack 0
  1235  000059                     i2sprintf@s:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x58
  1239  000059                     	ds	2
  1240  00005B                     i2sprintf@fmt:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x5A
  1244  00005B                     	ds	4
  1245  00005F                     
  1246                           ; 1 bytes @ 0x5E
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 82 in file "main_LCD_Servos_I2C_Serial.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels required when called:   21
  1272 ;; This function calls:
  1273 ;;		_settings
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text0
  1280  003EF6                     __ptext0:
  1281                           	callstack 0
  1282  003EF6                     _main:
  1283                           	callstack 10
  1284  003EF6                     
  1285                           ;main_LCD_Servos_I2C_Serial.c: 83:     settings();
  1286  003EF6  EC40  F011         	call	_settings	;wreg free
  1287  003EFA                     l151:
  1288  003EFA  EF7D  F01F         	goto	l151
  1289  003EFE  EF07  F000         	goto	start
  1290  003F02                     __end_of_main:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _settings *****************
  1294 ;; Defined at:
  1295 ;;		line 89 in file "main_LCD_Servos_I2C_Serial.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1311 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1312 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1313 ;;Total ram usage:        2 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:   20
  1316 ;; This function calls:
  1317 ;;		_SettingsLCD
  1318 ;;		_mover_servo
  1319 ;;		_setPWMFreq
  1320 ;;		_sprintf
  1321 ;;		_start
  1322 ;;		_writeI2C
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text1
  1329  002280                     __ptext1:
  1330                           	callstack 0
  1331  002280                     _settings:
  1332                           	callstack 10
  1333  002280                     
  1334                           ;main_LCD_Servos_I2C_Serial.c: 90:     OSCCON = 0x72;
  1335  002280  0E72               	movlw	114
  1336  002282  6ED3               	movwf	211,c	;volatile
  1337                           
  1338                           ;main_LCD_Servos_I2C_Serial.c: 91:     ADCON1 = 0x0F;
  1339  002284  0E0F               	movlw	15
  1340  002286  6EC1               	movwf	193,c	;volatile
  1341  002288                     
  1342                           ;main_LCD_Servos_I2C_Serial.c: 92:     TRISBbits.RB7=1;
  1343  002288  8E93               	bsf	147,7,c	;volatile
  1344  00228A                     
  1345                           ;main_LCD_Servos_I2C_Serial.c: 93:     TRISBbits.RB6=0;
  1346  00228A  9C93               	bcf	147,6,c	;volatile
  1347                           
  1348                           ;main_LCD_Servos_I2C_Serial.c: 94:     OSCCON = 0x72;
  1349  00228C  0E72               	movlw	114
  1350  00228E  6ED3               	movwf	211,c	;volatile
  1351                           
  1352                           ;main_LCD_Servos_I2C_Serial.c: 95:     ADCON1 = 0x0F;
  1353  002290  0E0F               	movlw	15
  1354  002292  6EC1               	movwf	193,c	;volatile
  1355                           
  1356                           ;main_LCD_Servos_I2C_Serial.c: 96:     TRISD = 0;
  1357  002294  0E00               	movlw	0
  1358  002296  6E95               	movwf	149,c	;volatile
  1359                           
  1360                           ;main_LCD_Servos_I2C_Serial.c: 97:     TRISE = 0;
  1361  002298  0E00               	movlw	0
  1362  00229A  6E96               	movwf	150,c	;volatile
  1363                           
  1364                           ;main_LCD_Servos_I2C_Serial.c: 98:     LATD = 0;
  1365  00229C  0E00               	movlw	0
  1366  00229E  6E8C               	movwf	140,c	;volatile
  1367                           
  1368                           ;main_LCD_Servos_I2C_Serial.c: 99:     LATE = 0;
  1369  0022A0  0E00               	movlw	0
  1370  0022A2  6E8D               	movwf	141,c	;volatile
  1371  0022A4                     
  1372                           ;main_LCD_Servos_I2C_Serial.c: 101:     TRISBbits.RB0=1;
  1373  0022A4  8093               	bsf	147,0,c	;volatile
  1374  0022A6                     
  1375                           ;main_LCD_Servos_I2C_Serial.c: 102:     TRISBbits.RB1=1;
  1376  0022A6  8293               	bsf	147,1,c	;volatile
  1377                           
  1378                           ;main_LCD_Servos_I2C_Serial.c: 103:     SSPSTAT = 0x80;
  1379  0022A8  0E80               	movlw	128
  1380  0022AA  6EC7               	movwf	199,c	;volatile
  1381                           
  1382                           ;main_LCD_Servos_I2C_Serial.c: 104:     SSPCON1 = 0x28;
  1383  0022AC  0E28               	movlw	40
  1384  0022AE  6EC6               	movwf	198,c	;volatile
  1385                           
  1386                           ;main_LCD_Servos_I2C_Serial.c: 105:     SSPCON2 = 0x00;
  1387  0022B0  0E00               	movlw	0
  1388  0022B2  6EC5               	movwf	197,c	;volatile
  1389                           
  1390                           ;main_LCD_Servos_I2C_Serial.c: 106:     SSPADD = 0x13;
  1391  0022B4  0E13               	movlw	19
  1392  0022B6  6EC8               	movwf	200,c	;volatile
  1393  0022B8                     
  1394                           ;main_LCD_Servos_I2C_Serial.c: 108:     TRISCbits.TRISC6 = 0;
  1395  0022B8  9C94               	bcf	148,6,c	;volatile
  1396  0022BA                     
  1397                           ;main_LCD_Servos_I2C_Serial.c: 109:     TRISCbits.TRISC7 = 1;
  1398  0022BA  8E94               	bsf	148,7,c	;volatile
  1399                           
  1400                           ;main_LCD_Servos_I2C_Serial.c: 110:     SPBRG = 0x0C;
  1401  0022BC  0E0C               	movlw	12
  1402  0022BE  6EAF               	movwf	175,c	;volatile
  1403                           
  1404                           ;main_LCD_Servos_I2C_Serial.c: 111:     RCSTA = 0x90;
  1405  0022C0  0E90               	movlw	144
  1406  0022C2  6EAB               	movwf	171,c	;volatile
  1407                           
  1408                           ;main_LCD_Servos_I2C_Serial.c: 112:     TXSTA = 0x20;
  1409  0022C4  0E20               	movlw	32
  1410  0022C6  6EAC               	movwf	172,c	;volatile
  1411  0022C8                     
  1412                           ;main_LCD_Servos_I2C_Serial.c: 114:     writeI2C(0x80, 0x00,0x80,1);
  1413  0022C8  0E00               	movlw	0
  1414  0022CA  0100               	movlb	0	; () banked
  1415  0022CC  6F7F               	movwf	writeI2C@Register& (0+255),b
  1416  0022CE  0E80               	movlw	128
  1417  0022D0  6F80               	movwf	writeI2C@Data& (0+255),b
  1418  0022D2  0E00               	movlw	0
  1419  0022D4  6F81               	movwf	(writeI2C@Data+1)& (0+255),b
  1420  0022D6  0E00               	movlw	0
  1421  0022D8  6F83               	movwf	(writeI2C@bytes+1)& (0+255),b
  1422  0022DA  0E01               	movlw	1
  1423  0022DC  6F82               	movwf	writeI2C@bytes& (0+255),b
  1424  0022DE  0E80               	movlw	128
  1425  0022E0  ECD7  F01B         	call	_writeI2C
  1426  0022E4                     
  1427                           ;main_LCD_Servos_I2C_Serial.c: 115:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1428  0022E4  0E1A               	movlw	26
  1429  0022E6  0101               	movlb	1	; () banked
  1430  0022E8  6F93               	movwf	??_settings& (0+255),b
  1431  0022EA  0EF8               	movlw	248
  1432  0022EC                     u5557:
  1433  0022EC  2EE8               	decfsz	wreg,f,c
  1434  0022EE  D7FE               	bra	u5557
  1435  0022F0  2F93               	decfsz	??_settings& (0+255),f,b
  1436  0022F2  D7FC               	bra	u5557
  1437  0022F4  F000               	nop	
  1438  0022F6                     
  1439                           ;main_LCD_Servos_I2C_Serial.c: 117:     setPWMFreq(1000);
  1440  0022F6  0E00               	movlw	0
  1441  0022F8  0100               	movlb	0	; () banked
  1442  0022FA  6F96               	movwf	setPWMFreq@freq& (0+255),b
  1443  0022FC  0E00               	movlw	0
  1444  0022FE  6F97               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1445  002300  0E7A               	movlw	122
  1446  002302  6F98               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1447  002304  0E44               	movlw	68
  1448  002306  6F99               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1449  002308  ECB6  F00D         	call	_setPWMFreq	;wreg free
  1450  00230C                     
  1451                           ;main_LCD_Servos_I2C_Serial.c: 119:     setPWMFreq(50);
  1452  00230C  0E00               	movlw	0
  1453  00230E  0100               	movlb	0	; () banked
  1454  002310  6F96               	movwf	setPWMFreq@freq& (0+255),b
  1455  002312  0E00               	movlw	0
  1456  002314  6F97               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1457  002316  0E48               	movlw	72
  1458  002318  6F98               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1459  00231A  0E42               	movlw	66
  1460  00231C  6F99               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1461  00231E  ECB6  F00D         	call	_setPWMFreq	;wreg free
  1462  002322                     
  1463                           ;main_LCD_Servos_I2C_Serial.c: 120:     _delay((unsigned long)((300)*(8000000/4000.0)));
  1464  002322  0E04               	movlw	4
  1465  002324  0101               	movlb	1	; () banked
  1466  002326  6F94               	movwf	(??_settings+1)& (0+255),b
  1467  002328  0E0C               	movlw	12
  1468  00232A  6F93               	movwf	??_settings& (0+255),b
  1469  00232C  0E33               	movlw	51
  1470  00232E                     u5567:
  1471  00232E  2EE8               	decfsz	wreg,f,c
  1472  002330  D7FE               	bra	u5567
  1473  002332  2F93               	decfsz	??_settings& (0+255),f,b
  1474  002334  D7FC               	bra	u5567
  1475  002336  2F94               	decfsz	(??_settings+1)& (0+255),f,b
  1476  002338  D7FA               	bra	u5567
  1477  00233A  D000               	nop2	
  1478  00233C                     
  1479                           ;main_LCD_Servos_I2C_Serial.c: 122:     SettingsLCD(0x02);
  1480  00233C  0E02               	movlw	2
  1481  00233E  EC60  F01F         	call	_SettingsLCD
  1482  002342                     
  1483                           ;main_LCD_Servos_I2C_Serial.c: 123:     SettingsLCD(0x06);
  1484  002342  0E06               	movlw	6
  1485  002344  EC60  F01F         	call	_SettingsLCD
  1486  002348                     
  1487                           ;main_LCD_Servos_I2C_Serial.c: 124:     SettingsLCD(0x0F);
  1488  002348  0E0F               	movlw	15
  1489  00234A  EC60  F01F         	call	_SettingsLCD
  1490  00234E                     
  1491                           ;main_LCD_Servos_I2C_Serial.c: 125:     SettingsLCD(0x28);
  1492  00234E  0E28               	movlw	40
  1493  002350  EC60  F01F         	call	_SettingsLCD
  1494  002354                     
  1495                           ;main_LCD_Servos_I2C_Serial.c: 126:     SettingsLCD(0x01);
  1496  002354  0E01               	movlw	1
  1497  002356  EC60  F01F         	call	_SettingsLCD
  1498  00235A                     
  1499                           ;main_LCD_Servos_I2C_Serial.c: 128:     GIE = 1;
  1500  00235A  8EF2               	bsf	4082,7,c	;volatile
  1501  00235C                     
  1502                           ;main_LCD_Servos_I2C_Serial.c: 129:     PEIE = 1;
  1503  00235C  8CF2               	bsf	4082,6,c	;volatile
  1504  00235E                     
  1505                           ;main_LCD_Servos_I2C_Serial.c: 130:     RCIE = 1;
  1506  00235E  8A9D               	bsf	3997,5,c	;volatile
  1507  002360                     
  1508                           ;main_LCD_Servos_I2C_Serial.c: 131:     RCIF = 0;
  1509  002360  9A9E               	bcf	3998,5,c	;volatile
  1510  002362                     
  1511                           ;main_LCD_Servos_I2C_Serial.c: 133:     sprintf(text,"Settings");
  1512  002362  0E1A               	movlw	low _text
  1513  002364  0101               	movlb	1	; () banked
  1514  002366  6F7D               	movwf	sprintf@s& (0+255),b
  1515  002368  0E01               	movlw	high _text
  1516  00236A  6F7E               	movwf	(sprintf@s+1)& (0+255),b
  1517  00236C  0E59               	movlw	low STR_1
  1518  00236E  6F7F               	movwf	sprintf@fmt& (0+255),b
  1519  002370  0E08               	movlw	high STR_1
  1520  002372  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  1521  002374  EC38  F01D         	call	_sprintf	;wreg free
  1522  002378                     
  1523                           ;main_LCD_Servos_I2C_Serial.c: 134:     start();
  1524  002378  ECE0  F01C         	call	_start	;wreg free
  1525  00237C                     
  1526                           ;main_LCD_Servos_I2C_Serial.c: 135:     PORTBbits.RB6=1;
  1527  00237C  8C81               	bsf	129,6,c	;volatile
  1528  00237E                     
  1529                           ;main_LCD_Servos_I2C_Serial.c: 136:     _delay((unsigned long)((1000)*(8000000/4000.0)))
      +                          ;
  1530  00237E  0E0B               	movlw	11
  1531  002380  0101               	movlb	1	; () banked
  1532  002382  6F94               	movwf	(??_settings+1)& (0+255),b
  1533  002384  0E26               	movlw	38
  1534  002386  6F93               	movwf	??_settings& (0+255),b
  1535  002388  0E5D               	movlw	93
  1536  00238A                     u5577:
  1537  00238A  2EE8               	decfsz	wreg,f,c
  1538  00238C  D7FE               	bra	u5577
  1539  00238E  2F93               	decfsz	??_settings& (0+255),f,b
  1540  002390  D7FC               	bra	u5577
  1541  002392  2F94               	decfsz	(??_settings+1)& (0+255),f,b
  1542  002394  D7FA               	bra	u5577
  1543  002396  D000               	nop2	
  1544  002398                     
  1545                           ;main_LCD_Servos_I2C_Serial.c: 137:     PORTBbits.RB6=0;
  1546  002398  9C81               	bcf	129,6,c	;volatile
  1547  00239A                     
  1548                           ;main_LCD_Servos_I2C_Serial.c: 138:     mover_servo(0,90);
  1549  00239A  0E00               	movlw	0
  1550  00239C  0101               	movlb	1	; () banked
  1551  00239E  6F8E               	movwf	(mover_servo@servo+1)& (0+255),b
  1552  0023A0  0E00               	movlw	0
  1553  0023A2  6F8D               	movwf	mover_servo@servo& (0+255),b
  1554  0023A4  0E00               	movlw	0
  1555  0023A6  6F90               	movwf	(mover_servo@angulo+1)& (0+255),b
  1556  0023A8  0E5A               	movlw	90
  1557  0023AA  6F8F               	movwf	mover_servo@angulo& (0+255),b
  1558  0023AC  EC71  F01A         	call	_mover_servo	;wreg free
  1559  0023B0                     
  1560                           ;main_LCD_Servos_I2C_Serial.c: 139:     mover_servo(1,90);
  1561  0023B0  0E00               	movlw	0
  1562  0023B2  0101               	movlb	1	; () banked
  1563  0023B4  6F8E               	movwf	(mover_servo@servo+1)& (0+255),b
  1564  0023B6  0E01               	movlw	1
  1565  0023B8  6F8D               	movwf	mover_servo@servo& (0+255),b
  1566  0023BA  0E00               	movlw	0
  1567  0023BC  6F90               	movwf	(mover_servo@angulo+1)& (0+255),b
  1568  0023BE  0E5A               	movlw	90
  1569  0023C0  6F8F               	movwf	mover_servo@angulo& (0+255),b
  1570  0023C2  EC71  F01A         	call	_mover_servo	;wreg free
  1571  0023C6                     
  1572                           ;main_LCD_Servos_I2C_Serial.c: 140:     mover_servo(2,90);
  1573  0023C6  0E00               	movlw	0
  1574  0023C8  0101               	movlb	1	; () banked
  1575  0023CA  6F8E               	movwf	(mover_servo@servo+1)& (0+255),b
  1576  0023CC  0E02               	movlw	2
  1577  0023CE  6F8D               	movwf	mover_servo@servo& (0+255),b
  1578  0023D0  0E00               	movlw	0
  1579  0023D2  6F90               	movwf	(mover_servo@angulo+1)& (0+255),b
  1580  0023D4  0E5A               	movlw	90
  1581  0023D6  6F8F               	movwf	mover_servo@angulo& (0+255),b
  1582  0023D8  EC71  F01A         	call	_mover_servo	;wreg free
  1583  0023DC                     
  1584                           ;main_LCD_Servos_I2C_Serial.c: 141:     mover_servo(3,90);
  1585  0023DC  0E00               	movlw	0
  1586  0023DE  0101               	movlb	1	; () banked
  1587  0023E0  6F8E               	movwf	(mover_servo@servo+1)& (0+255),b
  1588  0023E2  0E03               	movlw	3
  1589  0023E4  6F8D               	movwf	mover_servo@servo& (0+255),b
  1590  0023E6  0E00               	movlw	0
  1591  0023E8  6F90               	movwf	(mover_servo@angulo+1)& (0+255),b
  1592  0023EA  0E5A               	movlw	90
  1593  0023EC  6F8F               	movwf	mover_servo@angulo& (0+255),b
  1594  0023EE  EC71  F01A         	call	_mover_servo	;wreg free
  1595  0023F2                     
  1596                           ;main_LCD_Servos_I2C_Serial.c: 142:     mover_servo(4,90);
  1597  0023F2  0E00               	movlw	0
  1598  0023F4  0101               	movlb	1	; () banked
  1599  0023F6  6F8E               	movwf	(mover_servo@servo+1)& (0+255),b
  1600  0023F8  0E04               	movlw	4
  1601  0023FA  6F8D               	movwf	mover_servo@servo& (0+255),b
  1602  0023FC  0E00               	movlw	0
  1603  0023FE  6F90               	movwf	(mover_servo@angulo+1)& (0+255),b
  1604  002400  0E5A               	movlw	90
  1605  002402  6F8F               	movwf	mover_servo@angulo& (0+255),b
  1606  002404  EC71  F01A         	call	_mover_servo	;wreg free
  1607  002408                     
  1608                           ;main_LCD_Servos_I2C_Serial.c: 143:     mover_servo(5,90);
  1609  002408  0E00               	movlw	0
  1610  00240A  0101               	movlb	1	; () banked
  1611  00240C  6F8E               	movwf	(mover_servo@servo+1)& (0+255),b
  1612  00240E  0E05               	movlw	5
  1613  002410  6F8D               	movwf	mover_servo@servo& (0+255),b
  1614  002412  0E00               	movlw	0
  1615  002414  6F90               	movwf	(mover_servo@angulo+1)& (0+255),b
  1616  002416  0E5A               	movlw	90
  1617  002418  6F8F               	movwf	mover_servo@angulo& (0+255),b
  1618  00241A  EC71  F01A         	call	_mover_servo	;wreg free
  1619  00241E  0012               	return		;funcret
  1620  002420                     __end_of_settings:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _setPWMFreq *****************
  1624 ;; Defined at:
  1625 ;;		line 347 in file "main_LCD_Servos_I2C_Serial.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  freq            4   54[BANK0 ] float 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  prescaleval     4   61[BANK0 ] float 
  1630 ;;  newmode         1   60[BANK0 ] unsigned char 
  1631 ;;  prescale        1   59[BANK0 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         0       4       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1644 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1645 ;;Total ram usage:       11 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:   14
  1648 ;; This function calls:
  1649 ;;		___fladd
  1650 ;;		___fldiv
  1651 ;;		___flge
  1652 ;;		___flsub
  1653 ;;		___fltol
  1654 ;;		_readI2C
  1655 ;;		_writeI2C
  1656 ;; This function is called by:
  1657 ;;		_settings
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text2
  1662  001B6C                     __ptext2:
  1663                           	callstack 0
  1664  001B6C                     _setPWMFreq:
  1665                           	callstack 15
  1666  001B6C                     
  1667                           ;main_LCD_Servos_I2C_Serial.c: 349:     if (freq < 1) freq = 1;
  1668  001B6C  C096  F07D         	movff	setPWMFreq@freq,___flge@ff1
  1669  001B70  C097  F07E         	movff	setPWMFreq@freq+1,___flge@ff1+1
  1670  001B74  C098  F07F         	movff	setPWMFreq@freq+2,___flge@ff1+2
  1671  001B78  C099  F080         	movff	setPWMFreq@freq+3,___flge@ff1+3
  1672  001B7C  0E00               	movlw	0
  1673  001B7E  0100               	movlb	0	; () banked
  1674  001B80  6F81               	movwf	___flge@ff2& (0+255),b
  1675  001B82  0E00               	movlw	0
  1676  001B84  6F82               	movwf	(___flge@ff2+1)& (0+255),b
  1677  001B86  0E80               	movlw	128
  1678  001B88  6F83               	movwf	(___flge@ff2+2)& (0+255),b
  1679  001B8A  0E3F               	movlw	63
  1680  001B8C  6F84               	movwf	(___flge@ff2+3)& (0+255),b
  1681  001B8E  EC47  F016         	call	___flge	;wreg free
  1682  001B92  0100               	movlb	0	; () banked
  1683  001B94  B0D8               	btfsc	status,0,c
  1684  001B96  EFCF  F00D         	goto	u4561
  1685  001B9A  EFD1  F00D         	goto	u4560
  1686  001B9E                     u4561:
  1687  001B9E  EFD9  F00D         	goto	l4129
  1688  001BA2                     u4560:
  1689  001BA2                     
  1690                           ; BSR set to: 0
  1691  001BA2  0E00               	movlw	0
  1692  001BA4  6F96               	movwf	setPWMFreq@freq& (0+255),b
  1693  001BA6  0E00               	movlw	0
  1694  001BA8  6F97               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1695  001BAA  0E80               	movlw	128
  1696  001BAC  6F98               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1697  001BAE  0E3F               	movlw	63
  1698  001BB0  6F99               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1699  001BB2                     l4129:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;main_LCD_Servos_I2C_Serial.c: 350:     if (freq > 3500) freq = 3500;
  1703  001BB2  0E00               	movlw	0
  1704  001BB4  6F7D               	movwf	___flge@ff1& (0+255),b
  1705  001BB6  0EC0               	movlw	192
  1706  001BB8  6F7E               	movwf	(___flge@ff1+1)& (0+255),b
  1707  001BBA  0E5A               	movlw	90
  1708  001BBC  6F7F               	movwf	(___flge@ff1+2)& (0+255),b
  1709  001BBE  0E45               	movlw	69
  1710  001BC0  6F80               	movwf	(___flge@ff1+3)& (0+255),b
  1711  001BC2  C096  F081         	movff	setPWMFreq@freq,___flge@ff2
  1712  001BC6  C097  F082         	movff	setPWMFreq@freq+1,___flge@ff2+1
  1713  001BCA  C098  F083         	movff	setPWMFreq@freq+2,___flge@ff2+2
  1714  001BCE  C099  F084         	movff	setPWMFreq@freq+3,___flge@ff2+3
  1715  001BD2  EC47  F016         	call	___flge	;wreg free
  1716  001BD6  0100               	movlb	0	; () banked
  1717  001BD8  B0D8               	btfsc	status,0,c
  1718  001BDA  EFF1  F00D         	goto	u4571
  1719  001BDE  EFF3  F00D         	goto	u4570
  1720  001BE2                     u4571:
  1721  001BE2  EFFB  F00D         	goto	l269
  1722  001BE6                     u4570:
  1723  001BE6                     
  1724                           ; BSR set to: 0
  1725  001BE6  0E00               	movlw	0
  1726  001BE8  6F96               	movwf	setPWMFreq@freq& (0+255),b
  1727  001BEA  0EC0               	movlw	192
  1728  001BEC  6F97               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1729  001BEE  0E5A               	movlw	90
  1730  001BF0  6F98               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1731  001BF2  0E45               	movlw	69
  1732  001BF4  6F99               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1733  001BF6                     l269:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main_LCD_Servos_I2C_Serial.c: 355:     float prescaleval = 26075000;
  1737  001BF6  0EBC               	movlw	188
  1738  001BF8  6F9D               	movwf	setPWMFreq@prescaleval& (0+255),b
  1739  001BFA  0EEF               	movlw	239
  1740  001BFC  6F9E               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1741  001BFE  0EC6               	movlw	198
  1742  001C00  6F9F               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1743  001C02  0E4B               	movlw	75
  1744  001C04  6FA0               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1745  001C06                     
  1746                           ; BSR set to: 0
  1747                           ;main_LCD_Servos_I2C_Serial.c: 356:     prescaleval /= freq;
  1748  001C06  C09D  F07D         	movff	setPWMFreq@prescaleval,___fldiv@b
  1749  001C0A  C09E  F07E         	movff	setPWMFreq@prescaleval+1,___fldiv@b+1
  1750  001C0E  C09F  F07F         	movff	setPWMFreq@prescaleval+2,___fldiv@b+2
  1751  001C12  C0A0  F080         	movff	setPWMFreq@prescaleval+3,___fldiv@b+3
  1752  001C16  C096  F081         	movff	setPWMFreq@freq,___fldiv@a
  1753  001C1A  C097  F082         	movff	setPWMFreq@freq+1,___fldiv@a+1
  1754  001C1E  C098  F083         	movff	setPWMFreq@freq+2,___fldiv@a+2
  1755  001C22  C099  F084         	movff	setPWMFreq@freq+3,___fldiv@a+3
  1756  001C26  EC04  F009         	call	___fldiv	;wreg free
  1757  001C2A  C07D  F09D         	movff	?___fldiv,setPWMFreq@prescaleval
  1758  001C2E  C07E  F09E         	movff	?___fldiv+1,setPWMFreq@prescaleval+1
  1759  001C32  C07F  F09F         	movff	?___fldiv+2,setPWMFreq@prescaleval+2
  1760  001C36  C080  F0A0         	movff	?___fldiv+3,setPWMFreq@prescaleval+3
  1761  001C3A                     
  1762                           ;main_LCD_Servos_I2C_Serial.c: 358:     prescaleval += 2048;
  1763  001C3A  C09D  F07D         	movff	setPWMFreq@prescaleval,___fladd@b
  1764  001C3E  C09E  F07E         	movff	setPWMFreq@prescaleval+1,___fladd@b+1
  1765  001C42  C09F  F07F         	movff	setPWMFreq@prescaleval+2,___fladd@b+2
  1766  001C46  C0A0  F080         	movff	setPWMFreq@prescaleval+3,___fladd@b+3
  1767  001C4A  0E00               	movlw	0
  1768  001C4C  0100               	movlb	0	; () banked
  1769  001C4E  6F81               	movwf	___fladd@a& (0+255),b
  1770  001C50  0E00               	movlw	0
  1771  001C52  6F82               	movwf	(___fladd@a+1)& (0+255),b
  1772  001C54  0E00               	movlw	0
  1773  001C56  6F83               	movwf	(___fladd@a+2)& (0+255),b
  1774  001C58  0E45               	movlw	69
  1775  001C5A  6F84               	movwf	(___fladd@a+3)& (0+255),b
  1776  001C5C  ECA3  F006         	call	___fladd	;wreg free
  1777  001C60  C07D  F09D         	movff	?___fladd,setPWMFreq@prescaleval
  1778  001C64  C07E  F09E         	movff	?___fladd+1,setPWMFreq@prescaleval+1
  1779  001C68  C07F  F09F         	movff	?___fladd+2,setPWMFreq@prescaleval+2
  1780  001C6C  C080  F0A0         	movff	?___fladd+3,setPWMFreq@prescaleval+3
  1781  001C70                     
  1782                           ;main_LCD_Servos_I2C_Serial.c: 359:     prescaleval /= 4096;
  1783  001C70  C09D  F07D         	movff	setPWMFreq@prescaleval,___fldiv@b
  1784  001C74  C09E  F07E         	movff	setPWMFreq@prescaleval+1,___fldiv@b+1
  1785  001C78  C09F  F07F         	movff	setPWMFreq@prescaleval+2,___fldiv@b+2
  1786  001C7C  C0A0  F080         	movff	setPWMFreq@prescaleval+3,___fldiv@b+3
  1787  001C80  0E00               	movlw	0
  1788  001C82  0100               	movlb	0	; () banked
  1789  001C84  6F81               	movwf	___fldiv@a& (0+255),b
  1790  001C86  0E00               	movlw	0
  1791  001C88  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  1792  001C8A  0E80               	movlw	128
  1793  001C8C  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  1794  001C8E  0E45               	movlw	69
  1795  001C90  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  1796  001C92  EC04  F009         	call	___fldiv	;wreg free
  1797  001C96  C07D  F09D         	movff	?___fldiv,setPWMFreq@prescaleval
  1798  001C9A  C07E  F09E         	movff	?___fldiv+1,setPWMFreq@prescaleval+1
  1799  001C9E  C07F  F09F         	movff	?___fldiv+2,setPWMFreq@prescaleval+2
  1800  001CA2  C080  F0A0         	movff	?___fldiv+3,setPWMFreq@prescaleval+3
  1801  001CA6                     
  1802                           ;main_LCD_Servos_I2C_Serial.c: 360:     prescaleval -= 1;
  1803  001CA6  C09D  F08D         	movff	setPWMFreq@prescaleval,___flsub@b
  1804  001CAA  C09E  F08E         	movff	setPWMFreq@prescaleval+1,___flsub@b+1
  1805  001CAE  C09F  F08F         	movff	setPWMFreq@prescaleval+2,___flsub@b+2
  1806  001CB2  C0A0  F090         	movff	setPWMFreq@prescaleval+3,___flsub@b+3
  1807  001CB6  0E00               	movlw	0
  1808  001CB8  0100               	movlb	0	; () banked
  1809  001CBA  6F91               	movwf	___flsub@a& (0+255),b
  1810  001CBC  0E00               	movlw	0
  1811  001CBE  6F92               	movwf	(___flsub@a+1)& (0+255),b
  1812  001CC0  0E80               	movlw	128
  1813  001CC2  6F93               	movwf	(___flsub@a+2)& (0+255),b
  1814  001CC4  0E3F               	movlw	63
  1815  001CC6  6F94               	movwf	(___flsub@a+3)& (0+255),b
  1816  001CC8  ECB3  F01D         	call	___flsub	;wreg free
  1817  001CCC  C08D  F09D         	movff	?___flsub,setPWMFreq@prescaleval
  1818  001CD0  C08E  F09E         	movff	?___flsub+1,setPWMFreq@prescaleval+1
  1819  001CD4  C08F  F09F         	movff	?___flsub+2,setPWMFreq@prescaleval+2
  1820  001CD8  C090  F0A0         	movff	?___flsub+3,setPWMFreq@prescaleval+3
  1821  001CDC                     
  1822                           ;main_LCD_Servos_I2C_Serial.c: 361:     if (prescaleval < 3) prescaleval = 3;
  1823  001CDC  C09D  F07D         	movff	setPWMFreq@prescaleval,___flge@ff1
  1824  001CE0  C09E  F07E         	movff	setPWMFreq@prescaleval+1,___flge@ff1+1
  1825  001CE4  C09F  F07F         	movff	setPWMFreq@prescaleval+2,___flge@ff1+2
  1826  001CE8  C0A0  F080         	movff	setPWMFreq@prescaleval+3,___flge@ff1+3
  1827  001CEC  0E00               	movlw	0
  1828  001CEE  0100               	movlb	0	; () banked
  1829  001CF0  6F81               	movwf	___flge@ff2& (0+255),b
  1830  001CF2  0E00               	movlw	0
  1831  001CF4  6F82               	movwf	(___flge@ff2+1)& (0+255),b
  1832  001CF6  0E40               	movlw	64
  1833  001CF8  6F83               	movwf	(___flge@ff2+2)& (0+255),b
  1834  001CFA  0E40               	movlw	64
  1835  001CFC  6F84               	movwf	(___flge@ff2+3)& (0+255),b
  1836  001CFE  EC47  F016         	call	___flge	;wreg free
  1837  001D02  0100               	movlb	0	; () banked
  1838  001D04  B0D8               	btfsc	status,0,c
  1839  001D06  EF87  F00E         	goto	u4581
  1840  001D0A  EF89  F00E         	goto	u4580
  1841  001D0E                     u4581:
  1842  001D0E  EF91  F00E         	goto	l4145
  1843  001D12                     u4580:
  1844  001D12                     
  1845                           ; BSR set to: 0
  1846  001D12  0E00               	movlw	0
  1847  001D14  6F9D               	movwf	setPWMFreq@prescaleval& (0+255),b
  1848  001D16  0E00               	movlw	0
  1849  001D18  6F9E               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1850  001D1A  0E40               	movlw	64
  1851  001D1C  6F9F               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1852  001D1E  0E40               	movlw	64
  1853  001D20  6FA0               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1854  001D22                     l4145:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;main_LCD_Servos_I2C_Serial.c: 362:     if (prescaleval > 255) prescaleval = 255;
  1858  001D22  0E00               	movlw	0
  1859  001D24  6F7D               	movwf	___flge@ff1& (0+255),b
  1860  001D26  0E00               	movlw	0
  1861  001D28  6F7E               	movwf	(___flge@ff1+1)& (0+255),b
  1862  001D2A  0E7F               	movlw	127
  1863  001D2C  6F7F               	movwf	(___flge@ff1+2)& (0+255),b
  1864  001D2E  0E43               	movlw	67
  1865  001D30  6F80               	movwf	(___flge@ff1+3)& (0+255),b
  1866  001D32  C09D  F081         	movff	setPWMFreq@prescaleval,___flge@ff2
  1867  001D36  C09E  F082         	movff	setPWMFreq@prescaleval+1,___flge@ff2+1
  1868  001D3A  C09F  F083         	movff	setPWMFreq@prescaleval+2,___flge@ff2+2
  1869  001D3E  C0A0  F084         	movff	setPWMFreq@prescaleval+3,___flge@ff2+3
  1870  001D42  EC47  F016         	call	___flge	;wreg free
  1871  001D46  0100               	movlb	0	; () banked
  1872  001D48  B0D8               	btfsc	status,0,c
  1873  001D4A  EFA9  F00E         	goto	u4591
  1874  001D4E  EFAB  F00E         	goto	u4590
  1875  001D52                     u4591:
  1876  001D52  EFB3  F00E         	goto	l4149
  1877  001D56                     u4590:
  1878  001D56                     
  1879                           ; BSR set to: 0
  1880  001D56  0E00               	movlw	0
  1881  001D58  6F9D               	movwf	setPWMFreq@prescaleval& (0+255),b
  1882  001D5A  0E00               	movlw	0
  1883  001D5C  6F9E               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1884  001D5E  0E7F               	movlw	127
  1885  001D60  6F9F               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1886  001D62  0E43               	movlw	67
  1887  001D64  6FA0               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1888  001D66                     l4149:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;main_LCD_Servos_I2C_Serial.c: 363:     unsigned char prescale = (unsigned char) prescal
      +                          eval;
  1892  001D66  C09D  F07D         	movff	setPWMFreq@prescaleval,___fltol@f1
  1893  001D6A  C09E  F07E         	movff	setPWMFreq@prescaleval+1,___fltol@f1+1
  1894  001D6E  C09F  F07F         	movff	setPWMFreq@prescaleval+2,___fltol@f1+2
  1895  001D72  C0A0  F080         	movff	setPWMFreq@prescaleval+3,___fltol@f1+3
  1896  001D76  ECC3  F015         	call	___fltol	;wreg free
  1897  001D7A  0100               	movlb	0	; () banked
  1898  001D7C  517D               	movf	?___fltol& (0+255),w,b
  1899  001D7E  6F9B               	movwf	setPWMFreq@prescale& (0+255),b
  1900  001D80                     
  1901                           ; BSR set to: 0
  1902                           ;main_LCD_Servos_I2C_Serial.c: 364:     readI2C(0x80, 0x00, &data1, 1);
  1903  001D80  0E00               	movlw	0
  1904  001D82  6F80               	movwf	readI2C@Register& (0+255),b
  1905  001D84  0EDF               	movlw	low _data1
  1906  001D86  6F81               	movwf	readI2C@Data& (0+255),b
  1907  001D88  0E00               	movlw	high _data1
  1908  001D8A  6F82               	movwf	(readI2C@Data+1)& (0+255),b
  1909  001D8C  0E00               	movlw	0
  1910  001D8E  6F84               	movwf	(readI2C@bytes+1)& (0+255),b
  1911  001D90  0E01               	movlw	1
  1912  001D92  6F83               	movwf	readI2C@bytes& (0+255),b
  1913  001D94  0E80               	movlw	128
  1914  001D96  EC0F  F01A         	call	_readI2C
  1915  001D9A                     
  1916                           ;main_LCD_Servos_I2C_Serial.c: 366:     unsigned char newmode = (data1 & ~0x80) | 0x10;
  1917  001D9A  0100               	movlb	0	; () banked
  1918  001D9C  51DF               	movf	_data1& (0+255),w,b
  1919  001D9E  0B7F               	andlw	127
  1920  001DA0  0910               	iorlw	16
  1921  001DA2  6F9C               	movwf	setPWMFreq@newmode& (0+255),b
  1922  001DA4                     
  1923                           ; BSR set to: 0
  1924                           ;main_LCD_Servos_I2C_Serial.c: 367:     writeI2C(0x80, 0x00, &newmode,1);
  1925  001DA4  0E00               	movlw	0
  1926  001DA6  6F7F               	movwf	writeI2C@Register& (0+255),b
  1927  001DA8  0E9C               	movlw	low setPWMFreq@newmode
  1928  001DAA  6F80               	movwf	writeI2C@Data& (0+255),b
  1929  001DAC  0E00               	movlw	high setPWMFreq@newmode
  1930  001DAE  6F81               	movwf	(writeI2C@Data+1)& (0+255),b
  1931  001DB0  0E00               	movlw	0
  1932  001DB2  6F83               	movwf	(writeI2C@bytes+1)& (0+255),b
  1933  001DB4  0E01               	movlw	1
  1934  001DB6  6F82               	movwf	writeI2C@bytes& (0+255),b
  1935  001DB8  0E80               	movlw	128
  1936  001DBA  ECD7  F01B         	call	_writeI2C
  1937  001DBE                     
  1938                           ;main_LCD_Servos_I2C_Serial.c: 368:     writeI2C(0x80, 0xFE, &prescale,1);
  1939  001DBE  0EFE               	movlw	254
  1940  001DC0  0100               	movlb	0	; () banked
  1941  001DC2  6F7F               	movwf	writeI2C@Register& (0+255),b
  1942  001DC4  0E9B               	movlw	low setPWMFreq@prescale
  1943  001DC6  6F80               	movwf	writeI2C@Data& (0+255),b
  1944  001DC8  0E00               	movlw	high setPWMFreq@prescale
  1945  001DCA  6F81               	movwf	(writeI2C@Data+1)& (0+255),b
  1946  001DCC  0E00               	movlw	0
  1947  001DCE  6F83               	movwf	(writeI2C@bytes+1)& (0+255),b
  1948  001DD0  0E01               	movlw	1
  1949  001DD2  6F82               	movwf	writeI2C@bytes& (0+255),b
  1950  001DD4  0E80               	movlw	128
  1951  001DD6  ECD7  F01B         	call	_writeI2C
  1952  001DDA                     
  1953                           ;main_LCD_Servos_I2C_Serial.c: 369:     writeI2C(0x80, 0x00, &data1,1);
  1954  001DDA  0E00               	movlw	0
  1955  001DDC  0100               	movlb	0	; () banked
  1956  001DDE  6F7F               	movwf	writeI2C@Register& (0+255),b
  1957  001DE0  0EDF               	movlw	low _data1
  1958  001DE2  6F80               	movwf	writeI2C@Data& (0+255),b
  1959  001DE4  0E00               	movlw	high _data1
  1960  001DE6  6F81               	movwf	(writeI2C@Data+1)& (0+255),b
  1961  001DE8  0E00               	movlw	0
  1962  001DEA  6F83               	movwf	(writeI2C@bytes+1)& (0+255),b
  1963  001DEC  0E01               	movlw	1
  1964  001DEE  6F82               	movwf	writeI2C@bytes& (0+255),b
  1965  001DF0  0E80               	movlw	128
  1966  001DF2  ECD7  F01B         	call	_writeI2C
  1967  001DF6                     
  1968                           ;main_LCD_Servos_I2C_Serial.c: 370:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1969  001DF6  0E0D               	movlw	13
  1970  001DF8  0100               	movlb	0	; () banked
  1971  001DFA  6F9A               	movwf	??_setPWMFreq& (0+255),b
  1972  001DFC  0EFB               	movlw	251
  1973  001DFE                     u5587:
  1974  001DFE  2EE8               	decfsz	wreg,f,c
  1975  001E00  D7FE               	bra	u5587
  1976  001E02  2F9A               	decfsz	??_setPWMFreq& (0+255),f,b
  1977  001E04  D7FC               	bra	u5587
  1978  001E06  D000               	nop2	
  1979  001E08                     
  1980                           ;main_LCD_Servos_I2C_Serial.c: 372:     d1=(data1 | 0x80 | 0x20);
  1981  001E08  0100               	movlb	0	; () banked
  1982  001E0A  51DF               	movf	_data1& (0+255),w,b
  1983  001E0C  09A0               	iorlw	160
  1984  001E0E  6FDE               	movwf	_d1& (0+255),b
  1985  001E10                     
  1986                           ; BSR set to: 0
  1987                           ;main_LCD_Servos_I2C_Serial.c: 373:     writeI2C(0x80, 0x00, &d1, 1);
  1988  001E10  0E00               	movlw	0
  1989  001E12  6F7F               	movwf	writeI2C@Register& (0+255),b
  1990  001E14  0EDE               	movlw	low _d1
  1991  001E16  6F80               	movwf	writeI2C@Data& (0+255),b
  1992  001E18  0E00               	movlw	high _d1
  1993  001E1A  6F81               	movwf	(writeI2C@Data+1)& (0+255),b
  1994  001E1C  0E00               	movlw	0
  1995  001E1E  6F83               	movwf	(writeI2C@bytes+1)& (0+255),b
  1996  001E20  0E01               	movlw	1
  1997  001E22  6F82               	movwf	writeI2C@bytes& (0+255),b
  1998  001E24  0E80               	movlw	128
  1999  001E26  ECD7  F01B         	call	_writeI2C
  2000  001E2A  0012               	return		;funcret
  2001  001E2C                     __end_of_setPWMFreq:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _readI2C *****************
  2005 ;; Defined at:
  2006 ;;		line 305 in file "main_LCD_Servos_I2C_Serial.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  Address         1    wreg     unsigned char 
  2009 ;;  Register        1   32[BANK0 ] unsigned char 
  2010 ;;  Data            2   33[BANK0 ] PTR unsigned char 
  2011 ;;		 -> data1(1), 
  2012 ;;  bytes           2   35[BANK0 ] int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  Address         1   39[BANK0 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2024 ;;      Params:         0       5       0       0       0       0       0       0       0
  2025 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2026 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2027 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2028 ;;Total ram usage:        8 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:   13
  2031 ;; This function calls:
  2032 ;;		_receiveI2C
  2033 ;;		_repeatedStart
  2034 ;;		_sendI2C
  2035 ;;		_startI2C
  2036 ;;		_stopI2C
  2037 ;; This function is called by:
  2038 ;;		_setPWMFreq
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text3
  2043  00341E                     __ptext3:
  2044                           	callstack 0
  2045  00341E                     _readI2C:
  2046                           	callstack 15
  2047                           
  2048                           ;incstack = 0
  2049                           ;readI2C@Address stored from wreg
  2050  00341E  0100               	movlb	0	; () banked
  2051  003420  6F87               	movwf	readI2C@Address& (0+255),b
  2052  003422                     
  2053                           ;main_LCD_Servos_I2C_Serial.c: 306:     startI2C();
  2054  003422  EC8F  F01F         	call	_startI2C	;wreg free
  2055                           
  2056                           ;main_LCD_Servos_I2C_Serial.c: 307:     sendI2C(Address);
  2057  003426  0100               	movlb	0	; () banked
  2058  003428  5187               	movf	readI2C@Address& (0+255),w,b
  2059  00342A  EC6E  F01F         	call	_sendI2C
  2060                           
  2061                           ;main_LCD_Servos_I2C_Serial.c: 308:     sendI2C(Register);
  2062  00342E  0100               	movlb	0	; () banked
  2063  003430  5180               	movf	readI2C@Register& (0+255),w,b
  2064  003432  EC6E  F01F         	call	_sendI2C
  2065                           
  2066                           ;main_LCD_Servos_I2C_Serial.c: 309:     repeatedStart();
  2067  003436  EC87  F01F         	call	_repeatedStart	;wreg free
  2068                           
  2069                           ;main_LCD_Servos_I2C_Serial.c: 310:     sendI2C(Address|0x01);
  2070  00343A  0100               	movlb	0	; () banked
  2071  00343C  5187               	movf	readI2C@Address& (0+255),w,b
  2072  00343E  0901               	iorlw	1
  2073  003440  EC6E  F01F         	call	_sendI2C
  2074  003444                     
  2075                           ;main_LCD_Servos_I2C_Serial.c: 312:     for(i=0;i<bytes;i++){
  2076  003444  0E00               	movlw	0
  2077  003446  0100               	movlb	0	; () banked
  2078  003448  6FD7               	movwf	(_i+1)& (0+255),b
  2079  00344A  0E00               	movlw	0
  2080  00344C  6FD6               	movwf	_i& (0+255),b
  2081  00344E  EF52  F01A         	goto	l3829
  2082  003452                     l3817:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main_LCD_Servos_I2C_Serial.c: 313:         if(i+1 == bytes){
  2086  003452  0E01               	movlw	1
  2087  003454  25D6               	addwf	_i& (0+255),w,b
  2088  003456  6F85               	movwf	??_readI2C& (0+255),b
  2089  003458  0E00               	movlw	0
  2090  00345A  21D7               	addwfc	(_i+1)& (0+255),w,b
  2091  00345C  6F86               	movwf	(??_readI2C+1)& (0+255),b
  2092  00345E  5183               	movf	readI2C@bytes& (0+255),w,b
  2093  003460  1985               	xorwf	??_readI2C& (0+255),w,b
  2094  003462  E107               	bnz	u4121
  2095  003464  5184               	movf	(readI2C@bytes+1)& (0+255),w,b
  2096  003466  1986               	xorwf	(??_readI2C+1)& (0+255),w,b
  2097  003468  A4D8               	btfss	status,2,c
  2098  00346A  EF39  F01A         	goto	u4121
  2099  00346E  EF3B  F01A         	goto	u4120
  2100  003472                     u4121:
  2101  003472  EF45  F01A         	goto	l3821
  2102  003476                     u4120:
  2103  003476                     
  2104                           ; BSR set to: 0
  2105                           ;main_LCD_Servos_I2C_Serial.c: 314:             *Data = receiveI2C(1);
  2106  003476  0E01               	movlw	1
  2107  003478  ECBF  F01E         	call	_receiveI2C
  2108  00347C  C081  FFD9         	movff	readI2C@Data,fsr2l
  2109  003480  C082  FFDA         	movff	readI2C@Data+1,fsr2h
  2110  003484  6EDF               	movwf	indf2,c
  2111                           
  2112                           ;main_LCD_Servos_I2C_Serial.c: 315:         }
  2113  003486  EF4D  F01A         	goto	l3827
  2114  00348A                     l3821:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;main_LCD_Servos_I2C_Serial.c: 317:             *Data = receiveI2C(0);
  2118  00348A  0E00               	movlw	0
  2119  00348C  ECBF  F01E         	call	_receiveI2C
  2120  003490  C081  FFD9         	movff	readI2C@Data,fsr2l
  2121  003494  C082  FFDA         	movff	readI2C@Data+1,fsr2h
  2122  003498  6EDF               	movwf	indf2,c
  2123  00349A                     l3827:
  2124                           
  2125                           ;main_LCD_Servos_I2C_Serial.c: 322:         Data++;
  2126  00349A  0100               	movlb	0	; () banked
  2127  00349C  4B81               	infsnz	readI2C@Data& (0+255),f,b
  2128  00349E  2B82               	incf	(readI2C@Data+1)& (0+255),f,b
  2129                           
  2130                           ;main_LCD_Servos_I2C_Serial.c: 323:     }
  2131  0034A0  4BD6               	infsnz	_i& (0+255),f,b
  2132  0034A2  2BD7               	incf	(_i+1)& (0+255),f,b
  2133  0034A4                     l3829:
  2134                           
  2135                           ; BSR set to: 0
  2136  0034A4  5183               	movf	readI2C@bytes& (0+255),w,b
  2137  0034A6  5DD6               	subwf	_i& (0+255),w,b
  2138  0034A8  51D7               	movf	(_i+1)& (0+255),w,b
  2139  0034AA  0A80               	xorlw	128
  2140  0034AC  6F85               	movwf	??_readI2C& (0+255),b
  2141  0034AE  5184               	movf	(readI2C@bytes+1)& (0+255),w,b
  2142  0034B0  0A80               	xorlw	128
  2143  0034B2  5985               	subwfb	??_readI2C& (0+255),w,b
  2144  0034B4  A0D8               	btfss	status,0,c
  2145  0034B6  EF5F  F01A         	goto	u4131
  2146  0034BA  EF61  F01A         	goto	u4130
  2147  0034BE                     u4131:
  2148  0034BE  EF29  F01A         	goto	l3817
  2149  0034C2                     u4130:
  2150  0034C2                     
  2151                           ; BSR set to: 0
  2152                           ;main_LCD_Servos_I2C_Serial.c: 325:     stopI2C();
  2153  0034C2  EC8B  F01F         	call	_stopI2C	;wreg free
  2154  0034C6                     
  2155                           ;main_LCD_Servos_I2C_Serial.c: 326:     _delay((unsigned long)((100)*(8000000/4000.0)));
  2156  0034C6  0E02               	movlw	2
  2157  0034C8  0100               	movlb	0	; () banked
  2158  0034CA  6F86               	movwf	(??_readI2C+1)& (0+255),b
  2159  0034CC  0E04               	movlw	4
  2160  0034CE  6F85               	movwf	??_readI2C& (0+255),b
  2161  0034D0  0EBA               	movlw	186
  2162  0034D2                     u5597:
  2163  0034D2  2EE8               	decfsz	wreg,f,c
  2164  0034D4  D7FE               	bra	u5597
  2165  0034D6  2F85               	decfsz	??_readI2C& (0+255),f,b
  2166  0034D8  D7FC               	bra	u5597
  2167  0034DA  2F86               	decfsz	(??_readI2C+1)& (0+255),f,b
  2168  0034DC  D7FA               	bra	u5597
  2169  0034DE  F000               	nop	
  2170  0034E0  0012               	return		;funcret
  2171  0034E2                     __end_of_readI2C:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _repeatedStart *****************
  2175 ;; Defined at:
  2176 ;;		line 329 in file "main_LCD_Servos_I2C_Serial.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:   12
  2197 ;; This function calls:
  2198 ;;		_readyI2C
  2199 ;; This function is called by:
  2200 ;;		_readI2C
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text4
  2205  003F0E                     __ptext4:
  2206                           	callstack 0
  2207  003F0E                     _repeatedStart:
  2208                           	callstack 15
  2209  003F0E                     
  2210                           ;main_LCD_Servos_I2C_Serial.c: 330:     readyI2C();
  2211  003F0E  EC12  F01F         	call	_readyI2C	;wreg free
  2212  003F12                     
  2213                           ;main_LCD_Servos_I2C_Serial.c: 331:     RSEN = 1;
  2214  003F12  82C5               	bsf	4037,1,c	;volatile
  2215  003F14  0012               	return		;funcret
  2216  003F16                     __end_of_repeatedStart:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _receiveI2C *****************
  2220 ;; Defined at:
  2221 ;;		line 334 in file "main_LCD_Servos_I2C_Serial.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  flag            1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  flag            1   30[BANK0 ] unsigned char 
  2226 ;;  buffer          1   31[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      unsigned char 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0
  2237 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2239 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:   12
  2243 ;; This function calls:
  2244 ;;		_readyI2C
  2245 ;; This function is called by:
  2246 ;;		_readI2C
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text5
  2251  003D7E                     __ptext5:
  2252                           	callstack 0
  2253  003D7E                     _receiveI2C:
  2254                           	callstack 15
  2255                           
  2256                           ;incstack = 0
  2257                           ;receiveI2C@flag stored from wreg
  2258  003D7E  0100               	movlb	0	; () banked
  2259  003D80  6F7E               	movwf	receiveI2C@flag& (0+255),b
  2260  003D82                     
  2261                           ;main_LCD_Servos_I2C_Serial.c: 335:     unsigned char buffer;;main_LCD_Servos_I2C_Serial
      +                          .c: 336:     readyI2C();
  2262  003D82  EC12  F01F         	call	_readyI2C	;wreg free
  2263  003D86                     
  2264                           ;main_LCD_Servos_I2C_Serial.c: 337:     RCEN = 1;
  2265  003D86  86C5               	bsf	4037,3,c	;volatile
  2266                           
  2267                           ;main_LCD_Servos_I2C_Serial.c: 338:     readyI2C();
  2268  003D88  EC12  F01F         	call	_readyI2C	;wreg free
  2269  003D8C                     
  2270                           ;main_LCD_Servos_I2C_Serial.c: 339:     buffer = SSPBUF;
  2271  003D8C  CFC9 F07F          	movff	4041,receiveI2C@buffer	;volatile
  2272                           
  2273                           ;main_LCD_Servos_I2C_Serial.c: 340:     readyI2C();
  2274  003D90  EC12  F01F         	call	_readyI2C	;wreg free
  2275  003D94                     
  2276                           ;main_LCD_Servos_I2C_Serial.c: 341:     ACKDT = flag==1? 1 : 0;
  2277  003D94  0100               	movlb	0	; () banked
  2278  003D96  057E               	decf	receiveI2C@flag& (0+255),w,b
  2279  003D98  B4D8               	btfsc	status,2,c
  2280  003D9A  EFD1  F01E         	goto	u3541
  2281  003D9E  EFD4  F01E         	goto	u3540
  2282  003DA2                     u3541:
  2283  003DA2  8AC5               	bsf	4037,5,c	;volatile
  2284  003DA4  EFD5  F01E         	goto	u3555
  2285  003DA8                     u3540:
  2286  003DA8  9AC5               	bcf	4037,5,c	;volatile
  2287  003DAA                     u3555:
  2288  003DAA                     
  2289                           ;main_LCD_Servos_I2C_Serial.c: 342:     ACKEN = 1;
  2290  003DAA  88C5               	bsf	4037,4,c	;volatile
  2291  003DAC                     
  2292                           ;main_LCD_Servos_I2C_Serial.c: 343:     readyI2C();
  2293  003DAC  EC12  F01F         	call	_readyI2C	;wreg free
  2294  003DB0                     
  2295                           ;main_LCD_Servos_I2C_Serial.c: 344:     return buffer;
  2296  003DB0  0100               	movlb	0	; () banked
  2297  003DB2  517F               	movf	receiveI2C@buffer& (0+255),w,b
  2298  003DB4                     
  2299                           ; BSR set to: 0
  2300  003DB4  0012               	return		;funcret
  2301  003DB6                     __end_of_receiveI2C:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function ___fltol *****************
  2305 ;; Defined at:
  2306 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  f1              4   29[BANK0 ] unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  exp1            1   38[BANK0 ] unsigned char 
  2311 ;;  sign1           1   37[BANK0 ] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  4   29[BANK0 ] long 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2321 ;;      Params:         0       4       0       0       0       0       0       0       0
  2322 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2323 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2324 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2325 ;;Total ram usage:       10 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:   11
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_setPWMFreq
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text6
  2336  002B86                     __ptext6:
  2337                           	callstack 0
  2338  002B86                     ___fltol:
  2339                           	callstack 17
  2340  002B86  0100               	movlb	0	; () banked
  2341  002B88  357F               	rlcf	(___fltol@f1+2)& (0+255),w,b
  2342  002B8A  3580               	rlcf	(___fltol@f1+3)& (0+255),w,b
  2343  002B8C  6F86               	movwf	___fltol@exp1& (0+255),b
  2344  002B8E  5186               	movf	___fltol@exp1& (0+255),w,b
  2345  002B90  A4D8               	btfss	status,2,c
  2346  002B92  EFCD  F015         	goto	u4421
  2347  002B96  EFCF  F015         	goto	u4420
  2348  002B9A                     u4421:
  2349  002B9A  EFD9  F015         	goto	l4031
  2350  002B9E                     u4420:
  2351  002B9E                     l4027:
  2352                           
  2353                           ; BSR set to: 0
  2354  002B9E  0E00               	movlw	0
  2355  002BA0  6F7D               	movwf	?___fltol& (0+255),b
  2356  002BA2  0E00               	movlw	0
  2357  002BA4  6F7E               	movwf	(?___fltol+1)& (0+255),b
  2358  002BA6  0E00               	movlw	0
  2359  002BA8  6F7F               	movwf	(?___fltol+2)& (0+255),b
  2360  002BAA  0E00               	movlw	0
  2361  002BAC  6F80               	movwf	(?___fltol+3)& (0+255),b
  2362  002BAE  EF46  F016         	goto	l602
  2363  002BB2                     l4031:
  2364                           
  2365                           ; BSR set to: 0
  2366  002BB2  C07D  F081         	movff	___fltol@f1,??___fltol
  2367  002BB6  C07E  F082         	movff	___fltol@f1+1,??___fltol+1
  2368  002BBA  C07F  F083         	movff	___fltol@f1+2,??___fltol+2
  2369  002BBE  C080  F084         	movff	___fltol@f1+3,??___fltol+3
  2370  002BC2  0E20               	movlw	32
  2371  002BC4  EFE9  F015         	goto	u4430
  2372  002BC8                     u4435:
  2373  002BC8  90D8               	bcf	status,0,c
  2374  002BCA  3384               	rrcf	(??___fltol+3)& (0+255),f,b
  2375  002BCC  3383               	rrcf	(??___fltol+2)& (0+255),f,b
  2376  002BCE  3382               	rrcf	(??___fltol+1)& (0+255),f,b
  2377  002BD0  3381               	rrcf	??___fltol& (0+255),f,b
  2378  002BD2                     u4430:
  2379  002BD2  2EE8               	decfsz	wreg,f,c
  2380  002BD4  EFE4  F015         	goto	u4435
  2381  002BD8  5181               	movf	??___fltol& (0+255),w,b
  2382  002BDA  6F85               	movwf	___fltol@sign1& (0+255),b
  2383  002BDC                     
  2384                           ; BSR set to: 0
  2385  002BDC  8F7F               	bsf	(___fltol@f1+2)& (0+255),7,b
  2386  002BDE                     
  2387                           ; BSR set to: 0
  2388  002BDE  0EFF               	movlw	255
  2389  002BE0  177D               	andwf	___fltol@f1& (0+255),f,b
  2390  002BE2  0EFF               	movlw	255
  2391  002BE4  177E               	andwf	(___fltol@f1+1)& (0+255),f,b
  2392  002BE6  0EFF               	movlw	255
  2393  002BE8  177F               	andwf	(___fltol@f1+2)& (0+255),f,b
  2394  002BEA  0E00               	movlw	0
  2395  002BEC  1780               	andwf	(___fltol@f1+3)& (0+255),f,b
  2396  002BEE                     
  2397                           ; BSR set to: 0
  2398  002BEE  0E96               	movlw	150
  2399  002BF0  5F86               	subwf	___fltol@exp1& (0+255),f,b
  2400  002BF2                     
  2401                           ; BSR set to: 0
  2402  002BF2  BF86               	btfsc	___fltol@exp1& (0+255),7,b
  2403  002BF4  EF00  F016         	goto	u4440
  2404  002BF8  EFFE  F015         	goto	u4441
  2405  002BFC                     u4441:
  2406  002BFC  EF16  F016         	goto	l4051
  2407  002C00                     u4440:
  2408  002C00                     
  2409                           ; BSR set to: 0
  2410  002C00  5186               	movf	___fltol@exp1& (0+255),w,b
  2411  002C02  0A80               	xorlw	128
  2412  002C04  0F97               	addlw	151
  2413  002C06  B0D8               	btfsc	status,0,c
  2414  002C08  EF08  F016         	goto	u4451
  2415  002C0C  EF0A  F016         	goto	u4450
  2416  002C10                     u4451:
  2417  002C10  EF0C  F016         	goto	l4047
  2418  002C14                     u4450:
  2419  002C14  EFCF  F015         	goto	l4027
  2420  002C18                     l4047:
  2421                           
  2422                           ; BSR set to: 0
  2423  002C18  90D8               	bcf	status,0,c
  2424  002C1A  3380               	rrcf	(___fltol@f1+3)& (0+255),f,b
  2425  002C1C  337F               	rrcf	(___fltol@f1+2)& (0+255),f,b
  2426  002C1E  337E               	rrcf	(___fltol@f1+1)& (0+255),f,b
  2427  002C20  337D               	rrcf	___fltol@f1& (0+255),f,b
  2428  002C22                     
  2429                           ; BSR set to: 0
  2430  002C22  3F86               	incfsz	___fltol@exp1& (0+255),f,b
  2431  002C24  EF0C  F016         	goto	l4047
  2432  002C28  EF2E  F016         	goto	l4061
  2433  002C2C                     l4051:
  2434                           
  2435                           ; BSR set to: 0
  2436  002C2C  0E1F               	movlw	31
  2437  002C2E  6586               	cpfsgt	___fltol@exp1& (0+255),b
  2438  002C30  EF1C  F016         	goto	u4461
  2439  002C34  EF1E  F016         	goto	u4460
  2440  002C38                     u4461:
  2441  002C38  EF26  F016         	goto	l4059
  2442  002C3C                     u4460:
  2443  002C3C  EFCF  F015         	goto	l4027
  2444  002C40                     l4057:
  2445                           
  2446                           ; BSR set to: 0
  2447  002C40  90D8               	bcf	status,0,c
  2448  002C42  377D               	rlcf	___fltol@f1& (0+255),f,b
  2449  002C44  377E               	rlcf	(___fltol@f1+1)& (0+255),f,b
  2450  002C46  377F               	rlcf	(___fltol@f1+2)& (0+255),f,b
  2451  002C48  3780               	rlcf	(___fltol@f1+3)& (0+255),f,b
  2452  002C4A  0786               	decf	___fltol@exp1& (0+255),f,b
  2453  002C4C                     l4059:
  2454                           
  2455                           ; BSR set to: 0
  2456  002C4C  5186               	movf	___fltol@exp1& (0+255),w,b
  2457  002C4E  A4D8               	btfss	status,2,c
  2458  002C50  EF2C  F016         	goto	u4471
  2459  002C54  EF2E  F016         	goto	u4470
  2460  002C58                     u4471:
  2461  002C58  EF20  F016         	goto	l4057
  2462  002C5C                     u4470:
  2463  002C5C                     l4061:
  2464                           
  2465                           ; BSR set to: 0
  2466  002C5C  5185               	movf	___fltol@sign1& (0+255),w,b
  2467  002C5E  B4D8               	btfsc	status,2,c
  2468  002C60  EF34  F016         	goto	u4481
  2469  002C64  EF36  F016         	goto	u4480
  2470  002C68                     u4481:
  2471  002C68  EF3E  F016         	goto	l4065
  2472  002C6C                     u4480:
  2473  002C6C                     
  2474                           ; BSR set to: 0
  2475  002C6C  1F80               	comf	(___fltol@f1+3)& (0+255),f,b
  2476  002C6E  1F7F               	comf	(___fltol@f1+2)& (0+255),f,b
  2477  002C70  1F7E               	comf	(___fltol@f1+1)& (0+255),f,b
  2478  002C72  6D7D               	negf	___fltol@f1& (0+255),b
  2479  002C74  0E00               	movlw	0
  2480  002C76  237E               	addwfc	(___fltol@f1+1)& (0+255),f,b
  2481  002C78  237F               	addwfc	(___fltol@f1+2)& (0+255),f,b
  2482  002C7A  2380               	addwfc	(___fltol@f1+3)& (0+255),f,b
  2483  002C7C                     l4065:
  2484                           
  2485                           ; BSR set to: 0
  2486  002C7C  C07D  F07D         	movff	___fltol@f1,?___fltol
  2487  002C80  C07E  F07E         	movff	___fltol@f1+1,?___fltol+1
  2488  002C84  C07F  F07F         	movff	___fltol@f1+2,?___fltol+2
  2489  002C88  C080  F080         	movff	___fltol@f1+3,?___fltol+3
  2490  002C8C                     l602:
  2491                           
  2492                           ; BSR set to: 0
  2493  002C8C  0012               	return		;funcret
  2494  002C8E                     __end_of___fltol:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function ___flsub *****************
  2498 ;; Defined at:
  2499 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  b               4   45[BANK0 ] long 
  2502 ;;  a               4   49[BANK0 ] long 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  4   45[BANK0 ] long 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2514 ;;      Params:         0       8       0       0       0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2517 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2518 ;;Total ram usage:        8 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:   12
  2521 ;; This function calls:
  2522 ;;		___fladd
  2523 ;; This function is called by:
  2524 ;;		_setPWMFreq
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text7
  2529  003B66                     __ptext7:
  2530                           	callstack 0
  2531  003B66                     ___flsub:
  2532                           	callstack 16
  2533  003B66  0E00               	movlw	0
  2534  003B68  0100               	movlb	0	; () banked
  2535  003B6A  1B91               	xorwf	___flsub@a& (0+255),f,b
  2536  003B6C  0E00               	movlw	0
  2537  003B6E  1B92               	xorwf	(___flsub@a+1)& (0+255),f,b
  2538  003B70  0E00               	movlw	0
  2539  003B72  1B93               	xorwf	(___flsub@a+2)& (0+255),f,b
  2540  003B74  0E80               	movlw	128
  2541  003B76  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  2542  003B78                     
  2543                           ; BSR set to: 0
  2544  003B78  C08D  F07D         	movff	___flsub@b,___fladd@b
  2545  003B7C  C08E  F07E         	movff	___flsub@b+1,___fladd@b+1
  2546  003B80  C08F  F07F         	movff	___flsub@b+2,___fladd@b+2
  2547  003B84  C090  F080         	movff	___flsub@b+3,___fladd@b+3
  2548  003B88  C091  F081         	movff	___flsub@a,___fladd@a
  2549  003B8C  C092  F082         	movff	___flsub@a+1,___fladd@a+1
  2550  003B90  C093  F083         	movff	___flsub@a+2,___fladd@a+2
  2551  003B94  C094  F084         	movff	___flsub@a+3,___fladd@a+3
  2552  003B98  ECA3  F006         	call	___fladd	;wreg free
  2553  003B9C  C07D  F08D         	movff	?___fladd,?___flsub
  2554  003BA0  C07E  F08E         	movff	?___fladd+1,?___flsub+1
  2555  003BA4  C07F  F08F         	movff	?___fladd+2,?___flsub+2
  2556  003BA8  C080  F090         	movff	?___fladd+3,?___flsub+3
  2557  003BAC  0012               	return		;funcret
  2558  003BAE                     __end_of___flsub:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function ___fladd *****************
  2562 ;; Defined at:
  2563 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  b               4   29[BANK0 ] long 
  2566 ;;  a               4   33[BANK0 ] long 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  grs             1   44[BANK0 ] unsigned char 
  2569 ;;  bexp            1   43[BANK0 ] unsigned char 
  2570 ;;  aexp            1   42[BANK0 ] unsigned char 
  2571 ;;  signs           1   41[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  4   29[BANK0 ] unsigned char 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2581 ;;      Params:         0       8       0       0       0       0       0       0       0
  2582 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2583 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2584 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2585 ;;Total ram usage:       16 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:   11
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_setPWMFreq
  2592 ;;		___flsub
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text8
  2597  000D46                     __ptext8:
  2598                           	callstack 0
  2599  000D46                     ___fladd:
  2600                           	callstack 16
  2601  000D46  0100               	movlb	0	; () banked
  2602  000D48  5180               	movf	(___fladd@b+3)& (0+255),w,b
  2603  000D4A  0B80               	andlw	128
  2604  000D4C  6F89               	movwf	___fladd@signs& (0+255),b
  2605  000D4E  5180               	movf	(___fladd@b+3)& (0+255),w,b
  2606  000D50  2580               	addwf	(___fladd@b+3)& (0+255),w,b
  2607  000D52  6F8B               	movwf	___fladd@bexp& (0+255),b
  2608  000D54                     
  2609                           ; BSR set to: 0
  2610  000D54  AF7F               	btfss	(___fladd@b+2)& (0+255),7,b
  2611  000D56  EFAF  F006         	goto	u3561
  2612  000D5A  EFB1  F006         	goto	u3560
  2613  000D5E                     u3561:
  2614  000D5E  EFB2  F006         	goto	l3459
  2615  000D62                     u3560:
  2616  000D62                     
  2617                           ; BSR set to: 0
  2618  000D62  818B               	bsf	___fladd@bexp& (0+255),0,b
  2619  000D64                     l3459:
  2620                           
  2621                           ; BSR set to: 0
  2622  000D64  518B               	movf	___fladd@bexp& (0+255),w,b
  2623  000D66  B4D8               	btfsc	status,2,c
  2624  000D68  EFB8  F006         	goto	u3571
  2625  000D6C  EFBA  F006         	goto	u3570
  2626  000D70                     u3571:
  2627  000D70  EFCF  F006         	goto	l3469
  2628  000D74                     u3570:
  2629  000D74                     
  2630                           ; BSR set to: 0
  2631  000D74  298B               	incf	___fladd@bexp& (0+255),w,b
  2632  000D76  A4D8               	btfss	status,2,c
  2633  000D78  EFC0  F006         	goto	u3581
  2634  000D7C  EFC2  F006         	goto	u3580
  2635  000D80                     u3581:
  2636  000D80  EFCA  F006         	goto	l3465
  2637  000D84                     u3580:
  2638  000D84                     
  2639                           ; BSR set to: 0
  2640  000D84  0E00               	movlw	0
  2641  000D86  6F7D               	movwf	___fladd@b& (0+255),b
  2642  000D88  0E00               	movlw	0
  2643  000D8A  6F7E               	movwf	(___fladd@b+1)& (0+255),b
  2644  000D8C  0E00               	movlw	0
  2645  000D8E  6F7F               	movwf	(___fladd@b+2)& (0+255),b
  2646  000D90  0E00               	movlw	0
  2647  000D92  6F80               	movwf	(___fladd@b+3)& (0+255),b
  2648  000D94                     l3465:
  2649                           
  2650                           ; BSR set to: 0
  2651  000D94  8F7F               	bsf	(___fladd@b+2)& (0+255),7,b
  2652  000D96                     
  2653                           ; BSR set to: 0
  2654  000D96  0E00               	movlw	0
  2655  000D98  6F80               	movwf	(___fladd@b+3)& (0+255),b
  2656  000D9A  EFD7  F006         	goto	l3471
  2657  000D9E                     l3469:
  2658                           
  2659                           ; BSR set to: 0
  2660  000D9E  0E00               	movlw	0
  2661  000DA0  6F7D               	movwf	___fladd@b& (0+255),b
  2662  000DA2  0E00               	movlw	0
  2663  000DA4  6F7E               	movwf	(___fladd@b+1)& (0+255),b
  2664  000DA6  0E00               	movlw	0
  2665  000DA8  6F7F               	movwf	(___fladd@b+2)& (0+255),b
  2666  000DAA  0E00               	movlw	0
  2667  000DAC  6F80               	movwf	(___fladd@b+3)& (0+255),b
  2668  000DAE                     l3471:
  2669                           
  2670                           ; BSR set to: 0
  2671  000DAE  5184               	movf	(___fladd@a+3)& (0+255),w,b
  2672  000DB0  0B80               	andlw	128
  2673  000DB2  6F8A               	movwf	___fladd@aexp& (0+255),b
  2674  000DB4                     
  2675                           ; BSR set to: 0
  2676  000DB4  5189               	movf	___fladd@signs& (0+255),w,b
  2677  000DB6  198A               	xorwf	___fladd@aexp& (0+255),w,b
  2678  000DB8  B4D8               	btfsc	status,2,c
  2679  000DBA  EFE1  F006         	goto	u3591
  2680  000DBE  EFE3  F006         	goto	u3590
  2681  000DC2                     u3591:
  2682  000DC2  EFE4  F006         	goto	l3477
  2683  000DC6                     u3590:
  2684  000DC6                     
  2685                           ; BSR set to: 0
  2686  000DC6  8D89               	bsf	___fladd@signs& (0+255),6,b
  2687  000DC8                     l3477:
  2688                           
  2689                           ; BSR set to: 0
  2690  000DC8  5184               	movf	(___fladd@a+3)& (0+255),w,b
  2691  000DCA  2584               	addwf	(___fladd@a+3)& (0+255),w,b
  2692  000DCC  6F8A               	movwf	___fladd@aexp& (0+255),b
  2693  000DCE                     
  2694                           ; BSR set to: 0
  2695  000DCE  AF83               	btfss	(___fladd@a+2)& (0+255),7,b
  2696  000DD0  EFEC  F006         	goto	u3601
  2697  000DD4  EFEE  F006         	goto	u3600
  2698  000DD8                     u3601:
  2699  000DD8  EFEF  F006         	goto	l3483
  2700  000DDC                     u3600:
  2701  000DDC                     
  2702                           ; BSR set to: 0
  2703  000DDC  818A               	bsf	___fladd@aexp& (0+255),0,b
  2704  000DDE                     l3483:
  2705                           
  2706                           ; BSR set to: 0
  2707  000DDE  518A               	movf	___fladd@aexp& (0+255),w,b
  2708  000DE0  B4D8               	btfsc	status,2,c
  2709  000DE2  EFF5  F006         	goto	u3611
  2710  000DE6  EFF7  F006         	goto	u3610
  2711  000DEA                     u3611:
  2712  000DEA  EF0C  F007         	goto	l3493
  2713  000DEE                     u3610:
  2714  000DEE                     
  2715                           ; BSR set to: 0
  2716  000DEE  298A               	incf	___fladd@aexp& (0+255),w,b
  2717  000DF0  A4D8               	btfss	status,2,c
  2718  000DF2  EFFD  F006         	goto	u3621
  2719  000DF6  EFFF  F006         	goto	u3620
  2720  000DFA                     u3621:
  2721  000DFA  EF07  F007         	goto	l3489
  2722  000DFE                     u3620:
  2723  000DFE                     
  2724                           ; BSR set to: 0
  2725  000DFE  0E00               	movlw	0
  2726  000E00  6F81               	movwf	___fladd@a& (0+255),b
  2727  000E02  0E00               	movlw	0
  2728  000E04  6F82               	movwf	(___fladd@a+1)& (0+255),b
  2729  000E06  0E00               	movlw	0
  2730  000E08  6F83               	movwf	(___fladd@a+2)& (0+255),b
  2731  000E0A  0E00               	movlw	0
  2732  000E0C  6F84               	movwf	(___fladd@a+3)& (0+255),b
  2733  000E0E                     l3489:
  2734                           
  2735                           ; BSR set to: 0
  2736  000E0E  8F83               	bsf	(___fladd@a+2)& (0+255),7,b
  2737  000E10                     
  2738                           ; BSR set to: 0
  2739  000E10  0E00               	movlw	0
  2740  000E12  6F84               	movwf	(___fladd@a+3)& (0+255),b
  2741  000E14  EF14  F007         	goto	l3495
  2742  000E18                     l3493:
  2743                           
  2744                           ; BSR set to: 0
  2745  000E18  0E00               	movlw	0
  2746  000E1A  6F81               	movwf	___fladd@a& (0+255),b
  2747  000E1C  0E00               	movlw	0
  2748  000E1E  6F82               	movwf	(___fladd@a+1)& (0+255),b
  2749  000E20  0E00               	movlw	0
  2750  000E22  6F83               	movwf	(___fladd@a+2)& (0+255),b
  2751  000E24  0E00               	movlw	0
  2752  000E26  6F84               	movwf	(___fladd@a+3)& (0+255),b
  2753  000E28                     l3495:
  2754                           
  2755                           ; BSR set to: 0
  2756  000E28  518B               	movf	___fladd@bexp& (0+255),w,b
  2757  000E2A  5D8A               	subwf	___fladd@aexp& (0+255),w,b
  2758  000E2C  B0D8               	btfsc	status,0,c
  2759  000E2E  EF1B  F007         	goto	u3631
  2760  000E32  EF1D  F007         	goto	u3630
  2761  000E36                     u3631:
  2762  000E36  EF44  F007         	goto	l3531
  2763  000E3A                     u3630:
  2764  000E3A                     
  2765                           ; BSR set to: 0
  2766  000E3A  AD89               	btfss	___fladd@signs& (0+255),6,b
  2767  000E3C  EF22  F007         	goto	u3641
  2768  000E40  EF24  F007         	goto	u3640
  2769  000E44                     u3641:
  2770  000E44  EF26  F007         	goto	l3501
  2771  000E48                     u3640:
  2772  000E48                     
  2773                           ; BSR set to: 0
  2774  000E48  0E80               	movlw	128
  2775  000E4A  1B89               	xorwf	___fladd@signs& (0+255),f,b
  2776  000E4C                     l3501:
  2777                           
  2778                           ; BSR set to: 0
  2779  000E4C  C08B  F08C         	movff	___fladd@bexp,___fladd@grs
  2780  000E50                     
  2781                           ; BSR set to: 0
  2782  000E50  C08A  F08B         	movff	___fladd@aexp,___fladd@bexp
  2783  000E54                     
  2784                           ; BSR set to: 0
  2785  000E54  C08C  F08A         	movff	___fladd@grs,___fladd@aexp
  2786  000E58                     
  2787                           ; BSR set to: 0
  2788  000E58  C07D  F08C         	movff	___fladd@b,___fladd@grs
  2789  000E5C                     
  2790                           ; BSR set to: 0
  2791  000E5C  C081  F07D         	movff	___fladd@a,___fladd@b
  2792  000E60                     
  2793                           ; BSR set to: 0
  2794  000E60  C08C  F081         	movff	___fladd@grs,___fladd@a
  2795  000E64                     
  2796                           ; BSR set to: 0
  2797  000E64  C07E  F08C         	movff	___fladd@b+1,___fladd@grs
  2798  000E68                     
  2799                           ; BSR set to: 0
  2800  000E68  C082  F07E         	movff	___fladd@a+1,___fladd@b+1
  2801  000E6C                     
  2802                           ; BSR set to: 0
  2803  000E6C  C08C  F082         	movff	___fladd@grs,___fladd@a+1
  2804  000E70                     
  2805                           ; BSR set to: 0
  2806  000E70  C07F  F08C         	movff	___fladd@b+2,___fladd@grs
  2807  000E74                     
  2808                           ; BSR set to: 0
  2809  000E74  C083  F07F         	movff	___fladd@a+2,___fladd@b+2
  2810  000E78                     
  2811                           ; BSR set to: 0
  2812  000E78  C08C  F083         	movff	___fladd@grs,___fladd@a+2
  2813  000E7C                     
  2814                           ; BSR set to: 0
  2815  000E7C  C080  F08C         	movff	___fladd@b+3,___fladd@grs
  2816  000E80                     
  2817                           ; BSR set to: 0
  2818  000E80  C084  F080         	movff	___fladd@a+3,___fladd@b+3
  2819  000E84                     
  2820                           ; BSR set to: 0
  2821  000E84  C08C  F084         	movff	___fladd@grs,___fladd@a+3
  2822  000E88                     l3531:
  2823                           
  2824                           ; BSR set to: 0
  2825  000E88  0E00               	movlw	0
  2826  000E8A  6F8C               	movwf	___fladd@grs& (0+255),b
  2827  000E8C                     
  2828                           ; BSR set to: 0
  2829  000E8C  518B               	movf	___fladd@bexp& (0+255),w,b
  2830  000E8E  C08A  F085         	movff	___fladd@aexp,??___fladd
  2831  000E92  6B86               	clrf	(??___fladd+1)& (0+255),b
  2832  000E94  5F85               	subwf	??___fladd& (0+255),f,b
  2833  000E96  0E00               	movlw	0
  2834  000E98  5B86               	subwfb	(??___fladd+1)& (0+255),f,b
  2835  000E9A  BF86               	btfsc	(??___fladd+1)& (0+255),7,b
  2836  000E9C  EF59  F007         	goto	u3651
  2837  000EA0  5186               	movf	(??___fladd+1)& (0+255),w,b
  2838  000EA2  E109               	bnz	u3650
  2839  000EA4  0E1A               	movlw	26
  2840  000EA6  5D85               	subwf	??___fladd& (0+255),w,b
  2841  000EA8  A0D8               	btfss	status,0,c
  2842  000EAA  EF59  F007         	goto	u3651
  2843  000EAE  EF5B  F007         	goto	u3650
  2844  000EB2                     u3651:
  2845  000EB2  EF92  F007         	goto	l834
  2846  000EB6                     u3650:
  2847  000EB6                     
  2848                           ; BSR set to: 0
  2849  000EB6  517D               	movf	___fladd@b& (0+255),w,b
  2850  000EB8  117E               	iorwf	(___fladd@b+1)& (0+255),w,b
  2851  000EBA  117F               	iorwf	(___fladd@b+2)& (0+255),w,b
  2852  000EBC  1180               	iorwf	(___fladd@b+3)& (0+255),w,b
  2853  000EBE  A4D8               	btfss	status,2,c
  2854  000EC0  EF64  F007         	goto	u3661
  2855  000EC4  EF67  F007         	goto	u3660
  2856  000EC8                     u3661:
  2857  000EC8  0E01               	movlw	1
  2858  000ECA  EF68  F007         	goto	u3670
  2859  000ECE                     u3660:
  2860  000ECE  0E00               	movlw	0
  2861  000ED0                     u3670:
  2862  000ED0  6F8C               	movwf	___fladd@grs& (0+255),b
  2863  000ED2                     
  2864                           ; BSR set to: 0
  2865  000ED2  0E00               	movlw	0
  2866  000ED4  6F7D               	movwf	___fladd@b& (0+255),b
  2867  000ED6  0E00               	movlw	0
  2868  000ED8  6F7E               	movwf	(___fladd@b+1)& (0+255),b
  2869  000EDA  0E00               	movlw	0
  2870  000EDC  6F7F               	movwf	(___fladd@b+2)& (0+255),b
  2871  000EDE  0E00               	movlw	0
  2872  000EE0  6F80               	movwf	(___fladd@b+3)& (0+255),b
  2873  000EE2                     
  2874                           ; BSR set to: 0
  2875  000EE2  C08A  F08B         	movff	___fladd@aexp,___fladd@bexp
  2876  000EE6  EF9B  F007         	goto	l833
  2877  000EEA                     l835:
  2878                           
  2879                           ; BSR set to: 0
  2880  000EEA  A18C               	btfss	___fladd@grs& (0+255),0,b
  2881  000EEC  EF7A  F007         	goto	u3681
  2882  000EF0  EF7C  F007         	goto	u3680
  2883  000EF4                     u3681:
  2884  000EF4  EF82  F007         	goto	l3543
  2885  000EF8                     u3680:
  2886  000EF8                     
  2887                           ; BSR set to: 0
  2888  000EF8  90D8               	bcf	status,0,c
  2889  000EFA  318C               	rrcf	___fladd@grs& (0+255),w,b
  2890  000EFC  0901               	iorlw	1
  2891  000EFE  6F8C               	movwf	___fladd@grs& (0+255),b
  2892  000F00  EF84  F007         	goto	l3545
  2893  000F04                     l3543:
  2894                           
  2895                           ; BSR set to: 0
  2896  000F04  90D8               	bcf	status,0,c
  2897  000F06  338C               	rrcf	___fladd@grs& (0+255),f,b
  2898  000F08                     l3545:
  2899                           
  2900                           ; BSR set to: 0
  2901  000F08  A17D               	btfss	___fladd@b& (0+255),0,b
  2902  000F0A  EF89  F007         	goto	u3691
  2903  000F0E  EF8B  F007         	goto	u3690
  2904  000F12                     u3691:
  2905  000F12  EF8C  F007         	goto	l3549
  2906  000F16                     u3690:
  2907  000F16                     
  2908                           ; BSR set to: 0
  2909  000F16  8F8C               	bsf	___fladd@grs& (0+255),7,b
  2910  000F18                     l3549:
  2911                           
  2912                           ; BSR set to: 0
  2913  000F18  3580               	rlcf	(___fladd@b+3)& (0+255),w,b
  2914  000F1A  3380               	rrcf	(___fladd@b+3)& (0+255),f,b
  2915  000F1C  337F               	rrcf	(___fladd@b+2)& (0+255),f,b
  2916  000F1E  337E               	rrcf	(___fladd@b+1)& (0+255),f,b
  2917  000F20  337D               	rrcf	___fladd@b& (0+255),f,b
  2918  000F22                     
  2919                           ; BSR set to: 0
  2920  000F22  2B8B               	incf	___fladd@bexp& (0+255),f,b
  2921  000F24                     l834:
  2922                           
  2923                           ; BSR set to: 0
  2924  000F24  518A               	movf	___fladd@aexp& (0+255),w,b
  2925  000F26  5D8B               	subwf	___fladd@bexp& (0+255),w,b
  2926  000F28  A0D8               	btfss	status,0,c
  2927  000F2A  EF99  F007         	goto	u3701
  2928  000F2E  EF9B  F007         	goto	u3700
  2929  000F32                     u3701:
  2930  000F32  EF75  F007         	goto	l835
  2931  000F36                     u3700:
  2932  000F36                     l833:
  2933                           
  2934                           ; BSR set to: 0
  2935  000F36  BD89               	btfsc	___fladd@signs& (0+255),6,b
  2936  000F38  EFA0  F007         	goto	u3711
  2937  000F3C  EFA2  F007         	goto	u3710
  2938  000F40                     u3711:
  2939  000F40  EFE2  F007         	goto	l3577
  2940  000F44                     u3710:
  2941  000F44                     
  2942                           ; BSR set to: 0
  2943  000F44  518B               	movf	___fladd@bexp& (0+255),w,b
  2944  000F46  A4D8               	btfss	status,2,c
  2945  000F48  EFA8  F007         	goto	u3721
  2946  000F4C  EFAA  F007         	goto	u3720
  2947  000F50                     u3721:
  2948  000F50  EFB4  F007         	goto	l3559
  2949  000F54                     u3720:
  2950  000F54                     
  2951                           ; BSR set to: 0
  2952  000F54  0E00               	movlw	0
  2953  000F56  6F7D               	movwf	?___fladd& (0+255),b
  2954  000F58  0E00               	movlw	0
  2955  000F5A  6F7E               	movwf	(?___fladd+1)& (0+255),b
  2956  000F5C  0E00               	movlw	0
  2957  000F5E  6F7F               	movwf	(?___fladd+2)& (0+255),b
  2958  000F60  0E00               	movlw	0
  2959  000F62  6F80               	movwf	(?___fladd+3)& (0+255),b
  2960  000F64  EF03  F009         	goto	l842
  2961  000F68                     l3559:
  2962                           
  2963                           ; BSR set to: 0
  2964  000F68  5181               	movf	___fladd@a& (0+255),w,b
  2965  000F6A  277D               	addwf	___fladd@b& (0+255),f,b
  2966  000F6C  5182               	movf	(___fladd@a+1)& (0+255),w,b
  2967  000F6E  237E               	addwfc	(___fladd@b+1)& (0+255),f,b
  2968  000F70  5183               	movf	(___fladd@a+2)& (0+255),w,b
  2969  000F72  237F               	addwfc	(___fladd@b+2)& (0+255),f,b
  2970  000F74  5184               	movf	(___fladd@a+3)& (0+255),w,b
  2971  000F76  2380               	addwfc	(___fladd@b+3)& (0+255),f,b
  2972  000F78                     
  2973                           ; BSR set to: 0
  2974  000F78  A180               	btfss	(___fladd@b+3)& (0+255),0,b
  2975  000F7A  EFC1  F007         	goto	u3731
  2976  000F7E  EFC3  F007         	goto	u3730
  2977  000F82                     u3731:
  2978  000F82  EF6F  F008         	goto	l3613
  2979  000F86                     u3730:
  2980  000F86                     
  2981                           ; BSR set to: 0
  2982  000F86  A18C               	btfss	___fladd@grs& (0+255),0,b
  2983  000F88  EFC8  F007         	goto	u3741
  2984  000F8C  EFCA  F007         	goto	u3740
  2985  000F90                     u3741:
  2986  000F90  EFD0  F007         	goto	l3567
  2987  000F94                     u3740:
  2988  000F94                     
  2989                           ; BSR set to: 0
  2990  000F94  90D8               	bcf	status,0,c
  2991  000F96  318C               	rrcf	___fladd@grs& (0+255),w,b
  2992  000F98  0901               	iorlw	1
  2993  000F9A  6F8C               	movwf	___fladd@grs& (0+255),b
  2994  000F9C  EFD2  F007         	goto	l3569
  2995  000FA0                     l3567:
  2996                           
  2997                           ; BSR set to: 0
  2998  000FA0  90D8               	bcf	status,0,c
  2999  000FA2  338C               	rrcf	___fladd@grs& (0+255),f,b
  3000  000FA4                     l3569:
  3001                           
  3002                           ; BSR set to: 0
  3003  000FA4  A17D               	btfss	___fladd@b& (0+255),0,b
  3004  000FA6  EFD7  F007         	goto	u3751
  3005  000FAA  EFD9  F007         	goto	u3750
  3006  000FAE                     u3751:
  3007  000FAE  EFDA  F007         	goto	l3573
  3008  000FB2                     u3750:
  3009  000FB2                     
  3010                           ; BSR set to: 0
  3011  000FB2  8F8C               	bsf	___fladd@grs& (0+255),7,b
  3012  000FB4                     l3573:
  3013                           
  3014                           ; BSR set to: 0
  3015  000FB4  3580               	rlcf	(___fladd@b+3)& (0+255),w,b
  3016  000FB6  3380               	rrcf	(___fladd@b+3)& (0+255),f,b
  3017  000FB8  337F               	rrcf	(___fladd@b+2)& (0+255),f,b
  3018  000FBA  337E               	rrcf	(___fladd@b+1)& (0+255),f,b
  3019  000FBC  337D               	rrcf	___fladd@b& (0+255),f,b
  3020  000FBE                     
  3021                           ; BSR set to: 0
  3022  000FBE  2B8B               	incf	___fladd@bexp& (0+255),f,b
  3023  000FC0  EF6F  F008         	goto	l3613
  3024  000FC4                     l3577:
  3025                           
  3026                           ; BSR set to: 0
  3027  000FC4  5181               	movf	___fladd@a& (0+255),w,b
  3028  000FC6  5D7D               	subwf	___fladd@b& (0+255),w,b
  3029  000FC8  5182               	movf	(___fladd@a+1)& (0+255),w,b
  3030  000FCA  597E               	subwfb	(___fladd@b+1)& (0+255),w,b
  3031  000FCC  5183               	movf	(___fladd@a+2)& (0+255),w,b
  3032  000FCE  597F               	subwfb	(___fladd@b+2)& (0+255),w,b
  3033  000FD0  5180               	movf	(___fladd@b+3)& (0+255),w,b
  3034  000FD2  0A80               	xorlw	128
  3035  000FD4  6F85               	movwf	??___fladd& (0+255),b
  3036  000FD6  5184               	movf	(___fladd@a+3)& (0+255),w,b
  3037  000FD8  0A80               	xorlw	128
  3038  000FDA  5985               	subwfb	??___fladd& (0+255),w,b
  3039  000FDC  B0D8               	btfsc	status,0,c
  3040  000FDE  EFF3  F007         	goto	u3761
  3041  000FE2  EFF5  F007         	goto	u3760
  3042  000FE6                     u3761:
  3043  000FE6  EF20  F008         	goto	l3587
  3044  000FEA                     u3760:
  3045  000FEA                     
  3046                           ; BSR set to: 0
  3047  000FEA  517D               	movf	___fladd@b& (0+255),w,b
  3048  000FEC  5D81               	subwf	___fladd@a& (0+255),w,b
  3049  000FEE  6F85               	movwf	??___fladd& (0+255),b
  3050  000FF0  517E               	movf	(___fladd@b+1)& (0+255),w,b
  3051  000FF2  5982               	subwfb	(___fladd@a+1)& (0+255),w,b
  3052  000FF4  6F86               	movwf	(??___fladd+1)& (0+255),b
  3053  000FF6  517F               	movf	(___fladd@b+2)& (0+255),w,b
  3054  000FF8  5983               	subwfb	(___fladd@a+2)& (0+255),w,b
  3055  000FFA  6F87               	movwf	(??___fladd+2)& (0+255),b
  3056  000FFC  5180               	movf	(___fladd@b+3)& (0+255),w,b
  3057  000FFE  5984               	subwfb	(___fladd@a+3)& (0+255),w,b
  3058  001000  6F88               	movwf	(??___fladd+3)& (0+255),b
  3059  001002  0EFF               	movlw	255
  3060  001004  2585               	addwf	??___fladd& (0+255),w,b
  3061  001006  6F7D               	movwf	___fladd@b& (0+255),b
  3062  001008  0EFF               	movlw	255
  3063  00100A  2186               	addwfc	(??___fladd+1)& (0+255),w,b
  3064  00100C  6F7E               	movwf	(___fladd@b+1)& (0+255),b
  3065  00100E  0EFF               	movlw	255
  3066  001010  2187               	addwfc	(??___fladd+2)& (0+255),w,b
  3067  001012  6F7F               	movwf	(___fladd@b+2)& (0+255),b
  3068  001014  0EFF               	movlw	255
  3069  001016  2188               	addwfc	(??___fladd+3)& (0+255),w,b
  3070  001018  6F80               	movwf	(___fladd@b+3)& (0+255),b
  3071  00101A  0E80               	movlw	128
  3072  00101C  1B89               	xorwf	___fladd@signs& (0+255),f,b
  3073  00101E                     
  3074                           ; BSR set to: 0
  3075  00101E  6D8C               	negf	___fladd@grs& (0+255),b
  3076  001020                     
  3077                           ; BSR set to: 0
  3078  001020  518C               	movf	___fladd@grs& (0+255),w,b
  3079  001022  A4D8               	btfss	status,2,c
  3080  001024  EF16  F008         	goto	u3771
  3081  001028  EF18  F008         	goto	u3770
  3082  00102C                     u3771:
  3083  00102C  EF28  F008         	goto	l850
  3084  001030                     u3770:
  3085  001030                     
  3086                           ; BSR set to: 0
  3087  001030  0E01               	movlw	1
  3088  001032  277D               	addwf	___fladd@b& (0+255),f,b
  3089  001034  0E00               	movlw	0
  3090  001036  237E               	addwfc	(___fladd@b+1)& (0+255),f,b
  3091  001038  237F               	addwfc	(___fladd@b+2)& (0+255),f,b
  3092  00103A  2380               	addwfc	(___fladd@b+3)& (0+255),f,b
  3093  00103C  EF28  F008         	goto	l850
  3094  001040                     l3587:
  3095                           
  3096                           ; BSR set to: 0
  3097  001040  5181               	movf	___fladd@a& (0+255),w,b
  3098  001042  5F7D               	subwf	___fladd@b& (0+255),f,b
  3099  001044  5182               	movf	(___fladd@a+1)& (0+255),w,b
  3100  001046  5B7E               	subwfb	(___fladd@b+1)& (0+255),f,b
  3101  001048  5183               	movf	(___fladd@a+2)& (0+255),w,b
  3102  00104A  5B7F               	subwfb	(___fladd@b+2)& (0+255),f,b
  3103  00104C  5184               	movf	(___fladd@a+3)& (0+255),w,b
  3104  00104E  5B80               	subwfb	(___fladd@b+3)& (0+255),f,b
  3105  001050                     l850:
  3106                           
  3107                           ; BSR set to: 0
  3108  001050  517D               	movf	___fladd@b& (0+255),w,b
  3109  001052  117E               	iorwf	(___fladd@b+1)& (0+255),w,b
  3110  001054  117F               	iorwf	(___fladd@b+2)& (0+255),w,b
  3111  001056  1180               	iorwf	(___fladd@b+3)& (0+255),w,b
  3112  001058  A4D8               	btfss	status,2,c
  3113  00105A  EF31  F008         	goto	u3781
  3114  00105E  EF33  F008         	goto	u3780
  3115  001062                     u3781:
  3116  001062  EF68  F008         	goto	l3611
  3117  001066                     u3780:
  3118  001066                     
  3119                           ; BSR set to: 0
  3120  001066  518C               	movf	___fladd@grs& (0+255),w,b
  3121  001068  A4D8               	btfss	status,2,c
  3122  00106A  EF39  F008         	goto	u3791
  3123  00106E  EF3B  F008         	goto	u3790
  3124  001072                     u3791:
  3125  001072  EF68  F008         	goto	l3611
  3126  001076                     u3790:
  3127  001076                     
  3128                           ; BSR set to: 0
  3129  001076  0E00               	movlw	0
  3130  001078  6F7D               	movwf	?___fladd& (0+255),b
  3131  00107A  0E00               	movlw	0
  3132  00107C  6F7E               	movwf	(?___fladd+1)& (0+255),b
  3133  00107E  0E00               	movlw	0
  3134  001080  6F7F               	movwf	(?___fladd+2)& (0+255),b
  3135  001082  0E00               	movlw	0
  3136  001084  6F80               	movwf	(?___fladd+3)& (0+255),b
  3137  001086  EF03  F009         	goto	l842
  3138  00108A                     l3595:
  3139                           
  3140                           ; BSR set to: 0
  3141  00108A  90D8               	bcf	status,0,c
  3142  00108C  377D               	rlcf	___fladd@b& (0+255),f,b
  3143  00108E  377E               	rlcf	(___fladd@b+1)& (0+255),f,b
  3144  001090  377F               	rlcf	(___fladd@b+2)& (0+255),f,b
  3145  001092  3780               	rlcf	(___fladd@b+3)& (0+255),f,b
  3146  001094                     
  3147                           ; BSR set to: 0
  3148  001094  AF8C               	btfss	___fladd@grs& (0+255),7,b
  3149  001096  EF4F  F008         	goto	u3801
  3150  00109A  EF51  F008         	goto	u3800
  3151  00109E                     u3801:
  3152  00109E  EF52  F008         	goto	l3601
  3153  0010A2                     u3800:
  3154  0010A2                     
  3155                           ; BSR set to: 0
  3156  0010A2  817D               	bsf	___fladd@b& (0+255),0,b
  3157  0010A4                     l3601:
  3158                           
  3159                           ; BSR set to: 0
  3160  0010A4  A18C               	btfss	___fladd@grs& (0+255),0,b
  3161  0010A6  EF57  F008         	goto	u3811
  3162  0010AA  EF59  F008         	goto	u3810
  3163  0010AE                     u3811:
  3164  0010AE  EF5D  F008         	goto	l3605
  3165  0010B2                     u3810:
  3166  0010B2                     
  3167                           ; BSR set to: 0
  3168  0010B2  80D8               	bsf	status,0,c
  3169  0010B4  378C               	rlcf	___fladd@grs& (0+255),f,b
  3170  0010B6  EF5F  F008         	goto	l3607
  3171  0010BA                     l3605:
  3172                           
  3173                           ; BSR set to: 0
  3174  0010BA  90D8               	bcf	status,0,c
  3175  0010BC  378C               	rlcf	___fladd@grs& (0+255),f,b
  3176  0010BE                     l3607:
  3177                           
  3178                           ; BSR set to: 0
  3179  0010BE  518B               	movf	___fladd@bexp& (0+255),w,b
  3180  0010C0  B4D8               	btfsc	status,2,c
  3181  0010C2  EF65  F008         	goto	u3821
  3182  0010C6  EF67  F008         	goto	u3820
  3183  0010CA                     u3821:
  3184  0010CA  EF68  F008         	goto	l3611
  3185  0010CE                     u3820:
  3186  0010CE                     
  3187                           ; BSR set to: 0
  3188  0010CE  078B               	decf	___fladd@bexp& (0+255),f,b
  3189  0010D0                     l3611:
  3190                           
  3191                           ; BSR set to: 0
  3192  0010D0  AF7F               	btfss	(___fladd@b+2)& (0+255),7,b
  3193  0010D2  EF6D  F008         	goto	u3831
  3194  0010D6  EF6F  F008         	goto	u3830
  3195  0010DA                     u3831:
  3196  0010DA  EF45  F008         	goto	l3595
  3197  0010DE                     u3830:
  3198  0010DE                     l3613:
  3199                           
  3200                           ; BSR set to: 0
  3201  0010DE  0E00               	movlw	0
  3202  0010E0  6F8A               	movwf	___fladd@aexp& (0+255),b
  3203  0010E2                     
  3204                           ; BSR set to: 0
  3205  0010E2  AF8C               	btfss	___fladd@grs& (0+255),7,b
  3206  0010E4  EF76  F008         	goto	u3841
  3207  0010E8  EF78  F008         	goto	u3840
  3208  0010EC                     u3841:
  3209  0010EC  EF90  F008         	goto	l859
  3210  0010F0                     u3840:
  3211  0010F0                     
  3212                           ; BSR set to: 0
  3213  0010F0  C08C  F085         	movff	___fladd@grs,??___fladd
  3214  0010F4  0E7F               	movlw	127
  3215  0010F6  1785               	andwf	??___fladd& (0+255),f,b
  3216  0010F8  B4D8               	btfsc	status,2,c
  3217  0010FA  EF81  F008         	goto	u3851
  3218  0010FE  EF83  F008         	goto	u3850
  3219  001102                     u3851:
  3220  001102  EF87  F008         	goto	l860
  3221  001106                     u3850:
  3222  001106                     l3619:
  3223                           
  3224                           ; BSR set to: 0
  3225  001106  0E01               	movlw	1
  3226  001108  6F8A               	movwf	___fladd@aexp& (0+255),b
  3227  00110A  EF90  F008         	goto	l859
  3228  00110E                     l860:
  3229                           
  3230                           ; BSR set to: 0
  3231  00110E  A17D               	btfss	___fladd@b& (0+255),0,b
  3232  001110  EF8C  F008         	goto	u3861
  3233  001114  EF8E  F008         	goto	u3860
  3234  001118                     u3861:
  3235  001118  EF90  F008         	goto	l859
  3236  00111C                     u3860:
  3237  00111C  EF83  F008         	goto	l3619
  3238  001120                     l859:
  3239                           
  3240                           ; BSR set to: 0
  3241  001120  518A               	movf	___fladd@aexp& (0+255),w,b
  3242  001122  B4D8               	btfsc	status,2,c
  3243  001124  EF96  F008         	goto	u3871
  3244  001128  EF98  F008         	goto	u3870
  3245  00112C                     u3871:
  3246  00112C  EFC3  F008         	goto	l3631
  3247  001130                     u3870:
  3248  001130                     
  3249                           ; BSR set to: 0
  3250  001130  0E01               	movlw	1
  3251  001132  277D               	addwf	___fladd@b& (0+255),f,b
  3252  001134  0E00               	movlw	0
  3253  001136  237E               	addwfc	(___fladd@b+1)& (0+255),f,b
  3254  001138  237F               	addwfc	(___fladd@b+2)& (0+255),f,b
  3255  00113A  2380               	addwfc	(___fladd@b+3)& (0+255),f,b
  3256  00113C                     
  3257                           ; BSR set to: 0
  3258  00113C  A180               	btfss	(___fladd@b+3)& (0+255),0,b
  3259  00113E  EFA3  F008         	goto	u3881
  3260  001142  EFA5  F008         	goto	u3880
  3261  001146                     u3881:
  3262  001146  EFC3  F008         	goto	l3631
  3263  00114A                     u3880:
  3264  00114A                     
  3265                           ; BSR set to: 0
  3266  00114A  C07D  F085         	movff	___fladd@b,??___fladd
  3267  00114E  C07E  F086         	movff	___fladd@b+1,??___fladd+1
  3268  001152  C07F  F087         	movff	___fladd@b+2,??___fladd+2
  3269  001156  C080  F088         	movff	___fladd@b+3,??___fladd+3
  3270  00115A  3588               	rlcf	(??___fladd+3)& (0+255),w,b
  3271  00115C  3388               	rrcf	(??___fladd+3)& (0+255),f,b
  3272  00115E  3387               	rrcf	(??___fladd+2)& (0+255),f,b
  3273  001160  3386               	rrcf	(??___fladd+1)& (0+255),f,b
  3274  001162  3385               	rrcf	??___fladd& (0+255),f,b
  3275  001164  C085  F07D         	movff	??___fladd,___fladd@b
  3276  001168  C086  F07E         	movff	??___fladd+1,___fladd@b+1
  3277  00116C  C087  F07F         	movff	??___fladd+2,___fladd@b+2
  3278  001170  C088  F080         	movff	??___fladd+3,___fladd@b+3
  3279  001174  298B               	incf	___fladd@bexp& (0+255),w,b
  3280  001176  B4D8               	btfsc	status,2,c
  3281  001178  EFC0  F008         	goto	u3891
  3282  00117C  EFC2  F008         	goto	u3890
  3283  001180                     u3891:
  3284  001180  EFC3  F008         	goto	l3631
  3285  001184                     u3890:
  3286  001184                     
  3287                           ; BSR set to: 0
  3288  001184  2B8B               	incf	___fladd@bexp& (0+255),f,b
  3289  001186                     l3631:
  3290                           
  3291                           ; BSR set to: 0
  3292  001186  298B               	incf	___fladd@bexp& (0+255),w,b
  3293  001188  B4D8               	btfsc	status,2,c
  3294  00118A  EFC9  F008         	goto	u3901
  3295  00118E  EFCB  F008         	goto	u3900
  3296  001192                     u3901:
  3297  001192  EFD3  F008         	goto	l3635
  3298  001196                     u3900:
  3299  001196                     
  3300                           ; BSR set to: 0
  3301  001196  518B               	movf	___fladd@bexp& (0+255),w,b
  3302  001198  A4D8               	btfss	status,2,c
  3303  00119A  EFD1  F008         	goto	u3911
  3304  00119E  EFD3  F008         	goto	u3910
  3305  0011A2                     u3911:
  3306  0011A2  EFE5  F008         	goto	l3639
  3307  0011A6                     u3910:
  3308  0011A6                     l3635:
  3309                           
  3310                           ; BSR set to: 0
  3311  0011A6  0E00               	movlw	0
  3312  0011A8  6F7D               	movwf	___fladd@b& (0+255),b
  3313  0011AA  0E00               	movlw	0
  3314  0011AC  6F7E               	movwf	(___fladd@b+1)& (0+255),b
  3315  0011AE  0E00               	movlw	0
  3316  0011B0  6F7F               	movwf	(___fladd@b+2)& (0+255),b
  3317  0011B2  0E00               	movlw	0
  3318  0011B4  6F80               	movwf	(___fladd@b+3)& (0+255),b
  3319  0011B6  518B               	movf	___fladd@bexp& (0+255),w,b
  3320  0011B8  A4D8               	btfss	status,2,c
  3321  0011BA  EFE1  F008         	goto	u3921
  3322  0011BE  EFE3  F008         	goto	u3920
  3323  0011C2                     u3921:
  3324  0011C2  EFE5  F008         	goto	l3639
  3325  0011C6                     u3920:
  3326  0011C6                     
  3327                           ; BSR set to: 0
  3328  0011C6  0E00               	movlw	0
  3329  0011C8  6F89               	movwf	___fladd@signs& (0+255),b
  3330  0011CA                     l3639:
  3331                           
  3332                           ; BSR set to: 0
  3333  0011CA  A18B               	btfss	___fladd@bexp& (0+255),0,b
  3334  0011CC  EFEA  F008         	goto	u3931
  3335  0011D0  EFEC  F008         	goto	u3930
  3336  0011D4                     u3931:
  3337  0011D4  EFEF  F008         	goto	l3643
  3338  0011D8                     u3930:
  3339  0011D8                     
  3340                           ; BSR set to: 0
  3341  0011D8  8F7F               	bsf	(___fladd@b+2)& (0+255),7,b
  3342  0011DA  EFF0  F008         	goto	l3645
  3343  0011DE                     l3643:
  3344                           
  3345                           ; BSR set to: 0
  3346  0011DE  9F7F               	bcf	(___fladd@b+2)& (0+255),7,b
  3347  0011E0                     l3645:
  3348                           
  3349                           ; BSR set to: 0
  3350  0011E0  90D8               	bcf	status,0,c
  3351  0011E2  318B               	rrcf	___fladd@bexp& (0+255),w,b
  3352  0011E4  6F80               	movwf	(___fladd@b+3)& (0+255),b
  3353  0011E6                     
  3354                           ; BSR set to: 0
  3355  0011E6  AF89               	btfss	___fladd@signs& (0+255),7,b
  3356  0011E8  EFF8  F008         	goto	u3941
  3357  0011EC  EFFA  F008         	goto	u3940
  3358  0011F0                     u3941:
  3359  0011F0  EFFB  F008         	goto	l3651
  3360  0011F4                     u3940:
  3361  0011F4                     
  3362                           ; BSR set to: 0
  3363  0011F4  8F80               	bsf	(___fladd@b+3)& (0+255),7,b
  3364  0011F6                     l3651:
  3365                           
  3366                           ; BSR set to: 0
  3367  0011F6  C07D  F07D         	movff	___fladd@b,?___fladd
  3368  0011FA  C07E  F07E         	movff	___fladd@b+1,?___fladd+1
  3369  0011FE  C07F  F07F         	movff	___fladd@b+2,?___fladd+2
  3370  001202  C080  F080         	movff	___fladd@b+3,?___fladd+3
  3371  001206                     l842:
  3372                           
  3373                           ; BSR set to: 0
  3374  001206  0012               	return		;funcret
  3375  001208                     __end_of___fladd:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function ___flge *****************
  3379 ;; Defined at:
  3380 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  ff1             4   29[BANK0 ] unsigned char 
  3383 ;;  ff2             4   33[BANK0 ] unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;		None               void
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3395 ;;      Params:         0       8       0       0       0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3397 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3398 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3399 ;;Total ram usage:       12 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:   11
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_setPWMFreq
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text9
  3410  002C8E                     __ptext9:
  3411                           	callstack 0
  3412  002C8E                     ___flge:
  3413                           	callstack 17
  3414  002C8E  0E00               	movlw	0
  3415  002C90  0100               	movlb	0	; () banked
  3416  002C92  157D               	andwf	___flge@ff1& (0+255),w,b
  3417  002C94  6F85               	movwf	??___flge& (0+255),b
  3418  002C96  0E00               	movlw	0
  3419  002C98  157E               	andwf	(___flge@ff1+1)& (0+255),w,b
  3420  002C9A  6F86               	movwf	(??___flge+1)& (0+255),b
  3421  002C9C  0E80               	movlw	128
  3422  002C9E  157F               	andwf	(___flge@ff1+2)& (0+255),w,b
  3423  002CA0  6F87               	movwf	(??___flge+2)& (0+255),b
  3424  002CA2  0E7F               	movlw	127
  3425  002CA4  1580               	andwf	(___flge@ff1+3)& (0+255),w,b
  3426  002CA6  6F88               	movwf	(??___flge+3)& (0+255),b
  3427  002CA8  5185               	movf	??___flge& (0+255),w,b
  3428  002CAA  1186               	iorwf	(??___flge+1)& (0+255),w,b
  3429  002CAC  1187               	iorwf	(??___flge+2)& (0+255),w,b
  3430  002CAE  1188               	iorwf	(??___flge+3)& (0+255),w,b
  3431  002CB0  A4D8               	btfss	status,2,c
  3432  002CB2  EF5D  F016         	goto	u4371
  3433  002CB6  EF5F  F016         	goto	u4370
  3434  002CBA                     u4371:
  3435  002CBA  EF67  F016         	goto	l4007
  3436  002CBE                     u4370:
  3437  002CBE                     
  3438                           ; BSR set to: 0
  3439  002CBE  0E00               	movlw	0
  3440  002CC0  6F7D               	movwf	___flge@ff1& (0+255),b
  3441  002CC2  0E00               	movlw	0
  3442  002CC4  6F7E               	movwf	(___flge@ff1+1)& (0+255),b
  3443  002CC6  0E00               	movlw	0
  3444  002CC8  6F7F               	movwf	(___flge@ff1+2)& (0+255),b
  3445  002CCA  0E00               	movlw	0
  3446  002CCC  6F80               	movwf	(___flge@ff1+3)& (0+255),b
  3447  002CCE                     l4007:
  3448                           
  3449                           ; BSR set to: 0
  3450  002CCE  0E00               	movlw	0
  3451  002CD0  1581               	andwf	___flge@ff2& (0+255),w,b
  3452  002CD2  6F85               	movwf	??___flge& (0+255),b
  3453  002CD4  0E00               	movlw	0
  3454  002CD6  1582               	andwf	(___flge@ff2+1)& (0+255),w,b
  3455  002CD8  6F86               	movwf	(??___flge+1)& (0+255),b
  3456  002CDA  0E80               	movlw	128
  3457  002CDC  1583               	andwf	(___flge@ff2+2)& (0+255),w,b
  3458  002CDE  6F87               	movwf	(??___flge+2)& (0+255),b
  3459  002CE0  0E7F               	movlw	127
  3460  002CE2  1584               	andwf	(___flge@ff2+3)& (0+255),w,b
  3461  002CE4  6F88               	movwf	(??___flge+3)& (0+255),b
  3462  002CE6  5185               	movf	??___flge& (0+255),w,b
  3463  002CE8  1186               	iorwf	(??___flge+1)& (0+255),w,b
  3464  002CEA  1187               	iorwf	(??___flge+2)& (0+255),w,b
  3465  002CEC  1188               	iorwf	(??___flge+3)& (0+255),w,b
  3466  002CEE  A4D8               	btfss	status,2,c
  3467  002CF0  EF7C  F016         	goto	u4381
  3468  002CF4  EF7E  F016         	goto	u4380
  3469  002CF8                     u4381:
  3470  002CF8  EF86  F016         	goto	l4011
  3471  002CFC                     u4380:
  3472  002CFC                     
  3473                           ; BSR set to: 0
  3474  002CFC  0E00               	movlw	0
  3475  002CFE  6F81               	movwf	___flge@ff2& (0+255),b
  3476  002D00  0E00               	movlw	0
  3477  002D02  6F82               	movwf	(___flge@ff2+1)& (0+255),b
  3478  002D04  0E00               	movlw	0
  3479  002D06  6F83               	movwf	(___flge@ff2+2)& (0+255),b
  3480  002D08  0E00               	movlw	0
  3481  002D0A  6F84               	movwf	(___flge@ff2+3)& (0+255),b
  3482  002D0C                     l4011:
  3483                           
  3484                           ; BSR set to: 0
  3485  002D0C  AF80               	btfss	(___flge@ff1+3)& (0+255),7,b
  3486  002D0E  EF8B  F016         	goto	u4391
  3487  002D12  EF8D  F016         	goto	u4390
  3488  002D16                     u4391:
  3489  002D16  EF96  F016         	goto	l4015
  3490  002D1A                     u4390:
  3491  002D1A                     
  3492                           ; BSR set to: 0
  3493  002D1A  6D7D               	negf	___flge@ff1& (0+255),b
  3494  002D1C  1F7E               	comf	(___flge@ff1+1)& (0+255),f,b
  3495  002D1E  B0D8               	btfsc	status,0,c
  3496  002D20  2B7E               	incf	(___flge@ff1+1)& (0+255),f,b
  3497  002D22  1F7F               	comf	(___flge@ff1+2)& (0+255),f,b
  3498  002D24  B0D8               	btfsc	status,0,c
  3499  002D26  2B7F               	incf	(___flge@ff1+2)& (0+255),f,b
  3500  002D28  0E80               	movlw	128
  3501  002D2A  5780               	subfwb	(___flge@ff1+3)& (0+255),f,b
  3502  002D2C                     l4015:
  3503                           
  3504                           ; BSR set to: 0
  3505  002D2C  AF84               	btfss	(___flge@ff2+3)& (0+255),7,b
  3506  002D2E  EF9B  F016         	goto	u4401
  3507  002D32  EF9D  F016         	goto	u4400
  3508  002D36                     u4401:
  3509  002D36  EFA6  F016         	goto	l570
  3510  002D3A                     u4400:
  3511  002D3A                     
  3512                           ; BSR set to: 0
  3513  002D3A  6D81               	negf	___flge@ff2& (0+255),b
  3514  002D3C  1F82               	comf	(___flge@ff2+1)& (0+255),f,b
  3515  002D3E  B0D8               	btfsc	status,0,c
  3516  002D40  2B82               	incf	(___flge@ff2+1)& (0+255),f,b
  3517  002D42  1F83               	comf	(___flge@ff2+2)& (0+255),f,b
  3518  002D44  B0D8               	btfsc	status,0,c
  3519  002D46  2B83               	incf	(___flge@ff2+2)& (0+255),f,b
  3520  002D48  0E80               	movlw	128
  3521  002D4A  5784               	subfwb	(___flge@ff2+3)& (0+255),f,b
  3522  002D4C                     l570:
  3523                           
  3524                           ; BSR set to: 0
  3525  002D4C  0E00               	movlw	0
  3526  002D4E  1B7D               	xorwf	___flge@ff1& (0+255),f,b
  3527  002D50  0E00               	movlw	0
  3528  002D52  1B7E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  3529  002D54  0E00               	movlw	0
  3530  002D56  1B7F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  3531  002D58  0E80               	movlw	128
  3532  002D5A  1B80               	xorwf	(___flge@ff1+3)& (0+255),f,b
  3533  002D5C  0E00               	movlw	0
  3534  002D5E  1B81               	xorwf	___flge@ff2& (0+255),f,b
  3535  002D60  0E00               	movlw	0
  3536  002D62  1B82               	xorwf	(___flge@ff2+1)& (0+255),f,b
  3537  002D64  0E00               	movlw	0
  3538  002D66  1B83               	xorwf	(___flge@ff2+2)& (0+255),f,b
  3539  002D68  0E80               	movlw	128
  3540  002D6A  1B84               	xorwf	(___flge@ff2+3)& (0+255),f,b
  3541  002D6C  5181               	movf	___flge@ff2& (0+255),w,b
  3542  002D6E  5D7D               	subwf	___flge@ff1& (0+255),w,b
  3543  002D70  5182               	movf	(___flge@ff2+1)& (0+255),w,b
  3544  002D72  597E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  3545  002D74  5183               	movf	(___flge@ff2+2)& (0+255),w,b
  3546  002D76  597F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  3547  002D78  5184               	movf	(___flge@ff2+3)& (0+255),w,b
  3548  002D7A  5980               	subwfb	(___flge@ff1+3)& (0+255),w,b
  3549  002D7C  B0D8               	btfsc	status,0,c
  3550  002D7E  EFC3  F016         	goto	u4411
  3551  002D82  EFC5  F016         	goto	u4410
  3552  002D86                     u4411:
  3553  002D86  EFC8  F016         	goto	l4021
  3554  002D8A                     u4410:
  3555  002D8A                     
  3556                           ; BSR set to: 0
  3557  002D8A  90D8               	bcf	status,0,c
  3558  002D8C  EFC9  F016         	goto	l575
  3559  002D90                     l4021:
  3560                           
  3561                           ; BSR set to: 0
  3562  002D90  80D8               	bsf	status,0,c
  3563  002D92                     l575:
  3564                           
  3565                           ; BSR set to: 0
  3566  002D92  0012               	return		;funcret
  3567  002D94                     __end_of___flge:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function ___fldiv *****************
  3571 ;; Defined at:
  3572 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  b               4   29[BANK0 ] unsigned char 
  3575 ;;  a               4   33[BANK0 ] unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  grs             4   48[BANK0 ] unsigned long 
  3578 ;;  rem             4   41[BANK0 ] unsigned long 
  3579 ;;  new_exp         2   46[BANK0 ] short 
  3580 ;;  aexp            1   53[BANK0 ] unsigned char 
  3581 ;;  bexp            1   52[BANK0 ] unsigned char 
  3582 ;;  sign            1   45[BANK0 ] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  4   29[BANK0 ] unsigned char 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3592 ;;      Params:         0       8       0       0       0       0       0       0       0
  3593 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3594 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3595 ;;      Totals:         0      25       0       0       0       0       0       0       0
  3596 ;;Total ram usage:       25 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:   11
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_setPWMFreq
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text10
  3607  001208                     __ptext10:
  3608                           	callstack 0
  3609  001208                     ___fldiv:
  3610                           	callstack 17
  3611  001208  0100               	movlb	0	; () banked
  3612  00120A  5180               	movf	(___fldiv@b+3)& (0+255),w,b
  3613  00120C  0B80               	andlw	128
  3614  00120E  6F8D               	movwf	___fldiv@sign& (0+255),b
  3615  001210  5180               	movf	(___fldiv@b+3)& (0+255),w,b
  3616  001212  2580               	addwf	(___fldiv@b+3)& (0+255),w,b
  3617  001214  6F94               	movwf	___fldiv@bexp& (0+255),b
  3618  001216                     
  3619                           ; BSR set to: 0
  3620  001216  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
  3621  001218  EF10  F009         	goto	u4141
  3622  00121C  EF12  F009         	goto	u4140
  3623  001220                     u4141:
  3624  001220  EF13  F009         	goto	l3865
  3625  001224                     u4140:
  3626  001224                     
  3627                           ; BSR set to: 0
  3628  001224  8194               	bsf	___fldiv@bexp& (0+255),0,b
  3629  001226                     l3865:
  3630                           
  3631                           ; BSR set to: 0
  3632  001226  5194               	movf	___fldiv@bexp& (0+255),w,b
  3633  001228  B4D8               	btfsc	status,2,c
  3634  00122A  EF19  F009         	goto	u4151
  3635  00122E  EF1B  F009         	goto	u4150
  3636  001232                     u4151:
  3637  001232  EF30  F009         	goto	l3875
  3638  001236                     u4150:
  3639  001236                     
  3640                           ; BSR set to: 0
  3641  001236  2994               	incf	___fldiv@bexp& (0+255),w,b
  3642  001238  A4D8               	btfss	status,2,c
  3643  00123A  EF21  F009         	goto	u4161
  3644  00123E  EF23  F009         	goto	u4160
  3645  001242                     u4161:
  3646  001242  EF2B  F009         	goto	l3871
  3647  001246                     u4160:
  3648  001246                     
  3649                           ; BSR set to: 0
  3650  001246  0E00               	movlw	0
  3651  001248  6F7D               	movwf	___fldiv@b& (0+255),b
  3652  00124A  0E00               	movlw	0
  3653  00124C  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  3654  00124E  0E00               	movlw	0
  3655  001250  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  3656  001252  0E00               	movlw	0
  3657  001254  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  3658  001256                     l3871:
  3659                           
  3660                           ; BSR set to: 0
  3661  001256  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
  3662  001258                     
  3663                           ; BSR set to: 0
  3664  001258  0E00               	movlw	0
  3665  00125A  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  3666  00125C  EF38  F009         	goto	l3877
  3667  001260                     l3875:
  3668                           
  3669                           ; BSR set to: 0
  3670  001260  0E00               	movlw	0
  3671  001262  6F7D               	movwf	___fldiv@b& (0+255),b
  3672  001264  0E00               	movlw	0
  3673  001266  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  3674  001268  0E00               	movlw	0
  3675  00126A  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  3676  00126C  0E00               	movlw	0
  3677  00126E  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  3678  001270                     l3877:
  3679                           
  3680                           ; BSR set to: 0
  3681  001270  5184               	movf	(___fldiv@a+3)& (0+255),w,b
  3682  001272  0B80               	andlw	128
  3683  001274  1B8D               	xorwf	___fldiv@sign& (0+255),f,b
  3684  001276                     
  3685                           ; BSR set to: 0
  3686  001276  5184               	movf	(___fldiv@a+3)& (0+255),w,b
  3687  001278  2584               	addwf	(___fldiv@a+3)& (0+255),w,b
  3688  00127A  6F95               	movwf	___fldiv@aexp& (0+255),b
  3689  00127C                     
  3690                           ; BSR set to: 0
  3691  00127C  AF83               	btfss	(___fldiv@a+2)& (0+255),7,b
  3692  00127E  EF43  F009         	goto	u4171
  3693  001282  EF45  F009         	goto	u4170
  3694  001286                     u4171:
  3695  001286  EF46  F009         	goto	l3885
  3696  00128A                     u4170:
  3697  00128A                     
  3698                           ; BSR set to: 0
  3699  00128A  8195               	bsf	___fldiv@aexp& (0+255),0,b
  3700  00128C                     l3885:
  3701                           
  3702                           ; BSR set to: 0
  3703  00128C  5195               	movf	___fldiv@aexp& (0+255),w,b
  3704  00128E  B4D8               	btfsc	status,2,c
  3705  001290  EF4C  F009         	goto	u4181
  3706  001294  EF4E  F009         	goto	u4180
  3707  001298                     u4181:
  3708  001298  EF63  F009         	goto	l3895
  3709  00129C                     u4180:
  3710  00129C                     
  3711                           ; BSR set to: 0
  3712  00129C  2995               	incf	___fldiv@aexp& (0+255),w,b
  3713  00129E  A4D8               	btfss	status,2,c
  3714  0012A0  EF54  F009         	goto	u4191
  3715  0012A4  EF56  F009         	goto	u4190
  3716  0012A8                     u4191:
  3717  0012A8  EF5E  F009         	goto	l3891
  3718  0012AC                     u4190:
  3719  0012AC                     
  3720                           ; BSR set to: 0
  3721  0012AC  0E00               	movlw	0
  3722  0012AE  6F81               	movwf	___fldiv@a& (0+255),b
  3723  0012B0  0E00               	movlw	0
  3724  0012B2  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  3725  0012B4  0E00               	movlw	0
  3726  0012B6  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  3727  0012B8  0E00               	movlw	0
  3728  0012BA  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  3729  0012BC                     l3891:
  3730                           
  3731                           ; BSR set to: 0
  3732  0012BC  8F83               	bsf	(___fldiv@a+2)& (0+255),7,b
  3733  0012BE                     
  3734                           ; BSR set to: 0
  3735  0012BE  0E00               	movlw	0
  3736  0012C0  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  3737  0012C2  EF6B  F009         	goto	l3897
  3738  0012C6                     l3895:
  3739                           
  3740                           ; BSR set to: 0
  3741  0012C6  0E00               	movlw	0
  3742  0012C8  6F81               	movwf	___fldiv@a& (0+255),b
  3743  0012CA  0E00               	movlw	0
  3744  0012CC  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  3745  0012CE  0E00               	movlw	0
  3746  0012D0  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  3747  0012D2  0E00               	movlw	0
  3748  0012D4  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  3749  0012D6                     l3897:
  3750                           
  3751                           ; BSR set to: 0
  3752  0012D6  5181               	movf	___fldiv@a& (0+255),w,b
  3753  0012D8  1182               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3754  0012DA  1183               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3755  0012DC  1184               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3756  0012DE  A4D8               	btfss	status,2,c
  3757  0012E0  EF74  F009         	goto	u4201
  3758  0012E4  EF76  F009         	goto	u4200
  3759  0012E8                     u4201:
  3760  0012E8  EF8E  F009         	goto	l3909
  3761  0012EC                     u4200:
  3762  0012EC                     
  3763                           ; BSR set to: 0
  3764  0012EC  0E00               	movlw	0
  3765  0012EE  6F7D               	movwf	___fldiv@b& (0+255),b
  3766  0012F0  0E00               	movlw	0
  3767  0012F2  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  3768  0012F4  0E00               	movlw	0
  3769  0012F6  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  3770  0012F8  0E00               	movlw	0
  3771  0012FA  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  3772  0012FC                     
  3773                           ; BSR set to: 0
  3774  0012FC  0E80               	movlw	128
  3775  0012FE  137F               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3776  001300  0E7F               	movlw	127
  3777  001302  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3778  001304                     l3903:
  3779                           
  3780                           ; BSR set to: 0
  3781  001304  518D               	movf	___fldiv@sign& (0+255),w,b
  3782  001306  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3783  001308                     
  3784                           ; BSR set to: 0
  3785  001308  C07D  F07D         	movff	___fldiv@b,?___fldiv
  3786  00130C  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
  3787  001310  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
  3788  001314  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
  3789  001318  EFD1  F00A         	goto	l887
  3790  00131C                     l3909:
  3791                           
  3792                           ; BSR set to: 0
  3793  00131C  5194               	movf	___fldiv@bexp& (0+255),w,b
  3794  00131E  A4D8               	btfss	status,2,c
  3795  001320  EF94  F009         	goto	u4211
  3796  001324  EF96  F009         	goto	u4210
  3797  001328                     u4211:
  3798  001328  EFA0  F009         	goto	l3917
  3799  00132C                     u4210:
  3800  00132C                     
  3801                           ; BSR set to: 0
  3802  00132C  0E00               	movlw	0
  3803  00132E  6F7D               	movwf	?___fldiv& (0+255),b
  3804  001330  0E00               	movlw	0
  3805  001332  6F7E               	movwf	(?___fldiv+1)& (0+255),b
  3806  001334  0E00               	movlw	0
  3807  001336  6F7F               	movwf	(?___fldiv+2)& (0+255),b
  3808  001338  0E00               	movlw	0
  3809  00133A  6F80               	movwf	(?___fldiv+3)& (0+255),b
  3810  00133C  EFD1  F00A         	goto	l887
  3811  001340                     l3917:
  3812                           
  3813                           ; BSR set to: 0
  3814  001340  5195               	movf	___fldiv@aexp& (0+255),w,b
  3815  001342  C094  F085         	movff	___fldiv@bexp,??___fldiv
  3816  001346  6B86               	clrf	(??___fldiv+1)& (0+255),b
  3817  001348  5F85               	subwf	??___fldiv& (0+255),f,b
  3818  00134A  0E00               	movlw	0
  3819  00134C  5B86               	subwfb	(??___fldiv+1)& (0+255),f,b
  3820  00134E  0E7F               	movlw	127
  3821  001350  2585               	addwf	??___fldiv& (0+255),w,b
  3822  001352  6F8E               	movwf	___fldiv@new_exp& (0+255),b
  3823  001354  0E00               	movlw	0
  3824  001356  2186               	addwfc	(??___fldiv+1)& (0+255),w,b
  3825  001358  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3826  00135A                     
  3827                           ; BSR set to: 0
  3828  00135A  C07D  F089         	movff	___fldiv@b,___fldiv@rem
  3829  00135E  C07E  F08A         	movff	___fldiv@b+1,___fldiv@rem+1
  3830  001362  C07F  F08B         	movff	___fldiv@b+2,___fldiv@rem+2
  3831  001366  C080  F08C         	movff	___fldiv@b+3,___fldiv@rem+3
  3832  00136A                     
  3833                           ; BSR set to: 0
  3834  00136A  0E00               	movlw	0
  3835  00136C  6F7D               	movwf	___fldiv@b& (0+255),b
  3836  00136E  0E00               	movlw	0
  3837  001370  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  3838  001372  0E00               	movlw	0
  3839  001374  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  3840  001376  0E00               	movlw	0
  3841  001378  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  3842  00137A                     
  3843                           ; BSR set to: 0
  3844  00137A  0E00               	movlw	0
  3845  00137C  6F90               	movwf	___fldiv@grs& (0+255),b
  3846  00137E  0E00               	movlw	0
  3847  001380  6F91               	movwf	(___fldiv@grs+1)& (0+255),b
  3848  001382  0E00               	movlw	0
  3849  001384  6F92               	movwf	(___fldiv@grs+2)& (0+255),b
  3850  001386  0E00               	movlw	0
  3851  001388  6F93               	movwf	(___fldiv@grs+3)& (0+255),b
  3852  00138A                     
  3853                           ; BSR set to: 0
  3854  00138A  0E00               	movlw	0
  3855  00138C  6F95               	movwf	___fldiv@aexp& (0+255),b
  3856  00138E  EF01  F00A         	goto	l889
  3857  001392                     l3927:
  3858                           
  3859                           ; BSR set to: 0
  3860  001392  5195               	movf	___fldiv@aexp& (0+255),w,b
  3861  001394  B4D8               	btfsc	status,2,c
  3862  001396  EFCF  F009         	goto	u4221
  3863  00139A  EFD1  F009         	goto	u4220
  3864  00139E                     u4221:
  3865  00139E  EFE8  F009         	goto	l3935
  3866  0013A2                     u4220:
  3867  0013A2                     
  3868                           ; BSR set to: 0
  3869  0013A2  90D8               	bcf	status,0,c
  3870  0013A4  3789               	rlcf	___fldiv@rem& (0+255),f,b
  3871  0013A6  378A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3872  0013A8  378B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3873  0013AA  378C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3874  0013AC  90D8               	bcf	status,0,c
  3875  0013AE  377D               	rlcf	___fldiv@b& (0+255),f,b
  3876  0013B0  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3877  0013B2  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3878  0013B4  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3879  0013B6                     
  3880                           ; BSR set to: 0
  3881  0013B6  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3882  0013B8  EFE0  F009         	goto	u4231
  3883  0013BC  EFE2  F009         	goto	u4230
  3884  0013C0                     u4231:
  3885  0013C0  EFE3  F009         	goto	l892
  3886  0013C4                     u4230:
  3887  0013C4                     
  3888                           ; BSR set to: 0
  3889  0013C4  817D               	bsf	___fldiv@b& (0+255),0,b
  3890  0013C6                     l892:
  3891                           
  3892                           ; BSR set to: 0
  3893  0013C6  90D8               	bcf	status,0,c
  3894  0013C8  3790               	rlcf	___fldiv@grs& (0+255),f,b
  3895  0013CA  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3896  0013CC  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3897  0013CE  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3898  0013D0                     l3935:
  3899                           
  3900                           ; BSR set to: 0
  3901  0013D0  5181               	movf	___fldiv@a& (0+255),w,b
  3902  0013D2  5D89               	subwf	___fldiv@rem& (0+255),w,b
  3903  0013D4  5182               	movf	(___fldiv@a+1)& (0+255),w,b
  3904  0013D6  598A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3905  0013D8  5183               	movf	(___fldiv@a+2)& (0+255),w,b
  3906  0013DA  598B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3907  0013DC  5184               	movf	(___fldiv@a+3)& (0+255),w,b
  3908  0013DE  598C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3909  0013E0  A0D8               	btfss	status,0,c
  3910  0013E2  EFF5  F009         	goto	u4241
  3911  0013E6  EFF7  F009         	goto	u4240
  3912  0013EA                     u4241:
  3913  0013EA  EF00  F00A         	goto	l3941
  3914  0013EE                     u4240:
  3915  0013EE                     
  3916                           ; BSR set to: 0
  3917  0013EE  8D93               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3918  0013F0                     
  3919                           ; BSR set to: 0
  3920  0013F0  5181               	movf	___fldiv@a& (0+255),w,b
  3921  0013F2  5F89               	subwf	___fldiv@rem& (0+255),f,b
  3922  0013F4  5182               	movf	(___fldiv@a+1)& (0+255),w,b
  3923  0013F6  5B8A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3924  0013F8  5183               	movf	(___fldiv@a+2)& (0+255),w,b
  3925  0013FA  5B8B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3926  0013FC  5184               	movf	(___fldiv@a+3)& (0+255),w,b
  3927  0013FE  5B8C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3928  001400                     l3941:
  3929                           
  3930                           ; BSR set to: 0
  3931  001400  2B95               	incf	___fldiv@aexp& (0+255),f,b
  3932  001402                     l889:
  3933                           
  3934                           ; BSR set to: 0
  3935  001402  0E19               	movlw	25
  3936  001404  6595               	cpfsgt	___fldiv@aexp& (0+255),b
  3937  001406  EF07  F00A         	goto	u4251
  3938  00140A  EF09  F00A         	goto	u4250
  3939  00140E                     u4251:
  3940  00140E  EFC9  F009         	goto	l3927
  3941  001412                     u4250:
  3942  001412                     
  3943                           ; BSR set to: 0
  3944  001412  5189               	movf	___fldiv@rem& (0+255),w,b
  3945  001414  118A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3946  001416  118B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3947  001418  118C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3948  00141A  B4D8               	btfsc	status,2,c
  3949  00141C  EF12  F00A         	goto	u4261
  3950  001420  EF14  F00A         	goto	u4260
  3951  001424                     u4261:
  3952  001424  EF2C  F00A         	goto	l3953
  3953  001428                     u4260:
  3954  001428                     
  3955                           ; BSR set to: 0
  3956  001428  8190               	bsf	___fldiv@grs& (0+255),0,b
  3957  00142A  EF2C  F00A         	goto	l3953
  3958  00142E                     l3947:
  3959                           
  3960                           ; BSR set to: 0
  3961  00142E  90D8               	bcf	status,0,c
  3962  001430  377D               	rlcf	___fldiv@b& (0+255),f,b
  3963  001432  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3964  001434  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3965  001436  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3966  001438                     
  3967                           ; BSR set to: 0
  3968  001438  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3969  00143A  EF21  F00A         	goto	u4271
  3970  00143E  EF23  F00A         	goto	u4270
  3971  001442                     u4271:
  3972  001442  EF24  F00A         	goto	l898
  3973  001446                     u4270:
  3974  001446                     
  3975                           ; BSR set to: 0
  3976  001446  817D               	bsf	___fldiv@b& (0+255),0,b
  3977  001448                     l898:
  3978                           
  3979                           ; BSR set to: 0
  3980  001448  90D8               	bcf	status,0,c
  3981  00144A  3790               	rlcf	___fldiv@grs& (0+255),f,b
  3982  00144C  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3983  00144E  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3984  001450  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3985  001452  078E               	decf	___fldiv@new_exp& (0+255),f,b
  3986  001454  A0D8               	btfss	status,0,c
  3987  001456  078F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3988  001458                     l3953:
  3989                           
  3990                           ; BSR set to: 0
  3991  001458  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
  3992  00145A  EF31  F00A         	goto	u4281
  3993  00145E  EF33  F00A         	goto	u4280
  3994  001462                     u4281:
  3995  001462  EF17  F00A         	goto	l3947
  3996  001466                     u4280:
  3997  001466                     
  3998                           ; BSR set to: 0
  3999  001466  0E00               	movlw	0
  4000  001468  6F95               	movwf	___fldiv@aexp& (0+255),b
  4001  00146A                     
  4002                           ; BSR set to: 0
  4003  00146A  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4004  00146C  EF3A  F00A         	goto	u4291
  4005  001470  EF3C  F00A         	goto	u4290
  4006  001474                     u4291:
  4007  001474  EF60  F00A         	goto	l900
  4008  001478                     u4290:
  4009  001478                     
  4010                           ; BSR set to: 0
  4011  001478  0EFF               	movlw	255
  4012  00147A  1590               	andwf	___fldiv@grs& (0+255),w,b
  4013  00147C  6F85               	movwf	??___fldiv& (0+255),b
  4014  00147E  0EFF               	movlw	255
  4015  001480  1591               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4016  001482  6F86               	movwf	(??___fldiv+1)& (0+255),b
  4017  001484  0EFF               	movlw	255
  4018  001486  1592               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4019  001488  6F87               	movwf	(??___fldiv+2)& (0+255),b
  4020  00148A  0E7F               	movlw	127
  4021  00148C  1593               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4022  00148E  6F88               	movwf	(??___fldiv+3)& (0+255),b
  4023  001490  5185               	movf	??___fldiv& (0+255),w,b
  4024  001492  1186               	iorwf	(??___fldiv+1)& (0+255),w,b
  4025  001494  1187               	iorwf	(??___fldiv+2)& (0+255),w,b
  4026  001496  1188               	iorwf	(??___fldiv+3)& (0+255),w,b
  4027  001498  B4D8               	btfsc	status,2,c
  4028  00149A  EF51  F00A         	goto	u4301
  4029  00149E  EF53  F00A         	goto	u4300
  4030  0014A2                     u4301:
  4031  0014A2  EF57  F00A         	goto	l901
  4032  0014A6                     u4300:
  4033  0014A6                     l3961:
  4034                           
  4035                           ; BSR set to: 0
  4036  0014A6  0E01               	movlw	1
  4037  0014A8  6F95               	movwf	___fldiv@aexp& (0+255),b
  4038  0014AA  EF60  F00A         	goto	l900
  4039  0014AE                     l901:
  4040                           
  4041                           ; BSR set to: 0
  4042  0014AE  A17D               	btfss	___fldiv@b& (0+255),0,b
  4043  0014B0  EF5C  F00A         	goto	u4311
  4044  0014B4  EF5E  F00A         	goto	u4310
  4045  0014B8                     u4311:
  4046  0014B8  EF60  F00A         	goto	l900
  4047  0014BC                     u4310:
  4048  0014BC  EF53  F00A         	goto	l3961
  4049  0014C0                     l900:
  4050                           
  4051                           ; BSR set to: 0
  4052  0014C0  5195               	movf	___fldiv@aexp& (0+255),w,b
  4053  0014C2  B4D8               	btfsc	status,2,c
  4054  0014C4  EF66  F00A         	goto	u4321
  4055  0014C8  EF68  F00A         	goto	u4320
  4056  0014CC                     u4321:
  4057  0014CC  EF8C  F00A         	goto	l3973
  4058  0014D0                     u4320:
  4059  0014D0                     
  4060                           ; BSR set to: 0
  4061  0014D0  0E01               	movlw	1
  4062  0014D2  277D               	addwf	___fldiv@b& (0+255),f,b
  4063  0014D4  0E00               	movlw	0
  4064  0014D6  237E               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4065  0014D8  237F               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4066  0014DA  2380               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4067  0014DC                     
  4068                           ; BSR set to: 0
  4069  0014DC  A180               	btfss	(___fldiv@b+3)& (0+255),0,b
  4070  0014DE  EF73  F00A         	goto	u4331
  4071  0014E2  EF75  F00A         	goto	u4330
  4072  0014E6                     u4331:
  4073  0014E6  EF8C  F00A         	goto	l3973
  4074  0014EA                     u4330:
  4075  0014EA                     
  4076                           ; BSR set to: 0
  4077  0014EA  C07D  F085         	movff	___fldiv@b,??___fldiv
  4078  0014EE  C07E  F086         	movff	___fldiv@b+1,??___fldiv+1
  4079  0014F2  C07F  F087         	movff	___fldiv@b+2,??___fldiv+2
  4080  0014F6  C080  F088         	movff	___fldiv@b+3,??___fldiv+3
  4081  0014FA  3588               	rlcf	(??___fldiv+3)& (0+255),w,b
  4082  0014FC  3388               	rrcf	(??___fldiv+3)& (0+255),f,b
  4083  0014FE  3387               	rrcf	(??___fldiv+2)& (0+255),f,b
  4084  001500  3386               	rrcf	(??___fldiv+1)& (0+255),f,b
  4085  001502  3385               	rrcf	??___fldiv& (0+255),f,b
  4086  001504  C085  F07D         	movff	??___fldiv,___fldiv@b
  4087  001508  C086  F07E         	movff	??___fldiv+1,___fldiv@b+1
  4088  00150C  C087  F07F         	movff	??___fldiv+2,___fldiv@b+2
  4089  001510  C088  F080         	movff	??___fldiv+3,___fldiv@b+3
  4090  001514                     
  4091                           ; BSR set to: 0
  4092  001514  4B8E               	infsnz	___fldiv@new_exp& (0+255),f,b
  4093  001516  2B8F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4094  001518                     l3973:
  4095                           
  4096                           ; BSR set to: 0
  4097  001518  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4098  00151A  EF97  F00A         	goto	u4341
  4099  00151E  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4100  001520  E108               	bnz	u4340
  4101  001522  298E               	incf	___fldiv@new_exp& (0+255),w,b
  4102  001524  A0D8               	btfss	status,0,c
  4103  001526  EF97  F00A         	goto	u4341
  4104  00152A  EF99  F00A         	goto	u4340
  4105  00152E                     u4341:
  4106  00152E  EFA4  F00A         	goto	l3977
  4107  001532                     u4340:
  4108  001532                     
  4109                           ; BSR set to: 0
  4110  001532  0E00               	movlw	0
  4111  001534  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4112  001536  698E               	setf	___fldiv@new_exp& (0+255),b
  4113  001538  0E00               	movlw	0
  4114  00153A  6F7D               	movwf	___fldiv@b& (0+255),b
  4115  00153C  0E00               	movlw	0
  4116  00153E  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  4117  001540  0E00               	movlw	0
  4118  001542  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  4119  001544  0E00               	movlw	0
  4120  001546  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  4121  001548                     l3977:
  4122                           
  4123                           ; BSR set to: 0
  4124  001548  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4125  00154A  EFB1  F00A         	goto	u4350
  4126  00154E  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4127  001550  E106               	bnz	u4351
  4128  001552  058E               	decf	___fldiv@new_exp& (0+255),w,b
  4129  001554  B0D8               	btfsc	status,0,c
  4130  001556  EFAF  F00A         	goto	u4351
  4131  00155A  EFB1  F00A         	goto	u4350
  4132  00155E                     u4351:
  4133  00155E  EFBF  F00A         	goto	l3981
  4134  001562                     u4350:
  4135  001562                     
  4136                           ; BSR set to: 0
  4137  001562  0E00               	movlw	0
  4138  001564  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4139  001566  0E00               	movlw	0
  4140  001568  6F8E               	movwf	___fldiv@new_exp& (0+255),b
  4141  00156A  0E00               	movlw	0
  4142  00156C  6F7D               	movwf	___fldiv@b& (0+255),b
  4143  00156E  0E00               	movlw	0
  4144  001570  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
  4145  001572  0E00               	movlw	0
  4146  001574  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
  4147  001576  0E00               	movlw	0
  4148  001578  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  4149  00157A  0E00               	movlw	0
  4150  00157C  6F8D               	movwf	___fldiv@sign& (0+255),b
  4151  00157E                     l3981:
  4152                           
  4153                           ; BSR set to: 0
  4154  00157E  C08E  F094         	movff	___fldiv@new_exp,___fldiv@bexp
  4155  001582                     
  4156                           ; BSR set to: 0
  4157  001582  A194               	btfss	___fldiv@bexp& (0+255),0,b
  4158  001584  EFC6  F00A         	goto	u4361
  4159  001588  EFC8  F00A         	goto	u4360
  4160  00158C                     u4361:
  4161  00158C  EFCB  F00A         	goto	l3987
  4162  001590                     u4360:
  4163  001590                     
  4164                           ; BSR set to: 0
  4165  001590  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
  4166  001592  EFCC  F00A         	goto	l3989
  4167  001596                     l3987:
  4168                           
  4169                           ; BSR set to: 0
  4170  001596  9F7F               	bcf	(___fldiv@b+2)& (0+255),7,b
  4171  001598                     l3989:
  4172                           
  4173                           ; BSR set to: 0
  4174  001598  90D8               	bcf	status,0,c
  4175  00159A  3194               	rrcf	___fldiv@bexp& (0+255),w,b
  4176  00159C  6F80               	movwf	(___fldiv@b+3)& (0+255),b
  4177  00159E  EF82  F009         	goto	l3903
  4178  0015A2                     l887:
  4179                           
  4180                           ; BSR set to: 0
  4181  0015A2  0012               	return		;funcret
  4182  0015A4                     __end_of___fldiv:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _mover_servo *****************
  4186 ;; Defined at:
  4187 ;;		line 380 in file "main_LCD_Servos_I2C_Serial.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  servo           2   31[BANK1 ] int 
  4190 ;;  angulo          2   33[BANK1 ] int 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4202 ;;      Params:         0       0       4       0       0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       2       0       0       0       0       0       0
  4205 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:   19
  4209 ;; This function calls:
  4210 ;;		_map
  4211 ;;		_sprintf
  4212 ;;		_start
  4213 ;;		_writeI2C
  4214 ;; This function is called by:
  4215 ;;		_settings
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text11
  4220  0034E2                     __ptext11:
  4221                           	callstack 0
  4222  0034E2                     _mover_servo:
  4223                           	callstack 10
  4224  0034E2                     
  4225                           ;main_LCD_Servos_I2C_Serial.c: 381:     pos = map (angulo, 0 , 180 , 110, 510);
  4226  0034E2  C18F  F08B         	movff	mover_servo@angulo,map@x
  4227  0034E6  C190  F08C         	movff	mover_servo@angulo+1,map@x+1
  4228  0034EA  0E00               	movlw	0
  4229  0034EC  0100               	movlb	0	; () banked
  4230  0034EE  6F8E               	movwf	(map@In_Min+1)& (0+255),b
  4231  0034F0  0E00               	movlw	0
  4232  0034F2  6F8D               	movwf	map@In_Min& (0+255),b
  4233  0034F4  0E00               	movlw	0
  4234  0034F6  6F90               	movwf	(map@In_Max+1)& (0+255),b
  4235  0034F8  0EB4               	movlw	180
  4236  0034FA  6F8F               	movwf	map@In_Max& (0+255),b
  4237  0034FC  0E00               	movlw	0
  4238  0034FE  6F92               	movwf	(map@Out_Min+1)& (0+255),b
  4239  003500  0E6E               	movlw	110
  4240  003502  6F91               	movwf	map@Out_Min& (0+255),b
  4241  003504  0E01               	movlw	1
  4242  003506  6F94               	movwf	(map@Out_Max+1)& (0+255),b
  4243  003508  0EFE               	movlw	254
  4244  00350A  6F93               	movwf	map@Out_Max& (0+255),b
  4245  00350C  ECFB  F01D         	call	_map	;wreg free
  4246  003510  C08B  F0D4         	movff	?_map,_pos
  4247  003514  C08C  F0D5         	movff	?_map+1,_pos+1
  4248  003518                     
  4249                           ;main_LCD_Servos_I2C_Serial.c: 382:     data2[2] = pos;
  4250  003518  C0D4  F0DC         	movff	_pos,_data2+2
  4251  00351C                     
  4252                           ;main_LCD_Servos_I2C_Serial.c: 383:     data2[3] = pos >> 8;
  4253  00351C  0100               	movlb	0	; () banked
  4254  00351E  51D5               	movf	(_pos+1)& (0+255),w,b
  4255  003520  6FDD               	movwf	(_data2+3)& (0+255),b
  4256  003522                     
  4257                           ; BSR set to: 0
  4258                           ;main_LCD_Servos_I2C_Serial.c: 384:     writeI2C(0x80, 0x06 + (4 * servo), data2, 4);
  4259  003522  0101               	movlb	1	; () banked
  4260  003524  518D               	movf	mover_servo@servo& (0+255),w,b
  4261  003526  0D04               	mullw	4
  4262  003528  50F3               	movf	243,w,c
  4263  00352A  0F06               	addlw	6
  4264  00352C  0100               	movlb	0	; () banked
  4265  00352E  6F7F               	movwf	writeI2C@Register& (0+255),b
  4266  003530  0EDA               	movlw	low _data2
  4267  003532  6F80               	movwf	writeI2C@Data& (0+255),b
  4268  003534  0E00               	movlw	high _data2
  4269  003536  6F81               	movwf	(writeI2C@Data+1)& (0+255),b
  4270  003538  0E00               	movlw	0
  4271  00353A  6F83               	movwf	(writeI2C@bytes+1)& (0+255),b
  4272  00353C  0E04               	movlw	4
  4273  00353E  6F82               	movwf	writeI2C@bytes& (0+255),b
  4274  003540  0E80               	movlw	128
  4275  003542  ECD7  F01B         	call	_writeI2C
  4276  003546                     
  4277                           ;main_LCD_Servos_I2C_Serial.c: 385:     sprintf(text," Servo: %d \n",servo);
  4278  003546  0E1A               	movlw	low _text
  4279  003548  0101               	movlb	1	; () banked
  4280  00354A  6F7D               	movwf	sprintf@s& (0+255),b
  4281  00354C  0E01               	movlw	high _text
  4282  00354E  6F7E               	movwf	(sprintf@s+1)& (0+255),b
  4283  003550  0E4C               	movlw	low STR_5
  4284  003552  6F7F               	movwf	sprintf@fmt& (0+255),b
  4285  003554  0E08               	movlw	high STR_5
  4286  003556  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  4287  003558  C18D  F181         	movff	mover_servo@servo,?_sprintf+4
  4288  00355C  C18E  F182         	movff	mover_servo@servo+1,?_sprintf+5
  4289  003560  EC38  F01D         	call	_sprintf	;wreg free
  4290  003564                     
  4291                           ;main_LCD_Servos_I2C_Serial.c: 386:     start();
  4292  003564  ECE0  F01C         	call	_start	;wreg free
  4293  003568                     
  4294                           ;main_LCD_Servos_I2C_Serial.c: 387:     sprintf(text," Angulo: %d \n",angulo);
  4295  003568  0E1A               	movlw	low _text
  4296  00356A  0101               	movlb	1	; () banked
  4297  00356C  6F7D               	movwf	sprintf@s& (0+255),b
  4298  00356E  0E01               	movlw	high _text
  4299  003570  6F7E               	movwf	(sprintf@s+1)& (0+255),b
  4300  003572  0E3E               	movlw	low STR_6
  4301  003574  6F7F               	movwf	sprintf@fmt& (0+255),b
  4302  003576  0E08               	movlw	high STR_6
  4303  003578  6F80               	movwf	(sprintf@fmt+1)& (0+255),b
  4304  00357A  C18F  F181         	movff	mover_servo@angulo,?_sprintf+4
  4305  00357E  C190  F182         	movff	mover_servo@angulo+1,?_sprintf+5
  4306  003582  EC38  F01D         	call	_sprintf	;wreg free
  4307  003586                     
  4308                           ;main_LCD_Servos_I2C_Serial.c: 388:     start();
  4309  003586  ECE0  F01C         	call	_start	;wreg free
  4310  00358A                     
  4311                           ;main_LCD_Servos_I2C_Serial.c: 389:     _delay((unsigned long)((1000)*(8000000/4000.0)))
      +                          ;
  4312  00358A  0E0B               	movlw	11
  4313  00358C  0101               	movlb	1	; () banked
  4314  00358E  6F92               	movwf	(??_mover_servo+1)& (0+255),b
  4315  003590  0E26               	movlw	38
  4316  003592  6F91               	movwf	??_mover_servo& (0+255),b
  4317  003594  0E5D               	movlw	93
  4318  003596                     u5607:
  4319  003596  2EE8               	decfsz	wreg,f,c
  4320  003598  D7FE               	bra	u5607
  4321  00359A  2F91               	decfsz	??_mover_servo& (0+255),f,b
  4322  00359C  D7FC               	bra	u5607
  4323  00359E  2F92               	decfsz	(??_mover_servo+1)& (0+255),f,b
  4324  0035A0  D7FA               	bra	u5607
  4325  0035A2  D000               	nop2	
  4326  0035A4  0012               	return		;funcret
  4327  0035A6                     __end_of_mover_servo:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _writeI2C *****************
  4331 ;; Defined at:
  4332 ;;		line 273 in file "main_LCD_Servos_I2C_Serial.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  Address         1    wreg     unsigned char 
  4335 ;;  Register        1   31[BANK0 ] unsigned char 
  4336 ;;  Data            2   32[BANK0 ] PTR unsigned char 
  4337 ;;		 -> data2(4), d1(1), setPWMFreq@newmode(1), data1(1), 
  4338 ;;		 -> setPWMFreq@prescale(1), RAM(2047), 
  4339 ;;  bytes           2   34[BANK0 ] int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  Address         1   38[BANK0 ] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4351 ;;      Params:         0       5       0       0       0       0       0       0       0
  4352 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4353 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4354 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4355 ;;Total ram usage:        8 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:   13
  4358 ;; This function calls:
  4359 ;;		_sendI2C
  4360 ;;		_startI2C
  4361 ;;		_stopI2C
  4362 ;; This function is called by:
  4363 ;;		_settings
  4364 ;;		_setPWMFreq
  4365 ;;		_mover_servo
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text12
  4370  0037AE                     __ptext12:
  4371                           	callstack 0
  4372  0037AE                     _writeI2C:
  4373                           	callstack 16
  4374                           
  4375                           ;incstack = 0
  4376                           ;writeI2C@Address stored from wreg
  4377  0037AE  0100               	movlb	0	; () banked
  4378  0037B0  6F86               	movwf	writeI2C@Address& (0+255),b
  4379  0037B2                     
  4380                           ;main_LCD_Servos_I2C_Serial.c: 274:     startI2C();
  4381  0037B2  EC8F  F01F         	call	_startI2C	;wreg free
  4382                           
  4383                           ;main_LCD_Servos_I2C_Serial.c: 275:     sendI2C(Address);
  4384  0037B6  0100               	movlb	0	; () banked
  4385  0037B8  5186               	movf	writeI2C@Address& (0+255),w,b
  4386  0037BA  EC6E  F01F         	call	_sendI2C
  4387                           
  4388                           ;main_LCD_Servos_I2C_Serial.c: 276:     sendI2C(Register);
  4389  0037BE  0100               	movlb	0	; () banked
  4390  0037C0  517F               	movf	writeI2C@Register& (0+255),w,b
  4391  0037C2  EC6E  F01F         	call	_sendI2C
  4392  0037C6                     
  4393                           ;main_LCD_Servos_I2C_Serial.c: 277:     for(i=0;i<bytes;i++){
  4394  0037C6  0E00               	movlw	0
  4395  0037C8  0100               	movlb	0	; () banked
  4396  0037CA  6FD7               	movwf	(_i+1)& (0+255),b
  4397  0037CC  0E00               	movlw	0
  4398  0037CE  6FD6               	movwf	_i& (0+255),b
  4399  0037D0  EFF6  F01B         	goto	l3787
  4400  0037D4                     l3781:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;main_LCD_Servos_I2C_Serial.c: 278:         sendI2C(*Data);
  4404  0037D4  C080  FFD9         	movff	writeI2C@Data,fsr2l
  4405  0037D8  C081  FFDA         	movff	writeI2C@Data+1,fsr2h
  4406  0037DC  50DF               	movf	indf2,w,c
  4407  0037DE  EC6E  F01F         	call	_sendI2C
  4408  0037E2                     
  4409                           ;main_LCD_Servos_I2C_Serial.c: 279:         Data++;
  4410  0037E2  0100               	movlb	0	; () banked
  4411  0037E4  4B80               	infsnz	writeI2C@Data& (0+255),f,b
  4412  0037E6  2B81               	incf	(writeI2C@Data+1)& (0+255),f,b
  4413  0037E8                     
  4414                           ; BSR set to: 0
  4415                           ;main_LCD_Servos_I2C_Serial.c: 280:     }
  4416  0037E8  4BD6               	infsnz	_i& (0+255),f,b
  4417  0037EA  2BD7               	incf	(_i+1)& (0+255),f,b
  4418  0037EC                     l3787:
  4419                           
  4420                           ; BSR set to: 0
  4421  0037EC  5182               	movf	writeI2C@bytes& (0+255),w,b
  4422  0037EE  5DD6               	subwf	_i& (0+255),w,b
  4423  0037F0  51D7               	movf	(_i+1)& (0+255),w,b
  4424  0037F2  0A80               	xorlw	128
  4425  0037F4  6F84               	movwf	??_writeI2C& (0+255),b
  4426  0037F6  5183               	movf	(writeI2C@bytes+1)& (0+255),w,b
  4427  0037F8  0A80               	xorlw	128
  4428  0037FA  5984               	subwfb	??_writeI2C& (0+255),w,b
  4429  0037FC  A0D8               	btfss	status,0,c
  4430  0037FE  EF03  F01C         	goto	u4091
  4431  003802  EF05  F01C         	goto	u4090
  4432  003806                     u4091:
  4433  003806  EFEA  F01B         	goto	l3781
  4434  00380A                     u4090:
  4435  00380A                     
  4436                           ; BSR set to: 0
  4437                           ;main_LCD_Servos_I2C_Serial.c: 281:     stopI2C();
  4438  00380A  EC8B  F01F         	call	_stopI2C	;wreg free
  4439  00380E                     
  4440                           ;main_LCD_Servos_I2C_Serial.c: 282:     _delay((unsigned long)((100)*(8000000/4000.0)));
  4441  00380E  0E02               	movlw	2
  4442  003810  0100               	movlb	0	; () banked
  4443  003812  6F85               	movwf	(??_writeI2C+1)& (0+255),b
  4444  003814  0E04               	movlw	4
  4445  003816  6F84               	movwf	??_writeI2C& (0+255),b
  4446  003818  0EBA               	movlw	186
  4447  00381A                     u5617:
  4448  00381A  2EE8               	decfsz	wreg,f,c
  4449  00381C  D7FE               	bra	u5617
  4450  00381E  2F84               	decfsz	??_writeI2C& (0+255),f,b
  4451  003820  D7FC               	bra	u5617
  4452  003822  2F85               	decfsz	(??_writeI2C+1)& (0+255),f,b
  4453  003824  D7FA               	bra	u5617
  4454  003826  F000               	nop	
  4455  003828  0012               	return		;funcret
  4456  00382A                     __end_of_writeI2C:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function _stopI2C *****************
  4460 ;; Defined at:
  4461 ;;		line 299 in file "main_LCD_Servos_I2C_Serial.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   12
  4482 ;; This function calls:
  4483 ;;		_readyI2C
  4484 ;; This function is called by:
  4485 ;;		_writeI2C
  4486 ;;		_readI2C
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text13
  4491  003F16                     __ptext13:
  4492                           	callstack 0
  4493  003F16                     _stopI2C:
  4494                           	callstack 16
  4495  003F16                     
  4496                           ;main_LCD_Servos_I2C_Serial.c: 301:     readyI2C();
  4497  003F16  EC12  F01F         	call	_readyI2C	;wreg free
  4498  003F1A                     
  4499                           ;main_LCD_Servos_I2C_Serial.c: 302:     PEN = 1;
  4500  003F1A  84C5               	bsf	4037,2,c	;volatile
  4501  003F1C  0012               	return		;funcret
  4502  003F1E                     __end_of_stopI2C:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _startI2C *****************
  4506 ;; Defined at:
  4507 ;;		line 285 in file "main_LCD_Servos_I2C_Serial.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:   12
  4528 ;; This function calls:
  4529 ;;		_readyI2C
  4530 ;; This function is called by:
  4531 ;;		_writeI2C
  4532 ;;		_readI2C
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text14
  4537  003F1E                     __ptext14:
  4538                           	callstack 0
  4539  003F1E                     _startI2C:
  4540                           	callstack 16
  4541  003F1E                     
  4542                           ;main_LCD_Servos_I2C_Serial.c: 286:     readyI2C();
  4543  003F1E  EC12  F01F         	call	_readyI2C	;wreg free
  4544  003F22                     
  4545                           ;main_LCD_Servos_I2C_Serial.c: 287:     SEN = 1;
  4546  003F22  80C5               	bsf	4037,0,c	;volatile
  4547  003F24  0012               	return		;funcret
  4548  003F26                     __end_of_startI2C:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _sendI2C *****************
  4552 ;; Defined at:
  4553 ;;		line 294 in file "main_LCD_Servos_I2C_Serial.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  data            1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  data            1   30[BANK0 ] unsigned char 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0
  4568 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4570 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4571 ;;Total ram usage:        1 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:   12
  4574 ;; This function calls:
  4575 ;;		_readyI2C
  4576 ;; This function is called by:
  4577 ;;		_writeI2C
  4578 ;;		_readI2C
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text15
  4583  003EDC                     __ptext15:
  4584                           	callstack 0
  4585  003EDC                     _sendI2C:
  4586                           	callstack 16
  4587                           
  4588                           ;incstack = 0
  4589                           ;sendI2C@data stored from wreg
  4590  003EDC  0100               	movlb	0	; () banked
  4591  003EDE  6F7E               	movwf	sendI2C@data& (0+255),b
  4592  003EE0                     
  4593                           ;main_LCD_Servos_I2C_Serial.c: 295:     readyI2C();
  4594  003EE0  EC12  F01F         	call	_readyI2C	;wreg free
  4595  003EE4                     
  4596                           ;main_LCD_Servos_I2C_Serial.c: 296:     SSPBUF = data;
  4597  003EE4  C07E  FFC9         	movff	sendI2C@data,4041	;volatile
  4598  003EE8  0012               	return		;funcret
  4599  003EEA                     __end_of_sendI2C:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function _readyI2C *****************
  4603 ;; Defined at:
  4604 ;;		line 290 in file "main_LCD_Servos_I2C_Serial.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4620 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4621 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4622 ;;Total ram usage:        1 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:   11
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_startI2C
  4629 ;;		_sendI2C
  4630 ;;		_stopI2C
  4631 ;;		_repeatedStart
  4632 ;;		_receiveI2C
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text16
  4637  003E24                     __ptext16:
  4638                           	callstack 0
  4639  003E24                     _readyI2C:
  4640                           	callstack 16
  4641  003E24                     l3305:
  4642  003E24  CFC5 F07D          	movff	4037,??_readyI2C	;volatile
  4643  003E28  0E1F               	movlw	31
  4644  003E2A  0100               	movlb	0	; () banked
  4645  003E2C  177D               	andwf	??_readyI2C& (0+255),f,b
  4646  003E2E  A4D8               	btfss	status,2,c
  4647  003E30  EF1C  F01F         	goto	u3401
  4648  003E34  EF1E  F01F         	goto	u3400
  4649  003E38                     u3401:
  4650  003E38  EF12  F01F         	goto	l3305
  4651  003E3C                     u3400:
  4652  003E3C                     
  4653                           ; BSR set to: 0
  4654  003E3C  B4C7               	btfsc	199,2,c	;volatile
  4655  003E3E  EF23  F01F         	goto	u3411
  4656  003E42  EF25  F01F         	goto	u3410
  4657  003E46                     u3411:
  4658  003E46  EF12  F01F         	goto	l3305
  4659  003E4A                     u3410:
  4660  003E4A                     
  4661                           ; BSR set to: 0
  4662  003E4A  0012               	return		;funcret
  4663  003E4C                     __end_of_readyI2C:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _start *****************
  4667 ;; Defined at:
  4668 ;;		line 261 in file "main_LCD_Servos_I2C_Serial.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:   12
  4689 ;; This function calls:
  4690 ;;		_strlen
  4691 ;; This function is called by:
  4692 ;;		_settings
  4693 ;;		_mover_servo
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text17
  4698  0039C0                     __ptext17:
  4699                           	callstack 0
  4700  0039C0                     _start:
  4701                           	callstack 17
  4702  0039C0                     
  4703                           ;main_LCD_Servos_I2C_Serial.c: 262:     for(i=0;i<=strlen(text);i++){
  4704  0039C0  0E00               	movlw	0
  4705  0039C2  0100               	movlb	0	; () banked
  4706  0039C4  6FD7               	movwf	(_i+1)& (0+255),b
  4707  0039C6  0E00               	movlw	0
  4708  0039C8  6FD6               	movwf	_i& (0+255),b
  4709  0039CA  EFF9  F01C         	goto	l4843
  4710  0039CE                     l223:
  4711  0039CE  A89E               	btfss	3998,4,c	;volatile
  4712  0039D0  EFEC  F01C         	goto	u5531
  4713  0039D4  EFEE  F01C         	goto	u5530
  4714  0039D8                     u5531:
  4715  0039D8  EFE7  F01C         	goto	l223
  4716  0039DC                     u5530:
  4717  0039DC                     
  4718                           ;main_LCD_Servos_I2C_Serial.c: 264:         TXREG = text[i];
  4719  0039DC  0E1A               	movlw	low _text
  4720  0039DE  0100               	movlb	0	; () banked
  4721  0039E0  25D6               	addwf	_i& (0+255),w,b
  4722  0039E2  6ED9               	movwf	fsr2l,c
  4723  0039E4  0E01               	movlw	high _text
  4724  0039E6  21D7               	addwfc	(_i+1)& (0+255),w,b
  4725  0039E8  6EDA               	movwf	fsr2h,c
  4726  0039EA  50DF               	movf	indf2,w,c
  4727  0039EC  6EAD               	movwf	173,c	;volatile
  4728  0039EE                     
  4729                           ; BSR set to: 0
  4730                           ;main_LCD_Servos_I2C_Serial.c: 265:     }
  4731  0039EE  4BD6               	infsnz	_i& (0+255),f,b
  4732  0039F0  2BD7               	incf	(_i+1)& (0+255),f,b
  4733  0039F2                     l4843:
  4734                           
  4735                           ; BSR set to: 0
  4736  0039F2  0E1A               	movlw	low _text
  4737  0039F4  6F7D               	movwf	strlen@s& (0+255),b
  4738  0039F6  0E01               	movlw	high _text
  4739  0039F8  6F7E               	movwf	(strlen@s+1)& (0+255),b
  4740  0039FA  ECA2  F01E         	call	_strlen	;wreg free
  4741  0039FE  0100               	movlb	0	; () banked
  4742  003A00  51D6               	movf	_i& (0+255),w,b
  4743  003A02  5D7D               	subwf	?_strlen& (0+255),w,b
  4744  003A04  51D7               	movf	(_i+1)& (0+255),w,b
  4745  003A06  597E               	subwfb	(?_strlen+1)& (0+255),w,b
  4746  003A08  B0D8               	btfsc	status,0,c
  4747  003A0A  EF09  F01D         	goto	u5541
  4748  003A0E  EF0B  F01D         	goto	u5540
  4749  003A12                     u5541:
  4750  003A12  EFE7  F01C         	goto	l223
  4751  003A16                     u5540:
  4752  003A16                     
  4753                           ; BSR set to: 0
  4754  003A16  0012               	return		;funcret
  4755  003A18                     __end_of_start:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _sprintf *****************
  4759 ;; Defined at:
  4760 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  s               2   15[BANK1 ] PTR unsigned char 
  4763 ;;		 -> text(40), 
  4764 ;;  fmt             2   17[BANK1 ] PTR const unsigned char 
  4765 ;;		 -> STR_6(14), STR_5(13), STR_4(30), STR_3(17), 
  4766 ;;		 -> STR_2(14), STR_1(9), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  f               6   25[BANK1 ] struct _IO_FILE
  4769 ;;  ap              2   23[BANK1 ] PTR void [1]
  4770 ;;		 -> ?_sprintf(2), 
  4771 ;;  ret             2    0        int 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2   15[BANK1 ] int 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4781 ;;      Params:         0       0       6       0       0       0       0       0       0
  4782 ;;      Locals:         0       0      10       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0      16       0       0       0       0       0       0
  4785 ;;Total ram usage:       16 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:   18
  4788 ;; This function calls:
  4789 ;;		_vfprintf
  4790 ;; This function is called by:
  4791 ;;		_settings
  4792 ;;		_mover_servo
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text18
  4797  003A70                     __ptext18:
  4798                           	callstack 0
  4799  003A70                     _sprintf:
  4800                           	callstack 11
  4801  003A70  0E81               	movlw	low (?_sprintf+4)
  4802  003A72  0101               	movlb	1	; () banked
  4803  003A74  6F85               	movwf	sprintf@ap& (0+255),b
  4804  003A76  0E01               	movlw	high (?_sprintf+4)
  4805  003A78  6F86               	movwf	(sprintf@ap+1)& (0+255),b
  4806  003A7A  C17D  F187         	movff	sprintf@s,sprintf@f
  4807  003A7E  C17E  F188         	movff	sprintf@s+1,sprintf@f+1
  4808  003A82                     
  4809                           ; BSR set to: 1
  4810  003A82  0E00               	movlw	0
  4811  003A84  6F8A               	movwf	(sprintf@f+3)& (0+255),b
  4812  003A86  0E00               	movlw	0
  4813  003A88  6F89               	movwf	(sprintf@f+2)& (0+255),b
  4814  003A8A                     
  4815                           ; BSR set to: 1
  4816  003A8A  0E00               	movlw	0
  4817  003A8C  6F8C               	movwf	(sprintf@f+5)& (0+255),b
  4818  003A8E  0E00               	movlw	0
  4819  003A90  6F8B               	movwf	(sprintf@f+4)& (0+255),b
  4820  003A92                     
  4821                           ; BSR set to: 1
  4822  003A92  0E87               	movlw	low sprintf@f
  4823  003A94  6F77               	movwf	vfprintf@fp& (0+255),b
  4824  003A96  0E01               	movlw	high sprintf@f
  4825  003A98  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
  4826  003A9A  C17F  F179         	movff	sprintf@fmt,vfprintf@fmt
  4827  003A9E  C180  F17A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4828  003AA2  0E85               	movlw	low sprintf@ap
  4829  003AA4  6F7B               	movwf	vfprintf@ap& (0+255),b
  4830  003AA6  0E01               	movlw	high sprintf@ap
  4831  003AA8  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
  4832  003AAA  EC4F  F01C         	call	_vfprintf	;wreg free
  4833  003AAE  0101               	movlb	1	; () banked
  4834  003AB0  5189               	movf	(sprintf@f+2)& (0+255),w,b
  4835  003AB2  257D               	addwf	sprintf@s& (0+255),w,b
  4836  003AB4  6ED9               	movwf	fsr2l,c
  4837  003AB6  518A               	movf	(sprintf@f+3)& (0+255),w,b
  4838  003AB8  217E               	addwfc	(sprintf@s+1)& (0+255),w,b
  4839  003ABA  6EDA               	movwf	fsr2h,c
  4840  003ABC  0E00               	movlw	0
  4841  003ABE  6EDF               	movwf	indf2,c
  4842  003AC0                     
  4843                           ; BSR set to: 1
  4844  003AC0  0012               	return		;funcret
  4845  003AC2                     __end_of_sprintf:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _vfprintf *****************
  4849 ;; Defined at:
  4850 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  fp              2    9[BANK1 ] PTR struct _IO_FILE
  4853 ;;		 -> sprintf@f(6), 
  4854 ;;  fmt             2   11[BANK1 ] PTR const unsigned char 
  4855 ;;		 -> STR_6(14), STR_5(13), STR_4(30), STR_3(17), 
  4856 ;;		 -> STR_2(14), STR_1(9), 
  4857 ;;  ap              2   13[BANK1 ] PTR PTR void 
  4858 ;;		 -> sprintf@ap(2), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  cfmt            2  100[BANK0 ] PTR unsigned char 
  4861 ;;		 -> STR_6(14), STR_5(13), STR_4(30), STR_3(17), 
  4862 ;;		 -> STR_2(14), STR_1(9), 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2    9[BANK1 ] int 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4872 ;;      Params:         0       0       6       0       0       0       0       0       0
  4873 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4875 ;;      Totals:         0       2       6       0       0       0       0       0       0
  4876 ;;Total ram usage:        8 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:   17
  4879 ;; This function calls:
  4880 ;;		_vfpfcnvrt
  4881 ;; This function is called by:
  4882 ;;		_sprintf
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text19
  4887  00389E                     __ptext19:
  4888                           	callstack 0
  4889  00389E                     _vfprintf:
  4890                           	callstack 11
  4891  00389E                     
  4892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4893  00389E  C179  F0C4         	movff	vfprintf@fmt,vfprintf@cfmt
  4894  0038A2  C17A  F0C5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4895  0038A6                     
  4896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4897  0038A6  0E00               	movlw	0
  4898  0038A8  0100               	movlb	0	; () banked
  4899  0038AA  6FC7               	movwf	(_nout+1)& (0+255),b
  4900  0038AC  0E00               	movlw	0
  4901  0038AE  6FC6               	movwf	_nout& (0+255),b
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4904  0038B0  EF6D  F01C         	goto	l4823
  4905  0038B4                     l4821:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4909  0038B4  C177  F0BC         	movff	vfprintf@fp,vfpfcnvrt@fp
  4910  0038B8  C178  F0BD         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4911  0038BC  0EC4               	movlw	low vfprintf@cfmt
  4912  0038BE  6FBE               	movwf	vfpfcnvrt@fmt& (0+255),b
  4913  0038C0  0E00               	movlw	high vfprintf@cfmt
  4914  0038C2  6FBF               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4915  0038C4  C17B  F0C0         	movff	vfprintf@ap,vfpfcnvrt@ap
  4916  0038C8  C17C  F0C1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4917  0038CC  EC16  F00F         	call	_vfpfcnvrt	;wreg free
  4918  0038D0  0100               	movlb	0	; () banked
  4919  0038D2  51BC               	movf	?_vfpfcnvrt& (0+255),w,b
  4920  0038D4  27C6               	addwf	_nout& (0+255),f,b
  4921  0038D6  51BD               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4922  0038D8  23C7               	addwfc	(_nout+1)& (0+255),f,b
  4923  0038DA                     l4823:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4927  0038DA  C0C4  FFF6         	movff	vfprintf@cfmt,tblptrl
  4928  0038DE  C0C5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4929  0038E2                     	if	0	;tblptru may be non-zero
  4930  0038E2                     	endif
  4931  0038E2                     	if	0	;tblptru may be non-zero
  4932  0038E2                     	endif
  4933  0038E2  0008               	tblrd		*
  4934  0038E4  50F5               	movf	tablat,w,c
  4935  0038E6  0900               	iorlw	0
  4936  0038E8  A4D8               	btfss	status,2,c
  4937  0038EA  EF79  F01C         	goto	u5521
  4938  0038EE  EF7B  F01C         	goto	u5520
  4939  0038F2                     u5521:
  4940  0038F2  EF5A  F01C         	goto	l4821
  4941  0038F6                     u5520:
  4942  0038F6                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4945  0038F6  C0C6  F177         	movff	_nout,?_vfprintf
  4946  0038FA  C0C7  F178         	movff	_nout+1,?_vfprintf+1
  4947  0038FE                     
  4948                           ; BSR set to: 0
  4949  0038FE  0012               	return		;funcret
  4950  003900                     __end_of_vfprintf:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _vfpfcnvrt *****************
  4954 ;; Defined at:
  4955 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  fp              2   92[BANK0 ] PTR struct _IO_FILE
  4958 ;;		 -> sprintf@f(6), 
  4959 ;;  fmt             2   94[BANK0 ] PTR PTR unsigned char 
  4960 ;;		 -> vfprintf@cfmt(2), 
  4961 ;;  ap              2   96[BANK0 ] PTR PTR void 
  4962 ;;		 -> sprintf@ap(2), 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  ll              8    0[BANK1 ] long long 
  4965 ;;  llu             8    0        unsigned long long 
  4966 ;;  f               4    0        unsigned long long 
  4967 ;;  vp              3    0        PTR void 
  4968 ;;  ct              3    0        unsigned char [3]
  4969 ;;  cp              3    0        PTR unsigned char 
  4970 ;;  i               2    0        int 
  4971 ;;  done            2    0        int 
  4972 ;;  c               1    8[BANK1 ] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  2   92[BANK0 ] int 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         0       6       0       0       0       0       0       0       0
  4983 ;;      Locals:         0       0       9       0       0       0       0       0       0
  4984 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4985 ;;      Totals:         0       8       9       0       0       0       0       0       0
  4986 ;;Total ram usage:       17 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:   16
  4989 ;; This function calls:
  4990 ;;		_ctoa
  4991 ;;		_dtoa
  4992 ;;		_fputc
  4993 ;; This function is called by:
  4994 ;;		_vfprintf
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text20
  4999  001E2C                     __ptext20:
  5000                           	callstack 0
  5001  001E2C                     _vfpfcnvrt:
  5002                           	callstack 11
  5003  001E2C                     
  5004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5005  001E2C  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5006  001E30  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5007  001E34  CFDE FFF6          	movff	postinc2,tblptrl
  5008  001E38  CFDD FFF7          	movff	postdec2,tblptrh
  5009  001E3C                     	if	0	;tblptru may be non-zero
  5010  001E3C                     	endif
  5011  001E3C                     	if	0	;tblptru may be non-zero
  5012  001E3C                     	endif
  5013  001E3C  0008               	tblrd		*
  5014  001E3E  50F5               	movf	tablat,w,c
  5015  001E40  0A25               	xorlw	37
  5016  001E42  A4D8               	btfss	status,2,c
  5017  001E44  EF26  F00F         	goto	u5471
  5018  001E48  EF28  F00F         	goto	u5470
  5019  001E4C                     u5471:
  5020  001E4C  EF10  F010         	goto	l4809
  5021  001E50                     u5470:
  5022  001E50                     
  5023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5024  001E50  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5025  001E54  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5026  001E58  2ADE               	incf	postinc2,f,c
  5027  001E5A  0E00               	movlw	0
  5028  001E5C  22DD               	addwfc	postdec2,f,c
  5029  001E5E                     
  5030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5031  001E5E  0E00               	movlw	0
  5032  001E60  0100               	movlb	0	; () banked
  5033  001E62  6FC9               	movwf	(_width+1)& (0+255),b
  5034  001E64  0E00               	movlw	0
  5035  001E66  6FC8               	movwf	_width& (0+255),b
  5036  001E68  C0C8  F0CC         	movff	_width,_flags
  5037  001E6C  C0C9  F0CD         	movff	_width+1,_flags+1
  5038  001E70                     
  5039                           ; BSR set to: 0
  5040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5041  001E70  69CA               	setf	_prec& (0+255),b
  5042  001E72  69CB               	setf	(_prec+1)& (0+255),b
  5043  001E74                     
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  5046  001E74  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5047  001E78  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5048  001E7C  CFDE FFF6          	movff	postinc2,tblptrl
  5049  001E80  CFDD FFF7          	movff	postdec2,tblptrh
  5050  001E84                     	if	0	;tblptru may be non-zero
  5051  001E84                     	endif
  5052  001E84                     	if	0	;tblptru may be non-zero
  5053  001E84                     	endif
  5054  001E84  0008               	tblrd		*
  5055  001E86  50F5               	movf	tablat,w,c
  5056  001E88  0A63               	xorlw	99
  5057  001E8A  A4D8               	btfss	status,2,c
  5058  001E8C  EF4A  F00F         	goto	u5481
  5059  001E90  EF4C  F00F         	goto	u5480
  5060  001E94                     u5481:
  5061  001E94  EF74  F00F         	goto	l4783
  5062  001E98                     u5480:
  5063  001E98                     
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  5066  001E98  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5067  001E9C  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5068  001EA0  2ADE               	incf	postinc2,f,c
  5069  001EA2  0E00               	movlw	0
  5070  001EA4  22DD               	addwfc	postdec2,f,c
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5073  001EA6  C0C0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5074  001EAA  C0C1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5075  001EAE  CFDF F0C2          	movff	indf2,??_vfpfcnvrt
  5076  001EB2  0E02               	movlw	2
  5077  001EB4  26DE               	addwf	postinc2,f,c
  5078  001EB6  CFDF F0C3          	movff	indf2,??_vfpfcnvrt+1
  5079  001EBA  0E00               	movlw	0
  5080  001EBC  22DD               	addwfc	postdec2,f,c
  5081  001EBE  C0C2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5082  001EC2  C0C3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5083  001EC6  50DF               	movf	indf2,w,c
  5084  001EC8  0101               	movlb	1	; () banked
  5085  001ECA  6F76               	movwf	vfpfcnvrt@c& (0+255),b
  5086  001ECC                     
  5087                           ; BSR set to: 1
  5088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  5089  001ECC  C0BC  F086         	movff	vfpfcnvrt@fp,ctoa@fp
  5090  001ED0  C0BD  F087         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5091  001ED4  C176  F088         	movff	vfpfcnvrt@c,ctoa@c
  5092  001ED8  EC3F  F017         	call	_ctoa	;wreg free
  5093  001EDC  C086  F0BC         	movff	?_ctoa,?_vfpfcnvrt
  5094  001EE0  C087  F0BD         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5095  001EE4  EF2C  F010         	goto	l1107
  5096  001EE8                     l4783:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5100  001EE8  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5101  001EEC  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5102  001EF0  CFDE FFF6          	movff	postinc2,tblptrl
  5103  001EF4  CFDD FFF7          	movff	postdec2,tblptrh
  5104  001EF8                     	if	0	;tblptru may be non-zero
  5105  001EF8                     	endif
  5106  001EF8                     	if	0	;tblptru may be non-zero
  5107  001EF8                     	endif
  5108  001EF8  0008               	tblrd		*
  5109  001EFA  50F5               	movf	tablat,w,c
  5110  001EFC  0A64               	xorlw	100
  5111  001EFE  B4D8               	btfsc	status,2,c
  5112  001F00  EF84  F00F         	goto	u5491
  5113  001F04  EF86  F00F         	goto	u5490
  5114  001F08                     u5491:
  5115  001F08  EF98  F00F         	goto	l4787
  5116  001F0C                     u5490:
  5117  001F0C                     
  5118                           ; BSR set to: 0
  5119  001F0C  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5120  001F10  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5121  001F14  CFDE FFF6          	movff	postinc2,tblptrl
  5122  001F18  CFDD FFF7          	movff	postdec2,tblptrh
  5123  001F1C                     	if	0	;tblptru may be non-zero
  5124  001F1C                     	endif
  5125  001F1C                     	if	0	;tblptru may be non-zero
  5126  001F1C                     	endif
  5127  001F1C  0008               	tblrd		*
  5128  001F1E  50F5               	movf	tablat,w,c
  5129  001F20  0A69               	xorlw	105
  5130  001F22  A4D8               	btfss	status,2,c
  5131  001F24  EF96  F00F         	goto	u5501
  5132  001F28  EF98  F00F         	goto	u5500
  5133  001F2C                     u5501:
  5134  001F2C  EFD9  F00F         	goto	l4793
  5135  001F30                     u5500:
  5136  001F30                     l4787:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5140  001F30  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5141  001F34  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5142  001F38  2ADE               	incf	postinc2,f,c
  5143  001F3A  0E00               	movlw	0
  5144  001F3C  22DD               	addwfc	postdec2,f,c
  5145                           
  5146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5147  001F3E  C0C0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5148  001F42  C0C1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5149  001F46  CFDF F0C2          	movff	indf2,??_vfpfcnvrt
  5150  001F4A  0E02               	movlw	2
  5151  001F4C  26DE               	addwf	postinc2,f,c
  5152  001F4E  CFDF F0C3          	movff	indf2,??_vfpfcnvrt+1
  5153  001F52  0E00               	movlw	0
  5154  001F54  22DD               	addwfc	postdec2,f,c
  5155  001F56  C0C2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5156  001F5A  C0C3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5157  001F5E  CFDE F16E          	movff	postinc2,vfpfcnvrt@ll
  5158  001F62  CFDD F16F          	movff	postdec2,vfpfcnvrt@ll+1
  5159  001F66  0101               	movlb	1	; () banked
  5160  001F68  0E00               	movlw	0
  5161  001F6A  BF6F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5162  001F6C  0EFF               	movlw	-1
  5163  001F6E  6F70               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5164  001F70  6F71               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5165  001F72  6F72               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5166  001F74  6F73               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5167  001F76  6F74               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5168  001F78  6F75               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5169  001F7A                     
  5170                           ; BSR set to: 1
  5171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5172  001F7A  C0BC  F098         	movff	vfpfcnvrt@fp,dtoa@fp
  5173  001F7E  C0BD  F099         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5174  001F82  C16E  F09A         	movff	vfpfcnvrt@ll,dtoa@d
  5175  001F86  C16F  F09B         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5176  001F8A  C170  F09C         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5177  001F8E  C171  F09D         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5178  001F92  C172  F09E         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5179  001F96  C173  F09F         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5180  001F9A  C174  F0A0         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5181  001F9E  C175  F0A1         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5182  001FA2  ECD2  F00A         	call	_dtoa	;wreg free
  5183  001FA6  C098  F0BC         	movff	?_dtoa,?_vfpfcnvrt
  5184  001FAA  C099  F0BD         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5185  001FAE  EF2C  F010         	goto	l1107
  5186  001FB2                     l4793:
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5190  001FB2  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5191  001FB6  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5192  001FBA  CFDE FFF6          	movff	postinc2,tblptrl
  5193  001FBE  CFDD FFF7          	movff	postdec2,tblptrh
  5194  001FC2                     	if	0	;tblptru may be non-zero
  5195  001FC2                     	endif
  5196  001FC2                     	if	0	;tblptru may be non-zero
  5197  001FC2                     	endif
  5198  001FC2  0008               	tblrd		*
  5199  001FC4  50F5               	movf	tablat,w,c
  5200  001FC6  0A25               	xorlw	37
  5201  001FC8  A4D8               	btfss	status,2,c
  5202  001FCA  EFE9  F00F         	goto	u5511
  5203  001FCE  EFEB  F00F         	goto	u5510
  5204  001FD2                     u5511:
  5205  001FD2  EF03  F010         	goto	l4803
  5206  001FD6                     u5510:
  5207  001FD6                     
  5208                           ; BSR set to: 0
  5209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5210  001FD6  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5211  001FDA  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5212  001FDE  2ADE               	incf	postinc2,f,c
  5213  001FE0  0E00               	movlw	0
  5214  001FE2  22DD               	addwfc	postdec2,f,c
  5215  001FE4                     
  5216                           ; BSR set to: 0
  5217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5218  001FE4  0E00               	movlw	0
  5219  001FE6  6F7E               	movwf	(fputc@c+1)& (0+255),b
  5220  001FE8  0E25               	movlw	37
  5221  001FEA  6F7D               	movwf	fputc@c& (0+255),b
  5222  001FEC  C0BC  F07F         	movff	vfpfcnvrt@fp,fputc@fp
  5223  001FF0  C0BD  F080         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5224  001FF4  EC19  F018         	call	_fputc	;wreg free
  5225  001FF8                     l4799:
  5226                           
  5227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5228  001FF8  0E00               	movlw	0
  5229  001FFA  0100               	movlb	0	; () banked
  5230  001FFC  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5231  001FFE  0E01               	movlw	1
  5232  002000  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  5233  002002  EF2C  F010         	goto	l1107
  5234  002006                     l4803:
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5238  002006  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5239  00200A  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5240  00200E  2ADE               	incf	postinc2,f,c
  5241  002010  0E00               	movlw	0
  5242  002012  22DD               	addwfc	postdec2,f,c
  5243  002014                     
  5244                           ; BSR set to: 0
  5245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5246  002014  0E00               	movlw	0
  5247  002016  6FBD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5248  002018  0E00               	movlw	0
  5249  00201A  6FBC               	movwf	?_vfpfcnvrt& (0+255),b
  5250  00201C  EF2C  F010         	goto	l1107
  5251  002020                     l4809:
  5252                           
  5253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5254  002020  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5255  002024  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5256  002028  CFDE FFF6          	movff	postinc2,tblptrl
  5257  00202C  CFDD FFF7          	movff	postdec2,tblptrh
  5258  002030                     	if	0	;tblptru may be non-zero
  5259  002030                     	endif
  5260  002030                     	if	0	;tblptru may be non-zero
  5261  002030                     	endif
  5262  002030  0008               	tblrd		*
  5263  002032  50F5               	movf	tablat,w,c
  5264  002034  0100               	movlb	0	; () banked
  5265  002036  6F7D               	movwf	fputc@c& (0+255),b
  5266  002038  6B7E               	clrf	(fputc@c+1)& (0+255),b
  5267  00203A  C0BC  F07F         	movff	vfpfcnvrt@fp,fputc@fp
  5268  00203E  C0BD  F080         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5269  002042  EC19  F018         	call	_fputc	;wreg free
  5270  002046                     
  5271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5272  002046  C0BE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5273  00204A  C0BF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5274  00204E  2ADE               	incf	postinc2,f,c
  5275  002050  0E00               	movlw	0
  5276  002052  22DD               	addwfc	postdec2,f,c
  5277  002054  EFFC  F00F         	goto	l4799
  5278  002058                     l1107:
  5279  002058  0012               	return		;funcret
  5280  00205A                     __end_of_vfpfcnvrt:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _dtoa *****************
  5284 ;; Defined at:
  5285 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  5288 ;;		 -> sprintf@f(6), 
  5289 ;;  d               8   58[BANK0 ] long long 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  n               8   82[BANK0 ] long long 
  5292 ;;  i               2   90[BANK0 ] int 
  5293 ;;  s               2   80[BANK0 ] int 
  5294 ;;  w               2   78[BANK0 ] int 
  5295 ;;  p               2   76[BANK0 ] int 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2   56[BANK0 ] int 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5305 ;;      Params:         0      10       0       0       0       0       0       0       0
  5306 ;;      Locals:         0      18       0       0       0       0       0       0       0
  5307 ;;      Temps:          0       8       0       0       0       0       0       0       0
  5308 ;;      Totals:         0      36       0       0       0       0       0       0       0
  5309 ;;Total ram usage:       36 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:   15
  5312 ;; This function calls:
  5313 ;;		___aodiv
  5314 ;;		___aomod
  5315 ;;		_abs
  5316 ;;		_pad
  5317 ;; This function is called by:
  5318 ;;		_vfpfcnvrt
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text21
  5323  0015A4                     __ptext21:
  5324                           	callstack 0
  5325  0015A4                     _dtoa:
  5326                           	callstack 11
  5327  0015A4                     
  5328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5329  0015A4  C09A  F0B2         	movff	dtoa@d,dtoa@n
  5330  0015A8  C09B  F0B3         	movff	dtoa@d+1,dtoa@n+1
  5331  0015AC  C09C  F0B4         	movff	dtoa@d+2,dtoa@n+2
  5332  0015B0  C09D  F0B5         	movff	dtoa@d+3,dtoa@n+3
  5333  0015B4  C09E  F0B6         	movff	dtoa@d+4,dtoa@n+4
  5334  0015B8  C09F  F0B7         	movff	dtoa@d+5,dtoa@n+5
  5335  0015BC  C0A0  F0B8         	movff	dtoa@d+6,dtoa@n+6
  5336  0015C0  C0A1  F0B9         	movff	dtoa@d+7,dtoa@n+7
  5337  0015C4                     
  5338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5339  0015C4  0100               	movlb	0	; () banked
  5340  0015C6  BFB9               	btfsc	(dtoa@n+7)& (0+255),7,b
  5341  0015C8  EFE8  F00A         	goto	u5321
  5342  0015CC  EFEB  F00A         	goto	u5320
  5343  0015D0                     u5321:
  5344  0015D0  0E01               	movlw	1
  5345  0015D2  EFEC  F00A         	goto	u5330
  5346  0015D6                     u5320:
  5347  0015D6  0E00               	movlw	0
  5348  0015D8                     u5330:
  5349  0015D8  6FB0               	movwf	dtoa@s& (0+255),b
  5350  0015DA  6BB1               	clrf	(dtoa@s+1)& (0+255),b
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5353  0015DC  51B0               	movf	dtoa@s& (0+255),w,b
  5354  0015DE  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  5355  0015E0  B4D8               	btfsc	status,2,c
  5356  0015E2  EFF5  F00A         	goto	u5341
  5357  0015E6  EFF7  F00A         	goto	u5340
  5358  0015EA                     u5341:
  5359  0015EA  EF07  F00B         	goto	l4711
  5360  0015EE                     u5340:
  5361  0015EE                     
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5364  0015EE  1FB9               	comf	(dtoa@n+7)& (0+255),f,b
  5365  0015F0  1FB8               	comf	(dtoa@n+6)& (0+255),f,b
  5366  0015F2  1FB7               	comf	(dtoa@n+5)& (0+255),f,b
  5367  0015F4  1FB6               	comf	(dtoa@n+4)& (0+255),f,b
  5368  0015F6  1FB5               	comf	(dtoa@n+3)& (0+255),f,b
  5369  0015F8  1FB4               	comf	(dtoa@n+2)& (0+255),f,b
  5370  0015FA  1FB3               	comf	(dtoa@n+1)& (0+255),f,b
  5371  0015FC  6DB2               	negf	dtoa@n& (0+255),b
  5372  0015FE  0E00               	movlw	0
  5373  001600  23B3               	addwfc	(dtoa@n+1)& (0+255),f,b
  5374  001602  23B4               	addwfc	(dtoa@n+2)& (0+255),f,b
  5375  001604  23B5               	addwfc	(dtoa@n+3)& (0+255),f,b
  5376  001606  23B6               	addwfc	(dtoa@n+4)& (0+255),f,b
  5377  001608  23B7               	addwfc	(dtoa@n+5)& (0+255),f,b
  5378  00160A  23B8               	addwfc	(dtoa@n+6)& (0+255),f,b
  5379  00160C  23B9               	addwfc	(dtoa@n+7)& (0+255),f,b
  5380  00160E                     l4711:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5384  00160E  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  5385  001610  EF0C  F00B         	goto	u5351
  5386  001614  EF0E  F00B         	goto	u5350
  5387  001618                     u5351:
  5388  001618  EF0F  F00B         	goto	l4715
  5389  00161C                     u5350:
  5390  00161C                     
  5391                           ; BSR set to: 0
  5392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5393  00161C  93CC               	bcf	_flags& (0+255),1,b
  5394  00161E                     l4715:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5398  00161E  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  5399  001620  EF1C  F00B         	goto	u5360
  5400  001624  51CB               	movf	(_prec+1)& (0+255),w,b
  5401  001626  E106               	bnz	u5361
  5402  001628  05CA               	decf	_prec& (0+255),w,b
  5403  00162A  B0D8               	btfsc	status,0,c
  5404  00162C  EF1A  F00B         	goto	u5361
  5405  001630  EF1C  F00B         	goto	u5360
  5406  001634                     u5361:
  5407  001634  EF22  F00B         	goto	l1082
  5408  001638                     u5360:
  5409  001638                     
  5410                           ; BSR set to: 0
  5411  001638  0E00               	movlw	0
  5412  00163A  6FAD               	movwf	(dtoa@p+1)& (0+255),b
  5413  00163C  0E01               	movlw	1
  5414  00163E  6FAC               	movwf	dtoa@p& (0+255),b
  5415  001640  EF26  F00B         	goto	l1084
  5416  001644                     l1082:
  5417                           
  5418                           ; BSR set to: 0
  5419  001644  C0CA  F0AC         	movff	_prec,dtoa@p
  5420  001648  C0CB  F0AD         	movff	_prec+1,dtoa@p+1
  5421  00164C                     l1084:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5425  00164C  C0C8  F0AE         	movff	_width,dtoa@w
  5426  001650  C0C9  F0AF         	movff	_width+1,dtoa@w+1
  5427  001654                     
  5428                           ; BSR set to: 0
  5429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5430  001654  51B0               	movf	dtoa@s& (0+255),w,b
  5431  001656  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  5432  001658  A4D8               	btfss	status,2,c
  5433  00165A  EF31  F00B         	goto	u5371
  5434  00165E  EF33  F00B         	goto	u5370
  5435  001662                     u5371:
  5436  001662  EF3A  F00B         	goto	l4723
  5437  001666                     u5370:
  5438  001666                     
  5439                           ; BSR set to: 0
  5440  001666  A5CC               	btfss	_flags& (0+255),2,b
  5441  001668  EF38  F00B         	goto	u5381
  5442  00166C  EF3A  F00B         	goto	u5380
  5443  001670                     u5381:
  5444  001670  EF3D  F00B         	goto	l4725
  5445  001674                     u5380:
  5446  001674                     l4723:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5450  001674  07AE               	decf	dtoa@w& (0+255),f,b
  5451  001676  A0D8               	btfss	status,0,c
  5452  001678  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  5453  00167A                     l4725:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5457  00167A  0E00               	movlw	0
  5458  00167C  6FBB               	movwf	(dtoa@i+1)& (0+255),b
  5459  00167E  0E1F               	movlw	31
  5460  001680  6FBA               	movwf	dtoa@i& (0+255),b
  5461  001682                     
  5462                           ; BSR set to: 0
  5463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5464  001682  0E00               	movlw	0
  5465  001684  0101               	movlb	1	; () banked
  5466  001686  6F61               	movwf	(_dbuf+31)& (0+255),b
  5467                           
  5468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5469  001688  EFC3  F00B         	goto	l4739
  5470  00168C                     l4729:
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5474  00168C  07BA               	decf	dtoa@i& (0+255),f,b
  5475  00168E  A0D8               	btfss	status,0,c
  5476  001690  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  5477  001692                     
  5478                           ; BSR set to: 0
  5479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5480  001692  0E42               	movlw	low _dbuf
  5481  001694  25BA               	addwf	dtoa@i& (0+255),w,b
  5482  001696  6ED9               	movwf	fsr2l,c
  5483  001698  0E01               	movlw	high _dbuf
  5484  00169A  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  5485  00169C  6EDA               	movwf	fsr2h,c
  5486  00169E  C0B2  F07D         	movff	dtoa@n,___aomod@dividend
  5487  0016A2  C0B3  F07E         	movff	dtoa@n+1,___aomod@dividend+1
  5488  0016A6  C0B4  F07F         	movff	dtoa@n+2,___aomod@dividend+2
  5489  0016AA  C0B5  F080         	movff	dtoa@n+3,___aomod@dividend+3
  5490  0016AE  C0B6  F081         	movff	dtoa@n+4,___aomod@dividend+4
  5491  0016B2  C0B7  F082         	movff	dtoa@n+5,___aomod@dividend+5
  5492  0016B6  C0B8  F083         	movff	dtoa@n+6,___aomod@dividend+6
  5493  0016BA  C0B9  F084         	movff	dtoa@n+7,___aomod@dividend+7
  5494  0016BE  0E0A               	movlw	10
  5495  0016C0  6F85               	movwf	___aomod@divisor& (0+255),b
  5496  0016C2  0E00               	movlw	0
  5497  0016C4  6F86               	movwf	(___aomod@divisor+1)& (0+255),b
  5498  0016C6  0E00               	movlw	0
  5499  0016C8  6F87               	movwf	(___aomod@divisor+2)& (0+255),b
  5500  0016CA  0E00               	movlw	0
  5501  0016CC  6F88               	movwf	(___aomod@divisor+3)& (0+255),b
  5502  0016CE  0E00               	movlw	0
  5503  0016D0  6F89               	movwf	(___aomod@divisor+4)& (0+255),b
  5504  0016D2  0E00               	movlw	0
  5505  0016D4  6F8A               	movwf	(___aomod@divisor+5)& (0+255),b
  5506  0016D6  0E00               	movlw	0
  5507  0016D8  6F8B               	movwf	(___aomod@divisor+6)& (0+255),b
  5508  0016DA  0E00               	movlw	0
  5509  0016DC  6F8C               	movwf	(___aomod@divisor+7)& (0+255),b
  5510  0016DE  EC5E  F014         	call	___aomod	;wreg free
  5511  0016E2  C07D  F0A2         	movff	?___aomod,??_dtoa
  5512  0016E6  C07E  F0A3         	movff	?___aomod+1,??_dtoa+1
  5513  0016EA  C07F  F0A4         	movff	?___aomod+2,??_dtoa+2
  5514  0016EE  C080  F0A5         	movff	?___aomod+3,??_dtoa+3
  5515  0016F2  C081  F0A6         	movff	?___aomod+4,??_dtoa+4
  5516  0016F6  C082  F0A7         	movff	?___aomod+5,??_dtoa+5
  5517  0016FA  C083  F0A8         	movff	?___aomod+6,??_dtoa+6
  5518  0016FE  C084  F0A9         	movff	?___aomod+7,??_dtoa+7
  5519  001702  C0A2  F08F         	movff	??_dtoa,abs@a
  5520  001706  C0A4  F090         	movff	??_dtoa+2,abs@a+1
  5521  00170A  EC40  F01E         	call	_abs	;wreg free
  5522  00170E  0100               	movlb	0	; () banked
  5523  001710  518F               	movf	?_abs& (0+255),w,b
  5524  001712  0F30               	addlw	48
  5525  001714  6EDF               	movwf	indf2,c
  5526  001716                     
  5527                           ; BSR set to: 0
  5528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5529  001716  07AC               	decf	dtoa@p& (0+255),f,b
  5530  001718  A0D8               	btfss	status,0,c
  5531  00171A  07AD               	decf	(dtoa@p+1)& (0+255),f,b
  5532  00171C                     
  5533                           ; BSR set to: 0
  5534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5535  00171C  07AE               	decf	dtoa@w& (0+255),f,b
  5536  00171E  A0D8               	btfss	status,0,c
  5537  001720  07AF               	decf	(dtoa@w+1)& (0+255),f,b
  5538  001722                     
  5539                           ; BSR set to: 0
  5540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5541  001722  C0B2  F07D         	movff	dtoa@n,___aodiv@dividend
  5542  001726  C0B3  F07E         	movff	dtoa@n+1,___aodiv@dividend+1
  5543  00172A  C0B4  F07F         	movff	dtoa@n+2,___aodiv@dividend+2
  5544  00172E  C0B5  F080         	movff	dtoa@n+3,___aodiv@dividend+3
  5545  001732  C0B6  F081         	movff	dtoa@n+4,___aodiv@dividend+4
  5546  001736  C0B7  F082         	movff	dtoa@n+5,___aodiv@dividend+5
  5547  00173A  C0B8  F083         	movff	dtoa@n+6,___aodiv@dividend+6
  5548  00173E  C0B9  F084         	movff	dtoa@n+7,___aodiv@dividend+7
  5549  001742  0E0A               	movlw	10
  5550  001744  6F85               	movwf	___aodiv@divisor& (0+255),b
  5551  001746  0E00               	movlw	0
  5552  001748  6F86               	movwf	(___aodiv@divisor+1)& (0+255),b
  5553  00174A  0E00               	movlw	0
  5554  00174C  6F87               	movwf	(___aodiv@divisor+2)& (0+255),b
  5555  00174E  0E00               	movlw	0
  5556  001750  6F88               	movwf	(___aodiv@divisor+3)& (0+255),b
  5557  001752  0E00               	movlw	0
  5558  001754  6F89               	movwf	(___aodiv@divisor+4)& (0+255),b
  5559  001756  0E00               	movlw	0
  5560  001758  6F8A               	movwf	(___aodiv@divisor+5)& (0+255),b
  5561  00175A  0E00               	movlw	0
  5562  00175C  6F8B               	movwf	(___aodiv@divisor+6)& (0+255),b
  5563  00175E  0E00               	movlw	0
  5564  001760  6F8C               	movwf	(___aodiv@divisor+7)& (0+255),b
  5565  001762  EC10  F012         	call	___aodiv	;wreg free
  5566  001766  C07D  F0B2         	movff	?___aodiv,dtoa@n
  5567  00176A  C07E  F0B3         	movff	?___aodiv+1,dtoa@n+1
  5568  00176E  C07F  F0B4         	movff	?___aodiv+2,dtoa@n+2
  5569  001772  C080  F0B5         	movff	?___aodiv+3,dtoa@n+3
  5570  001776  C081  F0B6         	movff	?___aodiv+4,dtoa@n+4
  5571  00177A  C082  F0B7         	movff	?___aodiv+5,dtoa@n+5
  5572  00177E  C083  F0B8         	movff	?___aodiv+6,dtoa@n+6
  5573  001782  C084  F0B9         	movff	?___aodiv+7,dtoa@n+7
  5574  001786                     l4739:
  5575                           
  5576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5577  001786  0100               	movlb	0	; () banked
  5578  001788  BFBB               	btfsc	(dtoa@i+1)& (0+255),7,b
  5579  00178A  EFCF  F00B         	goto	u5391
  5580  00178E  51BB               	movf	(dtoa@i+1)& (0+255),w,b
  5581  001790  E108               	bnz	u5390
  5582  001792  05BA               	decf	dtoa@i& (0+255),w,b
  5583  001794  A0D8               	btfss	status,0,c
  5584  001796  EFCF  F00B         	goto	u5391
  5585  00179A  EFD1  F00B         	goto	u5390
  5586  00179E                     u5391:
  5587  00179E  EF01  F00C         	goto	l4749
  5588  0017A2                     u5390:
  5589  0017A2                     
  5590                           ; BSR set to: 0
  5591  0017A2  51B2               	movf	dtoa@n& (0+255),w,b
  5592  0017A4  11B3               	iorwf	(dtoa@n+1)& (0+255),w,b
  5593  0017A6  11B4               	iorwf	(dtoa@n+2)& (0+255),w,b
  5594  0017A8  11B5               	iorwf	(dtoa@n+3)& (0+255),w,b
  5595  0017AA  11B6               	iorwf	(dtoa@n+4)& (0+255),w,b
  5596  0017AC  11B7               	iorwf	(dtoa@n+5)& (0+255),w,b
  5597  0017AE  11B8               	iorwf	(dtoa@n+6)& (0+255),w,b
  5598  0017B0  11B9               	iorwf	(dtoa@n+7)& (0+255),w,b
  5599  0017B2  A4D8               	btfss	status,2,c
  5600  0017B4  EFDE  F00B         	goto	u5401
  5601  0017B8  EFE0  F00B         	goto	u5400
  5602  0017BC                     u5401:
  5603  0017BC  EF46  F00B         	goto	l4729
  5604  0017C0                     u5400:
  5605  0017C0                     
  5606                           ; BSR set to: 0
  5607  0017C0  BFAD               	btfsc	(dtoa@p+1)& (0+255),7,b
  5608  0017C2  EFED  F00B         	goto	u5410
  5609  0017C6  51AD               	movf	(dtoa@p+1)& (0+255),w,b
  5610  0017C8  E106               	bnz	u5411
  5611  0017CA  05AC               	decf	dtoa@p& (0+255),w,b
  5612  0017CC  B0D8               	btfsc	status,0,c
  5613  0017CE  EFEB  F00B         	goto	u5411
  5614  0017D2  EFED  F00B         	goto	u5410
  5615  0017D6                     u5411:
  5616  0017D6  EF46  F00B         	goto	l4729
  5617  0017DA                     u5410:
  5618  0017DA                     
  5619                           ; BSR set to: 0
  5620  0017DA  BFAF               	btfsc	(dtoa@w+1)& (0+255),7,b
  5621  0017DC  EFF8  F00B         	goto	u5421
  5622  0017E0  51AF               	movf	(dtoa@w+1)& (0+255),w,b
  5623  0017E2  E108               	bnz	u5420
  5624  0017E4  05AE               	decf	dtoa@w& (0+255),w,b
  5625  0017E6  A0D8               	btfss	status,0,c
  5626  0017E8  EFF8  F00B         	goto	u5421
  5627  0017EC  EFFA  F00B         	goto	u5420
  5628  0017F0                     u5421:
  5629  0017F0  EF01  F00C         	goto	l4749
  5630  0017F4                     u5420:
  5631  0017F4                     
  5632                           ; BSR set to: 0
  5633  0017F4  B3CC               	btfsc	_flags& (0+255),1,b
  5634  0017F6  EFFF  F00B         	goto	u5431
  5635  0017FA  EF01  F00C         	goto	u5430
  5636  0017FE                     u5431:
  5637  0017FE  EF46  F00B         	goto	l4729
  5638  001802                     u5430:
  5639  001802                     l4749:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5643  001802  51B0               	movf	dtoa@s& (0+255),w,b
  5644  001804  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  5645  001806  A4D8               	btfss	status,2,c
  5646  001808  EF08  F00C         	goto	u5441
  5647  00180C  EF0A  F00C         	goto	u5440
  5648  001810                     u5441:
  5649  001810  EF11  F00C         	goto	l4753
  5650  001814                     u5440:
  5651  001814                     
  5652                           ; BSR set to: 0
  5653  001814  A5CC               	btfss	_flags& (0+255),2,b
  5654  001816  EF0F  F00C         	goto	u5451
  5655  00181A  EF11  F00C         	goto	u5450
  5656  00181E                     u5451:
  5657  00181E  EF2F  F00C         	goto	l4763
  5658  001822                     u5450:
  5659  001822                     l4753:
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5663  001822  07BA               	decf	dtoa@i& (0+255),f,b
  5664  001824  A0D8               	btfss	status,0,c
  5665  001826  07BB               	decf	(dtoa@i+1)& (0+255),f,b
  5666  001828                     
  5667                           ; BSR set to: 0
  5668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5669  001828  51B0               	movf	dtoa@s& (0+255),w,b
  5670  00182A  11B1               	iorwf	(dtoa@s+1)& (0+255),w,b
  5671  00182C  A4D8               	btfss	status,2,c
  5672  00182E  EF1B  F00C         	goto	u5461
  5673  001832  EF1D  F00C         	goto	u5460
  5674  001836                     u5461:
  5675  001836  EF23  F00C         	goto	l4759
  5676  00183A                     u5460:
  5677  00183A                     
  5678                           ; BSR set to: 0
  5679  00183A  0E00               	movlw	0
  5680  00183C  6FAB               	movwf	(_dtoa$962+1)& (0+255),b
  5681  00183E  0E2B               	movlw	43
  5682  001840  6FAA               	movwf	_dtoa$962& (0+255),b
  5683  001842  EF27  F00C         	goto	l4761
  5684  001846                     l4759:
  5685                           
  5686                           ; BSR set to: 0
  5687  001846  0E00               	movlw	0
  5688  001848  6FAB               	movwf	(_dtoa$962+1)& (0+255),b
  5689  00184A  0E2D               	movlw	45
  5690  00184C  6FAA               	movwf	_dtoa$962& (0+255),b
  5691  00184E                     l4761:
  5692                           
  5693                           ; BSR set to: 0
  5694  00184E  0E42               	movlw	low _dbuf
  5695  001850  25BA               	addwf	dtoa@i& (0+255),w,b
  5696  001852  6ED9               	movwf	fsr2l,c
  5697  001854  0E01               	movlw	high _dbuf
  5698  001856  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  5699  001858  6EDA               	movwf	fsr2h,c
  5700  00185A  C0AA  FFDF         	movff	_dtoa$962,indf2
  5701  00185E                     l4763:
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5705  00185E  C098  F08D         	movff	dtoa@fp,pad@fp
  5706  001862  C099  F08E         	movff	dtoa@fp+1,pad@fp+1
  5707  001866  0E42               	movlw	low _dbuf
  5708  001868  25BA               	addwf	dtoa@i& (0+255),w,b
  5709  00186A  6F8F               	movwf	pad@buf& (0+255),b
  5710  00186C  0E01               	movlw	high _dbuf
  5711  00186E  21BB               	addwfc	(dtoa@i+1)& (0+255),w,b
  5712  001870  6F90               	movwf	(pad@buf+1)& (0+255),b
  5713  001872  C0AE  F091         	movff	dtoa@w,pad@p
  5714  001876  C0AF  F092         	movff	dtoa@w+1,pad@p+1
  5715  00187A  EC7F  F018         	call	_pad	;wreg free
  5716  00187E  C08D  F098         	movff	?_pad,?_dtoa
  5717  001882  C08E  F099         	movff	?_pad+1,?_dtoa+1
  5718  001886  0012               	return		;funcret
  5719  001888                     __end_of_dtoa:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function _pad *****************
  5723 ;; Defined at:
  5724 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  5727 ;;		 -> sprintf@f(6), 
  5728 ;;  buf             2   47[BANK0 ] PTR unsigned char 
  5729 ;;		 -> dbuf(32), 
  5730 ;;  p               2   49[BANK0 ] int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  w               2   54[BANK0 ] int 
  5733 ;;  i               2   52[BANK0 ] int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  2   45[BANK0 ] int 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5743 ;;      Params:         0       6       0       0       0       0       0       0       0
  5744 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5745 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5746 ;;      Totals:         0      11       0       0       0       0       0       0       0
  5747 ;;Total ram usage:       11 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:   14
  5750 ;; This function calls:
  5751 ;;		_fputc
  5752 ;;		_fputs
  5753 ;;		_strlen
  5754 ;; This function is called by:
  5755 ;;		_dtoa
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text22
  5760  0030FE                     __ptext22:
  5761                           	callstack 0
  5762  0030FE                     _pad:
  5763                           	callstack 11
  5764  0030FE                     
  5765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5766  0030FE  0100               	movlb	0	; () banked
  5767  003100  A1CC               	btfss	_flags& (0+255),0,b
  5768  003102  EF85  F018         	goto	u5221
  5769  003106  EF87  F018         	goto	u5220
  5770  00310A                     u5221:
  5771  00310A  EF91  F018         	goto	l4655
  5772  00310E                     u5220:
  5773  00310E                     
  5774                           ; BSR set to: 0
  5775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5776  00310E  C08F  F086         	movff	pad@buf,fputs@s
  5777  003112  C090  F087         	movff	pad@buf+1,fputs@s+1
  5778  003116  C08D  F088         	movff	pad@fp,fputs@fp
  5779  00311A  C08E  F089         	movff	pad@fp+1,fputs@fp+1
  5780  00311E  ECD7  F01D         	call	_fputs	;wreg free
  5781  003122                     l4655:
  5782                           
  5783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5784  003122  0100               	movlb	0	; () banked
  5785  003124  BF92               	btfsc	(pad@p+1)& (0+255),7,b
  5786  003126  EF97  F018         	goto	u5231
  5787  00312A  EF99  F018         	goto	u5230
  5788  00312E                     u5231:
  5789  00312E  EF9F  F018         	goto	l4659
  5790  003132                     u5230:
  5791  003132                     
  5792                           ; BSR set to: 0
  5793  003132  C091  F096         	movff	pad@p,pad@w
  5794  003136  C092  F097         	movff	pad@p+1,pad@w+1
  5795  00313A  EFA3  F018         	goto	l1055
  5796  00313E                     l4659:
  5797                           
  5798                           ; BSR set to: 0
  5799  00313E  0E00               	movlw	0
  5800  003140  6F97               	movwf	(pad@w+1)& (0+255),b
  5801  003142  0E00               	movlw	0
  5802  003144  6F96               	movwf	pad@w& (0+255),b
  5803  003146                     l1055:
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5807  003146  0E00               	movlw	0
  5808  003148  6F95               	movwf	(pad@i+1)& (0+255),b
  5809  00314A  0E00               	movlw	0
  5810  00314C  6F94               	movwf	pad@i& (0+255),b
  5811                           
  5812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5813  00314E  EFB6  F018         	goto	l4665
  5814  003152                     l4661:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5818  003152  0E00               	movlw	0
  5819  003154  6F7E               	movwf	(fputc@c+1)& (0+255),b
  5820  003156  0E20               	movlw	32
  5821  003158  6F7D               	movwf	fputc@c& (0+255),b
  5822  00315A  C08D  F07F         	movff	pad@fp,fputc@fp
  5823  00315E  C08E  F080         	movff	pad@fp+1,fputc@fp+1
  5824  003162  EC19  F018         	call	_fputc	;wreg free
  5825  003166                     
  5826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5827  003166  0100               	movlb	0	; () banked
  5828  003168  4B94               	infsnz	pad@i& (0+255),f,b
  5829  00316A  2B95               	incf	(pad@i+1)& (0+255),f,b
  5830  00316C                     l4665:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5834  00316C  5196               	movf	pad@w& (0+255),w,b
  5835  00316E  5D94               	subwf	pad@i& (0+255),w,b
  5836  003170  5195               	movf	(pad@i+1)& (0+255),w,b
  5837  003172  0A80               	xorlw	128
  5838  003174  6F93               	movwf	??_pad& (0+255),b
  5839  003176  5197               	movf	(pad@w+1)& (0+255),w,b
  5840  003178  0A80               	xorlw	128
  5841  00317A  5993               	subwfb	??_pad& (0+255),w,b
  5842  00317C  A0D8               	btfss	status,0,c
  5843  00317E  EFC3  F018         	goto	u5241
  5844  003182  EFC5  F018         	goto	u5240
  5845  003186                     u5241:
  5846  003186  EFA9  F018         	goto	l4661
  5847  00318A                     u5240:
  5848  00318A                     
  5849                           ; BSR set to: 0
  5850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5851  00318A  B1CC               	btfsc	_flags& (0+255),0,b
  5852  00318C  EFCA  F018         	goto	u5251
  5853  003190  EFCC  F018         	goto	u5250
  5854  003194                     u5251:
  5855  003194  EFD6  F018         	goto	l4669
  5856  003198                     u5250:
  5857  003198                     
  5858                           ; BSR set to: 0
  5859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5860  003198  C08F  F086         	movff	pad@buf,fputs@s
  5861  00319C  C090  F087         	movff	pad@buf+1,fputs@s+1
  5862  0031A0  C08D  F088         	movff	pad@fp,fputs@fp
  5863  0031A4  C08E  F089         	movff	pad@fp+1,fputs@fp+1
  5864  0031A8  ECD7  F01D         	call	_fputs	;wreg free
  5865  0031AC                     l4669:
  5866                           
  5867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5868  0031AC  C08F  F07D         	movff	pad@buf,strlen@s
  5869  0031B0  C090  F07E         	movff	pad@buf+1,strlen@s+1
  5870  0031B4  ECA2  F01E         	call	_strlen	;wreg free
  5871  0031B8  0100               	movlb	0	; () banked
  5872  0031BA  5196               	movf	pad@w& (0+255),w,b
  5873  0031BC  257D               	addwf	?_strlen& (0+255),w,b
  5874  0031BE  6F8D               	movwf	?_pad& (0+255),b
  5875  0031C0  5197               	movf	(pad@w+1)& (0+255),w,b
  5876  0031C2  217E               	addwfc	(?_strlen+1)& (0+255),w,b
  5877  0031C4  6F8E               	movwf	(?_pad+1)& (0+255),b
  5878  0031C6                     
  5879                           ; BSR set to: 0
  5880  0031C6  0012               	return		;funcret
  5881  0031C8                     __end_of_pad:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function _strlen *****************
  5885 ;; Defined at:
  5886 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  s               2   29[BANK0 ] PTR const unsigned char 
  5889 ;;		 -> dbuf(32), text(40), 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  a               2   31[BANK0 ] PTR const unsigned char 
  5892 ;;		 -> dbuf(32), text(40), 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  2   29[BANK0 ] unsigned int 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5902 ;;      Params:         0       2       0       0       0       0       0       0       0
  5903 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5905 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5906 ;;Total ram usage:        4 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:   11
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_start
  5913 ;;		_pad
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text23
  5918  003D44                     __ptext23:
  5919                           	callstack 0
  5920  003D44                     _strlen:
  5921                           	callstack 17
  5922  003D44  C07D  F07F         	movff	strlen@s,strlen@a
  5923  003D48  C07E  F080         	movff	strlen@s+1,strlen@a+1
  5924  003D4C  EFAB  F01E         	goto	l4557
  5925  003D50                     l4555:
  5926  003D50  0100               	movlb	0	; () banked
  5927  003D52  4B7D               	infsnz	strlen@s& (0+255),f,b
  5928  003D54  2B7E               	incf	(strlen@s+1)& (0+255),f,b
  5929  003D56                     l4557:
  5930  003D56  C07D  FFD9         	movff	strlen@s,fsr2l
  5931  003D5A  C07E  FFDA         	movff	strlen@s+1,fsr2h
  5932  003D5E  50DF               	movf	indf2,w,c
  5933  003D60  A4D8               	btfss	status,2,c
  5934  003D62  EFB5  F01E         	goto	u5071
  5935  003D66  EFB7  F01E         	goto	u5070
  5936  003D6A                     u5071:
  5937  003D6A  EFA8  F01E         	goto	l4555
  5938  003D6E                     u5070:
  5939  003D6E  0100               	movlb	0	; () banked
  5940  003D70  517F               	movf	strlen@a& (0+255),w,b
  5941  003D72  5D7D               	subwf	strlen@s& (0+255),w,b
  5942  003D74  6F7D               	movwf	?_strlen& (0+255),b
  5943  003D76  5180               	movf	(strlen@a+1)& (0+255),w,b
  5944  003D78  597E               	subwfb	(strlen@s+1)& (0+255),w,b
  5945  003D7A  6F7E               	movwf	(?_strlen+1)& (0+255),b
  5946  003D7C                     
  5947                           ; BSR set to: 0
  5948  003D7C  0012               	return		;funcret
  5949  003D7E                     __end_of_strlen:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function _fputs *****************
  5953 ;; Defined at:
  5954 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  5957 ;;		 -> dbuf(32), 
  5958 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  5959 ;;		 -> sprintf@f(6), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  i               2   43[BANK0 ] int 
  5962 ;;  c               1   42[BANK0 ] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  2   38[BANK0 ] int 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5972 ;;      Params:         0       4       0       0       0       0       0       0       0
  5973 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5975 ;;      Totals:         0       7       0       0       0       0       0       0       0
  5976 ;;Total ram usage:        7 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:   13
  5979 ;; This function calls:
  5980 ;;		_fputc
  5981 ;; This function is called by:
  5982 ;;		_pad
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text24
  5987  003BAE                     __ptext24:
  5988                           	callstack 0
  5989  003BAE                     _fputs:
  5990                           	callstack 11
  5991  003BAE  0E00               	movlw	0
  5992  003BB0  0100               	movlb	0	; () banked
  5993  003BB2  6F8C               	movwf	(fputs@i+1)& (0+255),b
  5994  003BB4  0E00               	movlw	0
  5995  003BB6  6F8B               	movwf	fputs@i& (0+255),b
  5996  003BB8  EFEA  F01D         	goto	l4569
  5997  003BBC                     l4565:
  5998                           
  5999                           ; BSR set to: 0
  6000  003BBC  C08A  F07D         	movff	fputs@c,fputc@c
  6001  003BC0  6B7E               	clrf	(fputc@c+1)& (0+255),b
  6002  003BC2  C088  F07F         	movff	fputs@fp,fputc@fp
  6003  003BC6  C089  F080         	movff	fputs@fp+1,fputc@fp+1
  6004  003BCA  EC19  F018         	call	_fputc	;wreg free
  6005  003BCE  0100               	movlb	0	; () banked
  6006  003BD0  4B8B               	infsnz	fputs@i& (0+255),f,b
  6007  003BD2  2B8C               	incf	(fputs@i+1)& (0+255),f,b
  6008  003BD4                     l4569:
  6009                           
  6010                           ; BSR set to: 0
  6011  003BD4  518B               	movf	fputs@i& (0+255),w,b
  6012  003BD6  2586               	addwf	fputs@s& (0+255),w,b
  6013  003BD8  6ED9               	movwf	fsr2l,c
  6014  003BDA  518C               	movf	(fputs@i+1)& (0+255),w,b
  6015  003BDC  2187               	addwfc	(fputs@s+1)& (0+255),w,b
  6016  003BDE  6EDA               	movwf	fsr2h,c
  6017  003BE0  50DF               	movf	indf2,w,c
  6018  003BE2  6F8A               	movwf	fputs@c& (0+255),b
  6019  003BE4  518A               	movf	fputs@c& (0+255),w,b
  6020  003BE6  A4D8               	btfss	status,2,c
  6021  003BE8  EFF8  F01D         	goto	u5081
  6022  003BEC  EFFA  F01D         	goto	u5080
  6023  003BF0                     u5081:
  6024  003BF0  EFDE  F01D         	goto	l4565
  6025  003BF4                     u5080:
  6026  003BF4                     
  6027                           ; BSR set to: 0
  6028  003BF4  0012               	return		;funcret
  6029  003BF6                     __end_of_fputs:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _abs *****************
  6033 ;; Defined at:
  6034 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  a               2   47[BANK0 ] int 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  2   47[BANK0 ] int 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6048 ;;      Params:         0       2       0       0       0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6050 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6051 ;;      Totals:         0       4       0       0       0       0       0       0       0
  6052 ;;Total ram usage:        4 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:   11
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_dtoa
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text25
  6063  003C80                     __ptext25:
  6064                           	callstack 0
  6065  003C80                     _abs:
  6066                           	callstack 14
  6067  003C80  0100               	movlb	0	; () banked
  6068  003C82  BF90               	btfsc	(abs@a+1)& (0+255),7,b
  6069  003C84  EF4E  F01E         	goto	u5260
  6070  003C88  5190               	movf	(abs@a+1)& (0+255),w,b
  6071  003C8A  E106               	bnz	u5261
  6072  003C8C  058F               	decf	abs@a& (0+255),w,b
  6073  003C8E  B0D8               	btfsc	status,0,c
  6074  003C90  EF4C  F01E         	goto	u5261
  6075  003C94  EF4E  F01E         	goto	u5260
  6076  003C98                     u5261:
  6077  003C98  EF5C  F01E         	goto	l1121
  6078  003C9C                     u5260:
  6079  003C9C                     
  6080                           ; BSR set to: 0
  6081  003C9C  C08F  F091         	movff	abs@a,??_abs
  6082  003CA0  C090  F092         	movff	abs@a+1,??_abs+1
  6083  003CA4  1F91               	comf	??_abs& (0+255),f,b
  6084  003CA6  1F92               	comf	(??_abs+1)& (0+255),f,b
  6085  003CA8  4B91               	infsnz	??_abs& (0+255),f,b
  6086  003CAA  2B92               	incf	(??_abs+1)& (0+255),f,b
  6087  003CAC  C091  F08F         	movff	??_abs,?_abs
  6088  003CB0  C092  F090         	movff	??_abs+1,?_abs+1
  6089  003CB4  EF60  F01E         	goto	l1124
  6090  003CB8                     l1121:
  6091                           
  6092                           ; BSR set to: 0
  6093  003CB8  C08F  F08F         	movff	abs@a,?_abs
  6094  003CBC  C090  F090         	movff	abs@a+1,?_abs+1
  6095  003CC0                     l1124:
  6096                           
  6097                           ; BSR set to: 0
  6098  003CC0  0012               	return		;funcret
  6099  003CC2                     __end_of_abs:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function ___aomod *****************
  6103 ;; Defined at:
  6104 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  dividend        8   29[BANK0 ] long long 
  6107 ;;  divisor         8   37[BANK0 ] long long 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  sign            1   46[BANK0 ] unsigned char 
  6110 ;;  counter         1   45[BANK0 ] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  8   29[BANK0 ] long long 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6120 ;;      Params:         0      16       0       0       0       0       0       0       0
  6121 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6123 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6124 ;;Total ram usage:       18 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:   11
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_dtoa
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text26
  6135  0028BC                     __ptext26:
  6136                           	callstack 0
  6137  0028BC                     ___aomod:
  6138                           	callstack 14
  6139  0028BC  0E00               	movlw	0
  6140  0028BE  0100               	movlb	0	; () banked
  6141  0028C0  6F8E               	movwf	___aomod@sign& (0+255),b
  6142  0028C2                     
  6143                           ; BSR set to: 0
  6144  0028C2  BF84               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  6145  0028C4  EF68  F014         	goto	u5160
  6146  0028C8  EF66  F014         	goto	u5161
  6147  0028CC                     u5161:
  6148  0028CC  EF7A  F014         	goto	l4623
  6149  0028D0                     u5160:
  6150  0028D0                     
  6151                           ; BSR set to: 0
  6152  0028D0  1F84               	comf	(___aomod@dividend+7)& (0+255),f,b
  6153  0028D2  1F83               	comf	(___aomod@dividend+6)& (0+255),f,b
  6154  0028D4  1F82               	comf	(___aomod@dividend+5)& (0+255),f,b
  6155  0028D6  1F81               	comf	(___aomod@dividend+4)& (0+255),f,b
  6156  0028D8  1F80               	comf	(___aomod@dividend+3)& (0+255),f,b
  6157  0028DA  1F7F               	comf	(___aomod@dividend+2)& (0+255),f,b
  6158  0028DC  1F7E               	comf	(___aomod@dividend+1)& (0+255),f,b
  6159  0028DE  6D7D               	negf	___aomod@dividend& (0+255),b
  6160  0028E0  0E00               	movlw	0
  6161  0028E2  237E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  6162  0028E4  237F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  6163  0028E6  2380               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  6164  0028E8  2381               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  6165  0028EA  2382               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  6166  0028EC  2383               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  6167  0028EE  2384               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  6168  0028F0                     
  6169                           ; BSR set to: 0
  6170  0028F0  0E01               	movlw	1
  6171  0028F2  6F8E               	movwf	___aomod@sign& (0+255),b
  6172  0028F4                     l4623:
  6173                           
  6174                           ; BSR set to: 0
  6175  0028F4  BF8C               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  6176  0028F6  EF81  F014         	goto	u5170
  6177  0028FA  EF7F  F014         	goto	u5171
  6178  0028FE                     u5171:
  6179  0028FE  EF91  F014         	goto	l4627
  6180  002902                     u5170:
  6181  002902                     
  6182                           ; BSR set to: 0
  6183  002902  1F8C               	comf	(___aomod@divisor+7)& (0+255),f,b
  6184  002904  1F8B               	comf	(___aomod@divisor+6)& (0+255),f,b
  6185  002906  1F8A               	comf	(___aomod@divisor+5)& (0+255),f,b
  6186  002908  1F89               	comf	(___aomod@divisor+4)& (0+255),f,b
  6187  00290A  1F88               	comf	(___aomod@divisor+3)& (0+255),f,b
  6188  00290C  1F87               	comf	(___aomod@divisor+2)& (0+255),f,b
  6189  00290E  1F86               	comf	(___aomod@divisor+1)& (0+255),f,b
  6190  002910  6D85               	negf	___aomod@divisor& (0+255),b
  6191  002912  0E00               	movlw	0
  6192  002914  2386               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  6193  002916  2387               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  6194  002918  2388               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  6195  00291A  2389               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  6196  00291C  238A               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  6197  00291E  238B               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  6198  002920  238C               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  6199  002922                     l4627:
  6200                           
  6201                           ; BSR set to: 0
  6202  002922  5185               	movf	___aomod@divisor& (0+255),w,b
  6203  002924  1186               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  6204  002926  1187               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  6205  002928  1188               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  6206  00292A  1189               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  6207  00292C  118A               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  6208  00292E  118B               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  6209  002930  118C               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  6210  002932  B4D8               	btfsc	status,2,c
  6211  002934  EF9E  F014         	goto	u5181
  6212  002938  EFA0  F014         	goto	u5180
  6213  00293C                     u5181:
  6214  00293C  EFE8  F014         	goto	l4643
  6215  002940                     u5180:
  6216  002940                     
  6217                           ; BSR set to: 0
  6218  002940  0E01               	movlw	1
  6219  002942  6F8D               	movwf	___aomod@counter& (0+255),b
  6220  002944  EFAE  F014         	goto	l4633
  6221  002948                     l4631:
  6222                           
  6223                           ; BSR set to: 0
  6224  002948  90D8               	bcf	status,0,c
  6225  00294A  3785               	rlcf	___aomod@divisor& (0+255),f,b
  6226  00294C  3786               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  6227  00294E  3787               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  6228  002950  3788               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  6229  002952  3789               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  6230  002954  378A               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  6231  002956  378B               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  6232  002958  378C               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  6233  00295A  2B8D               	incf	___aomod@counter& (0+255),f,b
  6234  00295C                     l4633:
  6235                           
  6236                           ; BSR set to: 0
  6237  00295C  AF8C               	btfss	(___aomod@divisor+7)& (0+255),7,b
  6238  00295E  EFB3  F014         	goto	u5191
  6239  002962  EFB5  F014         	goto	u5190
  6240  002966                     u5191:
  6241  002966  EFA4  F014         	goto	l4631
  6242  00296A                     u5190:
  6243  00296A                     l4635:
  6244                           
  6245                           ; BSR set to: 0
  6246  00296A  5185               	movf	___aomod@divisor& (0+255),w,b
  6247  00296C  5D7D               	subwf	___aomod@dividend& (0+255),w,b
  6248  00296E  5186               	movf	(___aomod@divisor+1)& (0+255),w,b
  6249  002970  597E               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  6250  002972  5187               	movf	(___aomod@divisor+2)& (0+255),w,b
  6251  002974  597F               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  6252  002976  5188               	movf	(___aomod@divisor+3)& (0+255),w,b
  6253  002978  5980               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  6254  00297A  5189               	movf	(___aomod@divisor+4)& (0+255),w,b
  6255  00297C  5981               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  6256  00297E  518A               	movf	(___aomod@divisor+5)& (0+255),w,b
  6257  002980  5982               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  6258  002982  518B               	movf	(___aomod@divisor+6)& (0+255),w,b
  6259  002984  5983               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  6260  002986  518C               	movf	(___aomod@divisor+7)& (0+255),w,b
  6261  002988  5984               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  6262  00298A  A0D8               	btfss	status,0,c
  6263  00298C  EFCA  F014         	goto	u5201
  6264  002990  EFCC  F014         	goto	u5200
  6265  002994                     u5201:
  6266  002994  EFDC  F014         	goto	l4639
  6267  002998                     u5200:
  6268  002998                     
  6269                           ; BSR set to: 0
  6270  002998  5185               	movf	___aomod@divisor& (0+255),w,b
  6271  00299A  5F7D               	subwf	___aomod@dividend& (0+255),f,b
  6272  00299C  5186               	movf	(___aomod@divisor+1)& (0+255),w,b
  6273  00299E  5B7E               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  6274  0029A0  5187               	movf	(___aomod@divisor+2)& (0+255),w,b
  6275  0029A2  5B7F               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  6276  0029A4  5188               	movf	(___aomod@divisor+3)& (0+255),w,b
  6277  0029A6  5B80               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  6278  0029A8  5189               	movf	(___aomod@divisor+4)& (0+255),w,b
  6279  0029AA  5B81               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  6280  0029AC  518A               	movf	(___aomod@divisor+5)& (0+255),w,b
  6281  0029AE  5B82               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  6282  0029B0  518B               	movf	(___aomod@divisor+6)& (0+255),w,b
  6283  0029B2  5B83               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  6284  0029B4  518C               	movf	(___aomod@divisor+7)& (0+255),w,b
  6285  0029B6  5B84               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  6286  0029B8                     l4639:
  6287                           
  6288                           ; BSR set to: 0
  6289  0029B8  90D8               	bcf	status,0,c
  6290  0029BA  338C               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  6291  0029BC  338B               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  6292  0029BE  338A               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  6293  0029C0  3389               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  6294  0029C2  3388               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  6295  0029C4  3387               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  6296  0029C6  3386               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  6297  0029C8  3385               	rrcf	___aomod@divisor& (0+255),f,b
  6298  0029CA                     
  6299                           ; BSR set to: 0
  6300  0029CA  2F8D               	decfsz	___aomod@counter& (0+255),f,b
  6301  0029CC  EFB5  F014         	goto	l4635
  6302  0029D0                     l4643:
  6303                           
  6304                           ; BSR set to: 0
  6305  0029D0  518E               	movf	___aomod@sign& (0+255),w,b
  6306  0029D2  B4D8               	btfsc	status,2,c
  6307  0029D4  EFEE  F014         	goto	u5211
  6308  0029D8  EFF0  F014         	goto	u5210
  6309  0029DC                     u5211:
  6310  0029DC  EF00  F015         	goto	l4647
  6311  0029E0                     u5210:
  6312  0029E0                     
  6313                           ; BSR set to: 0
  6314  0029E0  1F84               	comf	(___aomod@dividend+7)& (0+255),f,b
  6315  0029E2  1F83               	comf	(___aomod@dividend+6)& (0+255),f,b
  6316  0029E4  1F82               	comf	(___aomod@dividend+5)& (0+255),f,b
  6317  0029E6  1F81               	comf	(___aomod@dividend+4)& (0+255),f,b
  6318  0029E8  1F80               	comf	(___aomod@dividend+3)& (0+255),f,b
  6319  0029EA  1F7F               	comf	(___aomod@dividend+2)& (0+255),f,b
  6320  0029EC  1F7E               	comf	(___aomod@dividend+1)& (0+255),f,b
  6321  0029EE  6D7D               	negf	___aomod@dividend& (0+255),b
  6322  0029F0  0E00               	movlw	0
  6323  0029F2  237E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  6324  0029F4  237F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  6325  0029F6  2380               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  6326  0029F8  2381               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  6327  0029FA  2382               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  6328  0029FC  2383               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  6329  0029FE  2384               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  6330  002A00                     l4647:
  6331                           
  6332                           ; BSR set to: 0
  6333  002A00  C07D  F07D         	movff	___aomod@dividend,?___aomod
  6334  002A04  C07E  F07E         	movff	___aomod@dividend+1,?___aomod+1
  6335  002A08  C07F  F07F         	movff	___aomod@dividend+2,?___aomod+2
  6336  002A0C  C080  F080         	movff	___aomod@dividend+3,?___aomod+3
  6337  002A10  C081  F081         	movff	___aomod@dividend+4,?___aomod+4
  6338  002A14  C082  F082         	movff	___aomod@dividend+5,?___aomod+5
  6339  002A18  C083  F083         	movff	___aomod@dividend+6,?___aomod+6
  6340  002A1C  C084  F084         	movff	___aomod@dividend+7,?___aomod+7
  6341  002A20                     
  6342                           ; BSR set to: 0
  6343  002A20  0012               	return		;funcret
  6344  002A22                     __end_of___aomod:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function ___aodiv *****************
  6348 ;; Defined at:
  6349 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  dividend        8   29[BANK0 ] long long 
  6352 ;;  divisor         8   37[BANK0 ] long long 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  quotient        8   47[BANK0 ] long long 
  6355 ;;  sign            1   46[BANK0 ] unsigned char 
  6356 ;;  counter         1   45[BANK0 ] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  8   29[BANK0 ] long long 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6366 ;;      Params:         0      16       0       0       0       0       0       0       0
  6367 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         0      26       0       0       0       0       0       0       0
  6370 ;;Total ram usage:       26 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:   11
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_dtoa
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text27
  6381  002420                     __ptext27:
  6382                           	callstack 0
  6383  002420                     ___aodiv:
  6384                           	callstack 14
  6385  002420  0E00               	movlw	0
  6386  002422  0100               	movlb	0	; () banked
  6387  002424  6F8E               	movwf	___aodiv@sign& (0+255),b
  6388  002426                     
  6389                           ; BSR set to: 0
  6390  002426  BF8C               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  6391  002428  EF1A  F012         	goto	u5090
  6392  00242C  EF18  F012         	goto	u5091
  6393  002430                     u5091:
  6394  002430  EF2C  F012         	goto	l4579
  6395  002434                     u5090:
  6396  002434                     
  6397                           ; BSR set to: 0
  6398  002434  1F8C               	comf	(___aodiv@divisor+7)& (0+255),f,b
  6399  002436  1F8B               	comf	(___aodiv@divisor+6)& (0+255),f,b
  6400  002438  1F8A               	comf	(___aodiv@divisor+5)& (0+255),f,b
  6401  00243A  1F89               	comf	(___aodiv@divisor+4)& (0+255),f,b
  6402  00243C  1F88               	comf	(___aodiv@divisor+3)& (0+255),f,b
  6403  00243E  1F87               	comf	(___aodiv@divisor+2)& (0+255),f,b
  6404  002440  1F86               	comf	(___aodiv@divisor+1)& (0+255),f,b
  6405  002442  6D85               	negf	___aodiv@divisor& (0+255),b
  6406  002444  0E00               	movlw	0
  6407  002446  2386               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  6408  002448  2387               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  6409  00244A  2388               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  6410  00244C  2389               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  6411  00244E  238A               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  6412  002450  238B               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  6413  002452  238C               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  6414  002454                     
  6415                           ; BSR set to: 0
  6416  002454  0E01               	movlw	1
  6417  002456  6F8E               	movwf	___aodiv@sign& (0+255),b
  6418  002458                     l4579:
  6419                           
  6420                           ; BSR set to: 0
  6421  002458  BF84               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  6422  00245A  EF33  F012         	goto	u5100
  6423  00245E  EF31  F012         	goto	u5101
  6424  002462                     u5101:
  6425  002462  EF45  F012         	goto	l4585
  6426  002466                     u5100:
  6427  002466                     
  6428                           ; BSR set to: 0
  6429  002466  1F84               	comf	(___aodiv@dividend+7)& (0+255),f,b
  6430  002468  1F83               	comf	(___aodiv@dividend+6)& (0+255),f,b
  6431  00246A  1F82               	comf	(___aodiv@dividend+5)& (0+255),f,b
  6432  00246C  1F81               	comf	(___aodiv@dividend+4)& (0+255),f,b
  6433  00246E  1F80               	comf	(___aodiv@dividend+3)& (0+255),f,b
  6434  002470  1F7F               	comf	(___aodiv@dividend+2)& (0+255),f,b
  6435  002472  1F7E               	comf	(___aodiv@dividend+1)& (0+255),f,b
  6436  002474  6D7D               	negf	___aodiv@dividend& (0+255),b
  6437  002476  0E00               	movlw	0
  6438  002478  237E               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  6439  00247A  237F               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  6440  00247C  2380               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  6441  00247E  2381               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  6442  002480  2382               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  6443  002482  2383               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  6444  002484  2384               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  6445  002486                     
  6446                           ; BSR set to: 0
  6447  002486  0E01               	movlw	1
  6448  002488  1B8E               	xorwf	___aodiv@sign& (0+255),f,b
  6449  00248A                     l4585:
  6450                           
  6451                           ; BSR set to: 0
  6452  00248A  EE20  F08F         	lfsr	2,___aodiv@quotient
  6453  00248E  0E07               	movlw	7
  6454  002490                     u5111:
  6455  002490  6ADE               	clrf	postinc2,c
  6456  002492  06E8               	decf	wreg,f,c
  6457  002494  E2FD               	bc	u5111
  6458  002496                     
  6459                           ; BSR set to: 0
  6460  002496  5185               	movf	___aodiv@divisor& (0+255),w,b
  6461  002498  1186               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  6462  00249A  1187               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  6463  00249C  1188               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  6464  00249E  1189               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  6465  0024A0  118A               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  6466  0024A2  118B               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  6467  0024A4  118C               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  6468  0024A6  B4D8               	btfsc	status,2,c
  6469  0024A8  EF58  F012         	goto	u5121
  6470  0024AC  EF5A  F012         	goto	u5120
  6471  0024B0                     u5121:
  6472  0024B0  EFAC  F012         	goto	l4607
  6473  0024B4                     u5120:
  6474  0024B4                     
  6475                           ; BSR set to: 0
  6476  0024B4  0E01               	movlw	1
  6477  0024B6  6F8D               	movwf	___aodiv@counter& (0+255),b
  6478  0024B8  EF68  F012         	goto	l4593
  6479  0024BC                     l4591:
  6480                           
  6481                           ; BSR set to: 0
  6482  0024BC  90D8               	bcf	status,0,c
  6483  0024BE  3785               	rlcf	___aodiv@divisor& (0+255),f,b
  6484  0024C0  3786               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  6485  0024C2  3787               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  6486  0024C4  3788               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  6487  0024C6  3789               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  6488  0024C8  378A               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  6489  0024CA  378B               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  6490  0024CC  378C               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  6491  0024CE  2B8D               	incf	___aodiv@counter& (0+255),f,b
  6492  0024D0                     l4593:
  6493                           
  6494                           ; BSR set to: 0
  6495  0024D0  AF8C               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  6496  0024D2  EF6D  F012         	goto	u5131
  6497  0024D6  EF6F  F012         	goto	u5130
  6498  0024DA                     u5131:
  6499  0024DA  EF5E  F012         	goto	l4591
  6500  0024DE                     u5130:
  6501  0024DE                     l4595:
  6502                           
  6503                           ; BSR set to: 0
  6504  0024DE  90D8               	bcf	status,0,c
  6505  0024E0  378F               	rlcf	___aodiv@quotient& (0+255),f,b
  6506  0024E2  3790               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  6507  0024E4  3791               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  6508  0024E6  3792               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  6509  0024E8  3793               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  6510  0024EA  3794               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  6511  0024EC  3795               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  6512  0024EE  3796               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  6513  0024F0                     
  6514                           ; BSR set to: 0
  6515  0024F0  5185               	movf	___aodiv@divisor& (0+255),w,b
  6516  0024F2  5D7D               	subwf	___aodiv@dividend& (0+255),w,b
  6517  0024F4  5186               	movf	(___aodiv@divisor+1)& (0+255),w,b
  6518  0024F6  597E               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  6519  0024F8  5187               	movf	(___aodiv@divisor+2)& (0+255),w,b
  6520  0024FA  597F               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  6521  0024FC  5188               	movf	(___aodiv@divisor+3)& (0+255),w,b
  6522  0024FE  5980               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  6523  002500  5189               	movf	(___aodiv@divisor+4)& (0+255),w,b
  6524  002502  5981               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  6525  002504  518A               	movf	(___aodiv@divisor+5)& (0+255),w,b
  6526  002506  5982               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  6527  002508  518B               	movf	(___aodiv@divisor+6)& (0+255),w,b
  6528  00250A  5983               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  6529  00250C  518C               	movf	(___aodiv@divisor+7)& (0+255),w,b
  6530  00250E  5984               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  6531  002510  A0D8               	btfss	status,0,c
  6532  002512  EF8D  F012         	goto	u5141
  6533  002516  EF8F  F012         	goto	u5140
  6534  00251A                     u5141:
  6535  00251A  EFA0  F012         	goto	l4603
  6536  00251E                     u5140:
  6537  00251E                     
  6538                           ; BSR set to: 0
  6539  00251E  5185               	movf	___aodiv@divisor& (0+255),w,b
  6540  002520  5F7D               	subwf	___aodiv@dividend& (0+255),f,b
  6541  002522  5186               	movf	(___aodiv@divisor+1)& (0+255),w,b
  6542  002524  5B7E               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  6543  002526  5187               	movf	(___aodiv@divisor+2)& (0+255),w,b
  6544  002528  5B7F               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  6545  00252A  5188               	movf	(___aodiv@divisor+3)& (0+255),w,b
  6546  00252C  5B80               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  6547  00252E  5189               	movf	(___aodiv@divisor+4)& (0+255),w,b
  6548  002530  5B81               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  6549  002532  518A               	movf	(___aodiv@divisor+5)& (0+255),w,b
  6550  002534  5B82               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  6551  002536  518B               	movf	(___aodiv@divisor+6)& (0+255),w,b
  6552  002538  5B83               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  6553  00253A  518C               	movf	(___aodiv@divisor+7)& (0+255),w,b
  6554  00253C  5B84               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  6555  00253E                     
  6556                           ; BSR set to: 0
  6557  00253E  818F               	bsf	___aodiv@quotient& (0+255),0,b
  6558  002540                     l4603:
  6559                           
  6560                           ; BSR set to: 0
  6561  002540  90D8               	bcf	status,0,c
  6562  002542  338C               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  6563  002544  338B               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  6564  002546  338A               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  6565  002548  3389               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  6566  00254A  3388               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  6567  00254C  3387               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  6568  00254E  3386               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  6569  002550  3385               	rrcf	___aodiv@divisor& (0+255),f,b
  6570  002552                     
  6571                           ; BSR set to: 0
  6572  002552  2F8D               	decfsz	___aodiv@counter& (0+255),f,b
  6573  002554  EF6F  F012         	goto	l4595
  6574  002558                     l4607:
  6575                           
  6576                           ; BSR set to: 0
  6577  002558  518E               	movf	___aodiv@sign& (0+255),w,b
  6578  00255A  B4D8               	btfsc	status,2,c
  6579  00255C  EFB2  F012         	goto	u5151
  6580  002560  EFB4  F012         	goto	u5150
  6581  002564                     u5151:
  6582  002564  EFC4  F012         	goto	l4611
  6583  002568                     u5150:
  6584  002568                     
  6585                           ; BSR set to: 0
  6586  002568  1F96               	comf	(___aodiv@quotient+7)& (0+255),f,b
  6587  00256A  1F95               	comf	(___aodiv@quotient+6)& (0+255),f,b
  6588  00256C  1F94               	comf	(___aodiv@quotient+5)& (0+255),f,b
  6589  00256E  1F93               	comf	(___aodiv@quotient+4)& (0+255),f,b
  6590  002570  1F92               	comf	(___aodiv@quotient+3)& (0+255),f,b
  6591  002572  1F91               	comf	(___aodiv@quotient+2)& (0+255),f,b
  6592  002574  1F90               	comf	(___aodiv@quotient+1)& (0+255),f,b
  6593  002576  6D8F               	negf	___aodiv@quotient& (0+255),b
  6594  002578  0E00               	movlw	0
  6595  00257A  2390               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  6596  00257C  2391               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  6597  00257E  2392               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  6598  002580  2393               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  6599  002582  2394               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  6600  002584  2395               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  6601  002586  2396               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  6602  002588                     l4611:
  6603                           
  6604                           ; BSR set to: 0
  6605  002588  C08F  F07D         	movff	___aodiv@quotient,?___aodiv
  6606  00258C  C090  F07E         	movff	___aodiv@quotient+1,?___aodiv+1
  6607  002590  C091  F07F         	movff	___aodiv@quotient+2,?___aodiv+2
  6608  002594  C092  F080         	movff	___aodiv@quotient+3,?___aodiv+3
  6609  002598  C093  F081         	movff	___aodiv@quotient+4,?___aodiv+4
  6610  00259C  C094  F082         	movff	___aodiv@quotient+5,?___aodiv+5
  6611  0025A0  C095  F083         	movff	___aodiv@quotient+6,?___aodiv+6
  6612  0025A4  C096  F084         	movff	___aodiv@quotient+7,?___aodiv+7
  6613  0025A8                     
  6614                           ; BSR set to: 0
  6615  0025A8  0012               	return		;funcret
  6616  0025AA                     __end_of___aodiv:
  6617                           	callstack 0
  6618                           
  6619 ;; *************** function _ctoa *****************
  6620 ;; Defined at:
  6621 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  fp              2   38[BANK0 ] PTR struct _IO_FILE
  6624 ;;		 -> sprintf@f(6), 
  6625 ;;  c               1   40[BANK0 ] unsigned char 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  w               2   44[BANK0 ] int 
  6628 ;;  l               2   42[BANK0 ] int 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  2   38[BANK0 ] int 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6638 ;;      Params:         0       3       0       0       0       0       0       0       0
  6639 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6640 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6641 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6642 ;;Total ram usage:        8 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:   13
  6645 ;; This function calls:
  6646 ;;		_fputc
  6647 ;; This function is called by:
  6648 ;;		_vfpfcnvrt
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text28
  6653  002E7E                     __ptext28:
  6654                           	callstack 0
  6655  002E7E                     _ctoa:
  6656                           	callstack 13
  6657  002E7E                     
  6658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  6659  002E7E  0100               	movlb	0	; () banked
  6660  002E80  51C8               	movf	_width& (0+255),w,b
  6661  002E82  11C9               	iorwf	(_width+1)& (0+255),w,b
  6662  002E84  A4D8               	btfss	status,2,c
  6663  002E86  EF47  F017         	goto	u5271
  6664  002E8A  EF49  F017         	goto	u5270
  6665  002E8E                     u5271:
  6666  002E8E  EF4F  F017         	goto	l4681
  6667  002E92                     u5270:
  6668  002E92                     
  6669                           ; BSR set to: 0
  6670  002E92  C0C8  F08C         	movff	_width,ctoa@w
  6671  002E96  C0C9  F08D         	movff	_width+1,ctoa@w+1
  6672  002E9A  EF55  F017         	goto	l4683
  6673  002E9E                     l4681:
  6674                           
  6675                           ; BSR set to: 0
  6676  002E9E  0EFF               	movlw	255
  6677  002EA0  25C8               	addwf	_width& (0+255),w,b
  6678  002EA2  6F8C               	movwf	ctoa@w& (0+255),b
  6679  002EA4  0EFF               	movlw	255
  6680  002EA6  21C9               	addwfc	(_width+1)& (0+255),w,b
  6681  002EA8  6F8D               	movwf	(ctoa@w+1)& (0+255),b
  6682  002EAA                     l4683:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  6686  002EAA  A1CC               	btfss	_flags& (0+255),0,b
  6687  002EAC  EF5A  F017         	goto	u5281
  6688  002EB0  EF5C  F017         	goto	u5280
  6689  002EB4                     u5281:
  6690  002EB4  EF65  F017         	goto	l4687
  6691  002EB8                     u5280:
  6692  002EB8                     
  6693                           ; BSR set to: 0
  6694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  6695  002EB8  C088  F07D         	movff	ctoa@c,fputc@c
  6696  002EBC  6B7E               	clrf	(fputc@c+1)& (0+255),b
  6697  002EBE  C086  F07F         	movff	ctoa@fp,fputc@fp
  6698  002EC2  C087  F080         	movff	ctoa@fp+1,fputc@fp+1
  6699  002EC6  EC19  F018         	call	_fputc	;wreg free
  6700  002ECA                     l4687:
  6701                           
  6702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  6703  002ECA  0100               	movlb	0	; () banked
  6704  002ECC  BF8D               	btfsc	(ctoa@w+1)& (0+255),7,b
  6705  002ECE  EF6B  F017         	goto	u5291
  6706  002ED2  EF6D  F017         	goto	u5290
  6707  002ED6                     u5291:
  6708  002ED6  EF6F  F017         	goto	l4691
  6709  002EDA                     u5290:
  6710  002EDA  EF73  F017         	goto	l1071
  6711  002EDE                     l4691:
  6712                           
  6713                           ; BSR set to: 0
  6714  002EDE  0E00               	movlw	0
  6715  002EE0  6F8D               	movwf	(ctoa@w+1)& (0+255),b
  6716  002EE2  0E00               	movlw	0
  6717  002EE4  6F8C               	movwf	ctoa@w& (0+255),b
  6718  002EE6                     l1071:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  6722  002EE6  0E00               	movlw	0
  6723  002EE8  6F8B               	movwf	(ctoa@l+1)& (0+255),b
  6724  002EEA  0E00               	movlw	0
  6725  002EEC  6F8A               	movwf	ctoa@l& (0+255),b
  6726                           
  6727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6728  002EEE  EF86  F017         	goto	l4697
  6729  002EF2                     l4693:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  6733  002EF2  0E00               	movlw	0
  6734  002EF4  6F7E               	movwf	(fputc@c+1)& (0+255),b
  6735  002EF6  0E20               	movlw	32
  6736  002EF8  6F7D               	movwf	fputc@c& (0+255),b
  6737  002EFA  C086  F07F         	movff	ctoa@fp,fputc@fp
  6738  002EFE  C087  F080         	movff	ctoa@fp+1,fputc@fp+1
  6739  002F02  EC19  F018         	call	_fputc	;wreg free
  6740  002F06                     
  6741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  6742  002F06  0100               	movlb	0	; () banked
  6743  002F08  4B8A               	infsnz	ctoa@l& (0+255),f,b
  6744  002F0A  2B8B               	incf	(ctoa@l+1)& (0+255),f,b
  6745  002F0C                     l4697:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6749  002F0C  518C               	movf	ctoa@w& (0+255),w,b
  6750  002F0E  5D8A               	subwf	ctoa@l& (0+255),w,b
  6751  002F10  518B               	movf	(ctoa@l+1)& (0+255),w,b
  6752  002F12  0A80               	xorlw	128
  6753  002F14  6F89               	movwf	??_ctoa& (0+255),b
  6754  002F16  518D               	movf	(ctoa@w+1)& (0+255),w,b
  6755  002F18  0A80               	xorlw	128
  6756  002F1A  5989               	subwfb	??_ctoa& (0+255),w,b
  6757  002F1C  A0D8               	btfss	status,0,c
  6758  002F1E  EF93  F017         	goto	u5301
  6759  002F22  EF95  F017         	goto	u5300
  6760  002F26                     u5301:
  6761  002F26  EF79  F017         	goto	l4693
  6762  002F2A                     u5300:
  6763  002F2A                     
  6764                           ; BSR set to: 0
  6765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  6766  002F2A  B1CC               	btfsc	_flags& (0+255),0,b
  6767  002F2C  EF9A  F017         	goto	u5311
  6768  002F30  EF9C  F017         	goto	u5310
  6769  002F34                     u5311:
  6770  002F34  EFA5  F017         	goto	l4701
  6771  002F38                     u5310:
  6772  002F38                     
  6773                           ; BSR set to: 0
  6774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  6775  002F38  C088  F07D         	movff	ctoa@c,fputc@c
  6776  002F3C  6B7E               	clrf	(fputc@c+1)& (0+255),b
  6777  002F3E  C086  F07F         	movff	ctoa@fp,fputc@fp
  6778  002F42  C087  F080         	movff	ctoa@fp+1,fputc@fp+1
  6779  002F46  EC19  F018         	call	_fputc	;wreg free
  6780  002F4A                     l4701:
  6781                           
  6782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  6783  002F4A  0E01               	movlw	1
  6784  002F4C  0100               	movlb	0	; () banked
  6785  002F4E  258A               	addwf	ctoa@l& (0+255),w,b
  6786  002F50  6F86               	movwf	?_ctoa& (0+255),b
  6787  002F52  0E00               	movlw	0
  6788  002F54  218B               	addwfc	(ctoa@l+1)& (0+255),w,b
  6789  002F56  6F87               	movwf	(?_ctoa+1)& (0+255),b
  6790  002F58                     
  6791                           ; BSR set to: 0
  6792  002F58  0012               	return		;funcret
  6793  002F5A                     __end_of_ctoa:
  6794                           	callstack 0
  6795                           
  6796 ;; *************** function _fputc *****************
  6797 ;; Defined at:
  6798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  c               2   29[BANK0 ] int 
  6801 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  6802 ;;		 -> sprintf@f(6), 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  2   29[BANK0 ] int 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6814 ;;      Params:         0       4       0       0       0       0       0       0       0
  6815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6816 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6817 ;;      Totals:         0       9       0       0       0       0       0       0       0
  6818 ;;Total ram usage:        9 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:   12
  6821 ;; This function calls:
  6822 ;;		_putch
  6823 ;; This function is called by:
  6824 ;;		_pad
  6825 ;;		_ctoa
  6826 ;;		_vfpfcnvrt
  6827 ;;		_fputs
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text29
  6832  003032                     __ptext29:
  6833                           	callstack 0
  6834  003032                     _fputc:
  6835                           	callstack 14
  6836  003032  0100               	movlb	0	; () banked
  6837  003034  517F               	movf	fputc@fp& (0+255),w,b
  6838  003036  1180               	iorwf	(fputc@fp+1)& (0+255),w,b
  6839  003038  B4D8               	btfsc	status,2,c
  6840  00303A  EF21  F018         	goto	u5031
  6841  00303E  EF23  F018         	goto	u5030
  6842  003042                     u5031:
  6843  003042  EF2C  F018         	goto	l4543
  6844  003046                     u5030:
  6845  003046                     
  6846                           ; BSR set to: 0
  6847  003046  517F               	movf	fputc@fp& (0+255),w,b
  6848  003048  1180               	iorwf	(fputc@fp+1)& (0+255),w,b
  6849  00304A  A4D8               	btfss	status,2,c
  6850  00304C  EF2A  F018         	goto	u5041
  6851  003050  EF2C  F018         	goto	u5040
  6852  003054                     u5041:
  6853  003054  EF31  F018         	goto	l4545
  6854  003058                     u5040:
  6855  003058                     l4543:
  6856                           
  6857                           ; BSR set to: 0
  6858  003058  517D               	movf	fputc@c& (0+255),w,b
  6859  00305A  EC9C  F01F         	call	_putch
  6860  00305E  EF7E  F018         	goto	l1136
  6861  003062                     l4545:
  6862                           
  6863                           ; BSR set to: 0
  6864  003062  EE20 F004          	lfsr	2,4
  6865  003066  517F               	movf	fputc@fp& (0+255),w,b
  6866  003068  26D9               	addwf	fsr2l,f,c
  6867  00306A  5180               	movf	(fputc@fp+1)& (0+255),w,b
  6868  00306C  22DA               	addwfc	fsr2h,f,c
  6869  00306E  50DE               	movf	postinc2,w,c
  6870  003070  10DE               	iorwf	postinc2,w,c
  6871  003072  B4D8               	btfsc	status,2,c
  6872  003074  EF3E  F018         	goto	u5051
  6873  003078  EF40  F018         	goto	u5050
  6874  00307C                     u5051:
  6875  00307C  EF5B  F018         	goto	l4549
  6876  003080                     u5050:
  6877  003080                     
  6878                           ; BSR set to: 0
  6879  003080  EE20 F004          	lfsr	2,4
  6880  003084  517F               	movf	fputc@fp& (0+255),w,b
  6881  003086  26D9               	addwf	fsr2l,f,c
  6882  003088  5180               	movf	(fputc@fp+1)& (0+255),w,b
  6883  00308A  22DA               	addwfc	fsr2h,f,c
  6884  00308C  EE10 F002          	lfsr	1,2
  6885  003090  517F               	movf	fputc@fp& (0+255),w,b
  6886  003092  26E1               	addwf	fsr1l,f,c
  6887  003094  5180               	movf	(fputc@fp+1)& (0+255),w,b
  6888  003096  22E2               	addwfc	fsr1h,f,c
  6889  003098  50DE               	movf	postinc2,w,c
  6890  00309A  5CE6               	subwf	postinc1,w,c
  6891  00309C  50E6               	movf	postinc1,w,c
  6892  00309E  0A80               	xorlw	128
  6893  0030A0  6F85               	movwf	(??_fputc+4)& (0+255),b
  6894  0030A2  50DE               	movf	postinc2,w,c
  6895  0030A4  0A80               	xorlw	128
  6896  0030A6  5985               	subwfb	(??_fputc+4)& (0+255),w,b
  6897  0030A8  B0D8               	btfsc	status,0,c
  6898  0030AA  EF59  F018         	goto	u5061
  6899  0030AE  EF5B  F018         	goto	u5060
  6900  0030B2                     u5061:
  6901  0030B2  EF7E  F018         	goto	l1136
  6902  0030B6                     u5060:
  6903  0030B6                     l4549:
  6904                           
  6905                           ; BSR set to: 0
  6906  0030B6  EE20 F002          	lfsr	2,2
  6907  0030BA  517F               	movf	fputc@fp& (0+255),w,b
  6908  0030BC  26D9               	addwf	fsr2l,f,c
  6909  0030BE  5180               	movf	(fputc@fp+1)& (0+255),w,b
  6910  0030C0  22DA               	addwfc	fsr2h,f,c
  6911  0030C2  CFDE F081          	movff	postinc2,??_fputc
  6912  0030C6  CFDD F082          	movff	postdec2,??_fputc+1
  6913  0030CA  C07F  FFD9         	movff	fputc@fp,fsr2l
  6914  0030CE  C080  FFDA         	movff	fputc@fp+1,fsr2h
  6915  0030D2  CFDE F083          	movff	postinc2,??_fputc+2
  6916  0030D6  CFDD F084          	movff	postdec2,??_fputc+3
  6917  0030DA  5181               	movf	??_fputc& (0+255),w,b
  6918  0030DC  2583               	addwf	(??_fputc+2)& (0+255),w,b
  6919  0030DE  6ED9               	movwf	fsr2l,c
  6920  0030E0  5182               	movf	(??_fputc+1)& (0+255),w,b
  6921  0030E2  2184               	addwfc	(??_fputc+3)& (0+255),w,b
  6922  0030E4  6EDA               	movwf	fsr2h,c
  6923  0030E6  C07D  FFDF         	movff	fputc@c,indf2
  6924  0030EA  EE20 F002          	lfsr	2,2
  6925  0030EE  517F               	movf	fputc@fp& (0+255),w,b
  6926  0030F0  26D9               	addwf	fsr2l,f,c
  6927  0030F2  5180               	movf	(fputc@fp+1)& (0+255),w,b
  6928  0030F4  22DA               	addwfc	fsr2h,f,c
  6929  0030F6  2ADE               	incf	postinc2,f,c
  6930  0030F8  0E00               	movlw	0
  6931  0030FA  22DD               	addwfc	postdec2,f,c
  6932  0030FC                     l1136:
  6933  0030FC  0012               	return		;funcret
  6934  0030FE                     __end_of_fputc:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _putch *****************
  6938 ;; Defined at:
  6939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  c               1    wreg     unsigned char 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  c               1    0[COMRAM] unsigned char 
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:   11
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_fputc
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text30
  6968  003F38                     __ptext30:
  6969                           	callstack 0
  6970  003F38                     _putch:
  6971                           	callstack 14
  6972  003F38  0012               	return		;funcret
  6973  003F3A                     __end_of_putch:
  6974                           	callstack 0
  6975                           
  6976 ;; *************** function _map *****************
  6977 ;; Defined at:
  6978 ;;		line 376 in file "main_LCD_Servos_I2C_Serial.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  x               2   43[BANK0 ] int 
  6981 ;;  In_Min          2   45[BANK0 ] int 
  6982 ;;  In_Max          2   47[BANK0 ] int 
  6983 ;;  Out_Min         2   49[BANK0 ] int 
  6984 ;;  Out_Max         2   51[BANK0 ] int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2   43[BANK0 ] int 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6996 ;;      Params:         0      10       0       0       0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6999 ;;      Totals:         0      10       0       0       0       0       0       0       0
  7000 ;;Total ram usage:       10 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:   12
  7003 ;; This function calls:
  7004 ;;		___awdiv
  7005 ;;		___wmul
  7006 ;; This function is called by:
  7007 ;;		_mover_servo
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text31
  7012  003BF6                     __ptext31:
  7013                           	callstack 0
  7014  003BF6                     _map:
  7015                           	callstack 16
  7016  003BF6                     
  7017                           ;main_LCD_Servos_I2C_Serial.c: 377:     return ((x - In_Min) * ((Out_Max - Out_Min) / (I
      +                          n_Max - In_Min))) + Out_Min;
  7018  003BF6  0100               	movlb	0	; () banked
  7019  003BF8  518D               	movf	map@In_Min& (0+255),w,b
  7020  003BFA  5D8B               	subwf	map@x& (0+255),w,b
  7021  003BFC  6F85               	movwf	___wmul@multiplier& (0+255),b
  7022  003BFE  518E               	movf	(map@In_Min+1)& (0+255),w,b
  7023  003C00  598C               	subwfb	(map@x+1)& (0+255),w,b
  7024  003C02  6F86               	movwf	(___wmul@multiplier+1)& (0+255),b
  7025  003C04  518D               	movf	map@In_Min& (0+255),w,b
  7026  003C06  5D8F               	subwf	map@In_Max& (0+255),w,b
  7027  003C08  6F7F               	movwf	___awdiv@divisor& (0+255),b
  7028  003C0A  518E               	movf	(map@In_Min+1)& (0+255),w,b
  7029  003C0C  5990               	subwfb	(map@In_Max+1)& (0+255),w,b
  7030  003C0E  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
  7031  003C10  5191               	movf	map@Out_Min& (0+255),w,b
  7032  003C12  5D93               	subwf	map@Out_Max& (0+255),w,b
  7033  003C14  6F7D               	movwf	___awdiv@dividend& (0+255),b
  7034  003C16  5192               	movf	(map@Out_Min+1)& (0+255),w,b
  7035  003C18  5994               	subwfb	(map@Out_Max+1)& (0+255),w,b
  7036  003C1A  6F7E               	movwf	(___awdiv@dividend+1)& (0+255),b
  7037  003C1C  EC49  F019         	call	___awdiv	;wreg free
  7038  003C20  C07D  F087         	movff	?___awdiv,___wmul@multiplicand
  7039  003C24  C07E  F088         	movff	?___awdiv+1,___wmul@multiplicand+1
  7040  003C28  EC26  F01F         	call	___wmul	;wreg free
  7041  003C2C  0100               	movlb	0	; () banked
  7042  003C2E  5191               	movf	map@Out_Min& (0+255),w,b
  7043  003C30  2585               	addwf	?___wmul& (0+255),w,b
  7044  003C32  6F8B               	movwf	?_map& (0+255),b
  7045  003C34  5192               	movf	(map@Out_Min+1)& (0+255),w,b
  7046  003C36  2186               	addwfc	(?___wmul+1)& (0+255),w,b
  7047  003C38  6F8C               	movwf	(?_map+1)& (0+255),b
  7048  003C3A                     
  7049                           ; BSR set to: 0
  7050  003C3A  0012               	return		;funcret
  7051  003C3C                     __end_of_map:
  7052                           	callstack 0
  7053                           
  7054 ;; *************** function ___wmul *****************
  7055 ;; Defined at:
  7056 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  multiplier      2   37[BANK0 ] unsigned int 
  7059 ;;  multiplicand    2   39[BANK0 ] unsigned int 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  product         2   41[BANK0 ] unsigned int 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  2   37[BANK0 ] unsigned int 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0, prodl, prodh
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7071 ;;      Params:         0       4       0       0       0       0       0       0       0
  7072 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7074 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7075 ;;Total ram usage:        6 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:   11
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_map
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text32
  7086  003E4C                     __ptext32:
  7087                           	callstack 0
  7088  003E4C                     ___wmul:
  7089                           	callstack 16
  7090  003E4C  0100               	movlb	0	; () banked
  7091  003E4E  5185               	movf	___wmul@multiplier& (0+255),w,b
  7092  003E50  0387               	mulwf	___wmul@multiplicand& (0+255),b
  7093  003E52  CFF3 F089          	movff	prodl,___wmul@product
  7094  003E56  CFF4 F08A          	movff	prodh,___wmul@product+1
  7095  003E5A  5185               	movf	___wmul@multiplier& (0+255),w,b
  7096  003E5C  0388               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7097  003E5E  50F3               	movf	243,w,c
  7098  003E60  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  7099  003E62  5186               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7100  003E64  0387               	mulwf	___wmul@multiplicand& (0+255),b
  7101  003E66  50F3               	movf	243,w,c
  7102  003E68  278A               	addwf	(___wmul@product+1)& (0+255),f,b
  7103  003E6A                     
  7104                           ; BSR set to: 0
  7105  003E6A  C089  F085         	movff	___wmul@product,?___wmul
  7106  003E6E  C08A  F086         	movff	___wmul@product+1,?___wmul+1
  7107  003E72                     
  7108                           ; BSR set to: 0
  7109  003E72  0012               	return		;funcret
  7110  003E74                     __end_of___wmul:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function ___awdiv *****************
  7114 ;; Defined at:
  7115 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  dividend        2   29[BANK0 ] int 
  7118 ;;  divisor         2   31[BANK0 ] int 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  quotient        2   35[BANK0 ] int 
  7121 ;;  sign            1   34[BANK0 ] unsigned char 
  7122 ;;  counter         1   33[BANK0 ] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  2   29[BANK0 ] int 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7132 ;;      Params:         0       4       0       0       0       0       0       0       0
  7133 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7135 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7136 ;;Total ram usage:        8 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:   11
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_map
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text33
  7147  003292                     __ptext33:
  7148                           	callstack 0
  7149  003292                     ___awdiv:
  7150                           	callstack 16
  7151  003292  0E00               	movlw	0
  7152  003294  0100               	movlb	0	; () banked
  7153  003296  6F82               	movwf	___awdiv@sign& (0+255),b
  7154  003298                     
  7155                           ; BSR set to: 0
  7156  003298  BF80               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7157  00329A  EF53  F019         	goto	u3950
  7158  00329E  EF51  F019         	goto	u3951
  7159  0032A2                     u3951:
  7160  0032A2  EF59  F019         	goto	l3663
  7161  0032A6                     u3950:
  7162  0032A6                     
  7163                           ; BSR set to: 0
  7164  0032A6  6D7F               	negf	___awdiv@divisor& (0+255),b
  7165  0032A8  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7166  0032AA  B0D8               	btfsc	status,0,c
  7167  0032AC  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7168  0032AE                     
  7169                           ; BSR set to: 0
  7170  0032AE  0E01               	movlw	1
  7171  0032B0  6F82               	movwf	___awdiv@sign& (0+255),b
  7172  0032B2                     l3663:
  7173                           
  7174                           ; BSR set to: 0
  7175  0032B2  BF7E               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7176  0032B4  EF60  F019         	goto	u3960
  7177  0032B8  EF5E  F019         	goto	u3961
  7178  0032BC                     u3961:
  7179  0032BC  EF66  F019         	goto	l3669
  7180  0032C0                     u3960:
  7181  0032C0                     
  7182                           ; BSR set to: 0
  7183  0032C0  6D7D               	negf	___awdiv@dividend& (0+255),b
  7184  0032C2  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7185  0032C4  B0D8               	btfsc	status,0,c
  7186  0032C6  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7187  0032C8                     
  7188                           ; BSR set to: 0
  7189  0032C8  0E01               	movlw	1
  7190  0032CA  1B82               	xorwf	___awdiv@sign& (0+255),f,b
  7191  0032CC                     l3669:
  7192                           
  7193                           ; BSR set to: 0
  7194  0032CC  0E00               	movlw	0
  7195  0032CE  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
  7196  0032D0  0E00               	movlw	0
  7197  0032D2  6F83               	movwf	___awdiv@quotient& (0+255),b
  7198  0032D4                     
  7199                           ; BSR set to: 0
  7200  0032D4  517F               	movf	___awdiv@divisor& (0+255),w,b
  7201  0032D6  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7202  0032D8  B4D8               	btfsc	status,2,c
  7203  0032DA  EF71  F019         	goto	u3971
  7204  0032DE  EF73  F019         	goto	u3970
  7205  0032E2                     u3971:
  7206  0032E2  EF9B  F019         	goto	l3691
  7207  0032E6                     u3970:
  7208  0032E6                     
  7209                           ; BSR set to: 0
  7210  0032E6  0E01               	movlw	1
  7211  0032E8  6F81               	movwf	___awdiv@counter& (0+255),b
  7212  0032EA  EF7B  F019         	goto	l3677
  7213  0032EE                     l3675:
  7214                           
  7215                           ; BSR set to: 0
  7216  0032EE  90D8               	bcf	status,0,c
  7217  0032F0  377F               	rlcf	___awdiv@divisor& (0+255),f,b
  7218  0032F2  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7219  0032F4  2B81               	incf	___awdiv@counter& (0+255),f,b
  7220  0032F6                     l3677:
  7221                           
  7222                           ; BSR set to: 0
  7223  0032F6  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7224  0032F8  EF80  F019         	goto	u3981
  7225  0032FC  EF82  F019         	goto	u3980
  7226  003300                     u3981:
  7227  003300  EF77  F019         	goto	l3675
  7228  003304                     u3980:
  7229  003304                     l3679:
  7230                           
  7231                           ; BSR set to: 0
  7232  003304  90D8               	bcf	status,0,c
  7233  003306  3783               	rlcf	___awdiv@quotient& (0+255),f,b
  7234  003308  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7235  00330A                     
  7236                           ; BSR set to: 0
  7237  00330A  517F               	movf	___awdiv@divisor& (0+255),w,b
  7238  00330C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
  7239  00330E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7240  003310  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7241  003312  A0D8               	btfss	status,0,c
  7242  003314  EF8E  F019         	goto	u3991
  7243  003318  EF90  F019         	goto	u3990
  7244  00331C                     u3991:
  7245  00331C  EF95  F019         	goto	l3687
  7246  003320                     u3990:
  7247  003320                     
  7248                           ; BSR set to: 0
  7249  003320  517F               	movf	___awdiv@divisor& (0+255),w,b
  7250  003322  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
  7251  003324  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7252  003326  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7253  003328                     
  7254                           ; BSR set to: 0
  7255  003328  8183               	bsf	___awdiv@quotient& (0+255),0,b
  7256  00332A                     l3687:
  7257                           
  7258                           ; BSR set to: 0
  7259  00332A  90D8               	bcf	status,0,c
  7260  00332C  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7261  00332E  337F               	rrcf	___awdiv@divisor& (0+255),f,b
  7262  003330                     
  7263                           ; BSR set to: 0
  7264  003330  2F81               	decfsz	___awdiv@counter& (0+255),f,b
  7265  003332  EF82  F019         	goto	l3679
  7266  003336                     l3691:
  7267                           
  7268                           ; BSR set to: 0
  7269  003336  5182               	movf	___awdiv@sign& (0+255),w,b
  7270  003338  B4D8               	btfsc	status,2,c
  7271  00333A  EFA1  F019         	goto	u4001
  7272  00333E  EFA3  F019         	goto	u4000
  7273  003342                     u4001:
  7274  003342  EFA7  F019         	goto	l3695
  7275  003346                     u4000:
  7276  003346                     
  7277                           ; BSR set to: 0
  7278  003346  6D83               	negf	___awdiv@quotient& (0+255),b
  7279  003348  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7280  00334A  B0D8               	btfsc	status,0,c
  7281  00334C  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7282  00334E                     l3695:
  7283                           
  7284                           ; BSR set to: 0
  7285  00334E  C083  F07D         	movff	___awdiv@quotient,?___awdiv
  7286  003352  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
  7287  003356                     
  7288                           ; BSR set to: 0
  7289  003356  0012               	return		;funcret
  7290  003358                     __end_of___awdiv:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function _SettingsLCD *****************
  7294 ;; Defined at:
  7295 ;;		line 395 in file "main_LCD_Servos_I2C_Serial.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  word            1    wreg     unsigned char 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  word            1   31[BANK0 ] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0
  7310 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7312 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7313 ;;Total ram usage:        1 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:   12
  7316 ;; This function calls:
  7317 ;;		_LCD
  7318 ;; This function is called by:
  7319 ;;		_settings
  7320 ;;		_PrintDataLCD
  7321 ;;		_DisplayShiftRight
  7322 ;;		_DisplayShiftLeft
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text34
  7327  003EC0                     __ptext34:
  7328                           	callstack 0
  7329  003EC0                     _SettingsLCD:
  7330                           	callstack 17
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;incstack = 0
  7334                           ;SettingsLCD@word stored from wreg
  7335  003EC0  0100               	movlb	0	; () banked
  7336  003EC2  6F7F               	movwf	SettingsLCD@word& (0+255),b
  7337  003EC4                     
  7338                           ;main_LCD_Servos_I2C_Serial.c: 396:     LATE1 = 0;
  7339  003EC4  928D               	bcf	3981,1,c	;volatile
  7340  003EC6                     
  7341                           ;main_LCD_Servos_I2C_Serial.c: 397:     LCD(word >> 4);
  7342  003EC6  0100               	movlb	0	; () banked
  7343  003EC8  397F               	swapf	SettingsLCD@word& (0+255),w,b
  7344  003ECA  0B0F               	andlw	15
  7345  003ECC  ECCA  F016         	call	_LCD
  7346                           
  7347                           ;main_LCD_Servos_I2C_Serial.c: 398:     LCD(word & 0x0F);
  7348  003ED0  0100               	movlb	0	; () banked
  7349  003ED2  517F               	movf	SettingsLCD@word& (0+255),w,b
  7350  003ED4  0B0F               	andlw	15
  7351  003ED6  ECCA  F016         	call	_LCD
  7352  003EDA  0012               	return		;funcret
  7353  003EDC                     __end_of_SettingsLCD:
  7354                           	callstack 0
  7355                           
  7356 ;; *************** function _LCD *****************
  7357 ;; Defined at:
  7358 ;;		line 407 in file "main_LCD_Servos_I2C_Serial.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  data            1    wreg     unsigned char 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  data            1   30[BANK0 ] unsigned char 
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  1    wreg      void 
  7365 ;; Registers used:
  7366 ;;		wreg, status,2, status,0
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7372 ;;      Params:         0       0       0       0       0       0       0       0       0
  7373 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7374 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7375 ;;      Totals:         0       2       0       0       0       0       0       0       0
  7376 ;;Total ram usage:        2 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:   11
  7379 ;; This function calls:
  7380 ;;		Nothing
  7381 ;; This function is called by:
  7382 ;;		_SettingsLCD
  7383 ;;		_WriteLCD
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text35
  7388  002D94                     __ptext35:
  7389                           	callstack 0
  7390  002D94                     _LCD:
  7391                           	callstack 17
  7392                           
  7393                           ;incstack = 0
  7394                           ;LCD@data stored from wreg
  7395  002D94  0100               	movlb	0	; () banked
  7396  002D96  6F7E               	movwf	LCD@data& (0+255),b
  7397  002D98                     
  7398                           ;main_LCD_Servos_I2C_Serial.c: 409:     LATDbits.LATD0 = (data & 0x01);
  7399  002D98  C07E  F07D         	movff	LCD@data,??_LCD
  7400  002D9C  0E01               	movlw	1
  7401  002D9E  0100               	movlb	0	; () banked
  7402  002DA0  177D               	andwf	??_LCD& (0+255),f,b
  7403  002DA2  508C               	movf	140,w,c	;volatile
  7404  002DA4  197D               	xorwf	??_LCD& (0+255),w,b
  7405  002DA6  0BFE               	andlw	-2
  7406  002DA8  197D               	xorwf	??_LCD& (0+255),w,b
  7407  002DAA  6E8C               	movwf	140,c	;volatile
  7408  002DAC                     
  7409                           ; BSR set to: 0
  7410                           ;main_LCD_Servos_I2C_Serial.c: 410:     _delay((unsigned long)((10)*(8000000/4000.0)));
  7411  002DAC  0E1A               	movlw	26
  7412  002DAE  0100               	movlb	0	; () banked
  7413  002DB0  6F7D               	movwf	??_LCD& (0+255),b
  7414  002DB2  0EF8               	movlw	248
  7415  002DB4                     u5627:
  7416  002DB4  2EE8               	decfsz	wreg,f,c
  7417  002DB6  D7FE               	bra	u5627
  7418  002DB8  2F7D               	decfsz	??_LCD& (0+255),f,b
  7419  002DBA  D7FC               	bra	u5627
  7420  002DBC  F000               	nop	
  7421  002DBE                     
  7422                           ;main_LCD_Servos_I2C_Serial.c: 411:     LATDbits.LATD1 = (data & 0x02) >> 1;
  7423  002DBE  C07E  F07D         	movff	LCD@data,??_LCD
  7424  002DC2  0100               	movlb	0	; () banked
  7425  002DC4  90D8               	bcf	status,0,c
  7426  002DC6  337D               	rrcf	??_LCD& (0+255),f,b
  7427  002DC8  0E01               	movlw	1
  7428  002DCA  177D               	andwf	??_LCD& (0+255),f,b
  7429  002DCC  477D               	rlncf	??_LCD& (0+255),f,b
  7430  002DCE  508C               	movf	140,w,c	;volatile
  7431  002DD0  197D               	xorwf	??_LCD& (0+255),w,b
  7432  002DD2  0BFD               	andlw	-3
  7433  002DD4  197D               	xorwf	??_LCD& (0+255),w,b
  7434  002DD6  6E8C               	movwf	140,c	;volatile
  7435                           
  7436                           ;main_LCD_Servos_I2C_Serial.c: 412:     _delay((unsigned long)((10)*(8000000/4000.0)));
  7437  002DD8  0E1A               	movlw	26
  7438  002DDA  0100               	movlb	0	; () banked
  7439  002DDC  6F7D               	movwf	??_LCD& (0+255),b
  7440  002DDE  0EF8               	movlw	248
  7441  002DE0                     u5637:
  7442  002DE0  2EE8               	decfsz	wreg,f,c
  7443  002DE2  D7FE               	bra	u5637
  7444  002DE4  2F7D               	decfsz	??_LCD& (0+255),f,b
  7445  002DE6  D7FC               	bra	u5637
  7446  002DE8  F000               	nop	
  7447  002DEA                     
  7448                           ;main_LCD_Servos_I2C_Serial.c: 413:     LATDbits.LATD2 = (data & 0x04) >> 2;
  7449  002DEA  C07E  F07D         	movff	LCD@data,??_LCD
  7450  002DEE  0100               	movlb	0	; () banked
  7451  002DF0  90D8               	bcf	status,0,c
  7452  002DF2  337D               	rrcf	??_LCD& (0+255),f,b
  7453  002DF4  90D8               	bcf	status,0,c
  7454  002DF6  337D               	rrcf	??_LCD& (0+255),f,b
  7455  002DF8  0E01               	movlw	1
  7456  002DFA  177D               	andwf	??_LCD& (0+255),f,b
  7457  002DFC  477D               	rlncf	??_LCD& (0+255),f,b
  7458  002DFE  477D               	rlncf	??_LCD& (0+255),f,b
  7459  002E00  508C               	movf	140,w,c	;volatile
  7460  002E02  197D               	xorwf	??_LCD& (0+255),w,b
  7461  002E04  0BFB               	andlw	-5
  7462  002E06  197D               	xorwf	??_LCD& (0+255),w,b
  7463  002E08  6E8C               	movwf	140,c	;volatile
  7464  002E0A                     
  7465                           ; BSR set to: 0
  7466                           ;main_LCD_Servos_I2C_Serial.c: 414:     _delay((unsigned long)((10)*(8000000/4000.0)));
  7467  002E0A  0E1A               	movlw	26
  7468  002E0C  0100               	movlb	0	; () banked
  7469  002E0E  6F7D               	movwf	??_LCD& (0+255),b
  7470  002E10  0EF8               	movlw	248
  7471  002E12                     u5647:
  7472  002E12  2EE8               	decfsz	wreg,f,c
  7473  002E14  D7FE               	bra	u5647
  7474  002E16  2F7D               	decfsz	??_LCD& (0+255),f,b
  7475  002E18  D7FC               	bra	u5647
  7476  002E1A  F000               	nop	
  7477                           
  7478                           ;main_LCD_Servos_I2C_Serial.c: 415:     LATDbits.LATD3 = (data & 0x08) >> 3;
  7479  002E1C  C07E  F07D         	movff	LCD@data,??_LCD
  7480  002E20  0100               	movlb	0	; () banked
  7481  002E22  90D8               	bcf	status,0,c
  7482  002E24  337D               	rrcf	??_LCD& (0+255),f,b
  7483  002E26  90D8               	bcf	status,0,c
  7484  002E28  337D               	rrcf	??_LCD& (0+255),f,b
  7485  002E2A  90D8               	bcf	status,0,c
  7486  002E2C  337D               	rrcf	??_LCD& (0+255),f,b
  7487  002E2E  0E01               	movlw	1
  7488  002E30  177D               	andwf	??_LCD& (0+255),f,b
  7489  002E32  477D               	rlncf	??_LCD& (0+255),f,b
  7490  002E34  477D               	rlncf	??_LCD& (0+255),f,b
  7491  002E36  477D               	rlncf	??_LCD& (0+255),f,b
  7492  002E38  508C               	movf	140,w,c	;volatile
  7493  002E3A  197D               	xorwf	??_LCD& (0+255),w,b
  7494  002E3C  0BF7               	andlw	-9
  7495  002E3E  197D               	xorwf	??_LCD& (0+255),w,b
  7496  002E40  6E8C               	movwf	140,c	;volatile
  7497  002E42                     
  7498                           ; BSR set to: 0
  7499                           ;main_LCD_Servos_I2C_Serial.c: 416:     _delay((unsigned long)((10)*(8000000/4000.0)));
  7500  002E42  0E1A               	movlw	26
  7501  002E44  0100               	movlb	0	; () banked
  7502  002E46  6F7D               	movwf	??_LCD& (0+255),b
  7503  002E48  0EF8               	movlw	248
  7504  002E4A                     u5657:
  7505  002E4A  2EE8               	decfsz	wreg,f,c
  7506  002E4C  D7FE               	bra	u5657
  7507  002E4E  2F7D               	decfsz	??_LCD& (0+255),f,b
  7508  002E50  D7FC               	bra	u5657
  7509  002E52  F000               	nop	
  7510  002E54                     
  7511                           ;main_LCD_Servos_I2C_Serial.c: 417:     LATE0 = 1;
  7512  002E54  808D               	bsf	3981,0,c	;volatile
  7513  002E56                     
  7514                           ;main_LCD_Servos_I2C_Serial.c: 418:     _delay((unsigned long)((10)*(8000000/4000.0)));
  7515  002E56  0E1A               	movlw	26
  7516  002E58  0100               	movlb	0	; () banked
  7517  002E5A  6F7D               	movwf	??_LCD& (0+255),b
  7518  002E5C  0EF8               	movlw	248
  7519  002E5E                     u5667:
  7520  002E5E  2EE8               	decfsz	wreg,f,c
  7521  002E60  D7FE               	bra	u5667
  7522  002E62  2F7D               	decfsz	??_LCD& (0+255),f,b
  7523  002E64  D7FC               	bra	u5667
  7524  002E66  F000               	nop	
  7525  002E68                     
  7526                           ;main_LCD_Servos_I2C_Serial.c: 419:     LATE0 = 0;
  7527  002E68  908D               	bcf	3981,0,c	;volatile
  7528  002E6A                     
  7529                           ;main_LCD_Servos_I2C_Serial.c: 420:     _delay((unsigned long)((10)*(8000000/4000.0)));
  7530  002E6A  0E1A               	movlw	26
  7531  002E6C  0100               	movlb	0	; () banked
  7532  002E6E  6F7D               	movwf	??_LCD& (0+255),b
  7533  002E70  0EF8               	movlw	248
  7534  002E72                     u5677:
  7535  002E72  2EE8               	decfsz	wreg,f,c
  7536  002E74  D7FE               	bra	u5677
  7537  002E76  2F7D               	decfsz	??_LCD& (0+255),f,b
  7538  002E78  D7FC               	bra	u5677
  7539  002E7A  F000               	nop	
  7540  002E7C  0012               	return		;funcret
  7541  002E7E                     __end_of_LCD:
  7542                           	callstack 0
  7543                           
  7544 ;; *************** function _receive *****************
  7545 ;; Defined at:
  7546 ;;		line 252 in file "main_LCD_Servos_I2C_Serial.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7560 ;;      Params:         0       0       0       0       0       0       0       0       0
  7561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7562 ;;      Temps:          0      10       0       0       0       0       0       0       0
  7563 ;;      Totals:         0      10       0       0       0       0       0       0       0
  7564 ;;Total ram usage:       10 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:   10
  7567 ;; This function calls:
  7568 ;;		_algoritm
  7569 ;;		i2_sprintf
  7570 ;;		i2_start
  7571 ;; This function is called by:
  7572 ;;		Interrupt level 2
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	intcode
  7577  000008                     __pintcode:
  7578                           	callstack 0
  7579  000008                     _receive:
  7580                           	callstack 10
  7581                           
  7582                           ;incstack = 0
  7583  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7584  00000A  ED92  F01B         	call	int_func,f	;refresh shadow registers
  7585                           
  7586                           	psect	intcode_body
  7587  003724                     __pintcode_body:
  7588                           	callstack 10
  7589  003724                     int_func:
  7590                           	callstack 10
  7591  003724  0006               	pop		; remove dummy address from shadow register refresh
  7592  003726  CFE1 F073          	movff	fsr1l,??_receive
  7593  00372A  CFE2 F074          	movff	fsr1h,??_receive+1
  7594  00372E  CFD9 F075          	movff	fsr2l,??_receive+2
  7595  003732  CFDA F076          	movff	fsr2h,??_receive+3
  7596  003736  CFF3 F077          	movff	prodl,??_receive+4
  7597  00373A  CFF4 F078          	movff	prodh,??_receive+5
  7598  00373E  CFF6 F079          	movff	tblptrl,??_receive+6
  7599  003742  CFF7 F07A          	movff	tblptrh,??_receive+7
  7600  003746  CFF8 F07B          	movff	tblptru,??_receive+8
  7601  00374A  CFF5 F07C          	movff	tablat,??_receive+9
  7602  00374E                     
  7603                           ;main_LCD_Servos_I2C_Serial.c: 253:     if(RCIF == 1){
  7604  00374E  AA9E               	btfss	3998,5,c	;volatile
  7605  003750  EFAC  F01B         	goto	i2u499_41
  7606  003754  EFAE  F01B         	goto	i2u499_40
  7607  003758                     i2u499_41:
  7608  003758  EFC1  F01B         	goto	i2l218
  7609  00375C                     i2u499_40:
  7610  00375C                     
  7611                           ;main_LCD_Servos_I2C_Serial.c: 254:         d = RCREG;
  7612  00375C  CFAE F0D8          	movff	4014,_d	;volatile
  7613  003760                     
  7614                           ;main_LCD_Servos_I2C_Serial.c: 255:         sprintf(text," El caracter recibido fue: %c"
      +                          ,d);
  7615  003760  0E1A               	movlw	low _text
  7616  003762  6E59               	movwf	i2sprintf@s^0,c
  7617  003764  0E01               	movlw	high _text
  7618  003766  6E5A               	movwf	(i2sprintf@s+1)^0,c
  7619  003768  0E01               	movlw	low STR_4
  7620  00376A  6E5B               	movwf	i2sprintf@fmt^0,c
  7621  00376C  0E08               	movlw	high STR_4
  7622  00376E  6E5C               	movwf	(i2sprintf@fmt+1)^0,c
  7623  003770  C0D8  F05D         	movff	_d,?i2_sprintf+4
  7624  003774  6A5E               	clrf	(?i2_sprintf+5)^0,c
  7625  003776  EC61  F01D         	call	i2_sprintf	;wreg free
  7626  00377A                     
  7627                           ;main_LCD_Servos_I2C_Serial.c: 256:         start();
  7628  00377A  EC0C  F01D         	call	i2_start	;wreg free
  7629  00377E                     
  7630                           ;main_LCD_Servos_I2C_Serial.c: 257:         algoritm();
  7631  00377E  EC32  F004         	call	_algoritm	;wreg free
  7632  003782                     i2l218:
  7633  003782  C07C  FFF5         	movff	??_receive+9,tablat
  7634  003786  C07B  FFF8         	movff	??_receive+8,tblptru
  7635  00378A  C07A  FFF7         	movff	??_receive+7,tblptrh
  7636  00378E  C079  FFF6         	movff	??_receive+6,tblptrl
  7637  003792  C078  FFF4         	movff	??_receive+5,prodh
  7638  003796  C077  FFF3         	movff	??_receive+4,prodl
  7639  00379A  C076  FFDA         	movff	??_receive+3,fsr2h
  7640  00379E  C075  FFD9         	movff	??_receive+2,fsr2l
  7641  0037A2  C074  FFE2         	movff	??_receive+1,fsr1h
  7642  0037A6  C073  FFE1         	movff	??_receive,fsr1l
  7643  0037AA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7644  0037AC  0011               	retfie		f
  7645  0037AE                     __end_of_receive:
  7646                           	callstack 0
  7647                           
  7648 ;; *************** function _algoritm *****************
  7649 ;; Defined at:
  7650 ;;		line 146 in file "main_LCD_Servos_I2C_Serial.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  i               2   17[BANK0 ] int 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0
  7665 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7666 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7667 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7668 ;;Total ram usage:        3 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    9
  7671 ;; This function calls:
  7672 ;;		_atoi
  7673 ;;		i2_mover_servo
  7674 ;;		i2_sprintf
  7675 ;;		i2_start
  7676 ;; This function is called by:
  7677 ;;		_receive
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           	psect	text37
  7682  000864                     __ptext37:
  7683                           	callstack 0
  7684  000864                     _algoritm:
  7685                           	callstack 10
  7686  000864                     
  7687                           ;main_LCD_Servos_I2C_Serial.c: 147:     if(d == 's'){
  7688  000864  0E73               	movlw	115
  7689  000866  0100               	movlb	0	; () banked
  7690  000868  19D8               	xorwf	_d& (0+255),w,b
  7691  00086A  A4D8               	btfss	status,2,c
  7692  00086C  EF3A  F004         	goto	i2u467_41
  7693  000870  EF3C  F004         	goto	i2u467_40
  7694  000874                     i2u467_41:
  7695  000874  EF40  F004         	goto	i2l4317
  7696  000878                     i2u467_40:
  7697  000878                     
  7698                           ; BSR set to: 0
  7699                           ;main_LCD_Servos_I2C_Serial.c: 148:         flag = 0;
  7700  000878  0E00               	movlw	0
  7701  00087A  6FD9               	movwf	_flag& (0+255),b
  7702                           
  7703                           ;main_LCD_Servos_I2C_Serial.c: 149:     }
  7704  00087C  EF58  F004         	goto	i2l161
  7705  000880                     i2l4317:
  7706                           
  7707                           ; BSR set to: 0
  7708  000880  0E61               	movlw	97
  7709  000882  19D8               	xorwf	_d& (0+255),w,b
  7710  000884  A4D8               	btfss	status,2,c
  7711  000886  EF47  F004         	goto	i2u468_41
  7712  00088A  EF49  F004         	goto	i2u468_40
  7713  00088E                     i2u468_41:
  7714  00088E  EF4D  F004         	goto	i2l4321
  7715  000892                     i2u468_40:
  7716  000892                     
  7717                           ; BSR set to: 0
  7718                           ;main_LCD_Servos_I2C_Serial.c: 151:         flag = 1;
  7719  000892  0E01               	movlw	1
  7720  000894  6FD9               	movwf	_flag& (0+255),b
  7721                           
  7722                           ;main_LCD_Servos_I2C_Serial.c: 152:     }
  7723  000896  EF58  F004         	goto	i2l161
  7724  00089A                     i2l4321:
  7725                           
  7726                           ; BSR set to: 0
  7727  00089A  0E70               	movlw	112
  7728  00089C  19D8               	xorwf	_d& (0+255),w,b
  7729  00089E  A4D8               	btfss	status,2,c
  7730  0008A0  EF54  F004         	goto	i2u469_41
  7731  0008A4  EF56  F004         	goto	i2u469_40
  7732  0008A8                     i2u469_41:
  7733  0008A8  EF58  F004         	goto	i2l161
  7734  0008AC                     i2u469_40:
  7735  0008AC                     
  7736                           ; BSR set to: 0
  7737                           ;main_LCD_Servos_I2C_Serial.c: 154:         flag = 3;
  7738  0008AC  0E03               	movlw	3
  7739  0008AE  6FD9               	movwf	_flag& (0+255),b
  7740  0008B0                     i2l161:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;main_LCD_Servos_I2C_Serial.c: 157:     if(flag == 0){
  7744  0008B0  51D9               	movf	_flag& (0+255),w,b
  7745  0008B2  A4D8               	btfss	status,2,c
  7746  0008B4  EF5E  F004         	goto	i2u470_41
  7747  0008B8  EF60  F004         	goto	i2u470_40
  7748  0008BC                     i2u470_41:
  7749  0008BC  EFF0  F004         	goto	i2l4355
  7750  0008C0                     i2u470_40:
  7751  0008C0                     
  7752                           ; BSR set to: 0
  7753                           ;main_LCD_Servos_I2C_Serial.c: 158:         if(d == '0'){
  7754  0008C0  0E30               	movlw	48
  7755  0008C2  19D8               	xorwf	_d& (0+255),w,b
  7756  0008C4  A4D8               	btfss	status,2,c
  7757  0008C6  EF67  F004         	goto	i2u471_41
  7758  0008CA  EF69  F004         	goto	i2u471_40
  7759  0008CE                     i2u471_41:
  7760  0008CE  EF6F  F004         	goto	i2l4329
  7761  0008D2                     i2u471_40:
  7762  0008D2                     
  7763                           ; BSR set to: 0
  7764                           ;main_LCD_Servos_I2C_Serial.c: 159:             servos = 0;
  7765  0008D2  0E00               	movlw	0
  7766  0008D4  6FE1               	movwf	(_servos+1)& (0+255),b
  7767  0008D6  0E00               	movlw	0
  7768  0008D8  6FE0               	movwf	_servos& (0+255),b
  7769                           
  7770                           ;main_LCD_Servos_I2C_Serial.c: 160:         }
  7771  0008DA  EF79  F006         	goto	i2l4447
  7772  0008DE                     i2l4329:
  7773                           
  7774                           ; BSR set to: 0
  7775  0008DE  0E31               	movlw	49
  7776  0008E0  19D8               	xorwf	_d& (0+255),w,b
  7777  0008E2  A4D8               	btfss	status,2,c
  7778  0008E4  EF76  F004         	goto	i2u472_41
  7779  0008E8  EF78  F004         	goto	i2u472_40
  7780  0008EC                     i2u472_41:
  7781  0008EC  EF7E  F004         	goto	i2l4333
  7782  0008F0                     i2u472_40:
  7783  0008F0                     
  7784                           ; BSR set to: 0
  7785                           ;main_LCD_Servos_I2C_Serial.c: 162:             servos = 1;
  7786  0008F0  0E00               	movlw	0
  7787  0008F2  6FE1               	movwf	(_servos+1)& (0+255),b
  7788  0008F4  0E01               	movlw	1
  7789  0008F6  6FE0               	movwf	_servos& (0+255),b
  7790                           
  7791                           ;main_LCD_Servos_I2C_Serial.c: 163:         }
  7792  0008F8  EF79  F006         	goto	i2l4447
  7793  0008FC                     i2l4333:
  7794                           
  7795                           ; BSR set to: 0
  7796  0008FC  0E32               	movlw	50
  7797  0008FE  19D8               	xorwf	_d& (0+255),w,b
  7798  000900  A4D8               	btfss	status,2,c
  7799  000902  EF85  F004         	goto	i2u473_41
  7800  000906  EF87  F004         	goto	i2u473_40
  7801  00090A                     i2u473_41:
  7802  00090A  EF8D  F004         	goto	i2l4337
  7803  00090E                     i2u473_40:
  7804  00090E                     
  7805                           ; BSR set to: 0
  7806                           ;main_LCD_Servos_I2C_Serial.c: 165:             servos = 2;
  7807  00090E  0E00               	movlw	0
  7808  000910  6FE1               	movwf	(_servos+1)& (0+255),b
  7809  000912  0E02               	movlw	2
  7810  000914  6FE0               	movwf	_servos& (0+255),b
  7811                           
  7812                           ;main_LCD_Servos_I2C_Serial.c: 166:         }
  7813  000916  EF79  F006         	goto	i2l4447
  7814  00091A                     i2l4337:
  7815                           
  7816                           ; BSR set to: 0
  7817  00091A  0E33               	movlw	51
  7818  00091C  19D8               	xorwf	_d& (0+255),w,b
  7819  00091E  A4D8               	btfss	status,2,c
  7820  000920  EF94  F004         	goto	i2u474_41
  7821  000924  EF96  F004         	goto	i2u474_40
  7822  000928                     i2u474_41:
  7823  000928  EF9C  F004         	goto	i2l4341
  7824  00092C                     i2u474_40:
  7825  00092C                     
  7826                           ; BSR set to: 0
  7827                           ;main_LCD_Servos_I2C_Serial.c: 168:             servos = 3;
  7828  00092C  0E00               	movlw	0
  7829  00092E  6FE1               	movwf	(_servos+1)& (0+255),b
  7830  000930  0E03               	movlw	3
  7831  000932  6FE0               	movwf	_servos& (0+255),b
  7832                           
  7833                           ;main_LCD_Servos_I2C_Serial.c: 169:         }
  7834  000934  EF79  F006         	goto	i2l4447
  7835  000938                     i2l4341:
  7836                           
  7837                           ; BSR set to: 0
  7838  000938  0E34               	movlw	52
  7839  00093A  19D8               	xorwf	_d& (0+255),w,b
  7840  00093C  A4D8               	btfss	status,2,c
  7841  00093E  EFA3  F004         	goto	i2u475_41
  7842  000942  EFA5  F004         	goto	i2u475_40
  7843  000946                     i2u475_41:
  7844  000946  EFAB  F004         	goto	i2l4345
  7845  00094A                     i2u475_40:
  7846  00094A                     
  7847                           ; BSR set to: 0
  7848                           ;main_LCD_Servos_I2C_Serial.c: 171:             servos = 4;
  7849  00094A  0E00               	movlw	0
  7850  00094C  6FE1               	movwf	(_servos+1)& (0+255),b
  7851  00094E  0E04               	movlw	4
  7852  000950  6FE0               	movwf	_servos& (0+255),b
  7853                           
  7854                           ;main_LCD_Servos_I2C_Serial.c: 172:         }
  7855  000952  EF79  F006         	goto	i2l4447
  7856  000956                     i2l4345:
  7857                           
  7858                           ; BSR set to: 0
  7859  000956  0E35               	movlw	53
  7860  000958  19D8               	xorwf	_d& (0+255),w,b
  7861  00095A  A4D8               	btfss	status,2,c
  7862  00095C  EFB2  F004         	goto	i2u476_41
  7863  000960  EFB4  F004         	goto	i2u476_40
  7864  000964                     i2u476_41:
  7865  000964  EFBA  F004         	goto	i2l4349
  7866  000968                     i2u476_40:
  7867  000968                     
  7868                           ; BSR set to: 0
  7869                           ;main_LCD_Servos_I2C_Serial.c: 174:             servos = 5;
  7870  000968  0E00               	movlw	0
  7871  00096A  6FE1               	movwf	(_servos+1)& (0+255),b
  7872  00096C  0E05               	movlw	5
  7873  00096E  6FE0               	movwf	_servos& (0+255),b
  7874                           
  7875                           ;main_LCD_Servos_I2C_Serial.c: 175:         }
  7876  000970  EF79  F006         	goto	i2l4447
  7877  000974                     i2l4349:
  7878                           
  7879                           ; BSR set to: 0
  7880  000974  0E0D               	movlw	13
  7881  000976  19D8               	xorwf	_d& (0+255),w,b
  7882  000978  B4D8               	btfsc	status,2,c
  7883  00097A  EFC1  F004         	goto	i2u477_41
  7884  00097E  EFC3  F004         	goto	i2u477_40
  7885  000982                     i2u477_41:
  7886  000982  EFCC  F004         	goto	i2l4353
  7887  000986                     i2u477_40:
  7888  000986                     
  7889                           ; BSR set to: 0
  7890  000986  0E0A               	movlw	10
  7891  000988  19D8               	xorwf	_d& (0+255),w,b
  7892  00098A  A4D8               	btfss	status,2,c
  7893  00098C  EFCA  F004         	goto	i2u478_41
  7894  000990  EFCC  F004         	goto	i2u478_40
  7895  000994                     i2u478_41:
  7896  000994  EFEE  F004         	goto	i2l173
  7897  000998                     i2u478_40:
  7898  000998                     i2l4353:
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;main_LCD_Servos_I2C_Serial.c: 177:             mover_servo(0,0);
  7902  000998  0E00               	movlw	0
  7903  00099A  6F6B               	movwf	(i2mover_servo@servo+1)& (0+255),b
  7904  00099C  0E00               	movlw	0
  7905  00099E  6F6A               	movwf	i2mover_servo@servo& (0+255),b
  7906  0009A0  0E00               	movlw	0
  7907  0009A2  6F6D               	movwf	(i2mover_servo@angulo+1)& (0+255),b
  7908  0009A4  0E00               	movlw	0
  7909  0009A6  6F6C               	movwf	i2mover_servo@angulo& (0+255),b
  7910  0009A8  EC35  F01B         	call	i2_mover_servo	;wreg free
  7911                           
  7912                           ;main_LCD_Servos_I2C_Serial.c: 178:             mover_servo(0,90);
  7913  0009AC  0E00               	movlw	0
  7914  0009AE  0100               	movlb	0	; () banked
  7915  0009B0  6F6B               	movwf	(i2mover_servo@servo+1)& (0+255),b
  7916  0009B2  0E00               	movlw	0
  7917  0009B4  6F6A               	movwf	i2mover_servo@servo& (0+255),b
  7918  0009B6  0E00               	movlw	0
  7919  0009B8  6F6D               	movwf	(i2mover_servo@angulo+1)& (0+255),b
  7920  0009BA  0E5A               	movlw	90
  7921  0009BC  6F6C               	movwf	i2mover_servo@angulo& (0+255),b
  7922  0009BE  EC35  F01B         	call	i2_mover_servo	;wreg free
  7923                           
  7924                           ;main_LCD_Servos_I2C_Serial.c: 179:             mover_servo(0,180);
  7925  0009C2  0E00               	movlw	0
  7926  0009C4  0100               	movlb	0	; () banked
  7927  0009C6  6F6B               	movwf	(i2mover_servo@servo+1)& (0+255),b
  7928  0009C8  0E00               	movlw	0
  7929  0009CA  6F6A               	movwf	i2mover_servo@servo& (0+255),b
  7930  0009CC  0E00               	movlw	0
  7931  0009CE  6F6D               	movwf	(i2mover_servo@angulo+1)& (0+255),b
  7932  0009D0  0EB4               	movlw	180
  7933  0009D2  6F6C               	movwf	i2mover_servo@angulo& (0+255),b
  7934  0009D4  EC35  F01B         	call	i2_mover_servo	;wreg free
  7935  0009D8  EF79  F006         	goto	i2l4447
  7936  0009DC                     i2l173:
  7937                           
  7938                           ; BSR set to: 0
  7939  0009DC  EF79  F006         	goto	i2l4447
  7940  0009E0                     i2l4355:
  7941                           
  7942                           ; BSR set to: 0
  7943  0009E0  05D9               	decf	_flag& (0+255),w,b
  7944  0009E2  A4D8               	btfss	status,2,c
  7945  0009E4  EFF6  F004         	goto	i2u479_41
  7946  0009E8  EFF8  F004         	goto	i2u479_40
  7947  0009EC                     i2u479_41:
  7948  0009EC  EFFC  F004         	goto	i2l4359
  7949  0009F0                     i2u479_40:
  7950  0009F0                     
  7951                           ; BSR set to: 0
  7952                           ;main_LCD_Servos_I2C_Serial.c: 183:         flag = 2;
  7953  0009F0  0E02               	movlw	2
  7954  0009F2  6FD9               	movwf	_flag& (0+255),b
  7955                           
  7956                           ;main_LCD_Servos_I2C_Serial.c: 184:     }
  7957  0009F4  EF79  F006         	goto	i2l4447
  7958  0009F8                     i2l4359:
  7959                           
  7960                           ; BSR set to: 0
  7961  0009F8  0E02               	movlw	2
  7962  0009FA  19D9               	xorwf	_flag& (0+255),w,b
  7963  0009FC  A4D8               	btfss	status,2,c
  7964  0009FE  EF03  F005         	goto	i2u480_41
  7965  000A02  EF05  F005         	goto	i2u480_40
  7966  000A06                     i2u480_41:
  7967  000A06  EFBA  F005         	goto	i2l4405
  7968  000A0A                     i2u480_40:
  7969  000A0A                     
  7970                           ; BSR set to: 0
  7971                           ;main_LCD_Servos_I2C_Serial.c: 186:         angle[z] = d;
  7972  000A0A  0E6B               	movlw	low _angle
  7973  000A0C  25D2               	addwf	_z& (0+255),w,b
  7974  000A0E  6ED9               	movwf	fsr2l,c
  7975  000A10  0E01               	movlw	high _angle
  7976  000A12  21D3               	addwfc	(_z+1)& (0+255),w,b
  7977  000A14  6EDA               	movwf	fsr2h,c
  7978  000A16  C0D8  FFDF         	movff	_d,indf2
  7979  000A1A                     
  7980                           ; BSR set to: 0
  7981                           ;main_LCD_Servos_I2C_Serial.c: 187:         sprintf(text,"angulo z %c \n",angle[z]);
  7982  000A1A  0E1A               	movlw	low _text
  7983  000A1C  6E59               	movwf	i2sprintf@s^0,c
  7984  000A1E  0E01               	movlw	high _text
  7985  000A20  6E5A               	movwf	(i2sprintf@s+1)^0,c
  7986  000A22  0E30               	movlw	low STR_2
  7987  000A24  6E5B               	movwf	i2sprintf@fmt^0,c
  7988  000A26  0E08               	movlw	high STR_2
  7989  000A28  6E5C               	movwf	(i2sprintf@fmt+1)^0,c
  7990  000A2A  0E6B               	movlw	low _angle
  7991  000A2C  25D2               	addwf	_z& (0+255),w,b
  7992  000A2E  6ED9               	movwf	fsr2l,c
  7993  000A30  0E01               	movlw	high _angle
  7994  000A32  21D3               	addwfc	(_z+1)& (0+255),w,b
  7995  000A34  6EDA               	movwf	fsr2h,c
  7996  000A36  50DF               	movf	indf2,w,c
  7997  000A38  6F70               	movwf	??_algoritm& (0+255),b
  7998  000A3A  5170               	movf	??_algoritm& (0+255),w,b
  7999  000A3C  6E5D               	movwf	(?i2_sprintf+4)^0,c
  8000  000A3E  6A5E               	clrf	(?i2_sprintf+5)^0,c
  8001  000A40  EC61  F01D         	call	i2_sprintf	;wreg free
  8002  000A44                     
  8003                           ;main_LCD_Servos_I2C_Serial.c: 188:         start();
  8004  000A44  EC0C  F01D         	call	i2_start	;wreg free
  8005  000A48                     
  8006                           ;main_LCD_Servos_I2C_Serial.c: 189:         z++;
  8007  000A48  0100               	movlb	0	; () banked
  8008  000A4A  4BD2               	infsnz	_z& (0+255),f,b
  8009  000A4C  2BD3               	incf	(_z+1)& (0+255),f,b
  8010  000A4E                     
  8011                           ; BSR set to: 0
  8012                           ;main_LCD_Servos_I2C_Serial.c: 190:         if(z==3){
  8013  000A4E  0E03               	movlw	3
  8014  000A50  19D2               	xorwf	_z& (0+255),w,b
  8015  000A52  11D3               	iorwf	(_z+1)& (0+255),w,b
  8016  000A54  A4D8               	btfss	status,2,c
  8017  000A56  EF2F  F005         	goto	i2u481_41
  8018  000A5A  EF31  F005         	goto	i2u481_40
  8019  000A5E                     i2u481_41:
  8020  000A5E  EF79  F006         	goto	i2l4447
  8021  000A62                     i2u481_40:
  8022  000A62                     
  8023                           ; BSR set to: 0
  8024                           ;main_LCD_Servos_I2C_Serial.c: 191:             z = 0;
  8025  000A62  0E00               	movlw	0
  8026  000A64  6FD3               	movwf	(_z+1)& (0+255),b
  8027  000A66  0E00               	movlw	0
  8028  000A68  6FD2               	movwf	_z& (0+255),b
  8029  000A6A                     
  8030                           ; BSR set to: 0
  8031                           ;main_LCD_Servos_I2C_Serial.c: 192:             Angle = atoi(angle);
  8032  000A6A  0E6B               	movlw	low _angle
  8033  000A6C  6E0F               	movwf	atoi@s^0,c
  8034  000A6E  0E01               	movlw	high _angle
  8035  000A70  6E10               	movwf	(atoi@s+1)^0,c
  8036  000A72  ECD5  F012         	call	_atoi	;wreg free
  8037  000A76  C00F  F0D0         	movff	?_atoi,_Angle
  8038  000A7A  C010  F0D1         	movff	?_atoi+1,_Angle+1
  8039  000A7E                     
  8040                           ;main_LCD_Servos_I2C_Serial.c: 193:             sprintf(text,"angulo atoi %d \n",Angle);
  8041  000A7E  0E1A               	movlw	low _text
  8042  000A80  6E59               	movwf	i2sprintf@s^0,c
  8043  000A82  0E01               	movlw	high _text
  8044  000A84  6E5A               	movwf	(i2sprintf@s+1)^0,c
  8045  000A86  0E1F               	movlw	low STR_3
  8046  000A88  6E5B               	movwf	i2sprintf@fmt^0,c
  8047  000A8A  0E08               	movlw	high STR_3
  8048  000A8C  6E5C               	movwf	(i2sprintf@fmt+1)^0,c
  8049  000A8E  C0D0  F05D         	movff	_Angle,?i2_sprintf+4
  8050  000A92  C0D1  F05E         	movff	_Angle+1,?i2_sprintf+5
  8051  000A96  EC61  F01D         	call	i2_sprintf	;wreg free
  8052  000A9A                     
  8053                           ;main_LCD_Servos_I2C_Serial.c: 194:             start();
  8054  000A9A  EC0C  F01D         	call	i2_start	;wreg free
  8055  000A9E                     
  8056                           ;main_LCD_Servos_I2C_Serial.c: 195:             if(servos == 0){
  8057  000A9E  0100               	movlb	0	; () banked
  8058  000AA0  51E0               	movf	_servos& (0+255),w,b
  8059  000AA2  11E1               	iorwf	(_servos+1)& (0+255),w,b
  8060  000AA4  A4D8               	btfss	status,2,c
  8061  000AA6  EF57  F005         	goto	i2u482_41
  8062  000AAA  EF59  F005         	goto	i2u482_40
  8063  000AAE                     i2u482_41:
  8064  000AAE  EF5F  F005         	goto	i2l4383
  8065  000AB2                     i2u482_40:
  8066  000AB2                     
  8067                           ; BSR set to: 0
  8068                           ;main_LCD_Servos_I2C_Serial.c: 196:                 angle_servos[0] = Angle;
  8069  000AB2  C0D0  F195         	movff	_Angle,_angle_servos
  8070  000AB6  C0D1  F196         	movff	_Angle+1,_angle_servos+1
  8071                           
  8072                           ;main_LCD_Servos_I2C_Serial.c: 197:             }
  8073  000ABA  EFAE  F005         	goto	i2l4403
  8074  000ABE                     i2l4383:
  8075                           
  8076                           ; BSR set to: 0
  8077  000ABE  05E0               	decf	_servos& (0+255),w,b
  8078  000AC0  11E1               	iorwf	(_servos+1)& (0+255),w,b
  8079  000AC2  A4D8               	btfss	status,2,c
  8080  000AC4  EF66  F005         	goto	i2u483_41
  8081  000AC8  EF68  F005         	goto	i2u483_40
  8082  000ACC                     i2u483_41:
  8083  000ACC  EF6E  F005         	goto	i2l4387
  8084  000AD0                     i2u483_40:
  8085  000AD0                     
  8086                           ; BSR set to: 0
  8087                           ;main_LCD_Servos_I2C_Serial.c: 199:                 angle_servos[1] = Angle;
  8088  000AD0  C0D0  F197         	movff	_Angle,_angle_servos+2
  8089  000AD4  C0D1  F198         	movff	_Angle+1,_angle_servos+3
  8090                           
  8091                           ;main_LCD_Servos_I2C_Serial.c: 200:             }
  8092  000AD8  EFAE  F005         	goto	i2l4403
  8093  000ADC                     i2l4387:
  8094                           
  8095                           ; BSR set to: 0
  8096  000ADC  0E02               	movlw	2
  8097  000ADE  19E0               	xorwf	_servos& (0+255),w,b
  8098  000AE0  11E1               	iorwf	(_servos+1)& (0+255),w,b
  8099  000AE2  A4D8               	btfss	status,2,c
  8100  000AE4  EF76  F005         	goto	i2u484_41
  8101  000AE8  EF78  F005         	goto	i2u484_40
  8102  000AEC                     i2u484_41:
  8103  000AEC  EF7E  F005         	goto	i2l4391
  8104  000AF0                     i2u484_40:
  8105  000AF0                     
  8106                           ; BSR set to: 0
  8107                           ;main_LCD_Servos_I2C_Serial.c: 202:                 angle_servos[2] = Angle;
  8108  000AF0  C0D0  F199         	movff	_Angle,_angle_servos+4
  8109  000AF4  C0D1  F19A         	movff	_Angle+1,_angle_servos+5
  8110                           
  8111                           ;main_LCD_Servos_I2C_Serial.c: 203:             }
  8112  000AF8  EFAE  F005         	goto	i2l4403
  8113  000AFC                     i2l4391:
  8114                           
  8115                           ; BSR set to: 0
  8116  000AFC  0E03               	movlw	3
  8117  000AFE  19E0               	xorwf	_servos& (0+255),w,b
  8118  000B00  11E1               	iorwf	(_servos+1)& (0+255),w,b
  8119  000B02  A4D8               	btfss	status,2,c
  8120  000B04  EF86  F005         	goto	i2u485_41
  8121  000B08  EF88  F005         	goto	i2u485_40
  8122  000B0C                     i2u485_41:
  8123  000B0C  EF8E  F005         	goto	i2l4395
  8124  000B10                     i2u485_40:
  8125  000B10                     
  8126                           ; BSR set to: 0
  8127                           ;main_LCD_Servos_I2C_Serial.c: 205:                 angle_servos[3] = Angle;
  8128  000B10  C0D0  F19B         	movff	_Angle,_angle_servos+6
  8129  000B14  C0D1  F19C         	movff	_Angle+1,_angle_servos+7
  8130                           
  8131                           ;main_LCD_Servos_I2C_Serial.c: 206:             }
  8132  000B18  EFAE  F005         	goto	i2l4403
  8133  000B1C                     i2l4395:
  8134                           
  8135                           ; BSR set to: 0
  8136  000B1C  0E04               	movlw	4
  8137  000B1E  19E0               	xorwf	_servos& (0+255),w,b
  8138  000B20  11E1               	iorwf	(_servos+1)& (0+255),w,b
  8139  000B22  A4D8               	btfss	status,2,c
  8140  000B24  EF96  F005         	goto	i2u486_41
  8141  000B28  EF98  F005         	goto	i2u486_40
  8142  000B2C                     i2u486_41:
  8143  000B2C  EF9E  F005         	goto	i2l4399
  8144  000B30                     i2u486_40:
  8145  000B30                     
  8146                           ; BSR set to: 0
  8147                           ;main_LCD_Servos_I2C_Serial.c: 208:                 angle_servos[4] = Angle;
  8148  000B30  C0D0  F19D         	movff	_Angle,_angle_servos+8
  8149  000B34  C0D1  F19E         	movff	_Angle+1,_angle_servos+9
  8150                           
  8151                           ;main_LCD_Servos_I2C_Serial.c: 209:             }
  8152  000B38  EFAE  F005         	goto	i2l4403
  8153  000B3C                     i2l4399:
  8154                           
  8155                           ; BSR set to: 0
  8156  000B3C  0E05               	movlw	5
  8157  000B3E  19E0               	xorwf	_servos& (0+255),w,b
  8158  000B40  11E1               	iorwf	(_servos+1)& (0+255),w,b
  8159  000B42  A4D8               	btfss	status,2,c
  8160  000B44  EFA6  F005         	goto	i2u487_41
  8161  000B48  EFA8  F005         	goto	i2u487_40
  8162  000B4C                     i2u487_41:
  8163  000B4C  EFAE  F005         	goto	i2l193
  8164  000B50                     i2u487_40:
  8165  000B50                     
  8166                           ; BSR set to: 0
  8167                           ;main_LCD_Servos_I2C_Serial.c: 211:                 angle_servos[5] = Angle;
  8168  000B50  C0D0  F19F         	movff	_Angle,_angle_servos+10
  8169  000B54  C0D1  F1A0         	movff	_Angle+1,_angle_servos+11
  8170                           
  8171                           ;main_LCD_Servos_I2C_Serial.c: 212:             }
  8172  000B58  EFAE  F005         	goto	i2l4403
  8173  000B5C                     i2l193:
  8174  000B5C                     i2l4403:
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;main_LCD_Servos_I2C_Serial.c: 214:             mover_servo(servos,Angle);
  8178  000B5C  C0E0  F06A         	movff	_servos,i2mover_servo@servo
  8179  000B60  C0E1  F06B         	movff	_servos+1,i2mover_servo@servo+1
  8180  000B64  C0D0  F06C         	movff	_Angle,i2mover_servo@angulo
  8181  000B68  C0D1  F06D         	movff	_Angle+1,i2mover_servo@angulo+1
  8182  000B6C  EC35  F01B         	call	i2_mover_servo	;wreg free
  8183  000B70  EF79  F006         	goto	i2l4447
  8184  000B74                     i2l4405:
  8185                           
  8186                           ; BSR set to: 0
  8187  000B74  0E03               	movlw	3
  8188  000B76  19D9               	xorwf	_flag& (0+255),w,b
  8189  000B78  A4D8               	btfss	status,2,c
  8190  000B7A  EFC1  F005         	goto	i2u488_41
  8191  000B7E  EFC3  F005         	goto	i2u488_40
  8192  000B82                     i2u488_41:
  8193  000B82  EFC7  F005         	goto	i2l4409
  8194  000B86                     i2u488_40:
  8195  000B86                     
  8196                           ; BSR set to: 0
  8197                           ;main_LCD_Servos_I2C_Serial.c: 218:         flag = 4;
  8198  000B86  0E04               	movlw	4
  8199  000B88  6FD9               	movwf	_flag& (0+255),b
  8200                           
  8201                           ;main_LCD_Servos_I2C_Serial.c: 219:     }
  8202  000B8A  EF79  F006         	goto	i2l4447
  8203  000B8E                     i2l4409:
  8204                           
  8205                           ; BSR set to: 0
  8206  000B8E  0E04               	movlw	4
  8207  000B90  19D9               	xorwf	_flag& (0+255),w,b
  8208  000B92  A4D8               	btfss	status,2,c
  8209  000B94  EFCE  F005         	goto	i2u489_41
  8210  000B98  EFD0  F005         	goto	i2u489_40
  8211  000B9C                     i2u489_41:
  8212  000B9C  EF79  F006         	goto	i2l4447
  8213  000BA0                     i2u489_40:
  8214  000BA0                     
  8215                           ; BSR set to: 0
  8216                           ;main_LCD_Servos_I2C_Serial.c: 221:         if(coor <= 2){
  8217  000BA0  BFCF               	btfsc	(_coor+1)& (0+255),7,b
  8218  000BA2  EFDE  F005         	goto	i2u490_40
  8219  000BA6  51CF               	movf	(_coor+1)& (0+255),w,b
  8220  000BA8  E107               	bnz	i2u490_41
  8221  000BAA  0E03               	movlw	3
  8222  000BAC  5DCE               	subwf	_coor& (0+255),w,b
  8223  000BAE  B0D8               	btfsc	status,0,c
  8224  000BB0  EFDC  F005         	goto	i2u490_41
  8225  000BB4  EFDE  F005         	goto	i2u490_40
  8226  000BB8                     i2u490_41:
  8227  000BB8  EFFE  F005         	goto	i2l4421
  8228  000BBC                     i2u490_40:
  8229  000BBC                     
  8230                           ; BSR set to: 0
  8231                           ;main_LCD_Servos_I2C_Serial.c: 222:             coor++;
  8232  000BBC  4BCE               	infsnz	_coor& (0+255),f,b
  8233  000BBE  2BCF               	incf	(_coor+1)& (0+255),f,b
  8234  000BC0                     
  8235                           ; BSR set to: 0
  8236                           ;main_LCD_Servos_I2C_Serial.c: 223:             coordinate_x[coor] = d;
  8237  000BC0  0E68               	movlw	low _coordinate_x
  8238  000BC2  25CE               	addwf	_coor& (0+255),w,b
  8239  000BC4  6ED9               	movwf	fsr2l,c
  8240  000BC6  0E01               	movlw	high _coordinate_x
  8241  000BC8  21CF               	addwfc	(_coor+1)& (0+255),w,b
  8242  000BCA  6EDA               	movwf	fsr2h,c
  8243  000BCC  C0D8  FFDF         	movff	_d,indf2
  8244  000BD0                     
  8245                           ; BSR set to: 0
  8246                           ;main_LCD_Servos_I2C_Serial.c: 224:             if(coor == 2){
  8247  000BD0  0E02               	movlw	2
  8248  000BD2  19CE               	xorwf	_coor& (0+255),w,b
  8249  000BD4  11CF               	iorwf	(_coor+1)& (0+255),w,b
  8250  000BD6  A4D8               	btfss	status,2,c
  8251  000BD8  EFF0  F005         	goto	i2u491_41
  8252  000BDC  EFF2  F005         	goto	i2u491_40
  8253  000BE0                     i2u491_41:
  8254  000BE0  EF79  F006         	goto	i2l4447
  8255  000BE4                     i2u491_40:
  8256  000BE4                     
  8257                           ; BSR set to: 0
  8258                           ;main_LCD_Servos_I2C_Serial.c: 225:                 Coordinate_x = atoi(coordinate_x);
  8259  000BE4  0E68               	movlw	low _coordinate_x
  8260  000BE6  6E0F               	movwf	atoi@s^0,c
  8261  000BE8  0E01               	movlw	high _coordinate_x
  8262  000BEA  6E10               	movwf	(atoi@s+1)^0,c
  8263  000BEC  ECD5  F012         	call	_atoi	;wreg free
  8264  000BF0  C00F  F112         	movff	?_atoi,_Coordinate_x
  8265  000BF4  C010  F113         	movff	?_atoi+1,_Coordinate_x+1
  8266  000BF8  EF79  F006         	goto	i2l4447
  8267  000BFC                     i2l4421:
  8268                           
  8269                           ; BSR set to: 0
  8270  000BFC  BFCF               	btfsc	(_coor+1)& (0+255),7,b
  8271  000BFE  EF0A  F006         	goto	i2u492_41
  8272  000C02  51CF               	movf	(_coor+1)& (0+255),w,b
  8273  000C04  E109               	bnz	i2u492_40
  8274  000C06  0E03               	movlw	3
  8275  000C08  5DCE               	subwf	_coor& (0+255),w,b
  8276  000C0A  A0D8               	btfss	status,0,c
  8277  000C0C  EF0A  F006         	goto	i2u492_41
  8278  000C10  EF0C  F006         	goto	i2u492_40
  8279  000C14                     i2u492_41:
  8280  000C14  EF3A  F006         	goto	i2l4433
  8281  000C18                     i2u492_40:
  8282  000C18                     
  8283                           ; BSR set to: 0
  8284  000C18  BFCF               	btfsc	(_coor+1)& (0+255),7,b
  8285  000C1A  EF1A  F006         	goto	i2u493_40
  8286  000C1E  51CF               	movf	(_coor+1)& (0+255),w,b
  8287  000C20  E107               	bnz	i2u493_41
  8288  000C22  0E06               	movlw	6
  8289  000C24  5DCE               	subwf	_coor& (0+255),w,b
  8290  000C26  B0D8               	btfsc	status,0,c
  8291  000C28  EF18  F006         	goto	i2u493_41
  8292  000C2C  EF1A  F006         	goto	i2u493_40
  8293  000C30                     i2u493_41:
  8294  000C30  EF3A  F006         	goto	i2l4433
  8295  000C34                     i2u493_40:
  8296  000C34                     
  8297                           ; BSR set to: 0
  8298                           ;main_LCD_Servos_I2C_Serial.c: 229:             coor++;
  8299  000C34  4BCE               	infsnz	_coor& (0+255),f,b
  8300  000C36  2BCF               	incf	(_coor+1)& (0+255),f,b
  8301  000C38                     
  8302                           ; BSR set to: 0
  8303                           ;main_LCD_Servos_I2C_Serial.c: 230:             coordinate_y[coor] = d;
  8304  000C38  0E65               	movlw	low _coordinate_y
  8305  000C3A  25CE               	addwf	_coor& (0+255),w,b
  8306  000C3C  6ED9               	movwf	fsr2l,c
  8307  000C3E  0E01               	movlw	high _coordinate_y
  8308  000C40  21CF               	addwfc	(_coor+1)& (0+255),w,b
  8309  000C42  6EDA               	movwf	fsr2h,c
  8310  000C44  C0D8  FFDF         	movff	_d,indf2
  8311  000C48                     
  8312                           ; BSR set to: 0
  8313                           ;main_LCD_Servos_I2C_Serial.c: 231:             if(coor == 2){
  8314  000C48  0E02               	movlw	2
  8315  000C4A  19CE               	xorwf	_coor& (0+255),w,b
  8316  000C4C  11CF               	iorwf	(_coor+1)& (0+255),w,b
  8317  000C4E  A4D8               	btfss	status,2,c
  8318  000C50  EF2C  F006         	goto	i2u494_41
  8319  000C54  EF2E  F006         	goto	i2u494_40
  8320  000C58                     i2u494_41:
  8321  000C58  EFEE  F004         	goto	i2l173
  8322  000C5C                     i2u494_40:
  8323  000C5C                     
  8324                           ; BSR set to: 0
  8325                           ;main_LCD_Servos_I2C_Serial.c: 232:                 Coordinate_y = atoi(coordinate_y);
  8326  000C5C  0E65               	movlw	low _coordinate_y
  8327  000C5E  6E0F               	movwf	atoi@s^0,c
  8328  000C60  0E01               	movlw	high _coordinate_y
  8329  000C62  6E10               	movwf	(atoi@s+1)^0,c
  8330  000C64  ECD5  F012         	call	_atoi	;wreg free
  8331  000C68  C00F  F114         	movff	?_atoi,_Coordinate_y
  8332  000C6C  C010  F115         	movff	?_atoi+1,_Coordinate_y+1
  8333  000C70  EF79  F006         	goto	i2l4447
  8334  000C74                     i2l4433:
  8335                           
  8336                           ; BSR set to: 0
  8337  000C74  BFCF               	btfsc	(_coor+1)& (0+255),7,b
  8338  000C76  EF46  F006         	goto	i2u495_41
  8339  000C7A  51CF               	movf	(_coor+1)& (0+255),w,b
  8340  000C7C  E109               	bnz	i2u495_40
  8341  000C7E  0E06               	movlw	6
  8342  000C80  5DCE               	subwf	_coor& (0+255),w,b
  8343  000C82  A0D8               	btfss	status,0,c
  8344  000C84  EF46  F006         	goto	i2u495_41
  8345  000C88  EF48  F006         	goto	i2u495_40
  8346  000C8C                     i2u495_41:
  8347  000C8C  EFEE  F004         	goto	i2l173
  8348  000C90                     i2u495_40:
  8349  000C90                     
  8350                           ; BSR set to: 0
  8351  000C90  BFCF               	btfsc	(_coor+1)& (0+255),7,b
  8352  000C92  EF56  F006         	goto	i2u496_40
  8353  000C96  51CF               	movf	(_coor+1)& (0+255),w,b
  8354  000C98  E107               	bnz	i2u496_41
  8355  000C9A  0E09               	movlw	9
  8356  000C9C  5DCE               	subwf	_coor& (0+255),w,b
  8357  000C9E  B0D8               	btfsc	status,0,c
  8358  000CA0  EF54  F006         	goto	i2u496_41
  8359  000CA4  EF56  F006         	goto	i2u496_40
  8360  000CA8                     i2u496_41:
  8361  000CA8  EFEE  F004         	goto	i2l173
  8362  000CAC                     i2u496_40:
  8363  000CAC                     
  8364                           ; BSR set to: 0
  8365                           ;main_LCD_Servos_I2C_Serial.c: 236:             coor++;
  8366  000CAC  4BCE               	infsnz	_coor& (0+255),f,b
  8367  000CAE  2BCF               	incf	(_coor+1)& (0+255),f,b
  8368  000CB0                     
  8369                           ; BSR set to: 0
  8370                           ;main_LCD_Servos_I2C_Serial.c: 237:             coordinate_z[coor] = d;
  8371  000CB0  0E62               	movlw	low _coordinate_z
  8372  000CB2  25CE               	addwf	_coor& (0+255),w,b
  8373  000CB4  6ED9               	movwf	fsr2l,c
  8374  000CB6  0E01               	movlw	high _coordinate_z
  8375  000CB8  21CF               	addwfc	(_coor+1)& (0+255),w,b
  8376  000CBA  6EDA               	movwf	fsr2h,c
  8377  000CBC  C0D8  FFDF         	movff	_d,indf2
  8378  000CC0                     
  8379                           ; BSR set to: 0
  8380                           ;main_LCD_Servos_I2C_Serial.c: 238:             if(coor == 2){
  8381  000CC0  0E02               	movlw	2
  8382  000CC2  19CE               	xorwf	_coor& (0+255),w,b
  8383  000CC4  11CF               	iorwf	(_coor+1)& (0+255),w,b
  8384  000CC6  A4D8               	btfss	status,2,c
  8385  000CC8  EF68  F006         	goto	i2u497_41
  8386  000CCC  EF6A  F006         	goto	i2u497_40
  8387  000CD0                     i2u497_41:
  8388  000CD0  EF74  F006         	goto	i2l4445
  8389  000CD4                     i2u497_40:
  8390  000CD4                     
  8391                           ; BSR set to: 0
  8392                           ;main_LCD_Servos_I2C_Serial.c: 239:                 Coordinate_z = atoi(coordinate_z);
  8393  000CD4  0E62               	movlw	low _coordinate_z
  8394  000CD6  6E0F               	movwf	atoi@s^0,c
  8395  000CD8  0E01               	movlw	high _coordinate_z
  8396  000CDA  6E10               	movwf	(atoi@s+1)^0,c
  8397  000CDC  ECD5  F012         	call	_atoi	;wreg free
  8398  000CE0  C00F  F110         	movff	?_atoi,_Coordinate_z
  8399  000CE4  C010  F111         	movff	?_atoi+1,_Coordinate_z+1
  8400  000CE8                     i2l4445:
  8401                           
  8402                           ;main_LCD_Servos_I2C_Serial.c: 241:             coor = 0;
  8403  000CE8  0E00               	movlw	0
  8404  000CEA  0100               	movlb	0	; () banked
  8405  000CEC  6FCF               	movwf	(_coor+1)& (0+255),b
  8406  000CEE  0E00               	movlw	0
  8407  000CF0  6FCE               	movwf	_coor& (0+255),b
  8408  000CF2                     i2l4447:
  8409                           
  8410                           ;main_LCD_Servos_I2C_Serial.c: 245:     for (int i = 0; i <= 5; i++)
  8411  000CF2  0E00               	movlw	0
  8412  000CF4  0100               	movlb	0	; () banked
  8413  000CF6  6F72               	movwf	(algoritm@i+1)& (0+255),b
  8414  000CF8  0E00               	movlw	0
  8415  000CFA  6F71               	movwf	algoritm@i& (0+255),b
  8416  000CFC                     i2l4453:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;main_LCD_Servos_I2C_Serial.c: 246:     {;main_LCD_Servos_I2C_Serial.c: 247:         mov
      +                          er_servo(i, angle_servos[i]);
  8420  000CFC  C071  F06A         	movff	algoritm@i,i2mover_servo@servo
  8421  000D00  C072  F06B         	movff	algoritm@i+1,i2mover_servo@servo+1
  8422  000D04  90D8               	bcf	status,0,c
  8423  000D06  3571               	rlcf	algoritm@i& (0+255),w,b
  8424  000D08  6ED9               	movwf	fsr2l,c
  8425  000D0A  3572               	rlcf	(algoritm@i+1)& (0+255),w,b
  8426  000D0C  6EDA               	movwf	fsr2h,c
  8427  000D0E  0E95               	movlw	low _angle_servos
  8428  000D10  26D9               	addwf	fsr2l,f,c
  8429  000D12  0E01               	movlw	high _angle_servos
  8430  000D14  22DA               	addwfc	fsr2h,f,c
  8431  000D16  CFDE F06C          	movff	postinc2,i2mover_servo@angulo
  8432  000D1A  CFDD F06D          	movff	postdec2,i2mover_servo@angulo+1
  8433  000D1E  EC35  F01B         	call	i2_mover_servo	;wreg free
  8434  000D22                     
  8435                           ;main_LCD_Servos_I2C_Serial.c: 248:     }
  8436  000D22  0100               	movlb	0	; () banked
  8437  000D24  4B71               	infsnz	algoritm@i& (0+255),f,b
  8438  000D26  2B72               	incf	(algoritm@i+1)& (0+255),f,b
  8439  000D28                     
  8440                           ; BSR set to: 0
  8441  000D28  BF72               	btfsc	(algoritm@i+1)& (0+255),7,b
  8442  000D2A  EFA0  F006         	goto	i2u498_41
  8443  000D2E  5172               	movf	(algoritm@i+1)& (0+255),w,b
  8444  000D30  E109               	bnz	i2u498_40
  8445  000D32  0E06               	movlw	6
  8446  000D34  5D71               	subwf	algoritm@i& (0+255),w,b
  8447  000D36  A0D8               	btfss	status,0,c
  8448  000D38  EFA0  F006         	goto	i2u498_41
  8449  000D3C  EFA2  F006         	goto	i2u498_40
  8450  000D40                     i2u498_41:
  8451  000D40  EF7E  F006         	goto	i2l4453
  8452  000D44                     i2u498_40:
  8453  000D44                     
  8454                           ; BSR set to: 0
  8455  000D44  0012               	return		;funcret
  8456  000D46                     __end_of_algoritm:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function i2_mover_servo *****************
  8460 ;; Defined at:
  8461 ;;		line 380 in file "main_LCD_Servos_I2C_Serial.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  servo           2   10[BANK0 ] int 
  8464 ;;  angulo          2   12[BANK0 ] int 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8476 ;;      Params:         0       4       0       0       0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8478 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8479 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8480 ;;Total ram usage:        6 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    8
  8483 ;; This function calls:
  8484 ;;		i2_map
  8485 ;;		i2_sprintf
  8486 ;;		i2_start
  8487 ;;		i2_writeI2C
  8488 ;; This function is called by:
  8489 ;;		_algoritm
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text38
  8494  00366A                     __ptext38:
  8495                           	callstack 0
  8496  00366A                     i2_mover_servo:
  8497                           	callstack 10
  8498  00366A                     
  8499                           ;main_LCD_Servos_I2C_Serial.c: 381:     pos = map (angulo, 0 , 180 , 110, 510);
  8500  00366A  C06C  F00F         	movff	i2mover_servo@angulo,i2map@x
  8501  00366E  C06D  F010         	movff	i2mover_servo@angulo+1,i2map@x+1
  8502  003672  0E00               	movlw	0
  8503  003674  6E12               	movwf	(i2map@In_Min+1)^0,c
  8504  003676  0E00               	movlw	0
  8505  003678  6E11               	movwf	i2map@In_Min^0,c
  8506  00367A  0E00               	movlw	0
  8507  00367C  6E14               	movwf	(i2map@In_Max+1)^0,c
  8508  00367E  0EB4               	movlw	180
  8509  003680  6E13               	movwf	i2map@In_Max^0,c
  8510  003682  0E00               	movlw	0
  8511  003684  6E16               	movwf	(i2map@Out_Min+1)^0,c
  8512  003686  0E6E               	movlw	110
  8513  003688  6E15               	movwf	i2map@Out_Min^0,c
  8514  00368A  0E01               	movlw	1
  8515  00368C  6E18               	movwf	(i2map@Out_Max+1)^0,c
  8516  00368E  0EFE               	movlw	254
  8517  003690  6E17               	movwf	i2map@Out_Max^0,c
  8518  003692  EC61  F01E         	call	i2_map	;wreg free
  8519  003696  C00F  F0D4         	movff	?i2_map,_pos
  8520  00369A  C010  F0D5         	movff	?i2_map+1,_pos+1
  8521  00369E                     
  8522                           ;main_LCD_Servos_I2C_Serial.c: 382:     data2[2] = pos;
  8523  00369E  C0D4  F0DC         	movff	_pos,_data2+2
  8524  0036A2                     
  8525                           ;main_LCD_Servos_I2C_Serial.c: 383:     data2[3] = pos >> 8;
  8526  0036A2  0100               	movlb	0	; () banked
  8527  0036A4  51D5               	movf	(_pos+1)& (0+255),w,b
  8528  0036A6  6FDD               	movwf	(_data2+3)& (0+255),b
  8529  0036A8                     
  8530                           ; BSR set to: 0
  8531                           ;main_LCD_Servos_I2C_Serial.c: 384:     writeI2C(0x80, 0x06 + (4 * servo), data2, 4);
  8532  0036A8  516A               	movf	i2mover_servo@servo& (0+255),w,b
  8533  0036AA  0D04               	mullw	4
  8534  0036AC  50F3               	movf	243,w,c
  8535  0036AE  0F06               	addlw	6
  8536  0036B0  6E03               	movwf	i2writeI2C@Register^0,c
  8537  0036B2  0EDA               	movlw	low _data2
  8538  0036B4  6E04               	movwf	i2writeI2C@Data^0,c
  8539  0036B6  0E00               	movlw	high _data2
  8540  0036B8  6E05               	movwf	(i2writeI2C@Data+1)^0,c
  8541  0036BA  0E00               	movlw	0
  8542  0036BC  6E07               	movwf	(i2writeI2C@bytes+1)^0,c
  8543  0036BE  0E04               	movlw	4
  8544  0036C0  6E06               	movwf	i2writeI2C@bytes^0,c
  8545  0036C2  0E80               	movlw	128
  8546  0036C4  EC15  F01C         	call	i2_writeI2C
  8547  0036C8                     
  8548                           ;main_LCD_Servos_I2C_Serial.c: 385:     sprintf(text," Servo: %d \n",servo);
  8549  0036C8  0E1A               	movlw	low _text
  8550  0036CA  6E59               	movwf	i2sprintf@s^0,c
  8551  0036CC  0E01               	movlw	high _text
  8552  0036CE  6E5A               	movwf	(i2sprintf@s+1)^0,c
  8553  0036D0  0E4C               	movlw	low STR_5
  8554  0036D2  6E5B               	movwf	i2sprintf@fmt^0,c
  8555  0036D4  0E08               	movlw	high STR_5
  8556  0036D6  6E5C               	movwf	(i2sprintf@fmt+1)^0,c
  8557  0036D8  C06A  F05D         	movff	i2mover_servo@servo,?i2_sprintf+4
  8558  0036DC  C06B  F05E         	movff	i2mover_servo@servo+1,?i2_sprintf+5
  8559  0036E0  EC61  F01D         	call	i2_sprintf	;wreg free
  8560  0036E4                     
  8561                           ;main_LCD_Servos_I2C_Serial.c: 386:     start();
  8562  0036E4  EC0C  F01D         	call	i2_start	;wreg free
  8563  0036E8                     
  8564                           ;main_LCD_Servos_I2C_Serial.c: 387:     sprintf(text," Angulo: %d \n",angulo);
  8565  0036E8  0E1A               	movlw	low _text
  8566  0036EA  6E59               	movwf	i2sprintf@s^0,c
  8567  0036EC  0E01               	movlw	high _text
  8568  0036EE  6E5A               	movwf	(i2sprintf@s+1)^0,c
  8569  0036F0  0E3E               	movlw	low STR_6
  8570  0036F2  6E5B               	movwf	i2sprintf@fmt^0,c
  8571  0036F4  0E08               	movlw	high STR_6
  8572  0036F6  6E5C               	movwf	(i2sprintf@fmt+1)^0,c
  8573  0036F8  C06C  F05D         	movff	i2mover_servo@angulo,?i2_sprintf+4
  8574  0036FC  C06D  F05E         	movff	i2mover_servo@angulo+1,?i2_sprintf+5
  8575  003700  EC61  F01D         	call	i2_sprintf	;wreg free
  8576  003704                     
  8577                           ;main_LCD_Servos_I2C_Serial.c: 388:     start();
  8578  003704  EC0C  F01D         	call	i2_start	;wreg free
  8579  003708                     
  8580                           ;main_LCD_Servos_I2C_Serial.c: 389:     _delay((unsigned long)((1000)*(8000000/4000.0)))
      +                          ;
  8581  003708  0E0B               	movlw	11
  8582  00370A  0100               	movlb	0	; () banked
  8583  00370C  6F6F               	movwf	(??i2_mover_servo+1)& (0+255),b
  8584  00370E  0E26               	movlw	38
  8585  003710  6F6E               	movwf	??i2_mover_servo& (0+255),b
  8586  003712  0E5D               	movlw	93
  8587  003714                     i2u568_47:
  8588  003714  2EE8               	decfsz	wreg,f,c
  8589  003716  D7FE               	bra	i2u568_47
  8590  003718  2F6E               	decfsz	??i2_mover_servo& (0+255),f,b
  8591  00371A  D7FC               	bra	i2u568_47
  8592  00371C  2F6F               	decfsz	(??i2_mover_servo+1)& (0+255),f,b
  8593  00371E  D7FA               	bra	i2u568_47
  8594  003720  D000               	nop2	
  8595  003722  0012               	return		;funcret
  8596  003724                     __end_ofi2_mover_servo:
  8597                           	callstack 0
  8598                           
  8599 ;; *************** function i2_writeI2C *****************
  8600 ;; Defined at:
  8601 ;;		line 273 in file "main_LCD_Servos_I2C_Serial.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  Address         1    wreg     unsigned char 
  8604 ;;  Register        1    2[COMRAM] unsigned char 
  8605 ;;  Data            2    3[COMRAM] PTR unsigned char 
  8606 ;;		 -> data2(4), d1(1), setPWMFreq@newmode(1), data1(1), 
  8607 ;;		 -> setPWMFreq@prescale(1), RAM(2047), 
  8608 ;;  bytes           2    5[COMRAM] int 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  Address         1    9[COMRAM] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1    wreg      void 
  8613 ;; Registers used:
  8614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8620 ;;      Params:         5       0       0       0       0       0       0       0       0
  8621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8622 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8623 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8624 ;;Total ram usage:        8 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    2
  8627 ;; This function calls:
  8628 ;;		i2_sendI2C
  8629 ;;		i2_startI2C
  8630 ;;		i2_stopI2C
  8631 ;; This function is called by:
  8632 ;;		i2_mover_servo
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           	psect	text39
  8637  00382A                     __ptext39:
  8638                           	callstack 0
  8639  00382A                     i2_writeI2C:
  8640                           	callstack 15
  8641                           
  8642                           ;incstack = 0
  8643                           ;i2writeI2C@Address stored from wreg
  8644  00382A  6E0A               	movwf	i2writeI2C@Address^0,c
  8645  00382C                     
  8646                           ;main_LCD_Servos_I2C_Serial.c: 274:     startI2C();
  8647  00382C  EC97  F01F         	call	i2_startI2C	;wreg free
  8648                           
  8649                           ;main_LCD_Servos_I2C_Serial.c: 275:     sendI2C(Address);
  8650  003830  500A               	movf	i2writeI2C@Address^0,w,c
  8651  003832  EC81  F01F         	call	i2_sendI2C
  8652                           
  8653                           ;main_LCD_Servos_I2C_Serial.c: 276:     sendI2C(Register);
  8654  003836  5003               	movf	i2writeI2C@Register^0,w,c
  8655  003838  EC81  F01F         	call	i2_sendI2C
  8656  00383C                     
  8657                           ;main_LCD_Servos_I2C_Serial.c: 277:     for(i=0;i<bytes;i++){
  8658  00383C  0E00               	movlw	0
  8659  00383E  0100               	movlb	0	; () banked
  8660  003840  6FD7               	movwf	(_i+1)& (0+255),b
  8661  003842  0E00               	movlw	0
  8662  003844  6FD6               	movwf	_i& (0+255),b
  8663  003846  EF31  F01C         	goto	i2l4103
  8664  00384A                     i2l4097:
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;main_LCD_Servos_I2C_Serial.c: 278:         sendI2C(*Data);
  8668  00384A  C004  FFD9         	movff	i2writeI2C@Data,fsr2l
  8669  00384E  C005  FFDA         	movff	i2writeI2C@Data+1,fsr2h
  8670  003852  50DF               	movf	indf2,w,c
  8671  003854  EC81  F01F         	call	i2_sendI2C
  8672  003858                     
  8673                           ;main_LCD_Servos_I2C_Serial.c: 279:         Data++;
  8674  003858  4A04               	infsnz	i2writeI2C@Data^0,f,c
  8675  00385A  2A05               	incf	(i2writeI2C@Data+1)^0,f,c
  8676  00385C                     
  8677                           ;main_LCD_Servos_I2C_Serial.c: 280:     }
  8678  00385C  0100               	movlb	0	; () banked
  8679  00385E  4BD6               	infsnz	_i& (0+255),f,b
  8680  003860  2BD7               	incf	(_i+1)& (0+255),f,b
  8681  003862                     i2l4103:
  8682                           
  8683                           ; BSR set to: 0
  8684  003862  5006               	movf	i2writeI2C@bytes^0,w,c
  8685  003864  5DD6               	subwf	_i& (0+255),w,b
  8686  003866  51D7               	movf	(_i+1)& (0+255),w,b
  8687  003868  0A80               	xorlw	128
  8688  00386A  6E08               	movwf	??i2_writeI2C^0,c
  8689  00386C  5007               	movf	(i2writeI2C@bytes+1)^0,w,c
  8690  00386E  0A80               	xorlw	128
  8691  003870  5808               	subwfb	??i2_writeI2C^0,w,c
  8692  003872  A0D8               	btfss	status,0,c
  8693  003874  EF3E  F01C         	goto	i2u455_41
  8694  003878  EF40  F01C         	goto	i2u455_40
  8695  00387C                     i2u455_41:
  8696  00387C  EF25  F01C         	goto	i2l4097
  8697  003880                     i2u455_40:
  8698  003880                     
  8699                           ; BSR set to: 0
  8700                           ;main_LCD_Servos_I2C_Serial.c: 281:     stopI2C();
  8701  003880  EC93  F01F         	call	i2_stopI2C	;wreg free
  8702  003884                     
  8703                           ;main_LCD_Servos_I2C_Serial.c: 282:     _delay((unsigned long)((100)*(8000000/4000.0)));
  8704  003884  0E02               	movlw	2
  8705  003886  6E09               	movwf	(??i2_writeI2C+1)^0,c
  8706  003888  0E04               	movlw	4
  8707  00388A  6E08               	movwf	??i2_writeI2C^0,c
  8708  00388C  0EBA               	movlw	186
  8709  00388E                     i2u569_47:
  8710  00388E  2EE8               	decfsz	wreg,f,c
  8711  003890  D7FE               	bra	i2u569_47
  8712  003892  2E08               	decfsz	??i2_writeI2C^0,f,c
  8713  003894  D7FC               	bra	i2u569_47
  8714  003896  2E09               	decfsz	(??i2_writeI2C+1)^0,f,c
  8715  003898  D7FA               	bra	i2u569_47
  8716  00389A  D000               	nop2	
  8717  00389C  0012               	return		;funcret
  8718  00389E                     __end_ofi2_writeI2C:
  8719                           	callstack 0
  8720                           
  8721 ;; *************** function i2_stopI2C *****************
  8722 ;; Defined at:
  8723 ;;		line 299 in file "main_LCD_Servos_I2C_Serial.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      void 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8737 ;;      Params:         0       0       0       0       0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8741 ;;Total ram usage:        0 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    1
  8744 ;; This function calls:
  8745 ;;		i2_readyI2C
  8746 ;; This function is called by:
  8747 ;;		i2_writeI2C
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text40
  8752  003F26                     __ptext40:
  8753                           	callstack 0
  8754  003F26                     i2_stopI2C:
  8755                           	callstack 15
  8756  003F26                     
  8757                           ;main_LCD_Servos_I2C_Serial.c: 301:     readyI2C();
  8758  003F26  EC3A  F01F         	call	i2_readyI2C	;wreg free
  8759  003F2A                     
  8760                           ;main_LCD_Servos_I2C_Serial.c: 302:     PEN = 1;
  8761  003F2A  84C5               	bsf	4037,2,c	;volatile
  8762  003F2C  0012               	return		;funcret
  8763  003F2E                     __end_ofi2_stopI2C:
  8764                           	callstack 0
  8765                           
  8766 ;; *************** function i2_startI2C *****************
  8767 ;; Defined at:
  8768 ;;		line 285 in file "main_LCD_Servos_I2C_Serial.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;		None
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, status,2, status,0, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8782 ;;      Params:         0       0       0       0       0       0       0       0       0
  8783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8786 ;;Total ram usage:        0 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    1
  8789 ;; This function calls:
  8790 ;;		i2_readyI2C
  8791 ;; This function is called by:
  8792 ;;		i2_writeI2C
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text41
  8797  003F2E                     __ptext41:
  8798                           	callstack 0
  8799  003F2E                     i2_startI2C:
  8800                           	callstack 15
  8801  003F2E                     
  8802                           ;main_LCD_Servos_I2C_Serial.c: 286:     readyI2C();
  8803  003F2E  EC3A  F01F         	call	i2_readyI2C	;wreg free
  8804  003F32                     
  8805                           ;main_LCD_Servos_I2C_Serial.c: 287:     SEN = 1;
  8806  003F32  80C5               	bsf	4037,0,c	;volatile
  8807  003F34  0012               	return		;funcret
  8808  003F36                     __end_ofi2_startI2C:
  8809                           	callstack 0
  8810                           
  8811 ;; *************** function i2_sendI2C *****************
  8812 ;; Defined at:
  8813 ;;		line 294 in file "main_LCD_Servos_I2C_Serial.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  data            1    wreg     unsigned char 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;  data            1    1[COMRAM] unsigned char 
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      void 
  8820 ;; Registers used:
  8821 ;;		wreg, status,2, status,0, cstack
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8827 ;;      Params:         0       0       0       0       0       0       0       0       0
  8828 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8830 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8831 ;;Total ram usage:        1 bytes
  8832 ;; Hardware stack levels used:    1
  8833 ;; Hardware stack levels required when called:    1
  8834 ;; This function calls:
  8835 ;;		i2_readyI2C
  8836 ;; This function is called by:
  8837 ;;		i2_writeI2C
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           	psect	text42
  8842  003F02                     __ptext42:
  8843                           	callstack 0
  8844  003F02                     i2_sendI2C:
  8845                           	callstack 15
  8846                           
  8847                           ;incstack = 0
  8848                           ;i2sendI2C@data stored from wreg
  8849  003F02  6E02               	movwf	i2sendI2C@data^0,c
  8850  003F04                     
  8851                           ;main_LCD_Servos_I2C_Serial.c: 295:     readyI2C();
  8852  003F04  EC3A  F01F         	call	i2_readyI2C	;wreg free
  8853  003F08                     
  8854                           ;main_LCD_Servos_I2C_Serial.c: 296:     SSPBUF = data;
  8855  003F08  C002  FFC9         	movff	i2sendI2C@data,4041	;volatile
  8856  003F0C  0012               	return		;funcret
  8857  003F0E                     __end_ofi2_sendI2C:
  8858                           	callstack 0
  8859                           
  8860 ;; *************** function i2_readyI2C *****************
  8861 ;; Defined at:
  8862 ;;		line 290 in file "main_LCD_Servos_I2C_Serial.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;		None
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      void 
  8869 ;; Registers used:
  8870 ;;		wreg, status,2, status,0
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8876 ;;      Params:         0       0       0       0       0       0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8878 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8879 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8880 ;;Total ram usage:        1 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		i2_startI2C
  8886 ;;		i2_sendI2C
  8887 ;;		i2_stopI2C
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text43
  8892  003E74                     __ptext43:
  8893                           	callstack 0
  8894  003E74                     i2_readyI2C:
  8895                           	callstack 15
  8896  003E74                     i2l3361:
  8897  003E74  CFC5 F001          	movff	4037,??i2_readyI2C	;volatile
  8898  003E78  0E1F               	movlw	31
  8899  003E7A  1601               	andwf	??i2_readyI2C^0,f,c
  8900  003E7C  A4D8               	btfss	status,2,c
  8901  003E7E  EF43  F01F         	goto	i2u347_41
  8902  003E82  EF45  F01F         	goto	i2u347_40
  8903  003E86                     i2u347_41:
  8904  003E86  EF3A  F01F         	goto	i2l3361
  8905  003E8A                     i2u347_40:
  8906  003E8A  B4C7               	btfsc	199,2,c	;volatile
  8907  003E8C  EF4A  F01F         	goto	i2u348_41
  8908  003E90  EF4C  F01F         	goto	i2u348_40
  8909  003E94                     i2u348_41:
  8910  003E94  EF3A  F01F         	goto	i2l3361
  8911  003E98                     i2u348_40:
  8912  003E98  0012               	return		;funcret
  8913  003E9A                     __end_ofi2_readyI2C:
  8914                           	callstack 0
  8915                           
  8916 ;; *************** function i2_start *****************
  8917 ;; Defined at:
  8918 ;;		line 261 in file "main_LCD_Servos_I2C_Serial.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;		None
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      void 
  8925 ;; Registers used:
  8926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8932 ;;      Params:         0       0       0       0       0       0       0       0       0
  8933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8936 ;;Total ram usage:        0 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; Hardware stack levels required when called:    1
  8939 ;; This function calls:
  8940 ;;		i2_strlen
  8941 ;; This function is called by:
  8942 ;;		_algoritm
  8943 ;;		_receive
  8944 ;;		i2_mover_servo
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text44
  8949  003A18                     __ptext44:
  8950                           	callstack 0
  8951  003A18                     i2_start:
  8952                           	callstack 18
  8953  003A18                     
  8954                           ;main_LCD_Servos_I2C_Serial.c: 262:     for(i=0;i<=strlen(text);i++){
  8955  003A18  0E00               	movlw	0
  8956  003A1A  0100               	movlb	0	; () banked
  8957  003A1C  6FD7               	movwf	(_i+1)& (0+255),b
  8958  003A1E  0E00               	movlw	0
  8959  003A20  6FD6               	movwf	_i& (0+255),b
  8960  003A22  EF25  F01D         	goto	i2l4091
  8961  003A26                     i2l223:
  8962  003A26  A89E               	btfss	3998,4,c	;volatile
  8963  003A28  EF18  F01D         	goto	i2u453_41
  8964  003A2C  EF1A  F01D         	goto	i2u453_40
  8965  003A30                     i2u453_41:
  8966  003A30  EF13  F01D         	goto	i2l223
  8967  003A34                     i2u453_40:
  8968  003A34                     
  8969                           ;main_LCD_Servos_I2C_Serial.c: 264:         TXREG = text[i];
  8970  003A34  0E1A               	movlw	low _text
  8971  003A36  0100               	movlb	0	; () banked
  8972  003A38  25D6               	addwf	_i& (0+255),w,b
  8973  003A3A  6ED9               	movwf	fsr2l,c
  8974  003A3C  0E01               	movlw	high _text
  8975  003A3E  21D7               	addwfc	(_i+1)& (0+255),w,b
  8976  003A40  6EDA               	movwf	fsr2h,c
  8977  003A42  50DF               	movf	indf2,w,c
  8978  003A44  6EAD               	movwf	173,c	;volatile
  8979  003A46                     
  8980                           ; BSR set to: 0
  8981                           ;main_LCD_Servos_I2C_Serial.c: 265:     }
  8982  003A46  4BD6               	infsnz	_i& (0+255),f,b
  8983  003A48  2BD7               	incf	(_i+1)& (0+255),f,b
  8984  003A4A                     i2l4091:
  8985                           
  8986                           ; BSR set to: 0
  8987  003A4A  0E1A               	movlw	low _text
  8988  003A4C  6E01               	movwf	i2strlen@s^0,c
  8989  003A4E  0E01               	movlw	high _text
  8990  003A50  6E02               	movwf	(i2strlen@s+1)^0,c
  8991  003A52  ECF7  F01E         	call	i2_strlen	;wreg free
  8992  003A56  0100               	movlb	0	; () banked
  8993  003A58  51D6               	movf	_i& (0+255),w,b
  8994  003A5A  5C01               	subwf	?i2_strlen^0,w,c
  8995  003A5C  51D7               	movf	(_i+1)& (0+255),w,b
  8996  003A5E  5802               	subwfb	(?i2_strlen+1)^0,w,c
  8997  003A60  B0D8               	btfsc	status,0,c
  8998  003A62  EF35  F01D         	goto	i2u454_41
  8999  003A66  EF37  F01D         	goto	i2u454_40
  9000  003A6A                     i2u454_41:
  9001  003A6A  EF13  F01D         	goto	i2l223
  9002  003A6E                     i2u454_40:
  9003  003A6E                     
  9004                           ; BSR set to: 0
  9005  003A6E  0012               	return		;funcret
  9006  003A70                     __end_ofi2_start:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function i2_sprintf *****************
  9010 ;; Defined at:
  9011 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  s               2   88[COMRAM] PTR unsigned char 
  9014 ;;		 -> text(40), 
  9015 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  9016 ;;		 -> STR_6(14), STR_5(13), STR_4(30), STR_3(17), 
  9017 ;;		 -> STR_2(14), STR_1(9), 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  f               6    4[BANK0 ] struct _IO_FILE
  9020 ;;  ap              2    2[BANK0 ] PTR void [1]
  9021 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  9022 ;;  ret             2    0        int 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2   88[COMRAM] int 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9032 ;;      Params:         6       0       0       0       0       0       0       0       0
  9033 ;;      Locals:         0      10       0       0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9035 ;;      Totals:         6      10       0       0       0       0       0       0       0
  9036 ;;Total ram usage:       16 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    7
  9039 ;; This function calls:
  9040 ;;		i2_vfprintf
  9041 ;; This function is called by:
  9042 ;;		_algoritm
  9043 ;;		_receive
  9044 ;;		i2_mover_servo
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text45
  9049  003AC2                     __ptext45:
  9050                           	callstack 0
  9051  003AC2                     i2_sprintf:
  9052                           	callstack 12
  9053  003AC2  0E5D               	movlw	low (?i2_sprintf+4)
  9054  003AC4  0100               	movlb	0	; () banked
  9055  003AC6  6F62               	movwf	i2sprintf@ap& (0+255),b
  9056  003AC8  0E00               	movlw	high (?i2_sprintf+4)
  9057  003ACA  6F63               	movwf	(i2sprintf@ap+1)& (0+255),b
  9058  003ACC  C059  F064         	movff	i2sprintf@s,i2sprintf@f
  9059  003AD0  C05A  F065         	movff	i2sprintf@s+1,i2sprintf@f+1
  9060  003AD4                     
  9061                           ; BSR set to: 0
  9062  003AD4  0E00               	movlw	0
  9063  003AD6  6F67               	movwf	(i2sprintf@f+3)& (0+255),b
  9064  003AD8  0E00               	movlw	0
  9065  003ADA  6F66               	movwf	(i2sprintf@f+2)& (0+255),b
  9066  003ADC                     
  9067                           ; BSR set to: 0
  9068  003ADC  0E00               	movlw	0
  9069  003ADE  6F69               	movwf	(i2sprintf@f+5)& (0+255),b
  9070  003AE0  0E00               	movlw	0
  9071  003AE2  6F68               	movwf	(i2sprintf@f+4)& (0+255),b
  9072  003AE4                     
  9073                           ; BSR set to: 0
  9074  003AE4  0E64               	movlw	low i2sprintf@f
  9075  003AE6  6E51               	movwf	i2vfprintf@fp^0,c
  9076  003AE8  0E00               	movlw	high i2sprintf@f
  9077  003AEA  6E52               	movwf	(i2vfprintf@fp+1)^0,c
  9078  003AEC  C05B  F053         	movff	i2sprintf@fmt,i2vfprintf@fmt
  9079  003AF0  C05C  F054         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  9080  003AF4  0E62               	movlw	low i2sprintf@ap
  9081  003AF6  6E55               	movwf	i2vfprintf@ap^0,c
  9082  003AF8  0E00               	movlw	high i2sprintf@ap
  9083  003AFA  6E56               	movwf	(i2vfprintf@ap+1)^0,c
  9084  003AFC  EC80  F01C         	call	i2_vfprintf	;wreg free
  9085  003B00  0100               	movlb	0	; () banked
  9086  003B02  5166               	movf	(i2sprintf@f+2)& (0+255),w,b
  9087  003B04  2459               	addwf	i2sprintf@s^0,w,c
  9088  003B06  6ED9               	movwf	fsr2l,c
  9089  003B08  5167               	movf	(i2sprintf@f+3)& (0+255),w,b
  9090  003B0A  205A               	addwfc	(i2sprintf@s+1)^0,w,c
  9091  003B0C  6EDA               	movwf	fsr2h,c
  9092  003B0E  0E00               	movlw	0
  9093  003B10  6EDF               	movwf	indf2,c
  9094  003B12                     
  9095                           ; BSR set to: 0
  9096  003B12  0012               	return		;funcret
  9097  003B14                     __end_ofi2_sprintf:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function i2_vfprintf *****************
  9101 ;; Defined at:
  9102 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  9105 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9106 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  9107 ;;		 -> STR_6(14), STR_5(13), STR_4(30), STR_3(17), 
  9108 ;;		 -> STR_2(14), STR_1(9), 
  9109 ;;  ap              2   84[COMRAM] PTR PTR void 
  9110 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  9113 ;;		 -> STR_6(14), STR_5(13), STR_4(30), STR_3(17), 
  9114 ;;		 -> STR_2(14), STR_1(9), 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  2   80[COMRAM] int 
  9117 ;; Registers used:
  9118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9124 ;;      Params:         6       0       0       0       0       0       0       0       0
  9125 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9127 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9128 ;;Total ram usage:        8 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; Hardware stack levels required when called:    6
  9131 ;; This function calls:
  9132 ;;		i2_vfpfcnvrt
  9133 ;; This function is called by:
  9134 ;;		i2_sprintf
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text46
  9139  003900                     __ptext46:
  9140                           	callstack 0
  9141  003900                     i2_vfprintf:
  9142                           	callstack 12
  9143  003900                     
  9144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9145  003900  C053  F057         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  9146  003904  C054  F058         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  9147  003908                     
  9148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9149  003908  0E00               	movlw	0
  9150  00390A  0100               	movlb	0	; () banked
  9151  00390C  6FC7               	movwf	(_nout+1)& (0+255),b
  9152  00390E  0E00               	movlw	0
  9153  003910  6FC6               	movwf	_nout& (0+255),b
  9154                           
  9155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9156  003912  EF9E  F01C         	goto	i2l3775
  9157  003916                     i2l3773:
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9161  003916  C051  F040         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  9162  00391A  C052  F041         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  9163  00391E  0E57               	movlw	low i2vfprintf@cfmt
  9164  003920  6E42               	movwf	i2vfpfcnvrt@fmt^0,c
  9165  003922  0E00               	movlw	high i2vfprintf@cfmt
  9166  003924  6E43               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  9167  003926  C055  F044         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  9168  00392A  C056  F045         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  9169  00392E  EC2D  F010         	call	i2_vfpfcnvrt	;wreg free
  9170  003932  5040               	movf	?i2_vfpfcnvrt^0,w,c
  9171  003934  0100               	movlb	0	; () banked
  9172  003936  27C6               	addwf	_nout& (0+255),f,b
  9173  003938  5041               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  9174  00393A  23C7               	addwfc	(_nout+1)& (0+255),f,b
  9175  00393C                     i2l3775:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9179  00393C  C057  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  9180  003940  C058  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  9181  003944                     	if	0	;tblptru may be non-zero
  9182  003944                     	endif
  9183  003944                     	if	0	;tblptru may be non-zero
  9184  003944                     	endif
  9185  003944  0008               	tblrd		*
  9186  003946  50F5               	movf	tablat,w,c
  9187  003948  0900               	iorlw	0
  9188  00394A  A4D8               	btfss	status,2,c
  9189  00394C  EFAA  F01C         	goto	i2u408_41
  9190  003950  EFAC  F01C         	goto	i2u408_40
  9191  003954                     i2u408_41:
  9192  003954  EF8B  F01C         	goto	i2l3773
  9193  003958                     i2u408_40:
  9194  003958                     
  9195                           ; BSR set to: 0
  9196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9197  003958  C0C6  F051         	movff	_nout,?i2_vfprintf
  9198  00395C  C0C7  F052         	movff	_nout+1,?i2_vfprintf+1
  9199  003960                     
  9200                           ; BSR set to: 0
  9201  003960  0012               	return		;funcret
  9202  003962                     __end_ofi2_vfprintf:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function i2_vfpfcnvrt *****************
  9206 ;; Defined at:
  9207 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  9210 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9211 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  9212 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  9213 ;;  ap              2   67[COMRAM] PTR PTR void 
  9214 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  ll              8   71[COMRAM] long long 
  9217 ;;  llu             8    0        unsigned long long 
  9218 ;;  f               4    0        unsigned long long 
  9219 ;;  vp              3    0        PTR void 
  9220 ;;  ct              3    0        unsigned char [3]
  9221 ;;  cp              3    0        PTR unsigned char 
  9222 ;;  i               2    0        int 
  9223 ;;  done            2    0        int 
  9224 ;;  c               1   79[COMRAM] unsigned char 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2   63[COMRAM] int 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9234 ;;      Params:         6       0       0       0       0       0       0       0       0
  9235 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9236 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9237 ;;      Totals:        17       0       0       0       0       0       0       0       0
  9238 ;;Total ram usage:       17 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    5
  9241 ;; This function calls:
  9242 ;;		i2_ctoa
  9243 ;;		i2_dtoa
  9244 ;;		i2_fputc
  9245 ;; This function is called by:
  9246 ;;		i2_vfprintf
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           	psect	text47
  9251  00205A                     __ptext47:
  9252                           	callstack 0
  9253  00205A                     i2_vfpfcnvrt:
  9254                           	callstack 12
  9255  00205A                     
  9256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9257  00205A  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9258  00205E  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9259  002062  CFDE FFF6          	movff	postinc2,tblptrl
  9260  002066  CFDD FFF7          	movff	postdec2,tblptrh
  9261  00206A                     	if	0	;tblptru may be non-zero
  9262  00206A                     	endif
  9263  00206A                     	if	0	;tblptru may be non-zero
  9264  00206A                     	endif
  9265  00206A  0008               	tblrd		*
  9266  00206C  50F5               	movf	tablat,w,c
  9267  00206E  0A25               	xorlw	37
  9268  002070  A4D8               	btfss	status,2,c
  9269  002072  EF3D  F010         	goto	i2u349_41
  9270  002076  EF3F  F010         	goto	i2u349_40
  9271  00207A                     i2u349_41:
  9272  00207A  EF24  F011         	goto	i2l3407
  9273  00207E                     i2u349_40:
  9274  00207E                     
  9275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9276  00207E  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9277  002082  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9278  002086  2ADE               	incf	postinc2,f,c
  9279  002088  0E00               	movlw	0
  9280  00208A  22DD               	addwfc	postdec2,f,c
  9281  00208C                     
  9282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9283  00208C  0E00               	movlw	0
  9284  00208E  0100               	movlb	0	; () banked
  9285  002090  6FC9               	movwf	(_width+1)& (0+255),b
  9286  002092  0E00               	movlw	0
  9287  002094  6FC8               	movwf	_width& (0+255),b
  9288  002096  C0C8  F0CC         	movff	_width,_flags
  9289  00209A  C0C9  F0CD         	movff	_width+1,_flags+1
  9290  00209E                     
  9291                           ; BSR set to: 0
  9292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9293  00209E  69CA               	setf	_prec& (0+255),b
  9294  0020A0  69CB               	setf	(_prec+1)& (0+255),b
  9295  0020A2                     
  9296                           ; BSR set to: 0
  9297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  9298  0020A2  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9299  0020A6  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9300  0020AA  CFDE FFF6          	movff	postinc2,tblptrl
  9301  0020AE  CFDD FFF7          	movff	postdec2,tblptrh
  9302  0020B2                     	if	0	;tblptru may be non-zero
  9303  0020B2                     	endif
  9304  0020B2                     	if	0	;tblptru may be non-zero
  9305  0020B2                     	endif
  9306  0020B2  0008               	tblrd		*
  9307  0020B4  50F5               	movf	tablat,w,c
  9308  0020B6  0A63               	xorlw	99
  9309  0020B8  A4D8               	btfss	status,2,c
  9310  0020BA  EF61  F010         	goto	i2u350_41
  9311  0020BE  EF63  F010         	goto	i2u350_40
  9312  0020C2                     i2u350_41:
  9313  0020C2  EF8A  F010         	goto	i2l3381
  9314  0020C6                     i2u350_40:
  9315  0020C6                     
  9316                           ; BSR set to: 0
  9317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  9318  0020C6  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9319  0020CA  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9320  0020CE  2ADE               	incf	postinc2,f,c
  9321  0020D0  0E00               	movlw	0
  9322  0020D2  22DD               	addwfc	postdec2,f,c
  9323                           
  9324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9325  0020D4  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  9326  0020D8  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  9327  0020DC  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  9328  0020E0  0E02               	movlw	2
  9329  0020E2  26DE               	addwf	postinc2,f,c
  9330  0020E4  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  9331  0020E8  0E00               	movlw	0
  9332  0020EA  22DD               	addwfc	postdec2,f,c
  9333  0020EC  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  9334  0020F0  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  9335  0020F4  50DF               	movf	indf2,w,c
  9336  0020F6  6E50               	movwf	i2vfpfcnvrt@c^0,c
  9337  0020F8                     
  9338                           ; BSR set to: 0
  9339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  9340  0020F8  C040  F00A         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
  9341  0020FC  C041  F00B         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
  9342  002100  C050  F00C         	movff	i2vfpfcnvrt@c,i2ctoa@c
  9343  002104  ECAD  F017         	call	i2_ctoa	;wreg free
  9344  002108  C00A  F040         	movff	?i2_ctoa,?i2_vfpfcnvrt
  9345  00210C  C00B  F041         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
  9346  002110  EF3F  F011         	goto	i2l1107
  9347  002114                     i2l3381:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9351  002114  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9352  002118  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9353  00211C  CFDE FFF6          	movff	postinc2,tblptrl
  9354  002120  CFDD FFF7          	movff	postdec2,tblptrh
  9355  002124                     	if	0	;tblptru may be non-zero
  9356  002124                     	endif
  9357  002124                     	if	0	;tblptru may be non-zero
  9358  002124                     	endif
  9359  002124  0008               	tblrd		*
  9360  002126  50F5               	movf	tablat,w,c
  9361  002128  0A64               	xorlw	100
  9362  00212A  B4D8               	btfsc	status,2,c
  9363  00212C  EF9A  F010         	goto	i2u351_41
  9364  002130  EF9C  F010         	goto	i2u351_40
  9365  002134                     i2u351_41:
  9366  002134  EFAE  F010         	goto	i2l3385
  9367  002138                     i2u351_40:
  9368  002138                     
  9369                           ; BSR set to: 0
  9370  002138  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9371  00213C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9372  002140  CFDE FFF6          	movff	postinc2,tblptrl
  9373  002144  CFDD FFF7          	movff	postdec2,tblptrh
  9374  002148                     	if	0	;tblptru may be non-zero
  9375  002148                     	endif
  9376  002148                     	if	0	;tblptru may be non-zero
  9377  002148                     	endif
  9378  002148  0008               	tblrd		*
  9379  00214A  50F5               	movf	tablat,w,c
  9380  00214C  0A69               	xorlw	105
  9381  00214E  A4D8               	btfss	status,2,c
  9382  002150  EFAC  F010         	goto	i2u352_41
  9383  002154  EFAE  F010         	goto	i2u352_40
  9384  002158                     i2u352_41:
  9385  002158  EFEE  F010         	goto	i2l3391
  9386  00215C                     i2u352_40:
  9387  00215C                     i2l3385:
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  9391  00215C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9392  002160  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9393  002164  2ADE               	incf	postinc2,f,c
  9394  002166  0E00               	movlw	0
  9395  002168  22DD               	addwfc	postdec2,f,c
  9396                           
  9397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9398  00216A  C044  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  9399  00216E  C045  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  9400  002172  CFDF F046          	movff	indf2,??i2_vfpfcnvrt
  9401  002176  0E02               	movlw	2
  9402  002178  26DE               	addwf	postinc2,f,c
  9403  00217A  CFDF F047          	movff	indf2,??i2_vfpfcnvrt+1
  9404  00217E  0E00               	movlw	0
  9405  002180  22DD               	addwfc	postdec2,f,c
  9406  002182  C046  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  9407  002186  C047  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  9408  00218A  CFDE F048          	movff	postinc2,i2vfpfcnvrt@ll
  9409  00218E  CFDD F049          	movff	postdec2,i2vfpfcnvrt@ll+1
  9410  002192  0E00               	movlw	0
  9411  002194  BE49               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  9412  002196  0EFF               	movlw	-1
  9413  002198  6E4A               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  9414  00219A  6E4B               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  9415  00219C  6E4C               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  9416  00219E  6E4D               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  9417  0021A0  6E4E               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  9418  0021A2  6E4F               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  9419  0021A4                     
  9420                           ; BSR set to: 0
  9421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  9422  0021A4  C040  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  9423  0021A8  C041  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  9424  0021AC  C048  F01E         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  9425  0021B0  C049  F01F         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  9426  0021B4  C04A  F020         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  9427  0021B8  C04B  F021         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  9428  0021BC  C04C  F022         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  9429  0021C0  C04D  F023         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  9430  0021C4  C04E  F024         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  9431  0021C8  C04F  F025         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  9432  0021CC  EC44  F00C         	call	i2_dtoa	;wreg free
  9433  0021D0  C01C  F040         	movff	?i2_dtoa,?i2_vfpfcnvrt
  9434  0021D4  C01D  F041         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  9435  0021D8  EF3F  F011         	goto	i2l1107
  9436  0021DC                     i2l3391:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  9440  0021DC  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9441  0021E0  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9442  0021E4  CFDE FFF6          	movff	postinc2,tblptrl
  9443  0021E8  CFDD FFF7          	movff	postdec2,tblptrh
  9444  0021EC                     	if	0	;tblptru may be non-zero
  9445  0021EC                     	endif
  9446  0021EC                     	if	0	;tblptru may be non-zero
  9447  0021EC                     	endif
  9448  0021EC  0008               	tblrd		*
  9449  0021EE  50F5               	movf	tablat,w,c
  9450  0021F0  0A25               	xorlw	37
  9451  0021F2  A4D8               	btfss	status,2,c
  9452  0021F4  EFFE  F010         	goto	i2u353_41
  9453  0021F8  EF00  F011         	goto	i2u353_40
  9454  0021FC                     i2u353_41:
  9455  0021FC  EF17  F011         	goto	i2l3401
  9456  002200                     i2u353_40:
  9457  002200                     
  9458                           ; BSR set to: 0
  9459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  9460  002200  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9461  002204  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9462  002208  2ADE               	incf	postinc2,f,c
  9463  00220A  0E00               	movlw	0
  9464  00220C  22DD               	addwfc	postdec2,f,c
  9465  00220E                     
  9466                           ; BSR set to: 0
  9467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  9468  00220E  0E00               	movlw	0
  9469  002210  6E02               	movwf	(i2fputc@c+1)^0,c
  9470  002212  0E25               	movlw	37
  9471  002214  6E01               	movwf	i2fputc@c^0,c
  9472  002216  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  9473  00221A  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  9474  00221E  ECE4  F018         	call	i2_fputc	;wreg free
  9475  002222                     i2l3397:
  9476                           
  9477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  9478  002222  0E00               	movlw	0
  9479  002224  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  9480  002226  0E01               	movlw	1
  9481  002228  6E40               	movwf	?i2_vfpfcnvrt^0,c
  9482  00222A  EF3F  F011         	goto	i2l1107
  9483  00222E                     i2l3401:
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  9487  00222E  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9488  002232  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9489  002236  2ADE               	incf	postinc2,f,c
  9490  002238  0E00               	movlw	0
  9491  00223A  22DD               	addwfc	postdec2,f,c
  9492  00223C                     
  9493                           ; BSR set to: 0
  9494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  9495  00223C  0E00               	movlw	0
  9496  00223E  6E41               	movwf	(?i2_vfpfcnvrt+1)^0,c
  9497  002240  0E00               	movlw	0
  9498  002242  6E40               	movwf	?i2_vfpfcnvrt^0,c
  9499  002244  EF3F  F011         	goto	i2l1107
  9500  002248                     i2l3407:
  9501                           
  9502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  9503  002248  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9504  00224C  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9505  002250  CFDE FFF6          	movff	postinc2,tblptrl
  9506  002254  CFDD FFF7          	movff	postdec2,tblptrh
  9507  002258                     	if	0	;tblptru may be non-zero
  9508  002258                     	endif
  9509  002258                     	if	0	;tblptru may be non-zero
  9510  002258                     	endif
  9511  002258  0008               	tblrd		*
  9512  00225A  50F5               	movf	tablat,w,c
  9513  00225C  6E01               	movwf	i2fputc@c^0,c
  9514  00225E  6A02               	clrf	(i2fputc@c+1)^0,c
  9515  002260  C040  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  9516  002264  C041  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  9517  002268  ECE4  F018         	call	i2_fputc	;wreg free
  9518  00226C                     
  9519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  9520  00226C  C042  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9521  002270  C043  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9522  002274  2ADE               	incf	postinc2,f,c
  9523  002276  0E00               	movlw	0
  9524  002278  22DD               	addwfc	postdec2,f,c
  9525  00227A  EF11  F011         	goto	i2l3397
  9526  00227E                     i2l1107:
  9527  00227E  0012               	return		;funcret
  9528  002280                     __end_ofi2_vfpfcnvrt:
  9529                           	callstack 0
  9530                           
  9531 ;; *************** function i2_dtoa *****************
  9532 ;; Defined at:
  9533 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9536 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9537 ;;  d               8   29[COMRAM] long long 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  n               8   53[COMRAM] long long 
  9540 ;;  i               2   61[COMRAM] int 
  9541 ;;  s               2   51[COMRAM] int 
  9542 ;;  w               2   49[COMRAM] int 
  9543 ;;  p               2   47[COMRAM] int 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  2   27[COMRAM] int 
  9546 ;; Registers used:
  9547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9553 ;;      Params:        10       0       0       0       0       0       0       0       0
  9554 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9555 ;;      Temps:          8       0       0       0       0       0       0       0       0
  9556 ;;      Totals:        36       0       0       0       0       0       0       0       0
  9557 ;;Total ram usage:       36 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    4
  9560 ;; This function calls:
  9561 ;;		i2___aodiv
  9562 ;;		i2___aomod
  9563 ;;		i2_abs
  9564 ;;		i2_pad
  9565 ;; This function is called by:
  9566 ;;		i2_vfpfcnvrt
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text48
  9571  001888                     __ptext48:
  9572                           	callstack 0
  9573  001888                     i2_dtoa:
  9574                           	callstack 12
  9575  001888                     
  9576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9577  001888  C01E  F036         	movff	i2dtoa@d,i2dtoa@n
  9578  00188C  C01F  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
  9579  001890  C020  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
  9580  001894  C021  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
  9581  001898  C022  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
  9582  00189C  C023  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
  9583  0018A0  C024  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
  9584  0018A4  C025  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
  9585  0018A8                     
  9586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9587  0018A8  BE3D               	btfsc	(i2dtoa@n+7)^0,7,c
  9588  0018AA  EF59  F00C         	goto	i2u325_41
  9589  0018AE  EF5C  F00C         	goto	i2u325_40
  9590  0018B2                     i2u325_41:
  9591  0018B2  0E01               	movlw	1
  9592  0018B4  EF5D  F00C         	goto	i2u326_40
  9593  0018B8                     i2u325_40:
  9594  0018B8  0E00               	movlw	0
  9595  0018BA                     i2u326_40:
  9596  0018BA  6E34               	movwf	i2dtoa@s^0,c
  9597  0018BC  6A35               	clrf	(i2dtoa@s+1)^0,c
  9598                           
  9599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9600  0018BE  5034               	movf	i2dtoa@s^0,w,c
  9601  0018C0  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  9602  0018C2  B4D8               	btfsc	status,2,c
  9603  0018C4  EF66  F00C         	goto	i2u327_41
  9604  0018C8  EF68  F00C         	goto	i2u327_40
  9605  0018CC                     i2u327_41:
  9606  0018CC  EF78  F00C         	goto	i2l3247
  9607  0018D0                     i2u327_40:
  9608  0018D0                     
  9609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9610  0018D0  1E3D               	comf	(i2dtoa@n+7)^0,f,c
  9611  0018D2  1E3C               	comf	(i2dtoa@n+6)^0,f,c
  9612  0018D4  1E3B               	comf	(i2dtoa@n+5)^0,f,c
  9613  0018D6  1E3A               	comf	(i2dtoa@n+4)^0,f,c
  9614  0018D8  1E39               	comf	(i2dtoa@n+3)^0,f,c
  9615  0018DA  1E38               	comf	(i2dtoa@n+2)^0,f,c
  9616  0018DC  1E37               	comf	(i2dtoa@n+1)^0,f,c
  9617  0018DE  6C36               	negf	i2dtoa@n^0,c
  9618  0018E0  0E00               	movlw	0
  9619  0018E2  2237               	addwfc	(i2dtoa@n+1)^0,f,c
  9620  0018E4  2238               	addwfc	(i2dtoa@n+2)^0,f,c
  9621  0018E6  2239               	addwfc	(i2dtoa@n+3)^0,f,c
  9622  0018E8  223A               	addwfc	(i2dtoa@n+4)^0,f,c
  9623  0018EA  223B               	addwfc	(i2dtoa@n+5)^0,f,c
  9624  0018EC  223C               	addwfc	(i2dtoa@n+6)^0,f,c
  9625  0018EE  223D               	addwfc	(i2dtoa@n+7)^0,f,c
  9626  0018F0                     i2l3247:
  9627                           
  9628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9629  0018F0  0100               	movlb	0	; () banked
  9630  0018F2  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  9631  0018F4  EF7E  F00C         	goto	i2u328_41
  9632  0018F8  EF80  F00C         	goto	i2u328_40
  9633  0018FC                     i2u328_41:
  9634  0018FC  EF81  F00C         	goto	i2l3251
  9635  001900                     i2u328_40:
  9636  001900                     
  9637                           ; BSR set to: 0
  9638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9639  001900  93CC               	bcf	_flags& (0+255),1,b
  9640  001902                     i2l3251:
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9644  001902  BFCB               	btfsc	(_prec+1)& (0+255),7,b
  9645  001904  EF8E  F00C         	goto	i2u329_40
  9646  001908  51CB               	movf	(_prec+1)& (0+255),w,b
  9647  00190A  E106               	bnz	i2u329_41
  9648  00190C  05CA               	decf	_prec& (0+255),w,b
  9649  00190E  B0D8               	btfsc	status,0,c
  9650  001910  EF8C  F00C         	goto	i2u329_41
  9651  001914  EF8E  F00C         	goto	i2u329_40
  9652  001918                     i2u329_41:
  9653  001918  EF94  F00C         	goto	i2l1082
  9654  00191C                     i2u329_40:
  9655  00191C                     
  9656                           ; BSR set to: 0
  9657  00191C  0E00               	movlw	0
  9658  00191E  6E31               	movwf	(i2dtoa@p+1)^0,c
  9659  001920  0E01               	movlw	1
  9660  001922  6E30               	movwf	i2dtoa@p^0,c
  9661  001924  EF98  F00C         	goto	i2l1084
  9662  001928                     i2l1082:
  9663                           
  9664                           ; BSR set to: 0
  9665  001928  C0CA  F030         	movff	_prec,i2dtoa@p
  9666  00192C  C0CB  F031         	movff	_prec+1,i2dtoa@p+1
  9667  001930                     i2l1084:
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9671  001930  C0C8  F032         	movff	_width,i2dtoa@w
  9672  001934  C0C9  F033         	movff	_width+1,i2dtoa@w+1
  9673  001938                     
  9674                           ; BSR set to: 0
  9675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9676  001938  5034               	movf	i2dtoa@s^0,w,c
  9677  00193A  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  9678  00193C  A4D8               	btfss	status,2,c
  9679  00193E  EFA3  F00C         	goto	i2u330_41
  9680  001942  EFA5  F00C         	goto	i2u330_40
  9681  001946                     i2u330_41:
  9682  001946  EFAC  F00C         	goto	i2l3259
  9683  00194A                     i2u330_40:
  9684  00194A                     
  9685                           ; BSR set to: 0
  9686  00194A  A5CC               	btfss	_flags& (0+255),2,b
  9687  00194C  EFAA  F00C         	goto	i2u331_41
  9688  001950  EFAC  F00C         	goto	i2u331_40
  9689  001954                     i2u331_41:
  9690  001954  EFAF  F00C         	goto	i2l3261
  9691  001958                     i2u331_40:
  9692  001958                     i2l3259:
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  9696  001958  0632               	decf	i2dtoa@w^0,f,c
  9697  00195A  A0D8               	btfss	status,0,c
  9698  00195C  0633               	decf	(i2dtoa@w+1)^0,f,c
  9699  00195E                     i2l3261:
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9703  00195E  0E00               	movlw	0
  9704  001960  6E3F               	movwf	(i2dtoa@i+1)^0,c
  9705  001962  0E1F               	movlw	31
  9706  001964  6E3E               	movwf	i2dtoa@i^0,c
  9707  001966                     
  9708                           ; BSR set to: 0
  9709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9710  001966  0E00               	movlw	0
  9711  001968  0101               	movlb	1	; () banked
  9712  00196A  6F61               	movwf	(_dbuf+31)& (0+255),b
  9713                           
  9714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9715  00196C  EF34  F00D         	goto	i2l3275
  9716  001970                     i2l3265:
  9717                           
  9718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  9719  001970  063E               	decf	i2dtoa@i^0,f,c
  9720  001972  A0D8               	btfss	status,0,c
  9721  001974  063F               	decf	(i2dtoa@i+1)^0,f,c
  9722  001976                     
  9723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9724  001976  0E42               	movlw	low _dbuf
  9725  001978  243E               	addwf	i2dtoa@i^0,w,c
  9726  00197A  6ED9               	movwf	fsr2l,c
  9727  00197C  0E01               	movlw	high _dbuf
  9728  00197E  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  9729  001980  6EDA               	movwf	fsr2h,c
  9730  001982  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
  9731  001986  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  9732  00198A  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  9733  00198E  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  9734  001992  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  9735  001996  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  9736  00199A  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  9737  00199E  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  9738  0019A2  0E0A               	movlw	10
  9739  0019A4  6E09               	movwf	i2___aomod@divisor^0,c
  9740  0019A6  0E00               	movlw	0
  9741  0019A8  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  9742  0019AA  0E00               	movlw	0
  9743  0019AC  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  9744  0019AE  0E00               	movlw	0
  9745  0019B0  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  9746  0019B2  0E00               	movlw	0
  9747  0019B4  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  9748  0019B6  0E00               	movlw	0
  9749  0019B8  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  9750  0019BA  0E00               	movlw	0
  9751  0019BC  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  9752  0019BE  0E00               	movlw	0
  9753  0019C0  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  9754  0019C2  EC11  F015         	call	i2___aomod	;wreg free
  9755  0019C6  C001  F026         	movff	?i2___aomod,??i2_dtoa
  9756  0019CA  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  9757  0019CE  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  9758  0019D2  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  9759  0019D6  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  9760  0019DA  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  9761  0019DE  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  9762  0019E2  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  9763  0019E6  C026  F013         	movff	??i2_dtoa,i2abs@a
  9764  0019EA  C028  F014         	movff	??i2_dtoa+2,i2abs@a+1
  9765  0019EE  EC82  F01E         	call	i2_abs	;wreg free
  9766  0019F2  5013               	movf	?i2_abs^0,w,c
  9767  0019F4  0F30               	addlw	48
  9768  0019F6  6EDF               	movwf	indf2,c
  9769  0019F8                     
  9770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  9771  0019F8  0630               	decf	i2dtoa@p^0,f,c
  9772  0019FA  A0D8               	btfss	status,0,c
  9773  0019FC  0631               	decf	(i2dtoa@p+1)^0,f,c
  9774  0019FE                     
  9775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  9776  0019FE  0632               	decf	i2dtoa@w^0,f,c
  9777  001A00  A0D8               	btfss	status,0,c
  9778  001A02  0633               	decf	(i2dtoa@w+1)^0,f,c
  9779  001A04                     
  9780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9781  001A04  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  9782  001A08  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  9783  001A0C  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  9784  001A10  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  9785  001A14  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  9786  001A18  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  9787  001A1C  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  9788  001A20  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  9789  001A24  0E0A               	movlw	10
  9790  001A26  6E09               	movwf	i2___aodiv@divisor^0,c
  9791  001A28  0E00               	movlw	0
  9792  001A2A  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  9793  001A2C  0E00               	movlw	0
  9794  001A2E  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  9795  001A30  0E00               	movlw	0
  9796  001A32  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  9797  001A34  0E00               	movlw	0
  9798  001A36  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  9799  001A38  0E00               	movlw	0
  9800  001A3A  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  9801  001A3C  0E00               	movlw	0
  9802  001A3E  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  9803  001A40  0E00               	movlw	0
  9804  001A42  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  9805  001A44  EC9A  F013         	call	i2___aodiv	;wreg free
  9806  001A48  C001  F036         	movff	?i2___aodiv,i2dtoa@n
  9807  001A4C  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
  9808  001A50  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
  9809  001A54  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
  9810  001A58  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
  9811  001A5C  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
  9812  001A60  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
  9813  001A64  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
  9814  001A68                     i2l3275:
  9815                           
  9816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9817  001A68  BE3F               	btfsc	(i2dtoa@i+1)^0,7,c
  9818  001A6A  EF3F  F00D         	goto	i2u332_41
  9819  001A6E  503F               	movf	(i2dtoa@i+1)^0,w,c
  9820  001A70  E108               	bnz	i2u332_40
  9821  001A72  043E               	decf	i2dtoa@i^0,w,c
  9822  001A74  A0D8               	btfss	status,0,c
  9823  001A76  EF3F  F00D         	goto	i2u332_41
  9824  001A7A  EF41  F00D         	goto	i2u332_40
  9825  001A7E                     i2u332_41:
  9826  001A7E  EF72  F00D         	goto	i2l3285
  9827  001A82                     i2u332_40:
  9828  001A82  5036               	movf	i2dtoa@n^0,w,c
  9829  001A84  1037               	iorwf	(i2dtoa@n+1)^0,w,c
  9830  001A86  1038               	iorwf	(i2dtoa@n+2)^0,w,c
  9831  001A88  1039               	iorwf	(i2dtoa@n+3)^0,w,c
  9832  001A8A  103A               	iorwf	(i2dtoa@n+4)^0,w,c
  9833  001A8C  103B               	iorwf	(i2dtoa@n+5)^0,w,c
  9834  001A8E  103C               	iorwf	(i2dtoa@n+6)^0,w,c
  9835  001A90  103D               	iorwf	(i2dtoa@n+7)^0,w,c
  9836  001A92  A4D8               	btfss	status,2,c
  9837  001A94  EF4E  F00D         	goto	i2u333_41
  9838  001A98  EF50  F00D         	goto	i2u333_40
  9839  001A9C                     i2u333_41:
  9840  001A9C  EFB8  F00C         	goto	i2l3265
  9841  001AA0                     i2u333_40:
  9842  001AA0  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  9843  001AA2  EF5D  F00D         	goto	i2u334_40
  9844  001AA6  5031               	movf	(i2dtoa@p+1)^0,w,c
  9845  001AA8  E106               	bnz	i2u334_41
  9846  001AAA  0430               	decf	i2dtoa@p^0,w,c
  9847  001AAC  B0D8               	btfsc	status,0,c
  9848  001AAE  EF5B  F00D         	goto	i2u334_41
  9849  001AB2  EF5D  F00D         	goto	i2u334_40
  9850  001AB6                     i2u334_41:
  9851  001AB6  EFB8  F00C         	goto	i2l3265
  9852  001ABA                     i2u334_40:
  9853  001ABA  BE33               	btfsc	(i2dtoa@w+1)^0,7,c
  9854  001ABC  EF68  F00D         	goto	i2u335_41
  9855  001AC0  5033               	movf	(i2dtoa@w+1)^0,w,c
  9856  001AC2  E108               	bnz	i2u335_40
  9857  001AC4  0432               	decf	i2dtoa@w^0,w,c
  9858  001AC6  A0D8               	btfss	status,0,c
  9859  001AC8  EF68  F00D         	goto	i2u335_41
  9860  001ACC  EF6A  F00D         	goto	i2u335_40
  9861  001AD0                     i2u335_41:
  9862  001AD0  EF72  F00D         	goto	i2l3285
  9863  001AD4                     i2u335_40:
  9864  001AD4  0100               	movlb	0	; () banked
  9865  001AD6  B3CC               	btfsc	_flags& (0+255),1,b
  9866  001AD8  EF70  F00D         	goto	i2u336_41
  9867  001ADC  EF72  F00D         	goto	i2u336_40
  9868  001AE0                     i2u336_41:
  9869  001AE0  EFB8  F00C         	goto	i2l3265
  9870  001AE4                     i2u336_40:
  9871  001AE4                     i2l3285:
  9872                           
  9873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9874  001AE4  5034               	movf	i2dtoa@s^0,w,c
  9875  001AE6  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  9876  001AE8  A4D8               	btfss	status,2,c
  9877  001AEA  EF79  F00D         	goto	i2u337_41
  9878  001AEE  EF7B  F00D         	goto	i2u337_40
  9879  001AF2                     i2u337_41:
  9880  001AF2  EF83  F00D         	goto	i2l3289
  9881  001AF6                     i2u337_40:
  9882  001AF6  0100               	movlb	0	; () banked
  9883  001AF8  A5CC               	btfss	_flags& (0+255),2,b
  9884  001AFA  EF81  F00D         	goto	i2u338_41
  9885  001AFE  EF83  F00D         	goto	i2u338_40
  9886  001B02                     i2u338_41:
  9887  001B02  EFA1  F00D         	goto	i2l3299
  9888  001B06                     i2u338_40:
  9889  001B06                     i2l3289:
  9890                           
  9891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  9892  001B06  063E               	decf	i2dtoa@i^0,f,c
  9893  001B08  A0D8               	btfss	status,0,c
  9894  001B0A  063F               	decf	(i2dtoa@i+1)^0,f,c
  9895  001B0C                     
  9896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9897  001B0C  5034               	movf	i2dtoa@s^0,w,c
  9898  001B0E  1035               	iorwf	(i2dtoa@s+1)^0,w,c
  9899  001B10  A4D8               	btfss	status,2,c
  9900  001B12  EF8D  F00D         	goto	i2u339_41
  9901  001B16  EF8F  F00D         	goto	i2u339_40
  9902  001B1A                     i2u339_41:
  9903  001B1A  EF95  F00D         	goto	i2l3295
  9904  001B1E                     i2u339_40:
  9905  001B1E  0E00               	movlw	0
  9906  001B20  6E2F               	movwf	(i2_dtoa$962+1)^0,c
  9907  001B22  0E2B               	movlw	43
  9908  001B24  6E2E               	movwf	i2_dtoa$962^0,c
  9909  001B26  EF99  F00D         	goto	i2l3297
  9910  001B2A                     i2l3295:
  9911  001B2A  0E00               	movlw	0
  9912  001B2C  6E2F               	movwf	(i2_dtoa$962+1)^0,c
  9913  001B2E  0E2D               	movlw	45
  9914  001B30  6E2E               	movwf	i2_dtoa$962^0,c
  9915  001B32                     i2l3297:
  9916  001B32  0E42               	movlw	low _dbuf
  9917  001B34  243E               	addwf	i2dtoa@i^0,w,c
  9918  001B36  6ED9               	movwf	fsr2l,c
  9919  001B38  0E01               	movlw	high _dbuf
  9920  001B3A  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  9921  001B3C  6EDA               	movwf	fsr2h,c
  9922  001B3E  C02E  FFDF         	movff	i2_dtoa$962,indf2
  9923  001B42                     i2l3299:
  9924                           
  9925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9926  001B42  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  9927  001B46  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  9928  001B4A  0E42               	movlw	low _dbuf
  9929  001B4C  243E               	addwf	i2dtoa@i^0,w,c
  9930  001B4E  6E13               	movwf	i2pad@buf^0,c
  9931  001B50  0E01               	movlw	high _dbuf
  9932  001B52  203F               	addwfc	(i2dtoa@i+1)^0,w,c
  9933  001B54  6E14               	movwf	(i2pad@buf+1)^0,c
  9934  001B56  C032  F015         	movff	i2dtoa@w,i2pad@p
  9935  001B5A  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  9936  001B5E  ECAC  F019         	call	i2_pad	;wreg free
  9937  001B62  C011  F01C         	movff	?i2_pad,?i2_dtoa
  9938  001B66  C012  F01D         	movff	?i2_pad+1,?i2_dtoa+1
  9939  001B6A  0012               	return		;funcret
  9940  001B6C                     __end_ofi2_dtoa:
  9941                           	callstack 0
  9942                           
  9943 ;; *************** function i2_pad *****************
  9944 ;; Defined at:
  9945 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9948 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  9949 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9950 ;;		 -> dbuf(32), 
  9951 ;;  p               2   20[COMRAM] int 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  w               2   25[COMRAM] int 
  9954 ;;  i               2   23[COMRAM] int 
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  2   16[COMRAM] int 
  9957 ;; Registers used:
  9958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9964 ;;      Params:         6       0       0       0       0       0       0       0       0
  9965 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9966 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9967 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9968 ;;Total ram usage:       11 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    3
  9971 ;; This function calls:
  9972 ;;		i2_fputc
  9973 ;;		i2_fputs
  9974 ;;		i2_strlen
  9975 ;; This function is called by:
  9976 ;;		i2_dtoa
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text49
  9981  003358                     __ptext49:
  9982                           	callstack 0
  9983  003358                     i2_pad:
  9984                           	callstack 12
  9985  003358                     
  9986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9987  003358  0100               	movlb	0	; () banked
  9988  00335A  A1CC               	btfss	_flags& (0+255),0,b
  9989  00335C  EFB2  F019         	goto	i2u295_41
  9990  003360  EFB4  F019         	goto	i2u295_40
  9991  003364                     i2u295_41:
  9992  003364  EFBE  F019         	goto	i2l3101
  9993  003368                     i2u295_40:
  9994  003368                     
  9995                           ; BSR set to: 0
  9996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9997  003368  C013  F00A         	movff	i2pad@buf,i2fputs@s
  9998  00336C  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  9999  003370  C011  F00C         	movff	i2pad@fp,i2fputs@fp
 10000  003374  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
 10001  003378  EC1E  F01E         	call	i2_fputs	;wreg free
 10002  00337C                     i2l3101:
 10003                           
 10004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 10005  00337C  BE16               	btfsc	(i2pad@p+1)^0,7,c
 10006  00337E  EFC3  F019         	goto	i2u296_41
 10007  003382  EFC5  F019         	goto	i2u296_40
 10008  003386                     i2u296_41:
 10009  003386  EFCB  F019         	goto	i2l3105
 10010  00338A                     i2u296_40:
 10011  00338A  C015  F01A         	movff	i2pad@p,i2pad@w
 10012  00338E  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
 10013  003392  EFCF  F019         	goto	i2l1055
 10014  003396                     i2l3105:
 10015  003396  0E00               	movlw	0
 10016  003398  6E1B               	movwf	(i2pad@w+1)^0,c
 10017  00339A  0E00               	movlw	0
 10018  00339C  6E1A               	movwf	i2pad@w^0,c
 10019  00339E                     i2l1055:
 10020                           
 10021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10022  00339E  0E00               	movlw	0
 10023  0033A0  6E19               	movwf	(i2pad@i+1)^0,c
 10024  0033A2  0E00               	movlw	0
 10025  0033A4  6E18               	movwf	i2pad@i^0,c
 10026                           
 10027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10028  0033A6  EFE1  F019         	goto	i2l3111
 10029  0033AA                     i2l3107:
 10030                           
 10031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10032  0033AA  0E00               	movlw	0
 10033  0033AC  6E02               	movwf	(i2fputc@c+1)^0,c
 10034  0033AE  0E20               	movlw	32
 10035  0033B0  6E01               	movwf	i2fputc@c^0,c
 10036  0033B2  C011  F003         	movff	i2pad@fp,i2fputc@fp
 10037  0033B6  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
 10038  0033BA  ECE4  F018         	call	i2_fputc	;wreg free
 10039  0033BE                     
 10040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10041  0033BE  4A18               	infsnz	i2pad@i^0,f,c
 10042  0033C0  2A19               	incf	(i2pad@i+1)^0,f,c
 10043  0033C2                     i2l3111:
 10044                           
 10045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10046  0033C2  501A               	movf	i2pad@w^0,w,c
 10047  0033C4  5C18               	subwf	i2pad@i^0,w,c
 10048  0033C6  5019               	movf	(i2pad@i+1)^0,w,c
 10049  0033C8  0A80               	xorlw	128
 10050  0033CA  6E17               	movwf	??i2_pad^0,c
 10051  0033CC  501B               	movf	(i2pad@w+1)^0,w,c
 10052  0033CE  0A80               	xorlw	128
 10053  0033D0  5817               	subwfb	??i2_pad^0,w,c
 10054  0033D2  A0D8               	btfss	status,0,c
 10055  0033D4  EFEE  F019         	goto	i2u297_41
 10056  0033D8  EFF0  F019         	goto	i2u297_40
 10057  0033DC                     i2u297_41:
 10058  0033DC  EFD5  F019         	goto	i2l3107
 10059  0033E0                     i2u297_40:
 10060  0033E0                     
 10061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10062  0033E0  0100               	movlb	0	; () banked
 10063  0033E2  B1CC               	btfsc	_flags& (0+255),0,b
 10064  0033E4  EFF6  F019         	goto	i2u298_41
 10065  0033E8  EFF8  F019         	goto	i2u298_40
 10066  0033EC                     i2u298_41:
 10067  0033EC  EF02  F01A         	goto	i2l3115
 10068  0033F0                     i2u298_40:
 10069  0033F0                     
 10070                           ; BSR set to: 0
 10071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10072  0033F0  C013  F00A         	movff	i2pad@buf,i2fputs@s
 10073  0033F4  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
 10074  0033F8  C011  F00C         	movff	i2pad@fp,i2fputs@fp
 10075  0033FC  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
 10076  003400  EC1E  F01E         	call	i2_fputs	;wreg free
 10077  003404                     i2l3115:
 10078                           
 10079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 10080  003404  C013  F001         	movff	i2pad@buf,i2strlen@s
 10081  003408  C014  F002         	movff	i2pad@buf+1,i2strlen@s+1
 10082  00340C  ECF7  F01E         	call	i2_strlen	;wreg free
 10083  003410  501A               	movf	i2pad@w^0,w,c
 10084  003412  2401               	addwf	?i2_strlen^0,w,c
 10085  003414  6E11               	movwf	?i2_pad^0,c
 10086  003416  501B               	movf	(i2pad@w+1)^0,w,c
 10087  003418  2002               	addwfc	(?i2_strlen+1)^0,w,c
 10088  00341A  6E12               	movwf	(?i2_pad+1)^0,c
 10089  00341C  0012               	return		;funcret
 10090  00341E                     __end_ofi2_pad:
 10091                           	callstack 0
 10092                           
 10093 ;; *************** function i2_strlen *****************
 10094 ;; Defined at:
 10095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10098 ;;		 -> dbuf(32), text(40), 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10101 ;;		 -> dbuf(32), text(40), 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  2    0[COMRAM] unsigned int 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10111 ;;      Params:         2       0       0       0       0       0       0       0       0
 10112 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10113 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10114 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10115 ;;Total ram usage:        4 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		i2_start
 10121 ;;		i2_pad
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text50
 10126  003DEE                     __ptext50:
 10127                           	callstack 0
 10128  003DEE                     i2_strlen:
 10129                           	callstack 18
 10130  003DEE  C001  F003         	movff	i2strlen@s,i2strlen@a
 10131  003DF2  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 10132  003DF6  EFFF  F01E         	goto	i2l2905
 10133  003DFA                     i2l2903:
 10134  003DFA  4A01               	infsnz	i2strlen@s^0,f,c
 10135  003DFC  2A02               	incf	(i2strlen@s+1)^0,f,c
 10136  003DFE                     i2l2905:
 10137  003DFE  C001  FFD9         	movff	i2strlen@s,fsr2l
 10138  003E02  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 10139  003E06  50DF               	movf	indf2,w,c
 10140  003E08  A4D8               	btfss	status,2,c
 10141  003E0A  EF09  F01F         	goto	i2u263_41
 10142  003E0E  EF0B  F01F         	goto	i2u263_40
 10143  003E12                     i2u263_41:
 10144  003E12  EFFD  F01E         	goto	i2l2903
 10145  003E16                     i2u263_40:
 10146  003E16  5003               	movf	i2strlen@a^0,w,c
 10147  003E18  5C01               	subwf	i2strlen@s^0,w,c
 10148  003E1A  6E01               	movwf	?i2_strlen^0,c
 10149  003E1C  5004               	movf	(i2strlen@a+1)^0,w,c
 10150  003E1E  5802               	subwfb	(i2strlen@s+1)^0,w,c
 10151  003E20  6E02               	movwf	(?i2_strlen+1)^0,c
 10152  003E22  0012               	return		;funcret
 10153  003E24                     __end_ofi2_strlen:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function i2_fputs *****************
 10157 ;; Defined at:
 10158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10161 ;;		 -> dbuf(32), 
 10162 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10163 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  i               2   14[COMRAM] int 
 10166 ;;  c               1   13[COMRAM] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  2    9[COMRAM] int 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10176 ;;      Params:         4       0       0       0       0       0       0       0       0
 10177 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10179 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10180 ;;Total ram usage:        7 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    2
 10183 ;; This function calls:
 10184 ;;		i2_fputc
 10185 ;; This function is called by:
 10186 ;;		i2_pad
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text51
 10191  003C3C                     __ptext51:
 10192                           	callstack 0
 10193  003C3C                     i2_fputs:
 10194                           	callstack 12
 10195  003C3C  0E00               	movlw	0
 10196  003C3E  6E10               	movwf	(i2fputs@i+1)^0,c
 10197  003C40  0E00               	movlw	0
 10198  003C42  6E0F               	movwf	i2fputs@i^0,c
 10199  003C44  EF2F  F01E         	goto	i2l2899
 10200  003C48                     i2l2895:
 10201  003C48  C00E  F001         	movff	i2fputs@c,i2fputc@c
 10202  003C4C  6A02               	clrf	(i2fputc@c+1)^0,c
 10203  003C4E  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
 10204  003C52  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
 10205  003C56  ECE4  F018         	call	i2_fputc	;wreg free
 10206  003C5A  4A0F               	infsnz	i2fputs@i^0,f,c
 10207  003C5C  2A10               	incf	(i2fputs@i+1)^0,f,c
 10208  003C5E                     i2l2899:
 10209  003C5E  500F               	movf	i2fputs@i^0,w,c
 10210  003C60  240A               	addwf	i2fputs@s^0,w,c
 10211  003C62  6ED9               	movwf	fsr2l,c
 10212  003C64  5010               	movf	(i2fputs@i+1)^0,w,c
 10213  003C66  200B               	addwfc	(i2fputs@s+1)^0,w,c
 10214  003C68  6EDA               	movwf	fsr2h,c
 10215  003C6A  50DF               	movf	indf2,w,c
 10216  003C6C  6E0E               	movwf	i2fputs@c^0,c
 10217  003C6E  500E               	movf	i2fputs@c^0,w,c
 10218  003C70  A4D8               	btfss	status,2,c
 10219  003C72  EF3D  F01E         	goto	i2u262_41
 10220  003C76  EF3F  F01E         	goto	i2u262_40
 10221  003C7A                     i2u262_41:
 10222  003C7A  EF24  F01E         	goto	i2l2895
 10223  003C7E                     i2u262_40:
 10224  003C7E  0012               	return		;funcret
 10225  003C80                     __end_ofi2_fputs:
 10226                           	callstack 0
 10227                           
 10228 ;; *************** function i2_abs *****************
 10229 ;; Defined at:
 10230 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  a               2   18[COMRAM] int 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;		None
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  2   18[COMRAM] int 
 10237 ;; Registers used:
 10238 ;;		wreg, status,2, status,0
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10244 ;;      Params:         2       0       0       0       0       0       0       0       0
 10245 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10246 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10247 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10248 ;;Total ram usage:        4 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; This function calls:
 10251 ;;		Nothing
 10252 ;; This function is called by:
 10253 ;;		i2_dtoa
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           	psect	text52
 10258  003D04                     __ptext52:
 10259                           	callstack 0
 10260  003D04                     i2_abs:
 10261                           	callstack 15
 10262  003D04  BE14               	btfsc	(i2abs@a+1)^0,7,c
 10263  003D06  EF8F  F01E         	goto	i2u299_40
 10264  003D0A  5014               	movf	(i2abs@a+1)^0,w,c
 10265  003D0C  E106               	bnz	i2u299_41
 10266  003D0E  0413               	decf	i2abs@a^0,w,c
 10267  003D10  B0D8               	btfsc	status,0,c
 10268  003D12  EF8D  F01E         	goto	i2u299_41
 10269  003D16  EF8F  F01E         	goto	i2u299_40
 10270  003D1A                     i2u299_41:
 10271  003D1A  EF9D  F01E         	goto	i2l1121
 10272  003D1E                     i2u299_40:
 10273  003D1E  C013  F015         	movff	i2abs@a,??i2_abs
 10274  003D22  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 10275  003D26  1E15               	comf	??i2_abs^0,f,c
 10276  003D28  1E16               	comf	(??i2_abs+1)^0,f,c
 10277  003D2A  4A15               	infsnz	??i2_abs^0,f,c
 10278  003D2C  2A16               	incf	(??i2_abs+1)^0,f,c
 10279  003D2E  C015  F013         	movff	??i2_abs,?i2_abs
 10280  003D32  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 10281  003D36  EFA1  F01E         	goto	i2l1124
 10282  003D3A                     i2l1121:
 10283  003D3A  C013  F013         	movff	i2abs@a,?i2_abs
 10284  003D3E  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 10285  003D42                     i2l1124:
 10286  003D42  0012               	return		;funcret
 10287  003D44                     __end_ofi2_abs:
 10288                           	callstack 0
 10289                           
 10290 ;; *************** function i2___aomod *****************
 10291 ;; Defined at:
 10292 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  dividend        8    0[COMRAM] long long 
 10295 ;;  divisor         8    8[COMRAM] long long 
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;  sign            1   17[COMRAM] unsigned char 
 10298 ;;  counter         1   16[COMRAM] unsigned char 
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  8    0[COMRAM] long long 
 10301 ;; Registers used:
 10302 ;;		wreg, status,2, status,0
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10308 ;;      Params:        16       0       0       0       0       0       0       0       0
 10309 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10310 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10311 ;;      Totals:        18       0       0       0       0       0       0       0       0
 10312 ;;Total ram usage:       18 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; This function calls:
 10315 ;;		Nothing
 10316 ;; This function is called by:
 10317 ;;		i2_dtoa
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text53
 10322  002A22                     __ptext53:
 10323                           	callstack 0
 10324  002A22                     i2___aomod:
 10325                           	callstack 15
 10326  002A22  0E00               	movlw	0
 10327  002A24  6E12               	movwf	i2___aomod@sign^0,c
 10328  002A26  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
 10329  002A28  EF1A  F015         	goto	i2u289_40
 10330  002A2C  EF18  F015         	goto	i2u289_41
 10331  002A30                     i2u289_41:
 10332  002A30  EF2C  F015         	goto	i2l3069
 10333  002A34                     i2u289_40:
 10334  002A34  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 10335  002A36  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 10336  002A38  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 10337  002A3A  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 10338  002A3C  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 10339  002A3E  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 10340  002A40  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 10341  002A42  6C01               	negf	i2___aomod@dividend^0,c
 10342  002A44  0E00               	movlw	0
 10343  002A46  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 10344  002A48  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 10345  002A4A  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 10346  002A4C  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 10347  002A4E  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 10348  002A50  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 10349  002A52  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 10350  002A54  0E01               	movlw	1
 10351  002A56  6E12               	movwf	i2___aomod@sign^0,c
 10352  002A58                     i2l3069:
 10353  002A58  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
 10354  002A5A  EF33  F015         	goto	i2u290_40
 10355  002A5E  EF31  F015         	goto	i2u290_41
 10356  002A62                     i2u290_41:
 10357  002A62  EF43  F015         	goto	i2l3073
 10358  002A66                     i2u290_40:
 10359  002A66  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 10360  002A68  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 10361  002A6A  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 10362  002A6C  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 10363  002A6E  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 10364  002A70  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 10365  002A72  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 10366  002A74  6C09               	negf	i2___aomod@divisor^0,c
 10367  002A76  0E00               	movlw	0
 10368  002A78  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 10369  002A7A  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 10370  002A7C  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 10371  002A7E  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 10372  002A80  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 10373  002A82  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 10374  002A84  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 10375  002A86                     i2l3073:
 10376  002A86  5009               	movf	i2___aomod@divisor^0,w,c
 10377  002A88  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 10378  002A8A  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 10379  002A8C  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 10380  002A8E  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 10381  002A90  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 10382  002A92  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 10383  002A94  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 10384  002A96  B4D8               	btfsc	status,2,c
 10385  002A98  EF50  F015         	goto	i2u291_41
 10386  002A9C  EF52  F015         	goto	i2u291_40
 10387  002AA0                     i2u291_41:
 10388  002AA0  EF9A  F015         	goto	i2l3089
 10389  002AA4                     i2u291_40:
 10390  002AA4  0E01               	movlw	1
 10391  002AA6  6E11               	movwf	i2___aomod@counter^0,c
 10392  002AA8  EF60  F015         	goto	i2l3079
 10393  002AAC                     i2l3077:
 10394  002AAC  90D8               	bcf	status,0,c
 10395  002AAE  3609               	rlcf	i2___aomod@divisor^0,f,c
 10396  002AB0  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 10397  002AB2  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 10398  002AB4  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 10399  002AB6  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 10400  002AB8  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 10401  002ABA  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 10402  002ABC  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 10403  002ABE  2A11               	incf	i2___aomod@counter^0,f,c
 10404  002AC0                     i2l3079:
 10405  002AC0  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 10406  002AC2  EF65  F015         	goto	i2u292_41
 10407  002AC6  EF67  F015         	goto	i2u292_40
 10408  002ACA                     i2u292_41:
 10409  002ACA  EF56  F015         	goto	i2l3077
 10410  002ACE                     i2u292_40:
 10411  002ACE                     i2l3081:
 10412  002ACE  5009               	movf	i2___aomod@divisor^0,w,c
 10413  002AD0  5C01               	subwf	i2___aomod@dividend^0,w,c
 10414  002AD2  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 10415  002AD4  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 10416  002AD6  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 10417  002AD8  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 10418  002ADA  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 10419  002ADC  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 10420  002ADE  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 10421  002AE0  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 10422  002AE2  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 10423  002AE4  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 10424  002AE6  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 10425  002AE8  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 10426  002AEA  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 10427  002AEC  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 10428  002AEE  A0D8               	btfss	status,0,c
 10429  002AF0  EF7C  F015         	goto	i2u293_41
 10430  002AF4  EF7E  F015         	goto	i2u293_40
 10431  002AF8                     i2u293_41:
 10432  002AF8  EF8E  F015         	goto	i2l3085
 10433  002AFC                     i2u293_40:
 10434  002AFC  5009               	movf	i2___aomod@divisor^0,w,c
 10435  002AFE  5E01               	subwf	i2___aomod@dividend^0,f,c
 10436  002B00  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 10437  002B02  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 10438  002B04  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 10439  002B06  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 10440  002B08  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 10441  002B0A  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 10442  002B0C  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 10443  002B0E  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 10444  002B10  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 10445  002B12  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 10446  002B14  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 10447  002B16  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 10448  002B18  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 10449  002B1A  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 10450  002B1C                     i2l3085:
 10451  002B1C  90D8               	bcf	status,0,c
 10452  002B1E  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 10453  002B20  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 10454  002B22  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 10455  002B24  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 10456  002B26  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 10457  002B28  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 10458  002B2A  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 10459  002B2C  3209               	rrcf	i2___aomod@divisor^0,f,c
 10460  002B2E  2E11               	decfsz	i2___aomod@counter^0,f,c
 10461  002B30  EF67  F015         	goto	i2l3081
 10462  002B34                     i2l3089:
 10463  002B34  5012               	movf	i2___aomod@sign^0,w,c
 10464  002B36  B4D8               	btfsc	status,2,c
 10465  002B38  EFA0  F015         	goto	i2u294_41
 10466  002B3C  EFA2  F015         	goto	i2u294_40
 10467  002B40                     i2u294_41:
 10468  002B40  EFB2  F015         	goto	i2l3093
 10469  002B44                     i2u294_40:
 10470  002B44  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 10471  002B46  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 10472  002B48  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 10473  002B4A  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 10474  002B4C  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 10475  002B4E  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 10476  002B50  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 10477  002B52  6C01               	negf	i2___aomod@dividend^0,c
 10478  002B54  0E00               	movlw	0
 10479  002B56  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 10480  002B58  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 10481  002B5A  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 10482  002B5C  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 10483  002B5E  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 10484  002B60  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 10485  002B62  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 10486  002B64                     i2l3093:
 10487  002B64  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 10488  002B68  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 10489  002B6C  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 10490  002B70  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 10491  002B74  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 10492  002B78  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 10493  002B7C  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 10494  002B80  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 10495  002B84  0012               	return		;funcret
 10496  002B86                     __end_ofi2___aomod:
 10497                           	callstack 0
 10498                           
 10499 ;; *************** function i2___aodiv *****************
 10500 ;; Defined at:
 10501 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  dividend        8    0[COMRAM] long long 
 10504 ;;  divisor         8    8[COMRAM] long long 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  quotient        8   18[COMRAM] long long 
 10507 ;;  sign            1   17[COMRAM] unsigned char 
 10508 ;;  counter         1   16[COMRAM] unsigned char 
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  8    0[COMRAM] long long 
 10511 ;; Registers used:
 10512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10518 ;;      Params:        16       0       0       0       0       0       0       0       0
 10519 ;;      Locals:        10       0       0       0       0       0       0       0       0
 10520 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10521 ;;      Totals:        26       0       0       0       0       0       0       0       0
 10522 ;;Total ram usage:       26 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		i2_dtoa
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text54
 10532  002734                     __ptext54:
 10533                           	callstack 0
 10534  002734                     i2___aodiv:
 10535                           	callstack 15
 10536  002734  0E00               	movlw	0
 10537  002736  6E12               	movwf	i2___aodiv@sign^0,c
 10538  002738  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
 10539  00273A  EFA3  F013         	goto	i2u282_40
 10540  00273E  EFA1  F013         	goto	i2u282_41
 10541  002742                     i2u282_41:
 10542  002742  EFB5  F013         	goto	i2l3025
 10543  002746                     i2u282_40:
 10544  002746  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 10545  002748  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 10546  00274A  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 10547  00274C  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 10548  00274E  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 10549  002750  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 10550  002752  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 10551  002754  6C09               	negf	i2___aodiv@divisor^0,c
 10552  002756  0E00               	movlw	0
 10553  002758  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 10554  00275A  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 10555  00275C  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 10556  00275E  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 10557  002760  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 10558  002762  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 10559  002764  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 10560  002766  0E01               	movlw	1
 10561  002768  6E12               	movwf	i2___aodiv@sign^0,c
 10562  00276A                     i2l3025:
 10563  00276A  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
 10564  00276C  EFBC  F013         	goto	i2u283_40
 10565  002770  EFBA  F013         	goto	i2u283_41
 10566  002774                     i2u283_41:
 10567  002774  EFCE  F013         	goto	i2l3031
 10568  002778                     i2u283_40:
 10569  002778  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 10570  00277A  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 10571  00277C  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 10572  00277E  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 10573  002780  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 10574  002782  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 10575  002784  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 10576  002786  6C01               	negf	i2___aodiv@dividend^0,c
 10577  002788  0E00               	movlw	0
 10578  00278A  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 10579  00278C  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 10580  00278E  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 10581  002790  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 10582  002792  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 10583  002794  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 10584  002796  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 10585  002798  0E01               	movlw	1
 10586  00279A  1A12               	xorwf	i2___aodiv@sign^0,f,c
 10587  00279C                     i2l3031:
 10588  00279C  EE20  F013         	lfsr	2,i2___aodiv@quotient
 10589  0027A0  0E07               	movlw	7
 10590  0027A2                     i2u284_41:
 10591  0027A2  6ADE               	clrf	postinc2,c
 10592  0027A4  06E8               	decf	wreg,f,c
 10593  0027A6  E2FD               	bc	i2u284_41
 10594  0027A8  5009               	movf	i2___aodiv@divisor^0,w,c
 10595  0027AA  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 10596  0027AC  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 10597  0027AE  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 10598  0027B0  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 10599  0027B2  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 10600  0027B4  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 10601  0027B6  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 10602  0027B8  B4D8               	btfsc	status,2,c
 10603  0027BA  EFE1  F013         	goto	i2u285_41
 10604  0027BE  EFE3  F013         	goto	i2u285_40
 10605  0027C2                     i2u285_41:
 10606  0027C2  EF35  F014         	goto	i2l3053
 10607  0027C6                     i2u285_40:
 10608  0027C6  0E01               	movlw	1
 10609  0027C8  6E11               	movwf	i2___aodiv@counter^0,c
 10610  0027CA  EFF1  F013         	goto	i2l3039
 10611  0027CE                     i2l3037:
 10612  0027CE  90D8               	bcf	status,0,c
 10613  0027D0  3609               	rlcf	i2___aodiv@divisor^0,f,c
 10614  0027D2  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 10615  0027D4  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 10616  0027D6  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 10617  0027D8  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 10618  0027DA  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 10619  0027DC  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 10620  0027DE  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 10621  0027E0  2A11               	incf	i2___aodiv@counter^0,f,c
 10622  0027E2                     i2l3039:
 10623  0027E2  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 10624  0027E4  EFF6  F013         	goto	i2u286_41
 10625  0027E8  EFF8  F013         	goto	i2u286_40
 10626  0027EC                     i2u286_41:
 10627  0027EC  EFE7  F013         	goto	i2l3037
 10628  0027F0                     i2u286_40:
 10629  0027F0                     i2l3041:
 10630  0027F0  90D8               	bcf	status,0,c
 10631  0027F2  3613               	rlcf	i2___aodiv@quotient^0,f,c
 10632  0027F4  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 10633  0027F6  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 10634  0027F8  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 10635  0027FA  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 10636  0027FC  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 10637  0027FE  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 10638  002800  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 10639  002802  5009               	movf	i2___aodiv@divisor^0,w,c
 10640  002804  5C01               	subwf	i2___aodiv@dividend^0,w,c
 10641  002806  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 10642  002808  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 10643  00280A  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 10644  00280C  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 10645  00280E  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 10646  002810  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 10647  002812  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 10648  002814  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 10649  002816  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 10650  002818  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 10651  00281A  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 10652  00281C  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 10653  00281E  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 10654  002820  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 10655  002822  A0D8               	btfss	status,0,c
 10656  002824  EF16  F014         	goto	i2u287_41
 10657  002828  EF18  F014         	goto	i2u287_40
 10658  00282C                     i2u287_41:
 10659  00282C  EF29  F014         	goto	i2l3049
 10660  002830                     i2u287_40:
 10661  002830  5009               	movf	i2___aodiv@divisor^0,w,c
 10662  002832  5E01               	subwf	i2___aodiv@dividend^0,f,c
 10663  002834  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 10664  002836  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 10665  002838  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 10666  00283A  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 10667  00283C  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 10668  00283E  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 10669  002840  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 10670  002842  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 10671  002844  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 10672  002846  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 10673  002848  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 10674  00284A  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 10675  00284C  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 10676  00284E  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 10677  002850  8013               	bsf	i2___aodiv@quotient^0,0,c
 10678  002852                     i2l3049:
 10679  002852  90D8               	bcf	status,0,c
 10680  002854  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 10681  002856  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 10682  002858  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 10683  00285A  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 10684  00285C  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 10685  00285E  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 10686  002860  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 10687  002862  3209               	rrcf	i2___aodiv@divisor^0,f,c
 10688  002864  2E11               	decfsz	i2___aodiv@counter^0,f,c
 10689  002866  EFF8  F013         	goto	i2l3041
 10690  00286A                     i2l3053:
 10691  00286A  5012               	movf	i2___aodiv@sign^0,w,c
 10692  00286C  B4D8               	btfsc	status,2,c
 10693  00286E  EF3B  F014         	goto	i2u288_41
 10694  002872  EF3D  F014         	goto	i2u288_40
 10695  002876                     i2u288_41:
 10696  002876  EF4D  F014         	goto	i2l3057
 10697  00287A                     i2u288_40:
 10698  00287A  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 10699  00287C  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 10700  00287E  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 10701  002880  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 10702  002882  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 10703  002884  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 10704  002886  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 10705  002888  6C13               	negf	i2___aodiv@quotient^0,c
 10706  00288A  0E00               	movlw	0
 10707  00288C  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 10708  00288E  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 10709  002890  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 10710  002892  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 10711  002894  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 10712  002896  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 10713  002898  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 10714  00289A                     i2l3057:
 10715  00289A  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 10716  00289E  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 10717  0028A2  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 10718  0028A6  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 10719  0028AA  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 10720  0028AE  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 10721  0028B2  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 10722  0028B6  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 10723  0028BA  0012               	return		;funcret
 10724  0028BC                     __end_ofi2___aodiv:
 10725                           	callstack 0
 10726                           
 10727 ;; *************** function i2_ctoa *****************
 10728 ;; Defined at:
 10729 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 10732 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
 10733 ;;  c               1   11[COMRAM] unsigned char 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  w               2   15[COMRAM] int 
 10736 ;;  l               2   13[COMRAM] int 
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  2    9[COMRAM] int 
 10739 ;; Registers used:
 10740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10746 ;;      Params:         3       0       0       0       0       0       0       0       0
 10747 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10748 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10749 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10750 ;;Total ram usage:        8 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:    2
 10753 ;; This function calls:
 10754 ;;		i2_fputc
 10755 ;; This function is called by:
 10756 ;;		i2_vfpfcnvrt
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text55
 10761  002F5A                     __ptext55:
 10762                           	callstack 0
 10763  002F5A                     i2_ctoa:
 10764                           	callstack 14
 10765  002F5A                     
 10766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 10767  002F5A  0100               	movlb	0	; () banked
 10768  002F5C  51C8               	movf	_width& (0+255),w,b
 10769  002F5E  11C9               	iorwf	(_width+1)& (0+255),w,b
 10770  002F60  A4D8               	btfss	status,2,c
 10771  002F62  EFB5  F017         	goto	i2u320_41
 10772  002F66  EFB7  F017         	goto	i2u320_40
 10773  002F6A                     i2u320_41:
 10774  002F6A  EFBD  F017         	goto	i2l3217
 10775  002F6E                     i2u320_40:
 10776  002F6E                     
 10777                           ; BSR set to: 0
 10778  002F6E  C0C8  F010         	movff	_width,i2ctoa@w
 10779  002F72  C0C9  F011         	movff	_width+1,i2ctoa@w+1
 10780  002F76  EFC3  F017         	goto	i2l3219
 10781  002F7A                     i2l3217:
 10782                           
 10783                           ; BSR set to: 0
 10784  002F7A  0EFF               	movlw	255
 10785  002F7C  25C8               	addwf	_width& (0+255),w,b
 10786  002F7E  6E10               	movwf	i2ctoa@w^0,c
 10787  002F80  0EFF               	movlw	255
 10788  002F82  21C9               	addwfc	(_width+1)& (0+255),w,b
 10789  002F84  6E11               	movwf	(i2ctoa@w+1)^0,c
 10790  002F86                     i2l3219:
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 10794  002F86  A1CC               	btfss	_flags& (0+255),0,b
 10795  002F88  EFC8  F017         	goto	i2u321_41
 10796  002F8C  EFCA  F017         	goto	i2u321_40
 10797  002F90                     i2u321_41:
 10798  002F90  EFD3  F017         	goto	i2l3223
 10799  002F94                     i2u321_40:
 10800  002F94                     
 10801                           ; BSR set to: 0
 10802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 10803  002F94  C00C  F001         	movff	i2ctoa@c,i2fputc@c
 10804  002F98  6A02               	clrf	(i2fputc@c+1)^0,c
 10805  002F9A  C00A  F003         	movff	i2ctoa@fp,i2fputc@fp
 10806  002F9E  C00B  F004         	movff	i2ctoa@fp+1,i2fputc@fp+1
 10807  002FA2  ECE4  F018         	call	i2_fputc	;wreg free
 10808  002FA6                     i2l3223:
 10809                           
 10810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 10811  002FA6  BE11               	btfsc	(i2ctoa@w+1)^0,7,c
 10812  002FA8  EFD8  F017         	goto	i2u322_41
 10813  002FAC  EFDA  F017         	goto	i2u322_40
 10814  002FB0                     i2u322_41:
 10815  002FB0  EFDC  F017         	goto	i2l3227
 10816  002FB4                     i2u322_40:
 10817  002FB4  EFE0  F017         	goto	i2l1071
 10818  002FB8                     i2l3227:
 10819  002FB8  0E00               	movlw	0
 10820  002FBA  6E11               	movwf	(i2ctoa@w+1)^0,c
 10821  002FBC  0E00               	movlw	0
 10822  002FBE  6E10               	movwf	i2ctoa@w^0,c
 10823  002FC0                     i2l1071:
 10824                           
 10825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 10826  002FC0  0E00               	movlw	0
 10827  002FC2  6E0F               	movwf	(i2ctoa@l+1)^0,c
 10828  002FC4  0E00               	movlw	0
 10829  002FC6  6E0E               	movwf	i2ctoa@l^0,c
 10830                           
 10831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10832  002FC8  EFF2  F017         	goto	i2l3233
 10833  002FCC                     i2l3229:
 10834                           
 10835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 10836  002FCC  0E00               	movlw	0
 10837  002FCE  6E02               	movwf	(i2fputc@c+1)^0,c
 10838  002FD0  0E20               	movlw	32
 10839  002FD2  6E01               	movwf	i2fputc@c^0,c
 10840  002FD4  C00A  F003         	movff	i2ctoa@fp,i2fputc@fp
 10841  002FD8  C00B  F004         	movff	i2ctoa@fp+1,i2fputc@fp+1
 10842  002FDC  ECE4  F018         	call	i2_fputc	;wreg free
 10843  002FE0                     
 10844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
 10845  002FE0  4A0E               	infsnz	i2ctoa@l^0,f,c
 10846  002FE2  2A0F               	incf	(i2ctoa@l+1)^0,f,c
 10847  002FE4                     i2l3233:
 10848                           
 10849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10850  002FE4  5010               	movf	i2ctoa@w^0,w,c
 10851  002FE6  5C0E               	subwf	i2ctoa@l^0,w,c
 10852  002FE8  500F               	movf	(i2ctoa@l+1)^0,w,c
 10853  002FEA  0A80               	xorlw	128
 10854  002FEC  6E0D               	movwf	??i2_ctoa^0,c
 10855  002FEE  5011               	movf	(i2ctoa@w+1)^0,w,c
 10856  002FF0  0A80               	xorlw	128
 10857  002FF2  580D               	subwfb	??i2_ctoa^0,w,c
 10858  002FF4  A0D8               	btfss	status,0,c
 10859  002FF6  EFFF  F017         	goto	i2u323_41
 10860  002FFA  EF01  F018         	goto	i2u323_40
 10861  002FFE                     i2u323_41:
 10862  002FFE  EFE6  F017         	goto	i2l3229
 10863  003002                     i2u323_40:
 10864  003002                     
 10865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 10866  003002  0100               	movlb	0	; () banked
 10867  003004  B1CC               	btfsc	_flags& (0+255),0,b
 10868  003006  EF07  F018         	goto	i2u324_41
 10869  00300A  EF09  F018         	goto	i2u324_40
 10870  00300E                     i2u324_41:
 10871  00300E  EF12  F018         	goto	i2l3237
 10872  003012                     i2u324_40:
 10873  003012                     
 10874                           ; BSR set to: 0
 10875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 10876  003012  C00C  F001         	movff	i2ctoa@c,i2fputc@c
 10877  003016  6A02               	clrf	(i2fputc@c+1)^0,c
 10878  003018  C00A  F003         	movff	i2ctoa@fp,i2fputc@fp
 10879  00301C  C00B  F004         	movff	i2ctoa@fp+1,i2fputc@fp+1
 10880  003020  ECE4  F018         	call	i2_fputc	;wreg free
 10881  003024                     i2l3237:
 10882                           
 10883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 10884  003024  0E01               	movlw	1
 10885  003026  240E               	addwf	i2ctoa@l^0,w,c
 10886  003028  6E0A               	movwf	?i2_ctoa^0,c
 10887  00302A  0E00               	movlw	0
 10888  00302C  200F               	addwfc	(i2ctoa@l+1)^0,w,c
 10889  00302E  6E0B               	movwf	(?i2_ctoa+1)^0,c
 10890  003030  0012               	return		;funcret
 10891  003032                     __end_ofi2_ctoa:
 10892                           	callstack 0
 10893                           
 10894 ;; *************** function i2_fputc *****************
 10895 ;; Defined at:
 10896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;  c               2    0[COMRAM] int 
 10899 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10900 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  2    0[COMRAM] int 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10912 ;;      Params:         4       0       0       0       0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10914 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10915 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10916 ;;Total ram usage:        9 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    1
 10919 ;; This function calls:
 10920 ;;		i2_putch
 10921 ;; This function is called by:
 10922 ;;		i2_pad
 10923 ;;		i2_ctoa
 10924 ;;		i2_vfpfcnvrt
 10925 ;;		i2_fputs
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text56
 10930  0031C8                     __ptext56:
 10931                           	callstack 0
 10932  0031C8                     i2_fputc:
 10933                           	callstack 15
 10934  0031C8  5003               	movf	i2fputc@fp^0,w,c
 10935  0031CA  1004               	iorwf	(i2fputc@fp+1)^0,w,c
 10936  0031CC  B4D8               	btfsc	status,2,c
 10937  0031CE  EFEB  F018         	goto	i2u256_41
 10938  0031D2  EFED  F018         	goto	i2u256_40
 10939  0031D6                     i2u256_41:
 10940  0031D6  EFF6  F018         	goto	i2l2865
 10941  0031DA                     i2u256_40:
 10942  0031DA  5003               	movf	i2fputc@fp^0,w,c
 10943  0031DC  1004               	iorwf	(i2fputc@fp+1)^0,w,c
 10944  0031DE  A4D8               	btfss	status,2,c
 10945  0031E0  EFF4  F018         	goto	i2u257_41
 10946  0031E4  EFF6  F018         	goto	i2u257_40
 10947  0031E8                     i2u257_41:
 10948  0031E8  EFFB  F018         	goto	i2l2867
 10949  0031EC                     i2u257_40:
 10950  0031EC                     i2l2865:
 10951  0031EC  5001               	movf	i2fputc@c^0,w,c
 10952  0031EE  EC9D  F01F         	call	i2_putch
 10953  0031F2  EF48  F019         	goto	i2l1136
 10954  0031F6                     i2l2867:
 10955  0031F6  EE20 F004          	lfsr	2,4
 10956  0031FA  5003               	movf	i2fputc@fp^0,w,c
 10957  0031FC  26D9               	addwf	fsr2l,f,c
 10958  0031FE  5004               	movf	(i2fputc@fp+1)^0,w,c
 10959  003200  22DA               	addwfc	fsr2h,f,c
 10960  003202  50DE               	movf	postinc2,w,c
 10961  003204  10DE               	iorwf	postinc2,w,c
 10962  003206  B4D8               	btfsc	status,2,c
 10963  003208  EF08  F019         	goto	i2u258_41
 10964  00320C  EF0A  F019         	goto	i2u258_40
 10965  003210                     i2u258_41:
 10966  003210  EF25  F019         	goto	i2l2871
 10967  003214                     i2u258_40:
 10968  003214  EE20 F004          	lfsr	2,4
 10969  003218  5003               	movf	i2fputc@fp^0,w,c
 10970  00321A  26D9               	addwf	fsr2l,f,c
 10971  00321C  5004               	movf	(i2fputc@fp+1)^0,w,c
 10972  00321E  22DA               	addwfc	fsr2h,f,c
 10973  003220  EE10 F002          	lfsr	1,2
 10974  003224  5003               	movf	i2fputc@fp^0,w,c
 10975  003226  26E1               	addwf	fsr1l,f,c
 10976  003228  5004               	movf	(i2fputc@fp+1)^0,w,c
 10977  00322A  22E2               	addwfc	fsr1h,f,c
 10978  00322C  50DE               	movf	postinc2,w,c
 10979  00322E  5CE6               	subwf	postinc1,w,c
 10980  003230  50E6               	movf	postinc1,w,c
 10981  003232  0A80               	xorlw	128
 10982  003234  6E09               	movwf	(??i2_fputc+4)^0,c
 10983  003236  50DE               	movf	postinc2,w,c
 10984  003238  0A80               	xorlw	128
 10985  00323A  5809               	subwfb	(??i2_fputc+4)^0,w,c
 10986  00323C  B0D8               	btfsc	status,0,c
 10987  00323E  EF23  F019         	goto	i2u259_41
 10988  003242  EF25  F019         	goto	i2u259_40
 10989  003246                     i2u259_41:
 10990  003246  EF48  F019         	goto	i2l1136
 10991  00324A                     i2u259_40:
 10992  00324A                     i2l2871:
 10993  00324A  EE20 F002          	lfsr	2,2
 10994  00324E  5003               	movf	i2fputc@fp^0,w,c
 10995  003250  26D9               	addwf	fsr2l,f,c
 10996  003252  5004               	movf	(i2fputc@fp+1)^0,w,c
 10997  003254  22DA               	addwfc	fsr2h,f,c
 10998  003256  CFDE F005          	movff	postinc2,??i2_fputc
 10999  00325A  CFDD F006          	movff	postdec2,??i2_fputc+1
 11000  00325E  C003  FFD9         	movff	i2fputc@fp,fsr2l
 11001  003262  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
 11002  003266  CFDE F007          	movff	postinc2,??i2_fputc+2
 11003  00326A  CFDD F008          	movff	postdec2,??i2_fputc+3
 11004  00326E  5005               	movf	??i2_fputc^0,w,c
 11005  003270  2407               	addwf	(??i2_fputc+2)^0,w,c
 11006  003272  6ED9               	movwf	fsr2l,c
 11007  003274  5006               	movf	(??i2_fputc+1)^0,w,c
 11008  003276  2008               	addwfc	(??i2_fputc+3)^0,w,c
 11009  003278  6EDA               	movwf	fsr2h,c
 11010  00327A  C001  FFDF         	movff	i2fputc@c,indf2
 11011  00327E  EE20 F002          	lfsr	2,2
 11012  003282  5003               	movf	i2fputc@fp^0,w,c
 11013  003284  26D9               	addwf	fsr2l,f,c
 11014  003286  5004               	movf	(i2fputc@fp+1)^0,w,c
 11015  003288  22DA               	addwfc	fsr2h,f,c
 11016  00328A  2ADE               	incf	postinc2,f,c
 11017  00328C  0E00               	movlw	0
 11018  00328E  22DD               	addwfc	postdec2,f,c
 11019  003290                     i2l1136:
 11020  003290  0012               	return		;funcret
 11021  003292                     __end_ofi2_fputc:
 11022                           	callstack 0
 11023                           
 11024 ;; *************** function i2_putch *****************
 11025 ;; Defined at:
 11026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  c               1    wreg     unsigned char 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;  c               1  (no storage) unsigned char 
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      void 
 11033 ;; Registers used:
 11034 ;;		wreg
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11040 ;;      Params:         0       0       0       0       0       0       0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11043 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11044 ;;Total ram usage:        0 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		i2_fputc
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           	psect	text57
 11054  003F3A                     __ptext57:
 11055                           	callstack 0
 11056  003F3A                     i2_putch:
 11057                           	callstack 15
 11058  003F3A  0012               	return		;funcret
 11059  003F3C                     __end_ofi2_putch:
 11060                           	callstack 0
 11061                           
 11062 ;; *************** function i2_map *****************
 11063 ;; Defined at:
 11064 ;;		line 376 in file "main_LCD_Servos_I2C_Serial.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  x               2   14[COMRAM] int 
 11067 ;;  In_Min          2   16[COMRAM] int 
 11068 ;;  In_Max          2   18[COMRAM] int 
 11069 ;;  Out_Min         2   20[COMRAM] int 
 11070 ;;  Out_Max         2   22[COMRAM] int 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;		None
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  2   14[COMRAM] int 
 11075 ;; Registers used:
 11076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11082 ;;      Params:        10       0       0       0       0       0       0       0       0
 11083 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11085 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11086 ;;Total ram usage:       10 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:    1
 11089 ;; This function calls:
 11090 ;;		i2___awdiv
 11091 ;;		i2___wmul
 11092 ;; This function is called by:
 11093 ;;		i2_mover_servo
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text58
 11098  003CC2                     __ptext58:
 11099                           	callstack 0
 11100  003CC2                     i2_map:
 11101                           	callstack 16
 11102  003CC2                     
 11103                           ;main_LCD_Servos_I2C_Serial.c: 377:     return ((x - In_Min) * ((Out_Max - Out_Min) / (I
      +                          n_Max - In_Min))) + Out_Min;
 11104  003CC2  5011               	movf	i2map@In_Min^0,w,c
 11105  003CC4  5C0F               	subwf	i2map@x^0,w,c
 11106  003CC6  6E09               	movwf	i2___wmul@multiplier^0,c
 11107  003CC8  5012               	movf	(i2map@In_Min+1)^0,w,c
 11108  003CCA  5810               	subwfb	(i2map@x+1)^0,w,c
 11109  003CCC  6E0A               	movwf	(i2___wmul@multiplier+1)^0,c
 11110  003CCE  5011               	movf	i2map@In_Min^0,w,c
 11111  003CD0  5C13               	subwf	i2map@In_Max^0,w,c
 11112  003CD2  6E03               	movwf	i2___awdiv@divisor^0,c
 11113  003CD4  5012               	movf	(i2map@In_Min+1)^0,w,c
 11114  003CD6  5814               	subwfb	(i2map@In_Max+1)^0,w,c
 11115  003CD8  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
 11116  003CDA  5015               	movf	i2map@Out_Min^0,w,c
 11117  003CDC  5C17               	subwf	i2map@Out_Max^0,w,c
 11118  003CDE  6E01               	movwf	i2___awdiv@dividend^0,c
 11119  003CE0  5016               	movf	(i2map@Out_Min+1)^0,w,c
 11120  003CE2  5818               	subwfb	(i2map@Out_Max+1)^0,w,c
 11121  003CE4  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
 11122  003CE6  ECD3  F01A         	call	i2___awdiv	;wreg free
 11123  003CEA  C001  F00B         	movff	?i2___awdiv,i2___wmul@multiplicand
 11124  003CEE  C002  F00C         	movff	?i2___awdiv+1,i2___wmul@multiplicand+1
 11125  003CF2  EC4D  F01F         	call	i2___wmul	;wreg free
 11126  003CF6  5015               	movf	i2map@Out_Min^0,w,c
 11127  003CF8  2409               	addwf	?i2___wmul^0,w,c
 11128  003CFA  6E0F               	movwf	?i2_map^0,c
 11129  003CFC  5016               	movf	(i2map@Out_Min+1)^0,w,c
 11130  003CFE  200A               	addwfc	(?i2___wmul+1)^0,w,c
 11131  003D00  6E10               	movwf	(?i2_map+1)^0,c
 11132  003D02  0012               	return		;funcret
 11133  003D04                     __end_ofi2_map:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function i2___awdiv *****************
 11137 ;; Defined at:
 11138 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  dividend        2    0[COMRAM] int 
 11141 ;;  divisor         2    2[COMRAM] int 
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;  quotient        2    6[COMRAM] int 
 11144 ;;  sign            1    5[COMRAM] unsigned char 
 11145 ;;  counter         1    4[COMRAM] unsigned char 
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  2    0[COMRAM] int 
 11148 ;; Registers used:
 11149 ;;		wreg, status,2, status,0
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11155 ;;      Params:         4       0       0       0       0       0       0       0       0
 11156 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11158 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11159 ;;Total ram usage:        8 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; This function calls:
 11162 ;;		Nothing
 11163 ;; This function is called by:
 11164 ;;		i2_map
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text59
 11169  0035A6                     __ptext59:
 11170                           	callstack 0
 11171  0035A6                     i2___awdiv:
 11172                           	callstack 16
 11173  0035A6  0E00               	movlw	0
 11174  0035A8  6E06               	movwf	i2___awdiv@sign^0,c
 11175  0035AA  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 11176  0035AC  EFDC  F01A         	goto	i2u402_40
 11177  0035B0  EFDA  F01A         	goto	i2u402_41
 11178  0035B4                     i2u402_41:
 11179  0035B4  EFE2  F01A         	goto	i2l3733
 11180  0035B8                     i2u402_40:
 11181  0035B8  6C03               	negf	i2___awdiv@divisor^0,c
 11182  0035BA  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
 11183  0035BC  B0D8               	btfsc	status,0,c
 11184  0035BE  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
 11185  0035C0  0E01               	movlw	1
 11186  0035C2  6E06               	movwf	i2___awdiv@sign^0,c
 11187  0035C4                     i2l3733:
 11188  0035C4  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 11189  0035C6  EFE9  F01A         	goto	i2u403_40
 11190  0035CA  EFE7  F01A         	goto	i2u403_41
 11191  0035CE                     i2u403_41:
 11192  0035CE  EFEF  F01A         	goto	i2l3739
 11193  0035D2                     i2u403_40:
 11194  0035D2  6C01               	negf	i2___awdiv@dividend^0,c
 11195  0035D4  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
 11196  0035D6  B0D8               	btfsc	status,0,c
 11197  0035D8  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
 11198  0035DA  0E01               	movlw	1
 11199  0035DC  1A06               	xorwf	i2___awdiv@sign^0,f,c
 11200  0035DE                     i2l3739:
 11201  0035DE  0E00               	movlw	0
 11202  0035E0  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
 11203  0035E2  0E00               	movlw	0
 11204  0035E4  6E07               	movwf	i2___awdiv@quotient^0,c
 11205  0035E6  5003               	movf	i2___awdiv@divisor^0,w,c
 11206  0035E8  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 11207  0035EA  B4D8               	btfsc	status,2,c
 11208  0035EC  EFFA  F01A         	goto	i2u404_41
 11209  0035F0  EFFC  F01A         	goto	i2u404_40
 11210  0035F4                     i2u404_41:
 11211  0035F4  EF24  F01B         	goto	i2l3761
 11212  0035F8                     i2u404_40:
 11213  0035F8  0E01               	movlw	1
 11214  0035FA  6E05               	movwf	i2___awdiv@counter^0,c
 11215  0035FC  EF04  F01B         	goto	i2l3747
 11216  003600                     i2l3745:
 11217  003600  90D8               	bcf	status,0,c
 11218  003602  3603               	rlcf	i2___awdiv@divisor^0,f,c
 11219  003604  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 11220  003606  2A05               	incf	i2___awdiv@counter^0,f,c
 11221  003608                     i2l3747:
 11222  003608  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
 11223  00360A  EF09  F01B         	goto	i2u405_41
 11224  00360E  EF0B  F01B         	goto	i2u405_40
 11225  003612                     i2u405_41:
 11226  003612  EF00  F01B         	goto	i2l3745
 11227  003616                     i2u405_40:
 11228  003616                     i2l3749:
 11229  003616  90D8               	bcf	status,0,c
 11230  003618  3607               	rlcf	i2___awdiv@quotient^0,f,c
 11231  00361A  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 11232  00361C  5003               	movf	i2___awdiv@divisor^0,w,c
 11233  00361E  5C01               	subwf	i2___awdiv@dividend^0,w,c
 11234  003620  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 11235  003622  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 11236  003624  A0D8               	btfss	status,0,c
 11237  003626  EF17  F01B         	goto	i2u406_41
 11238  00362A  EF19  F01B         	goto	i2u406_40
 11239  00362E                     i2u406_41:
 11240  00362E  EF1E  F01B         	goto	i2l3757
 11241  003632                     i2u406_40:
 11242  003632  5003               	movf	i2___awdiv@divisor^0,w,c
 11243  003634  5E01               	subwf	i2___awdiv@dividend^0,f,c
 11244  003636  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
 11245  003638  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 11246  00363A  8007               	bsf	i2___awdiv@quotient^0,0,c
 11247  00363C                     i2l3757:
 11248  00363C  90D8               	bcf	status,0,c
 11249  00363E  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 11250  003640  3203               	rrcf	i2___awdiv@divisor^0,f,c
 11251  003642  2E05               	decfsz	i2___awdiv@counter^0,f,c
 11252  003644  EF0B  F01B         	goto	i2l3749
 11253  003648                     i2l3761:
 11254  003648  5006               	movf	i2___awdiv@sign^0,w,c
 11255  00364A  B4D8               	btfsc	status,2,c
 11256  00364C  EF2A  F01B         	goto	i2u407_41
 11257  003650  EF2C  F01B         	goto	i2u407_40
 11258  003654                     i2u407_41:
 11259  003654  EF30  F01B         	goto	i2l3765
 11260  003658                     i2u407_40:
 11261  003658  6C07               	negf	i2___awdiv@quotient^0,c
 11262  00365A  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
 11263  00365C  B0D8               	btfsc	status,0,c
 11264  00365E  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
 11265  003660                     i2l3765:
 11266  003660  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 11267  003664  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 11268  003668  0012               	return		;funcret
 11269  00366A                     __end_ofi2___awdiv:
 11270                           	callstack 0
 11271                           
 11272 ;; *************** function _atoi *****************
 11273 ;; Defined at:
 11274 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  s               2   14[COMRAM] PTR const unsigned char 
 11277 ;;		 -> coordinate_z(3), coordinate_y(3), coordinate_x(3), angle(3), 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  n               2   27[COMRAM] int 
 11280 ;;  neg             2   20[COMRAM] int 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  2   14[COMRAM] int 
 11283 ;; Registers used:
 11284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11290 ;;      Params:         2       0       0       0       0       0       0       0       0
 11291 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11292 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11293 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11294 ;;Total ram usage:       15 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    1
 11297 ;; This function calls:
 11298 ;;		_isdigit
 11299 ;;		_isspace
 11300 ;;		i2___wmul
 11301 ;; This function is called by:
 11302 ;;		_algoritm
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text60
 11307  0025AA                     __ptext60:
 11308                           	callstack 0
 11309  0025AA                     _atoi:
 11310                           	callstack 17
 11311  0025AA  0E00               	movlw	0
 11312  0025AC  6E1D               	movwf	(atoi@n+1)^0,c
 11313  0025AE  0E00               	movlw	0
 11314  0025B0  6E1C               	movwf	atoi@n^0,c
 11315  0025B2  0E00               	movlw	0
 11316  0025B4  6E16               	movwf	(atoi@neg+1)^0,c
 11317  0025B6  0E00               	movlw	0
 11318  0025B8  6E15               	movwf	atoi@neg^0,c
 11319  0025BA  EFE1  F012         	goto	i2l4193
 11320  0025BE                     i2l4191:
 11321  0025BE  4A0F               	infsnz	atoi@s^0,f,c
 11322  0025C0  2A10               	incf	(atoi@s+1)^0,f,c
 11323  0025C2                     i2l4193:
 11324  0025C2  0E01               	movlw	1
 11325  0025C4  6E1B               	movwf	_atoi$867^0,c
 11326  0025C6  C00F  FFD9         	movff	atoi@s,fsr2l
 11327  0025CA  C010  FFDA         	movff	atoi@s+1,fsr2h
 11328  0025CE  0E20               	movlw	32
 11329  0025D0  18DE               	xorwf	postinc2,w,c
 11330  0025D2  B4D8               	btfsc	status,2,c
 11331  0025D4  EFEE  F012         	goto	i2u460_41
 11332  0025D8  EFF0  F012         	goto	i2u460_40
 11333  0025DC                     i2u460_41:
 11334  0025DC  EF0C  F013         	goto	i2l4201
 11335  0025E0                     i2u460_40:
 11336  0025E0  0EF7               	movlw	247
 11337  0025E2  6E11               	movwf	??_atoi^0,c
 11338  0025E4  0EFF               	movlw	255
 11339  0025E6  6E12               	movwf	(??_atoi+1)^0,c
 11340  0025E8  C00F  FFD9         	movff	atoi@s,fsr2l
 11341  0025EC  C010  FFDA         	movff	atoi@s+1,fsr2h
 11342  0025F0  50DF               	movf	indf2,w,c
 11343  0025F2  6E13               	movwf	(??_atoi+2)^0,c
 11344  0025F4  6A14               	clrf	(??_atoi+3)^0,c
 11345  0025F6  5011               	movf	??_atoi^0,w,c
 11346  0025F8  2613               	addwf	(??_atoi+2)^0,f,c
 11347  0025FA  5012               	movf	(??_atoi+1)^0,w,c
 11348  0025FC  2214               	addwfc	(??_atoi+3)^0,f,c
 11349  0025FE  5014               	movf	(??_atoi+3)^0,w,c
 11350  002600  E109               	bnz	i2u461_40
 11351  002602  0E05               	movlw	5
 11352  002604  5C13               	subwf	(??_atoi+2)^0,w,c
 11353  002606  A0D8               	btfss	status,0,c
 11354  002608  EF08  F013         	goto	i2u461_41
 11355  00260C  EF0A  F013         	goto	i2u461_40
 11356  002610                     i2u461_41:
 11357  002610  EF0C  F013         	goto	i2l4201
 11358  002614                     i2u461_40:
 11359  002614  0E00               	movlw	0
 11360  002616  6E1B               	movwf	_atoi$867^0,c
 11361  002618                     i2l4201:
 11362  002618  C01B  F017         	movff	_atoi$867,_atoi$866
 11363  00261C  6A18               	clrf	(_atoi$866+1)^0,c
 11364  00261E  5017               	movf	_atoi$866^0,w,c
 11365  002620  1018               	iorwf	(_atoi$866+1)^0,w,c
 11366  002622  A4D8               	btfss	status,2,c
 11367  002624  EF16  F013         	goto	i2u462_41
 11368  002628  EF18  F013         	goto	i2u462_40
 11369  00262C                     i2u462_41:
 11370  00262C  EFDF  F012         	goto	i2l4191
 11371  002630                     i2u462_40:
 11372  002630  EF22  F013         	goto	i2l4211
 11373  002634                     i2l4207:
 11374  002634  0E00               	movlw	0
 11375  002636  6E16               	movwf	(atoi@neg+1)^0,c
 11376  002638  0E01               	movlw	1
 11377  00263A  6E15               	movwf	atoi@neg^0,c
 11378  00263C                     i2l4209:
 11379  00263C  4A0F               	infsnz	atoi@s^0,f,c
 11380  00263E  2A10               	incf	(atoi@s+1)^0,f,c
 11381  002640  EF57  F013         	goto	i2l4217
 11382  002644                     i2l4211:
 11383  002644  C00F  FFD9         	movff	atoi@s,fsr2l
 11384  002648  C010  FFDA         	movff	atoi@s+1,fsr2h
 11385  00264C  50DF               	movf	indf2,w,c
 11386  00264E  6E11               	movwf	??_atoi^0,c
 11387  002650  6A12               	clrf	(??_atoi+1)^0,c
 11388                           
 11389                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11390                           ; Switch size 1, requested type "simple"
 11391                           ; Number of cases is 1, Range of values is 0 to 0
 11392                           ; switch strategies available:
 11393                           ; Name         Instructions Cycles
 11394                           ; simple_byte            4     3 (average)
 11395                           ;	Chosen strategy is simple_byte
 11396  002652  5012               	movf	(??_atoi+1)^0,w,c
 11397  002654  0A00               	xorlw	0	; case 0
 11398  002656  B4D8               	btfsc	status,2,c
 11399  002658  EF30  F013         	goto	i2l4949
 11400  00265C  EF57  F013         	goto	i2l4217
 11401  002660                     i2l4949:
 11402                           
 11403                           ; Switch size 1, requested type "simple"
 11404                           ; Number of cases is 2, Range of values is 43 to 45
 11405                           ; switch strategies available:
 11406                           ; Name         Instructions Cycles
 11407                           ; simple_byte            7     4 (average)
 11408                           ;	Chosen strategy is simple_byte
 11409  002660  5011               	movf	??_atoi^0,w,c
 11410  002662  0A2B               	xorlw	43	; case 43
 11411  002664  B4D8               	btfsc	status,2,c
 11412  002666  EF1E  F013         	goto	i2l4209
 11413  00266A  0A06               	xorlw	6	; case 45
 11414  00266C  B4D8               	btfsc	status,2,c
 11415  00266E  EF1A  F013         	goto	i2l4207
 11416  002672  EF57  F013         	goto	i2l4217
 11417  002676                     i2l4213:
 11418  002676  C01C  F009         	movff	atoi@n,i2___wmul@multiplier
 11419  00267A  C01D  F00A         	movff	atoi@n+1,i2___wmul@multiplier+1
 11420  00267E  0E00               	movlw	0
 11421  002680  6E0C               	movwf	(i2___wmul@multiplicand+1)^0,c
 11422  002682  0E0A               	movlw	10
 11423  002684  6E0B               	movwf	i2___wmul@multiplicand^0,c
 11424  002686  EC4D  F01F         	call	i2___wmul	;wreg free
 11425  00268A  C00F  FFD9         	movff	atoi@s,fsr2l
 11426  00268E  C010  FFDA         	movff	atoi@s+1,fsr2h
 11427  002692  50DF               	movf	indf2,w,c
 11428  002694  6E11               	movwf	??_atoi^0,c
 11429  002696  5011               	movf	??_atoi^0,w,c
 11430  002698  5E09               	subwf	?i2___wmul^0,f,c
 11431  00269A  0E00               	movlw	0
 11432  00269C  5A0A               	subwfb	(?i2___wmul+1)^0,f,c
 11433  00269E  0E30               	movlw	48
 11434  0026A0  2409               	addwf	?i2___wmul^0,w,c
 11435  0026A2  6E1C               	movwf	atoi@n^0,c
 11436  0026A4  0E00               	movlw	0
 11437  0026A6  200A               	addwfc	(?i2___wmul+1)^0,w,c
 11438  0026A8  6E1D               	movwf	(atoi@n+1)^0,c
 11439  0026AA  EF1E  F013         	goto	i2l4209
 11440  0026AE                     i2l4217:
 11441  0026AE  0ED0               	movlw	208
 11442  0026B0  6E11               	movwf	??_atoi^0,c
 11443  0026B2  0EFF               	movlw	255
 11444  0026B4  6E12               	movwf	(??_atoi+1)^0,c
 11445  0026B6  C00F  FFD9         	movff	atoi@s,fsr2l
 11446  0026BA  C010  FFDA         	movff	atoi@s+1,fsr2h
 11447  0026BE  50DF               	movf	indf2,w,c
 11448  0026C0  6E13               	movwf	(??_atoi+2)^0,c
 11449  0026C2  6A14               	clrf	(??_atoi+3)^0,c
 11450  0026C4  5011               	movf	??_atoi^0,w,c
 11451  0026C6  2613               	addwf	(??_atoi+2)^0,f,c
 11452  0026C8  5012               	movf	(??_atoi+1)^0,w,c
 11453  0026CA  2214               	addwfc	(??_atoi+3)^0,f,c
 11454  0026CC  5014               	movf	(??_atoi+3)^0,w,c
 11455  0026CE  E10A               	bnz	i2u463_40
 11456  0026D0  0E0A               	movlw	10
 11457  0026D2  5C13               	subwf	(??_atoi+2)^0,w,c
 11458  0026D4  A0D8               	btfss	status,0,c
 11459  0026D6  EF6F  F013         	goto	i2u463_41
 11460  0026DA  EF72  F013         	goto	i2u463_40
 11461  0026DE                     i2u463_41:
 11462  0026DE  0E01               	movlw	1
 11463  0026E0  EF73  F013         	goto	i2u464_40
 11464  0026E4                     i2u463_40:
 11465  0026E4  0E00               	movlw	0
 11466  0026E6                     i2u464_40:
 11467  0026E6  6E19               	movwf	_atoi$868^0,c
 11468  0026E8  6A1A               	clrf	(_atoi$868+1)^0,c
 11469  0026EA  5019               	movf	_atoi$868^0,w,c
 11470  0026EC  101A               	iorwf	(_atoi$868+1)^0,w,c
 11471  0026EE  A4D8               	btfss	status,2,c
 11472  0026F0  EF7C  F013         	goto	i2u465_41
 11473  0026F4  EF7E  F013         	goto	i2u465_40
 11474  0026F8                     i2u465_41:
 11475  0026F8  EF3B  F013         	goto	i2l4213
 11476  0026FC                     i2u465_40:
 11477  0026FC  5015               	movf	atoi@neg^0,w,c
 11478  0026FE  1016               	iorwf	(atoi@neg+1)^0,w,c
 11479  002700  A4D8               	btfss	status,2,c
 11480  002702  EF85  F013         	goto	i2u466_41
 11481  002706  EF87  F013         	goto	i2u466_40
 11482  00270A                     i2u466_41:
 11483  00270A  EF95  F013         	goto	i2l1004
 11484  00270E                     i2u466_40:
 11485  00270E  C01C  F011         	movff	atoi@n,??_atoi
 11486  002712  C01D  F012         	movff	atoi@n+1,??_atoi+1
 11487  002716  1E11               	comf	??_atoi^0,f,c
 11488  002718  1E12               	comf	(??_atoi+1)^0,f,c
 11489  00271A  4A11               	infsnz	??_atoi^0,f,c
 11490  00271C  2A12               	incf	(??_atoi+1)^0,f,c
 11491  00271E  C011  F00F         	movff	??_atoi,?_atoi
 11492  002722  C012  F010         	movff	??_atoi+1,?_atoi+1
 11493  002726  EF99  F013         	goto	i2l1007
 11494  00272A                     i2l1004:
 11495  00272A  C01C  F00F         	movff	atoi@n,?_atoi
 11496  00272E  C01D  F010         	movff	atoi@n+1,?_atoi+1
 11497  002732                     i2l1007:
 11498  002732  0012               	return		;funcret
 11499  002734                     __end_of_atoi:
 11500                           	callstack 0
 11501                           
 11502 ;; *************** function i2___wmul *****************
 11503 ;; Defined at:
 11504 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;  multiplier      2    8[COMRAM] unsigned int 
 11507 ;;  multiplicand    2   10[COMRAM] unsigned int 
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  product         2   12[COMRAM] unsigned int 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  2    8[COMRAM] unsigned int 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0, prodl, prodh
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11519 ;;      Params:         4       0       0       0       0       0       0       0       0
 11520 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11521 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11522 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11523 ;;Total ram usage:        6 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; This function calls:
 11526 ;;		Nothing
 11527 ;; This function is called by:
 11528 ;;		_atoi
 11529 ;;		i2_map
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text61
 11534  003E9A                     __ptext61:
 11535                           	callstack 0
 11536  003E9A                     i2___wmul:
 11537                           	callstack 16
 11538  003E9A  5009               	movf	i2___wmul@multiplier^0,w,c
 11539  003E9C  020B               	mulwf	i2___wmul@multiplicand^0,c
 11540  003E9E  CFF3 F00D          	movff	prodl,i2___wmul@product
 11541  003EA2  CFF4 F00E          	movff	prodh,i2___wmul@product+1
 11542  003EA6  5009               	movf	i2___wmul@multiplier^0,w,c
 11543  003EA8  020C               	mulwf	(i2___wmul@multiplicand+1)^0,c
 11544  003EAA  50F3               	movf	243,w,c
 11545  003EAC  260E               	addwf	(i2___wmul@product+1)^0,f,c
 11546  003EAE  500A               	movf	(i2___wmul@multiplier+1)^0,w,c
 11547  003EB0  020B               	mulwf	i2___wmul@multiplicand^0,c
 11548  003EB2  50F3               	movf	243,w,c
 11549  003EB4  260E               	addwf	(i2___wmul@product+1)^0,f,c
 11550  003EB6  C00D  F009         	movff	i2___wmul@product,?i2___wmul
 11551  003EBA  C00E  F00A         	movff	i2___wmul@product+1,?i2___wmul+1
 11552  003EBE  0012               	return		;funcret
 11553  003EC0                     __end_ofi2___wmul:
 11554                           	callstack 0
 11555                           
 11556 ;; *************** function _isspace *****************
 11557 ;; Defined at:
 11558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  c               2    0[COMRAM] int 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  2    0[COMRAM] int 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11572 ;;      Params:         2       0       0       0       0       0       0       0       0
 11573 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11574 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11575 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11576 ;;Total ram usage:        7 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_atoi
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text62
 11586  003B14                     __ptext62:
 11587                           	callstack 0
 11588  003B14                     _isspace:
 11589                           	callstack 17
 11590  003B14  0E01               	movlw	1
 11591  003B16  6E07               	movwf	_isspace$884^0,c
 11592  003B18  0E20               	movlw	32
 11593  003B1A  1801               	xorwf	isspace@c^0,w,c
 11594  003B1C  1002               	iorwf	(isspace@c+1)^0,w,c
 11595  003B1E  B4D8               	btfsc	status,2,c
 11596  003B20  EF94  F01D         	goto	i2u449_41
 11597  003B24  EF96  F01D         	goto	i2u449_40
 11598  003B28                     i2u449_41:
 11599  003B28  EFAF  F01D         	goto	i2l4077
 11600  003B2C                     i2u449_40:
 11601  003B2C  0EF7               	movlw	247
 11602  003B2E  6E03               	movwf	??_isspace^0,c
 11603  003B30  0EFF               	movlw	255
 11604  003B32  6E04               	movwf	(??_isspace+1)^0,c
 11605  003B34  C001  F005         	movff	isspace@c,??_isspace+2
 11606  003B38  C002  F006         	movff	isspace@c+1,??_isspace+3
 11607  003B3C  5003               	movf	??_isspace^0,w,c
 11608  003B3E  2605               	addwf	(??_isspace+2)^0,f,c
 11609  003B40  5004               	movf	(??_isspace+1)^0,w,c
 11610  003B42  2206               	addwfc	(??_isspace+3)^0,f,c
 11611  003B44  5006               	movf	(??_isspace+3)^0,w,c
 11612  003B46  E109               	bnz	i2u450_40
 11613  003B48  0E05               	movlw	5
 11614  003B4A  5C05               	subwf	(??_isspace+2)^0,w,c
 11615  003B4C  A0D8               	btfss	status,0,c
 11616  003B4E  EFAB  F01D         	goto	i2u450_41
 11617  003B52  EFAD  F01D         	goto	i2u450_40
 11618  003B56                     i2u450_41:
 11619  003B56  EFAF  F01D         	goto	i2l4077
 11620  003B5A                     i2u450_40:
 11621  003B5A  0E00               	movlw	0
 11622  003B5C  6E07               	movwf	_isspace$884^0,c
 11623  003B5E                     i2l4077:
 11624  003B5E  C007  F001         	movff	_isspace$884,?_isspace
 11625  003B62  6A02               	clrf	(?_isspace+1)^0,c
 11626  003B64  0012               	return		;funcret
 11627  003B66                     __end_of_isspace:
 11628                           	callstack 0
 11629                           
 11630 ;; *************** function _isdigit *****************
 11631 ;; Defined at:
 11632 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;  c               2    0[COMRAM] int 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;		None
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  2    0[COMRAM] int 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11646 ;;      Params:         2       0       0       0       0       0       0       0       0
 11647 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11648 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11649 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11650 ;;Total ram usage:        6 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_atoi
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           	psect	text63
 11660  003DB6                     __ptext63:
 11661                           	callstack 0
 11662  003DB6                     _isdigit:
 11663                           	callstack 17
 11664  003DB6  0ED0               	movlw	208
 11665  003DB8  6E03               	movwf	??_isdigit^0,c
 11666  003DBA  0EFF               	movlw	255
 11667  003DBC  6E04               	movwf	(??_isdigit+1)^0,c
 11668  003DBE  C001  F005         	movff	isdigit@c,??_isdigit+2
 11669  003DC2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11670  003DC6  5003               	movf	??_isdigit^0,w,c
 11671  003DC8  2605               	addwf	(??_isdigit+2)^0,f,c
 11672  003DCA  5004               	movf	(??_isdigit+1)^0,w,c
 11673  003DCC  2206               	addwfc	(??_isdigit+3)^0,f,c
 11674  003DCE  5006               	movf	(??_isdigit+3)^0,w,c
 11675  003DD0  E10A               	bnz	i2u451_40
 11676  003DD2  0E0A               	movlw	10
 11677  003DD4  5C05               	subwf	(??_isdigit+2)^0,w,c
 11678  003DD6  A0D8               	btfss	status,0,c
 11679  003DD8  EFF0  F01E         	goto	i2u451_41
 11680  003DDC  EFF3  F01E         	goto	i2u451_40
 11681  003DE0                     i2u451_41:
 11682  003DE0  0E01               	movlw	1
 11683  003DE2  EFF4  F01E         	goto	i2u452_40
 11684  003DE6                     i2u451_40:
 11685  003DE6  0E00               	movlw	0
 11686  003DE8                     i2u452_40:
 11687  003DE8  6E01               	movwf	?_isdigit^0,c
 11688  003DEA  6A02               	clrf	(?_isdigit+1)^0,c
 11689  003DEC  0012               	return		;funcret
 11690  003DEE                     __end_of_isdigit:
 11691                           	callstack 0
 11692                           
 11693                           	psect	rparam
 11694  0000                     
 11695                           	psect	temp
 11696  00005F                     btemp:
 11697                           	callstack 0
 11698  00005F                     	ds	1
 11699  0000                     int$flags	set	btemp
 11700  0000                     wtemp8	set	btemp+1
 11701  0000                     ttemp5	set	btemp+1
 11702  0000                     ttemp6	set	btemp+4
 11703  0000                     ttemp7	set	btemp+8
 11704                           
 11705                           	psect	idloc
 11706                           
 11707                           ;Config register IDLOC0 @ 0x200000
 11708                           ;	unspecified, using default values
 11709  200000                     	org	2097152
 11710  200000  FF                 	db	255
 11711                           
 11712                           ;Config register IDLOC1 @ 0x200001
 11713                           ;	unspecified, using default values
 11714  200001                     	org	2097153
 11715  200001  FF                 	db	255
 11716                           
 11717                           ;Config register IDLOC2 @ 0x200002
 11718                           ;	unspecified, using default values
 11719  200002                     	org	2097154
 11720  200002  FF                 	db	255
 11721                           
 11722                           ;Config register IDLOC3 @ 0x200003
 11723                           ;	unspecified, using default values
 11724  200003                     	org	2097155
 11725  200003  FF                 	db	255
 11726                           
 11727                           ;Config register IDLOC4 @ 0x200004
 11728                           ;	unspecified, using default values
 11729  200004                     	org	2097156
 11730  200004  FF                 	db	255
 11731                           
 11732                           ;Config register IDLOC5 @ 0x200005
 11733                           ;	unspecified, using default values
 11734  200005                     	org	2097157
 11735  200005  FF                 	db	255
 11736                           
 11737                           ;Config register IDLOC6 @ 0x200006
 11738                           ;	unspecified, using default values
 11739  200006                     	org	2097158
 11740  200006  FF                 	db	255
 11741                           
 11742                           ;Config register IDLOC7 @ 0x200007
 11743                           ;	unspecified, using default values
 11744  200007                     	org	2097159
 11745  200007  FF                 	db	255
 11746                           
 11747                           	psect	config
 11748                           
 11749                           ;Config register CONFIG1L @ 0x300000
 11750                           ;	unspecified, using default values
 11751                           ;	PLL Prescaler Selection bits
 11752                           ;	PLLDIV = 0x0, unprogrammed default
 11753                           ;	System Clock Postscaler Selection bits
 11754                           ;	CPUDIV = 0x0, unprogrammed default
 11755                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11756                           ;	USBDIV = 0x0, unprogrammed default
 11757  300000                     	org	3145728
 11758  300000  00                 	db	0
 11759                           
 11760                           ;Config register CONFIG1H @ 0x300001
 11761                           ;	Oscillator Selection bits
 11762                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
 11763                           ;	Fail-Safe Clock Monitor Enable bit
 11764                           ;	FCMEN = 0x0, unprogrammed default
 11765                           ;	Internal/External Oscillator Switchover bit
 11766                           ;	IESO = 0x0, unprogrammed default
 11767  300001                     	org	3145729
 11768  300001  0B                 	db	11
 11769                           
 11770                           ;Config register CONFIG2L @ 0x300002
 11771                           ;	unspecified, using default values
 11772                           ;	Power-up Timer Enable bit
 11773                           ;	PWRT = 0x1, unprogrammed default
 11774                           ;	Brown-out Reset Enable bits
 11775                           ;	BOR = 0x3, unprogrammed default
 11776                           ;	Brown-out Reset Voltage bits
 11777                           ;	BORV = 0x3, unprogrammed default
 11778                           ;	USB Voltage Regulator Enable bit
 11779                           ;	VREGEN = 0x0, unprogrammed default
 11780  300002                     	org	3145730
 11781  300002  1F                 	db	31
 11782                           
 11783                           ;Config register CONFIG2H @ 0x300003
 11784                           ;	Watchdog Timer Enable bit
 11785                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11786                           ;	Watchdog Timer Postscale Select bits
 11787                           ;	WDTPS = 0xF, unprogrammed default
 11788  300003                     	org	3145731
 11789  300003  1E                 	db	30
 11790                           
 11791                           ; Padding undefined space
 11792  300004                     	org	3145732
 11793  300004  FF                 	db	255
 11794                           
 11795                           ;Config register CONFIG3H @ 0x300005
 11796                           ;	unspecified, using default values
 11797                           ;	CCP2 MUX bit
 11798                           ;	CCP2MX = 0x1, unprogrammed default
 11799                           ;	PORTB A/D Enable bit
 11800                           ;	PBADEN = 0x1, unprogrammed default
 11801                           ;	Low-Power Timer 1 Oscillator Enable bit
 11802                           ;	LPT1OSC = 0x0, unprogrammed default
 11803                           ;	MCLR Pin Enable bit
 11804                           ;	MCLRE = 0x1, unprogrammed default
 11805  300005                     	org	3145733
 11806  300005  83                 	db	131
 11807                           
 11808                           ;Config register CONFIG4L @ 0x300006
 11809                           ;	Stack Full/Underflow Reset Enable bit
 11810                           ;	STVREN = 0x1, unprogrammed default
 11811                           ;	Single-Supply ICSP Enable bit
 11812                           ;	LVP = OFF, Single-Supply ICSP disabled
 11813                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11814                           ;	ICPRT = 0x0, unprogrammed default
 11815                           ;	Extended Instruction Set Enable bit
 11816                           ;	XINST = 0x0, unprogrammed default
 11817                           ;	Background Debugger Enable bit
 11818                           ;	DEBUG = 0x1, unprogrammed default
 11819  300006                     	org	3145734
 11820  300006  81                 	db	129
 11821                           
 11822                           ; Padding undefined space
 11823  300007                     	org	3145735
 11824  300007  FF                 	db	255
 11825                           
 11826                           ;Config register CONFIG5L @ 0x300008
 11827                           ;	unspecified, using default values
 11828                           ;	Code Protection bit
 11829                           ;	CP0 = 0x1, unprogrammed default
 11830                           ;	Code Protection bit
 11831                           ;	CP1 = 0x1, unprogrammed default
 11832                           ;	Code Protection bit
 11833                           ;	CP2 = 0x1, unprogrammed default
 11834                           ;	Code Protection bit
 11835                           ;	CP3 = 0x1, unprogrammed default
 11836  300008                     	org	3145736
 11837  300008  0F                 	db	15
 11838                           
 11839                           ;Config register CONFIG5H @ 0x300009
 11840                           ;	unspecified, using default values
 11841                           ;	Boot Block Code Protection bit
 11842                           ;	CPB = 0x1, unprogrammed default
 11843                           ;	Data EEPROM Code Protection bit
 11844                           ;	CPD = 0x1, unprogrammed default
 11845  300009                     	org	3145737
 11846  300009  C0                 	db	192
 11847                           
 11848                           ;Config register CONFIG6L @ 0x30000A
 11849                           ;	unspecified, using default values
 11850                           ;	Write Protection bit
 11851                           ;	WRT0 = 0x1, unprogrammed default
 11852                           ;	Write Protection bit
 11853                           ;	WRT1 = 0x1, unprogrammed default
 11854                           ;	Write Protection bit
 11855                           ;	WRT2 = 0x1, unprogrammed default
 11856                           ;	Write Protection bit
 11857                           ;	WRT3 = 0x1, unprogrammed default
 11858  30000A                     	org	3145738
 11859  30000A  0F                 	db	15
 11860                           
 11861                           ;Config register CONFIG6H @ 0x30000B
 11862                           ;	unspecified, using default values
 11863                           ;	Configuration Register Write Protection bit
 11864                           ;	WRTC = 0x1, unprogrammed default
 11865                           ;	Boot Block Write Protection bit
 11866                           ;	WRTB = 0x1, unprogrammed default
 11867                           ;	Data EEPROM Write Protection bit
 11868                           ;	WRTD = 0x1, unprogrammed default
 11869  30000B                     	org	3145739
 11870  30000B  E0                 	db	224
 11871                           
 11872                           ;Config register CONFIG7L @ 0x30000C
 11873                           ;	unspecified, using default values
 11874                           ;	Table Read Protection bit
 11875                           ;	EBTR0 = 0x1, unprogrammed default
 11876                           ;	Table Read Protection bit
 11877                           ;	EBTR1 = 0x1, unprogrammed default
 11878                           ;	Table Read Protection bit
 11879                           ;	EBTR2 = 0x1, unprogrammed default
 11880                           ;	Table Read Protection bit
 11881                           ;	EBTR3 = 0x1, unprogrammed default
 11882  30000C                     	org	3145740
 11883  30000C  0F                 	db	15
 11884                           
 11885                           ;Config register CONFIG7H @ 0x30000D
 11886                           ;	unspecified, using default values
 11887                           ;	Boot Block Table Read Protection bit
 11888                           ;	EBTRB = 0x1, unprogrammed default
 11889  30000D                     	org	3145741
 11890  30000D  40                 	db	64
 11891                           tosu	equ	0xFFF
 11892                           tosh	equ	0xFFE
 11893                           tosl	equ	0xFFD
 11894                           stkptr	equ	0xFFC
 11895                           pclatu	equ	0xFFB
 11896                           pclath	equ	0xFFA
 11897                           pcl	equ	0xFF9
 11898                           tblptru	equ	0xFF8
 11899                           tblptrh	equ	0xFF7
 11900                           tblptrl	equ	0xFF6
 11901                           tablat	equ	0xFF5
 11902                           prodh	equ	0xFF4
 11903                           prodl	equ	0xFF3
 11904                           indf0	equ	0xFEF
 11905                           postinc0	equ	0xFEE
 11906                           postdec0	equ	0xFED
 11907                           preinc0	equ	0xFEC
 11908                           plusw0	equ	0xFEB
 11909                           fsr0h	equ	0xFEA
 11910                           fsr0l	equ	0xFE9
 11911                           wreg	equ	0xFE8
 11912                           indf1	equ	0xFE7
 11913                           postinc1	equ	0xFE6
 11914                           postdec1	equ	0xFE5
 11915                           preinc1	equ	0xFE4
 11916                           plusw1	equ	0xFE3
 11917                           fsr1h	equ	0xFE2
 11918                           fsr1l	equ	0xFE1
 11919                           bsr	equ	0xFE0
 11920                           indf2	equ	0xFDF
 11921                           postinc2	equ	0xFDE
 11922                           postdec2	equ	0xFDD
 11923                           preinc2	equ	0xFDC
 11924                           plusw2	equ	0xFDB
 11925                           fsr2h	equ	0xFDA
 11926                           fsr2l	equ	0xFD9
 11927                           status	equ	0xFD8

Data Sizes:
    Strings     97
    Constant    0
    Data        14
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    102     130
    BANK1           256     39     161
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> text(BANK1[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> dbuf(BANK1[32]), text(BANK1[40]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 40
		 -> dbuf(BANK1[32]), text(BANK1[40]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_6(CODE[14]), STR_5(CODE[13]), STR_4(CODE[30]), STR_3(CODE[17]), 
		 -> STR_2(CODE[14]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 30
		 -> STR_6(CODE[14]), STR_5(CODE[13]), STR_4(CODE[30]), STR_3(CODE[17]), 
		 -> STR_2(CODE[14]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_6(CODE[14]), STR_5(CODE[13]), STR_4(CODE[30]), STR_3(CODE[17]), 
		 -> STR_2(CODE[14]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S888_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> text(BANK1[40]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> coordinate_z(BANK1[3]), coordinate_y(BANK1[3]), coordinate_x(BANK1[3]), angle(BANK1[3]), 

    readI2C@Data	PTR unsigned char  size(2) Largest target is 1
		 -> data1(BANK0[1]), 

    writeI2C@Data	PTR unsigned char  size(2) Largest target is 2047
		 -> data2(BANK0[4]), d1(BANK0[1]), setPWMFreq@newmode(BANK0[1]), data1(BANK0[1]), 
		 -> setPWMFreq@prescale(BANK0[1]), RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _receive in COMRAM

    _receive->i2_sprintf
    _algoritm->i2_sprintf
    i2_mover_servo->i2_sprintf
    i2_writeI2C->i2_sendI2C
    i2_stopI2C->i2_readyI2C
    i2_startI2C->i2_readyI2C
    i2_sendI2C->i2_readyI2C
    i2_start->i2_strlen
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_ctoa->i2_fputc
    i2_map->i2___wmul
    _atoi->i2___wmul
    i2___wmul->i2___awdiv

Critical Paths under _main in BANK0

    _setPWMFreq->___fldiv
    _readI2C->_receiveI2C
    _repeatedStart->_readyI2C
    _receiveI2C->_readyI2C
    ___flsub->___fladd
    _writeI2C->_sendI2C
    _stopI2C->_readyI2C
    _startI2C->_readyI2C
    _sendI2C->_readyI2C
    _start->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _map->___wmul
    ___wmul->___awdiv
    _SettingsLCD->_LCD

Critical Paths under _receive in BANK0

    _receive->_algoritm
    _algoritm->i2_mover_servo
    i2_mover_servo->i2_sprintf

Critical Paths under _main in BANK1

    _main->_settings
    _settings->_mover_servo
    _mover_servo->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _receive in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _receive in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _receive in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _receive in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _receive in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receive in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receive in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   43456
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             2     2      0   43456
                                             37 BANK1      2     2      0
                        _SettingsLCD
                        _mover_servo
                         _setPWMFreq
                            _sprintf
                              _start
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _setPWMFreq                                          11     7      4   10201
                                             54 BANK0     11     7      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                            ___fltol
                            _readI2C
                           _writeI2C
 ---------------------------------------------------------------------------------
 (3) _readI2C                                              8     3      5     494
                                             32 BANK0      8     3      5
                         _receiveI2C
                      _repeatedStart
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (4) _repeatedStart                                        0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _receiveI2C                                           2     2      0      45
                                             30 BANK0      2     2      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             29 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             45 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2414
                                             29 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             29 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _mover_servo                                          6     2      4   18206
                                             31 BANK1      6     2      4
                                _map
                            _sprintf
                              _start
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _writeI2C                                             8     3      5    1479
                                             31 BANK0      8     3      5
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      22
                                             30 BANK0      1     1      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _readyI2C                                             1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0     310
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   13128
                                             15 BANK1     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11913
                                            100 BANK0      2     2      0
                                              9 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6   11377
                                             92 BANK0      8     2      6
                                              0 BANK1      9     9      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6853
                                             56 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4587
                                             45 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     310
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             38 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             47 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             29 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             29 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2051
                                             38 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1577
                                             29 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _map                                                 10     0     10    1535
                                             43 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     549
                                             37 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     132
                                             31 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0      88
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _receive                                            10    10      0   20515
                                             19 BANK0     10    10      0
                           _algoritm
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (12) _algoritm                                            3     3      0   14604
                                             16 BANK0      3     3      0
                               _atoi
                      i2_mover_servo
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (13) i2_mover_servo                                       6     2      4    7347
                                             10 BANK0      6     2      4
                              i2_map
                          i2_sprintf
                            i2_start
                         i2_writeI2C
 ---------------------------------------------------------------------------------
 (14) i2_writeI2C                                          8     3      5     189
                                              2 COMRAM     8     3      5
                          i2_sendI2C
                         i2_startI2C
                          i2_stopI2C
 ---------------------------------------------------------------------------------
 (15) i2_stopI2C                                           0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (15) i2_startI2C                                          0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (15) i2_sendI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (16) i2_readyI2C                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_start                                             0     0      0     142
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          16    10      6    5769
                                             88 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    5308
                                             80 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        42    36      6    5101
                                             63 COMRAM    17    11      6
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    3146
                                             27 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1847
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (13) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     791
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (15) i2_ctoa                                              8     5      3     845
                                              9 COMRAM     8     5      3
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     590
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (14) i2_map                                              10     0     10     899
                                             14 COMRAM    10     0     10
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) _atoi                                               15    13      2    1256
                                             14 COMRAM    15    13      2
                            _isdigit
                            _isspace
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4     263
                                              8 COMRAM     6     2      4
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (14) _isspace                                             7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (14) _isdigit                                             6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _settings
     _SettingsLCD
       _LCD
     _mover_servo
       _map
         ___awdiv
         ___wmul
           ___awdiv (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
       _start
         _strlen
       _writeI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
     _setPWMFreq
       ___fladd
       ___fldiv
       ___flge
       ___flsub
         ___fladd
       ___fltol
       _readI2C
         _receiveI2C
           _readyI2C
         _repeatedStart
           _readyI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
       _writeI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _start
       _strlen
     _writeI2C
       _sendI2C
         _readyI2C
       _startI2C
         _readyI2C
       _stopI2C
         _readyI2C

 _receive (ROOT)
   _algoritm
     _atoi
       _isdigit
       _isspace
       i2___wmul
         i2___awdiv (ARG)
     i2_mover_servo
       i2_map
         i2___awdiv
         i2___wmul
           i2___awdiv (ARG)
       i2_sprintf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_ctoa
               i2_fputc
                 i2_putch
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                 i2_fputs
                   i2_fputc
                     i2_putch
                 i2_strlen
             i2_fputc
               i2_putch
       i2_start
         i2_strlen
       i2_writeI2C
         i2_sendI2C
           i2_readyI2C
         i2_startI2C
           i2_readyI2C
         i2_stopI2C
           i2_readyI2C
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_ctoa
             i2_fputc
               i2_putch
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
               i2_fputs
                 i2_fputc
                   i2_putch
               i2_strlen
           i2_fputc
             i2_putch
     i2_start
       i2_strlen
   i2_sprintf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_ctoa
           i2_fputc
             i2_putch
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
             i2_fputs
               i2_fputc
                 i2_putch
             i2_strlen
         i2_fputc
           i2_putch
   i2_start
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     27      A1       7       62.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      82       5       81.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     181      20        0.0%
DATA                 0      0     181       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 17:32:06 2021

           ___fldiv@aexp 0095             ___fldiv@bexp 0094                        _d 00D8  
                      _i 00D6                        _z 00D2             ___fldiv@sign 008D  
                     _d1 00DE             ___awdiv@sign 0082      ___wmul@multiplicand 0087  
                    l223 39CE                      l151 3EFA                      l152 3EFA  
                    l305 3E72                      l233 3828                      l242 3E4A  
                    l227 3A16                      l236 3F24                      l245 3EE8  
                    l157 241E                      l262 3F14                      l432 2A20  
                    l248 3F1C                      l272 1E2A                      l281 3EDA  
                    l265 3DB4                      l602 2C8C                      l275 3C3A  
                    l419 25A8                      l259 34E0                      l269 1BF6  
                    l278 35A4                      l287 2E7C                      l536 3356  
                    l570 2D4C                      l900 14C0                      l901 14AE  
                    l575 2D92                      l833 0F36                      l850 1050  
                    l842 1206                      l834 0F24                      l835 0EEA  
                    l860 110E                      l859 1120                      l875 3BAC  
                    l892 13C6                      l887 15A2                      l889 1402  
                    l898 1448                      _GIE 007F97                      _LCD 2D94  
                    _PEN 007E2A                      _SEN 007E28       i2___aodiv@quotient 0013  
                    _abs 3C80                      _pad 30FE                      _map 3BF6  
                    _pos 00D4                      wreg 000FE8      __end_ofi2_vfpfcnvrt 2280  
             i2_dtoa$962 002E                     ?_LCD 0001             ___fltol@exp1 0086  
                   l1102 1886                     l1121 3CB8                     l1107 2058  
                   ?_abs 008F                     l1124 3CC0                     l1060 31C6  
                   l1116 38F6                     l1028 3AC0                     l1117 38FE  
                   l1071 2EE6                     l1055 3146                     l1136 30FC  
                   l1144 3BF4                     l1153 3D7C                     l1074 2F2A  
                   l1058 318A                     l1082 1644                     l1147 3F38  
                   l1076 2F58                     l1084 164C                     l4011 2D0C  
                   l4003 2C8E                     l4021 2D90                     l4013 2D1A  
                   l4005 2CBE                     l3303 3E24                     l4015 2D2C  
                   l4007 2CCE                     l4031 2BB2                     l3305 3E24  
                   l4017 2D3A                     l4009 2CFC                     l4041 2C00  
                   l4033 2BDC                     l4025 2B86                     l3307 3E3C  
                   l4019 2D8A                     l4051 2C2C                     l4035 2BDE  
                   l4027 2B9E                     l4131 1BE6                     l3421 3EE4  
                   l3501 0E4C                     l4061 2C5C                     l4037 2BEE  
                   l4141 1CDC                     l4133 1C06                     l4125 1B6C  
                   l3415 3F1E                     l3423 3F16                     l3511 0E60  
                   l3503 0E50                     l4063 2C6C                     l4047 2C18  
                   l4039 2BF2                     l3431 3D82                     l4151 1D80  
                   l4143 1D12                     l4135 1C3A                     l4127 1BA2  
                   l3417 3F22                     l3425 3F1A                     l3601 10A4  
                   l3521 0E74                     l3513 0E64                     l3505 0E54  
                   l4065 2C7C                     l4057 2C40                     l4049 2C22  
                   l3441 3DAC                     l3433 3D86                     l4161 1DF6  
                   l4153 1D9A                     l4145 1D22                     l4137 1C70  
                   l4129 1BB2                     l3419 3EE0                     l3603 10B2  
                   l3611 10D0                     l3523 0E78                     l3515 0E68  
                   l3507 0E58                     l3531 0E88                     l4059 2C4C  
                   l3443 3DB0                     l3435 3D8C                     l3427 3F0E  
                   l4163 1E08                     l4155 1DA4                     l4147 1D56  
                   l4139 1CA6                     l3605 10BA                     l3613 10DE  
                   l3541 0EF8                     l3533 0E8C                     l3525 0E7C  
                   l3517 0E6C                     l3509 0E5C                     l3461 0D74  
                   l3453 0D46                     l3437 3D94                     l3429 3F12  
                   l4165 1E10                     l4157 1DBE                     l4149 1D66  
                   l4167 3EC4                     l3447 3E4C                     l3623 1130  
                   l3631 1186                     l3615 10E2                     l3607 10BE  
                   l3551 0F22                     l3543 0F04                     l3535 0EB6  
                   l3527 0E80                     l3519 0E70                     l3471 0DAE  
                   l3463 0D84                     l3455 0D54                     l3439 3DAA  
                   l4159 1DDA                     l4169 3EC6                     l3449 3E6A  
                   l4601 253E                     l3641 11D8                     l3633 1196  
                   l3625 113C                     l3617 10F0                     l3609 10CE  
                   l3561 0F78                     l3553 0F44                     l3545 0F08  
                   l3537 0ED2                     l3529 0E84                     l3481 0DDC  
                   l3473 0DB4                     l3465 0D94                     l3457 0D62  
                   l4611 2588                     l4603 2540                     l3651 11F6  
                   l3643 11DE                     l3635 11A6                     l3627 114A  
                   l3619 1106                     l3571 0FB2                     l3563 0F86  
                   l3555 0F54                     l3547 0F16                     l3539 0EE2  
                   l3491 0E10                     l3483 0DDE                     l3475 0DC6  
                   l3467 0D96                     l3459 0D64                     l3661 32AE  
                   l4541 3046                     l4701 2F4A                     l4605 2552  
                   l4621 28F0                     l3901 12FC                     l3645 11E0  
                   l3637 11C6                     l3629 1184                     l3581 101E  
                   l3573 0FB4                     l3565 0F94                     l3549 0F18  
                   l3485 0DEE                     l3493 0E18                     l3477 0DC8  
                   l3469 0D9E                     l3821 348A                     l3813 3422  
                   ?_pad 008D                     ?_map 008B                     l3671 32D4  
                   l3663 32B2                     l3655 3292                     l4543 3058  
                   l4607 2558                     l4631 2948                     l4623 28F4  
                   l4615 28BC                     l4711 160E                     l3911 132C  
                   l3903 1304                     l3647 11E6                     l3639 11CA  
                   l3591 1076                     l3583 1020                     l3575 0FBE  
                   l3567 0FA0                     l3559 0F68                     l3495 0E28  
                   l3487 0DFE                     l3479 0DCE                     l3831 34C2  
                   l3815 3444                     l3841 2DAC                     l3681 330A  
                   l3673 32E6                     l3665 32C0                     l3657 3298  
                   l4545 3062                     l4609 2568                     l4641 29CA  
                   l4633 295C                     l4625 2902                     l4617 28C2  
                   l4553 3D44                     l4721 1666                     l4713 161C  
                   l4705 15A4                     l3921 136A                     l3913 132C  
                   l3905 1308                     l3649 11F4                     l3585 1030  
                   l3569 0FA4                     l3577 0FC4                     l3497 0E3A  
                   l3489 0E0E                     l3833 34C6                     l3817 3452  
                   l3851 2E54                     l3843 2DBE                     l3683 3320  
                   l3675 32EE                     l3691 3336                     l3667 32C8  
                   l3659 32A6                     l3835 3BF6                     l4547 3080  
                   l4539 3032                     l4571 2420                     l4635 296A  
                   l4643 29D0                     l4627 2922                     l4619 28D0  
                   l4563 3BAE                     l4555 3D50                     l4651 30FE  
                   l4731 1692                     l4723 1674                     l4715 161E  
                   l4707 15C4                     l4811 2046                     l4803 2006  
                   l3931 13B6                     l3923 137A                     l3595 108A  
                   l3579 0FEA                     l3587 1040                     l3499 0E48  
                   l3827 349A                     l3819 3476                     l3853 2E56  
                   l3845 2DEA                     l3693 3346                     l3685 3328  
                   l3677 32F6                     l3669 32CC                     l4549 30B6  
                   l4581 2466                     l4573 2426                     l4645 29E0  
                   l4637 2998                     l4629 2940                     l4565 3BBC  
                   l4557 3D56                     l4661 3152                     l4653 310E  
                   l4741 17A2                     l4733 1716                     l4725 167A  
                   l4717 1638                     l4709 15EE                     l4805 2014  
                   l4821 38B4                     l3781 37D4                     l3941 1400  
                   l3933 13C4                     l3925 138A                     l3917 1340  
                   l3909 131C                     l3861 1216                     l3597 1094  
                   l3589 1066                     l3829 34A4                     l4901 235E  
                   l3855 2E68                     l3847 2E0A                     l3839 2D98  
                   l3695 334E                     l3687 332A                     l3679 3304  
                   l4591 24BC                     l4583 2486                     l4575 2434  
                   l4647 2A00                     l4639 29B8                     l4567 3BCE  
                   l4559 3D6E                     l4663 3166                     l4655 3122  
                   l4751 1814                     l4743 17C0                     l4735 171C  
                   l4727 1682                     l4719 1654                     l4823 38DA  
                   l4831 3A92                     l3791 380E                     l3783 37E2  
                   l3951 1446                     l3943 1412                     l3935 13D0  
                   l3927 1392                     l3919 135A                     l3871 1256  
                   l3863 1224                     l3599 10A2                     l4911 237E  
                   l4903 2360                     l3857 2E6A                     l3849 2E42  
                   l3689 3330                     l4681 2E9E                     l4593 24D0  
                   l4585 248A                     l4577 2454                     l4673 3C80  
                   l4569 3BD4                     l4665 316C                     l4657 3132  
                   l4761 184E                     l4753 1822                     l4745 17DA  
                   l4737 1722                     l4729 168C                     l4809 2020  
                   l4817 389E                     l4833 3AAE                     l4825 3A70  
                   l4841 39EE                     l3785 37E8                     l3777 37B2  
                   l3961 14A6                     l3945 1428                     l3953 1458  
                   l3937 13EE                     l3929 13A2                     l3881 127C  
                   l3873 1258                     l3865 1226                     l4921 23DC  
                   l4913 2398                     l4905 2362                     l4691 2EDE  
                   l4683 2EAA                     l4595 24DE                     l4587 2496  
                   l4579 2458                     l4675 3C9C                     l4667 3198  
                   l4659 313E                     l4755 1828                     l4763 185E  
                   l4747 17F4                     l4739 1786                     l4771 1E5E  
                   l4819 38A6                     l4827 3A82                     l4843 39F2  
                   l3787 37EC                     l3779 37C6                     l4851 3522  
                   l3971 1514                     l3955 1466                     l3947 142E  
                   l3939 13F0                     l3891 12BC                     l3883 128A  
                   l3867 1236                     l3875 1260                     l3859 1208  
                   l4923 23F2                     l4915 239A                     l4907 2378  
                   l4693 2EF2                     l4685 2EB8                     l4677 2E7E  
                   l4597 24F0                     l4589 24B4                     l4669 31AC  
                   l4757 183A                     l4749 1802                     l4773 1E70  
                   l4829 3A8A                     l4837 39C0                     l3789 380A  
                   l4861 358A                     l4853 3546                     l4845 34E2  
                   l3981 157E                     l3965 14D0                     l3973 1518  
                   l3957 146A                     l3949 1438                     l3893 12BE  
                   l3885 128C                     l3877 1270                     l3869 1246  
                   l4925 2408                     l4917 23B0                     l4909 237C  
                   l4695 2F06                     l4687 2ECA                     l4679 2E92  
                   l4599 251E                     l4759 1846                     l4783 1EE8  
                   l4775 1E74                     l4767 1E2C                     l4839 39DC  
                   l4855 3564                     l4847 3518                     l3983 1582  
                   l3975 1532                     l3967 14DC                     l3959 1478  
                   l3887 129C                     l3895 12C6                     l3879 1276  
                   l4919 23C6                     l4871 22A6                     l4863 2280  
                   l4927 3EF6                     l4697 2F0C                     l4793 1FB2  
                   l4785 1F0C                     l4777 1E98                     l4769 1E50  
                   l4857 3568                     l4849 351C                     l3985 1590  
                   l3977 1548                     l3969 14EA                     l3897 12D6  
                   l3889 12AC                     l4881 22F6                     l4873 22B8  
                   l4865 2288                     l4699 2F38                     l4795 1FD6  
                   l4787 1F30                     l4779 1ECC                     l4859 3586  
                   l3987 1596                     l3979 1562                     l3899 12EC  
                   l4891 2348                     l4883 230C                     l4875 22BA  
                   l4867 228A                     l4797 1FE4                     l4789 1F7A  
                   l3989 1598                     l3997 3B66                     l4893 234E  
                   l4885 2322                     l4877 22C8                     l4869 22A4  
                   l4799 1FF8                     l3999 3B78                     l4895 2354  
                   l4887 233C                     l4879 22E4                     l4897 235A  
                   l4889 2342                     l4899 235C                     STR_1 0859  
                   STR_2 0830                     STR_3 081F                     STR_4 0801  
                   STR_5 084C                     STR_6 083E                     u4000 3346  
                   _LATD 000F8C                     u4001 3342                     _LATE 000F8D  
                   u3400 3E3C                     u4200 12EC                     u4120 3476  
                   u3401 3E38                     u4201 12E8                     u4121 3472  
                   u3410 3E4A                     u4210 132C                     u4130 34C2  
                   u3411 3E46                     u4211 1328                     u4131 34BE  
                   u5100 2466                     u4300 14A6                     u4220 13A2  
                   u4140 1224                     u5101 2462                     u4301 14A2  
                   u4221 139E                     u4141 1220                     u5030 3046  
                   u4310 14BC                     u4230 13C4                     u4150 1236  
                   u5031 3042                     u5111 2490                     u4311 14B8  
                   u4231 13C0                     u4151 1232                     u5040 3058  
                   u5120 24B4                     u5200 2998                     u4320 14D0  
                   u4240 13EE                     u4160 1246                     u4400 2D3A  
                   u3600 0DDC                     u5041 3054                     u5121 24B0  
                   u5201 2994                     u4321 14CC                     u4241 13EA  
                   u4161 1242                     u4401 2D36                     u3601 0DD8  
                   u5050 3080                     u5130 24DE                     u5210 29E0  
                   u4090 380A                     u4330 14EA                     u4250 1412  
                   u4170 128A                     u4410 2D8A                     u3610 0DEE  
                   u5051 307C                     u5131 24DA                     u5211 29DC  
                   u4091 3806                     u4331 14E6                     u4251 140E  
                   u4171 1286                     u4411 2D86                     u3611 0DEA  
                   u5060 30B6                     u5300 2F2A                     u5140 251E  
                   u5220 310E                     u4340 1532                     u4260 1428  
                   u4180 129C                     u3700 0F36                     u3620 0DFE  
                   u4420 2B9E                     u3540 3DA8                     u5061 30B2  
                   u5301 2F26                     u5141 251A                     u5221 310A  
                   u4341 152E                     u4261 1424                     u4181 1298  
                   u3701 0F32                     u3621 0DFA                     u4421 2B9A  
                   u3541 3DA2                     u5310 2F38                     u5150 2568  
                   u5070 3D6E                     u5230 3132                     u4350 1562  
                   u4270 1446                     u4190 12AC                     u3710 0F44  
                   u3630 0E3A                     u4430 2BD2                     u5311 2F34  
                   u5151 2564                     u5071 3D6A                     u5231 312E  
                   u4351 155E                     u4271 1442                     u4191 12A8  
                   u3711 0F40                     u3631 0E36                     u5160 28D0  
                   u5080 3BF4                     u5240 318A                     u5400 17C0  
                   u5320 15D6                     u4360 1590                     u4280 1466  
                   u3800 10A2                     u3720 0F54                     u3640 0E48  
                   u3560 0D62                     u4440 2C00                     u5161 28CC  
                   u5081 3BF0                     u5241 3186                     u5401 17BC  
                   u5321 15D0                     u4361 158C                     u4281 1462  
                   u3801 109E                     u3721 0F50                     u3641 0E44  
                   u3561 0D5E                     u4441 2BFC                     u5090 2434  
                   u5170 2902                     u5250 3198                     u5410 17DA  
                   u5330 15D8                     u4290 1478                     u4370 2CBE  
                   u3810 10B2                     u3730 0F86                     u3650 0EB6  
                   u3570 0D74                     u4450 2C14                     u5091 2430  
                   u5171 28FE                     u5251 3194                     u5411 17D6  
                   u4291 1474                     u4371 2CBA                     u3811 10AE  
                   u3731 0F82                     u3651 0EB2                     u3571 0D70  
                   u4451 2C10                     u4435 2BC8                     u3555 3DAA  
                   _PEIE 007F96                     u5180 2940                     u5260 3C9C  
                   u5420 17F4                     u5340 15EE                     u5500 1F30  
                   u4380 2CFC                     u3900 1196                     u3820 10CE  
                   u3740 0F94                     u3660 0ECE                     u3580 0D84  
                   u4460 2C3C                     u5181 293C                     u5261 3C98  
                   u5421 17F0                     u5341 15EA                     u5501 1F2C  
                   u4381 2CF8                     u3901 1192                     u3821 10CA  
                   u3741 0F90                     u3661 0EC8                     u3581 0D80  
                   u4461 2C38                     u5270 2E92                     u5190 296A  
                   u5430 1802                     u5350 161C                     u5510 1FD6  
                   u4390 2D1A                     u3910 11A6                     u3830 10DE  
                   u3750 0FB2                     u3670 0ED0                     u3590 0DC6  
                   u4470 2C5C                     u5271 2E8E                     u5191 2966  
                   u5431 17FE                     u5351 1618                     u5511 1FD2  
                   u4391 2D16                     u3911 11A2                     u3831 10DA  
                   u3751 0FAE                     u3591 0DC2                     u4471 2C58  
                   u5280 2EB8                     u5440 1814                     u5360 1638  
                   u5520 38F6                     u3920 11C6                     u3840 10F0  
                   u3760 0FEA                     u3680 0EF8                     u4480 2C6C  
                   u4560 1BA2                     u5281 2EB4                     u5441 1810  
                   u5361 1634                     u5521 38F2                     u3921 11C2  
                   u3841 10EC                     u3761 0FE6                     u3681 0EF4  
                   u4481 2C68                     u4561 1B9E                     u5290 2EDA  
                   u5450 1822                     u5370 1666                     u5530 39DC  
                   u3930 11D8                     u3850 1106                     u3770 1030  
                   u3690 0F16                     u4570 1BE6                     u5291 2ED6  
                   u5451 181E                     u5371 1662                     u5531 39D8  
                   u3931 11D4                     u3851 1102                     u3771 102C  
                   u3691 0F12                     u4571 1BE2                     _RCIE 007CED  
                   u5460 183A                     u5380 1674                     u5540 3A16  
                   u3940 11F4                     u3860 111C                     u3780 1066  
                   u4580 1D12                     _RCIF 007CF5                     _RCEN 007E2B  
                   u5461 1836                     u5381 1670                     u5541 3A12  
                   u3941 11F0                     u3861 1118                     u3781 1062  
                   u4581 1D0E                     u3950 32A6                     u5390 17A2  
                   u5470 1E50                     u3870 1130                     u3790 1076  
                   u4590 1D56                     u3951 32A2                     u5391 179E  
                   u5471 1E4C                     u5607 3596                     u3871 112C  
                   u3791 1072                     u4591 1D52                     u3960 32C0  
                   u5480 1E98                     u3880 114A                     u3961 32BC  
                   u5481 1E94                     u5617 381A                     u3881 1146  
                   u3970 32E6                     u5490 1F0C                     u3890 1184  
                   u5627 2DB4                     u3971 32E2                     u5491 1F08  
                   u3891 1180                     u3980 3304                     u5637 2DE0  
                   u3981 3300                     u5557 22EC                     u3990 3320  
                   u5647 2E12                     u3991 331C                     u5567 232E  
                   u5657 2E4A                     u5577 238A                     u5667 2E5E  
                   u5587 1DFE                     u5677 2E72                     u5597 34D2  
                   _RSEN 007E29                     _TXIF 007CF4        mover_servo@angulo 018F  
                   abs@a 008F                     _dbuf 0142                     _dato 0118  
                   _flag 00D9                     _atoi 25AA                     _coor 00CE  
                   _ctoa 2E7E                     _main 3EF6                     _dtoa 15A4  
             i2_readyI2C 3E74                     _prec 00CA                     _nout 00C6  
                   pad@i 0094                     pad@p 0091                     _text 011A  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 0096                     map@x 008B  
                   fsr2l 000FD9                     btemp 005F                     prodh 000FF4  
                   prodl 000FF3                     start 000E          ___fldiv@new_exp 008E  
        __end_ofi2_fputc 3292          __end_ofi2_fputs 3C80          __end_ofi2_putch 3F3C  
        __end_ofi2_start 3A70             ___param_bank 000000                    ??_LCD 007D  
             i2_startI2C 3F2E                    ??_abs 0091                    ??_map 0095  
                  ??_pad 0093    __end_ofi2_mover_servo 3724               i2_vfprintf 3900  
             i2_writeI2C 382A          writeI2C@Address 0086            ___fltol@sign1 0085  
        __end_of___aodiv 25AA                    ?_atoi 000F                    ?_ctoa 0086  
        __end_of___fladd 1208                    ?_main 0001                    ?_dtoa 0098  
        __end_of___aomod 2A22                    _ACKEN 007E2C                    _ACKDT 007E2D  
        __end_of___fldiv 15A4          __end_of___awdiv 3358          __end_of___flsub 3BAE  
        __end_of___fltol 2C8E          ___awdiv@divisor 007F                    _LATE0 007C68  
                  _LATE1 007C69        setPWMFreq@newmode 009C                    i2l212 0D44  
                  i2l223 3A26                    i2l305 3EBE                    i2l233 389C  
                  i2l161 08B0                    i2l242 3E98                    i2l218 3782  
                  i2l227 3A6E                    i2l236 3F34                    i2l245 3F0C  
                  i2l173 09DC                    i2l432 2B84                    i2l248 3F2C  
                  i2l193 0B5C                    i2l275 3D02                    i2l419 28BA  
                  i2l278 3722                    i2l536 3668          ___awdiv@counter 0081  
                  _RCREG 000FAE                    _RCSTA 000FAB             vfpfcnvrt@fmt 00BE  
                  _SPBRG 000FAF                    _TRISD 000F95                    _TRISE 000F96  
                  i2_abs 3D04                    _TXREG 000FAD                    _TXSTA 000FAC  
                  i2_pad 3358                    i2_map 3CC2              readI2C@Data 0081  
                  _Angle 00D0                    _data1 00DF                    _data2 00DA  
        __end_of_readI2C 34E2                    _angle 016B                    _flags 00CC  
                  _fputc 3032                    _fputs 3BAE          __end_of_isdigit 3DEE  
        __end_of_sendI2C 3EEA          __end_of_receive 37AE                    atoi@n 001C  
                  pad@fp 008D                    atoi@s 000F                    _width 00C8  
                  ctoa@c 0088                    _putch 3F38                    ctoa@l 008A  
                  _start 39C0                    ctoa@w 008C                    dtoa@d 009A  
                  dtoa@i 00BA                    dtoa@n 00B2                    dtoa@p 00AC  
                  dtoa@s 00B0                    dtoa@w 00AE          __end_of_isspace 3B66  
                  tablat 000FF5         __end_ofi2___wmul 3EC0          __end_of_stopI2C 3F1E  
                  ttemp5 0060                    ttemp6 0063                    ttemp7 0067  
                  status 000FD8                    wtemp8 0060          __end_of_sprintf 3AC2  
     __size_ofi2___aodiv 0188       __size_ofi2___aomod 0164       __size_ofi2___awdiv 00C4  
            i2map@In_Max 0013              i2map@In_Min 0011         __end_ofi2_strlen 3E24  
        __initialization 3962             __end_of_atoi 2734             __end_of_ctoa 2F5A  
           __end_of_main 3F02             __end_of_dtoa 1888       __size_ofi2_sendI2C 000C  
            i2_vfpfcnvrt 205A    __end_of_repeatedStart 3F16            i2vfpfcnvrt@ap 0044  
          i2vfpfcnvrt@fp 0040            i2vfpfcnvrt@ll 0048                   ??_atoi 0011  
                 ??_ctoa 0089                   ??_main 00C6                   ??_dtoa 00A2  
          __activetblptr 000002       __size_ofi2_stopI2C 0008               i2sprintf@f 0064  
             i2sprintf@s 0059       __size_ofi2_sprintf 0052                   ?i2_abs 0013  
                 ?i2_pad 0011                   ?i2_map 000F           receiveI2C@flag 007E  
                 _ADCON1 000FC1                   ?_fputc 007D                   ?_fputs 0086  
       ___awdiv@dividend 007D                   ?_putch 0001                   ?_start 0001  
                 i2l1010 3DEC                   i2l1004 272A                   i2l1102 1B6A  
                 i2l1007 2732                   i2l1121 3D3A                   i2l1018 3B64  
                 i2l1107 227E                   i2l1124 3D42                   i2l1060 341C  
                 i2l1116 3958                   i2l1028 3B12                   i2l1117 3960  
                 i2l1071 2FC0                   i2l1055 339E                   i2l1136 3290  
                 i2l1144 3C7E                   i2l1153 3E22                   i2l1074 3002  
                 i2l1058 33E0                   i2l1082 1928                   i2l1147 3F3A  
                 i2l1076 3030                   i2l1084 1930                   i2l3021 2746  
                 i2l3101 337C                   i2l3031 279C                   i2l3023 2766  
                 i2l3111 33C2                   i2l3103 338A                   i2l3041 27F0  
                 i2l3033 27A8                   i2l3025 276A                   i2l3017 2734  
                 i2l3121 3D1E                   i2l3113 33F0                   i2l3105 3396  
                 i2l3051 2864                   i2l3043 2802                   i2l3035 27C6  
                 i2l3027 2778                   i2l3019 2738                   i2l3115 3404  
                 i2l3107 33AA                   i2l3221 2F94                   i2l3213 2F5A  
                 i2l3045 2830                   i2l3037 27CE                   i2l3053 286A  
                 i2l3029 2798                   i2l3061 2A22                   i2l3109 33BE  
                 i2l4101 385C                   i2l3231 2FE0                   i2l3223 2FA6  
                 i2l3215 2F6E                   i2l3055 287A                   i2l3047 2850  
                 i2l3039 27E2                   i2l3071 2A66                   i2l3063 2A26  
                 i2l3119 3D04                   i2l4103 3862                   i2l4201 2618  
                 i2l3233 2FE4                   i2l3217 2F7A                   i2l3057 289A  
                 i2l3049 2852                   i2l3081 2ACE                   i2l3073 2A86  
                 i2l3065 2A34                   i2l3241 1888                   i2l3401 222E  
                 i2l4121 3B00                   i2l4113 3AC2                   i2l4105 3880  
                 i2l4211 2644                   i2l3235 3012                   i2l3227 2FB8  
                 i2l3219 2F86                   i2l3091 2B44                   i2l3083 2AFC  
                 i2l3075 2AA4                   i2l3067 2A54                   i2l3251 1902  
                 i2l3243 18A8                   i2l3403 223C                   i2l4115 3AD4  
                 i2l4107 3884                   i2l4221 26EA                   i2l4213 2676  
                 i2l4205 261E                   i2l4109 3CC2                   i2l3237 3024  
                 i2l3229 2FCC                   i2l3093 2B64                   i2l3085 2B1C  
                 i2l3077 2AAC                   i2l3069 2A58                   i2l3261 195E  
                 i2l3253 191C                   i2l3245 18D0                   i2l4117 3ADC  
                 i2l4071 3B18                   i2l4223 26FC                   i2l4207 2634  
                 i2l3087 2B2E                   i2l3079 2AC0                   i2l3271 19FE  
                 i2l3263 1966                   i2l3255 1938                   i2l3247 18F0  
                 i2l3407 2248                   i2l4119 3AE4                   i2l4231 366A  
                 i2l4081 3DB6                   i2l4073 3B2C                   i2l4225 270E  
                 i2l4217 26AE                   i2l4209 263C                   i2l3089 2B34  
                 i2l3097 3358                   i2l3281 1ABA                   i2l3273 1A04  
                 i2l3265 1970                   i2l3257 194A                   i2l3249 1900  
                 i2l3409 226C                   i2l3361 3E74                   i2l4241 36E4  
                 i2l4233 369E                   i2l4401 0B50                   i2l4321 089A  
                 i2l4313 0864                   i2l4075 3B5A                   i2l3099 3368  
                 i2l3291 1B0C                   i2l3283 1AD4                   i2l3267 1976  
                 i2l3275 1A68                   i2l3259 1958                   i2l3371 209E  
                 i2l4091 3A4A                   i2l3363 3E8A                   i2l4243 36E8  
                 i2l4235 36A2                   i2l4411 0BA0                   i2l4403 0B5C  
                 i2l4331 08F0                   i2l4323 08AC                   i2l4315 0878  
                 i2l4077 3B5E                   i2l4069 3B14                   i2l2901 3DEE  
                 i2l3293 1B1E                   i2l3277 1A82                   i2l3285 1AE4  
                 i2l3269 19F8                   i2l3381 2114                   i2l3373 20A2  
                 i2l3365 205A                   i2l4085 3A18                   i2l4093 382C  
                 i2l4245 3704                   i2l4237 36A8                   i2l4413 0BBC  
                 i2l4421 0BFC                   i2l4405 0B74                   i2l4341 0938  
                 i2l4333 08FC                   i2l4325 08C0                   i2l4317 0880  
                 i2l4191 25BE                   i2l2903 3DFA                   i2l3295 1B2A  
                 i2l3287 1AF6                   i2l3279 1AA0                   i2l3391 21DC  
                 i2l3383 2138                   i2l3375 20C6                   i2l3367 207E  
                 i2l4087 3A34                   i2l3359 3E74                   i2l3711 3F04  
                 i2l4095 383C                   i2l4247 3708                   i2l4239 36C8  
                 i2l4431 0C5C                   i2l4423 0C18                   i2l4415 0BC0  
                 i2l4407 0B86                   i2l4351 0986                   i2l4343 094A  
                 i2l4335 090E                   i2l4327 08D2                   i2l4319 0892  
                 i2l3721 3EB6                   i2l4193 25C2                   i2l2905 3DFE  
                 i2l3297 1B32                   i2l3289 1B06                   i2l3393 2200  
                 i2l3385 215C                   i2l3377 20F8                   i2l3369 208C  
                 i2l4089 3A46                   i2l3713 3F08                   i2l4097 384A  
                 i2l4441 0CC0                   i2l4425 0C34                   i2l4433 0C74  
                 i2l4417 0BD0                   i2l4409 0B8E                   i2l4361 0A0A  
                 i2l4353 0998                   i2l4345 0956                   i2l4337 091A  
                 i2l4329 08DE                   i2l4195 25C6                   i2l3731 35C0  
                 i2l2907 3E16                   i2l3299 1B42                   i2l3395 220E  
                 i2l3387 21A4                   i2l3707 3F2E                   i2l3715 3F26  
                 i2l4099 3858                   i2l4443 0CD4                   i2l4435 0C90  
                 i2l4427 0C38                   i2l4419 0BE4                   i2l4371 0A62  
                 i2l4363 0A1A                   i2l4347 0968                   i2l4339 092C  
                 i2l4355 09E0                   i2l4197 25E0                   i2l4189 25AA  
                 i2l3741 35E6                   i2l3733 35C4                   i2l3725 35A6  
                 i2l2861 31C8                   i2l3397 2222                   i2l3709 3F32  
                 i2l3717 3F2A                   i2l4453 0CFC                   i2l4445 0CE8  
                 i2l4437 0CAC                   i2l4429 0C48                   i2l4381 0AB2  
                 i2l4373 0A6A                   i2l4365 0A44                   i2l4357 09F0  
                 i2l4349 0974                   i2l3719 3E9A                   i2l4199 2614  
                 i2l3751 361C                   i2l3743 35F8                   i2l3735 35D2  
                 i2l3727 35AA                   i2l2871 324A                   i2l2863 31DA  
                 i2l4455 0D22                   i2l4439 0CB0                   i2l4391 0AFC  
                 i2l4383 0ABE                   i2l4375 0A7E                   i2l4367 0A48  
                 i2l4359 09F8                   i2l4447 0CF2                   i2l4471 377A  
                 i2l3753 3632                   i2l3745 3600                   i2l3761 3648  
                 i2l3737 35DA                   i2l3729 35B8                   i2l2865 31EC  
                 i2l4457 0D28                   i2l4393 0B10                   i2l4385 0AD0  
                 i2l4377 0A9A                   i2l4369 0A4E                   i2l4473 377E  
                 i2l4465 374E                   i2l3763 3658                   i2l3755 363A  
                 i2l3747 3608                   i2l3739 35DE                   i2l2867 31F6  
                 i2l3771 3908                   i2l4395 0B1C                   i2l4387 0ADC  
                 i2l4379 0A9E                   i2l4467 375C                   i2l3765 3660  
                 i2l3757 363C                   i2l3749 3616                   i2l2869 3214  
                 i2l2893 3C3C                   i2l3773 3916                   i2l4397 0B30  
                 i2l4389 0AF0                   i2l4469 3760                   i2l3759 3642  
                 i2l2895 3C48                   i2l3775 393C                   i2l4399 0B3C  
                 i2l2897 3C5A                   i2l3769 3900                   i2l2899 3C5E  
                 i2l4949 2660                ??i2_fputc 0005                ??i2_fputs 000E  
                 _OSCCON 000FD3                ??i2_putch 0001                ??i2_start 0005  
                 _SSPADD 000FC8              ?i2_readyI2C 0001                   _SSPBUF 000FC9  
     setPWMFreq@prescale 009B           i2___aodiv@sign 0012                   i2abs@a 0013  
                 i2_ctoa 2F5A                   i2_dtoa 1888                   i2pad@i 0018  
                 i2pad@p 0015                   i2pad@w 001A                   i2map@x 000F  
       __end_of_algoritm 0D46             vfprintf@cfmt 00C4          i2writeI2C@bytes 0006  
           readI2C@bytes 0083                   ___flge 2C8E           i2___aomod@sign 0012  
              ??___aodiv 008D            i2vfprintf@fmt 0053                ??___fladd 0085  
              ??___aomod 008D                   ___wmul 3E4C         writeI2C@Register 007F  
              ??___fldiv 0085                ??___awdiv 0081              ?i2_startI2C 0001  
              ??___flsub 0095                ??___fltol 0081             ?_mover_servo 018D  
            ?i2_vfprintf 0051         __end_of_readyI2C 3E4C                   clear_0 39A0  
                 clear_1 39AC         ___awdiv@quotient 0083              ?i2_writeI2C 0003  
                 _servos 00E0                   pad@buf 008F                   ctoa@fp 0086  
                 dtoa@fp 0098                   _strlen 3D44           i2___awdiv@sign 0006  
              ??_readI2C 0085                   fputc@c 007D                   fputs@c 008A  
                 fputs@i 008B        __end_ofi2___aodiv 28BC                   fputs@s 0086  
              ??_isdigit 0003        __end_ofi2___aomod 2B86                ??_sendI2C 007E  
      __end_ofi2___awdiv 366A                ??_receive 0073             __mediumconst 0000  
              ??_isspace 0003            ??_SettingsLCD 007F         __end_of_settings 2420  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_startI2C 3F26                   putch@c 0001       i2___aomod@dividend 0001  
              ??_stopI2C 007E         __end_of_vfprintf 3900                ??_sprintf 00C6  
       __end_of_writeI2C 382A              sendI2C@data 007E               ___flge@ff1 007D  
             ___flge@ff2 0081        __end_ofi2_sendI2C 3F0E               __accesstop 0060  
__end_of__initialization 39B2            ___rparam_used 000001        __end_ofi2_stopI2C 3F2E  
             ___fltol@f1 007D           setPWMFreq@freq 0096        __end_ofi2_sprintf 3B14  
          __end_ofi2_abs 3D44            __end_ofi2_map 3D04            __end_ofi2_pad 341E  
         __pcstackCOMRAM 0001             __pidataBANK0 3F36             __pidataBANK1 3EEA  
          __end_of_fputc 30FE            __end_of_fputs 3BF6             i2map@Out_Max 0017  
           i2map@Out_Min 0015            __end_of_putch 3F3A            __end_of_start 3A18  
              ?i2___wmul 0009      __size_ofi2_readyI2C 0026                  ??i2_abs 0015  
                ??i2_map 0019                  ??i2_pad 0017           i2vfpfcnvrt@fmt 0042  
              ?i2_strlen 0001                  ??_fputc 0081                  ??_fputs 008A  
                ??_putch 007D                  ??_start 0081                  LCD@data 007E  
             __pbssBANK0 00C6               __pbssBANK1 0100      __size_ofi2_startI2C 0008  
            i2sprintf@ap 0062      __size_ofi2_vfprintf 0062      __end_of_SettingsLCD 3EDC  
    __size_ofi2_writeI2C 0074                  ?i2_ctoa 000A                  ?i2_dtoa 001C  
                ?___flge 007D             _angle_servos 0195                  ?___wmul 0085  
                ?_strlen 007D               ??i2___wmul 000D       __size_of_vfpfcnvrt 022E  
              ?_algoritm 0001               ??i2_strlen 0003                  _SSPCON1 000FC6  
                _SSPCON2 000FC5                  _SSPSTAT 000FC7                  i2_fputc 31C8  
                i2_fputs 3C3C                  i2pad@fp 0011                  i2ctoa@c 000C  
                i2_putch 3F3A                  i2ctoa@l 000E                  i2_start 3A18  
                i2ctoa@w 0010                  i2dtoa@d 001E                  i2dtoa@i 003E  
                i2dtoa@n 0036                  i2dtoa@p 0030                  i2dtoa@s 0034  
                i2dtoa@w 0032             writeI2C@Data 0080                ?_readyI2C 0001  
        __size_ofi2_ctoa 00D8          __size_ofi2_dtoa 02E4                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 0106                ?_settings 0001  
                ___aodiv 2420                  ___fladd 0D46                  ___aomod 28BC  
                ___fldiv 1208                  ___awdiv 3292                ?_startI2C 0001  
                ___flsub 3B66                  ___fltol 2B86          __size_of___wmul 0028  
              ?_vfprintf 0177           i2vfprintf@cfmt 0057             __psmallconst 0800  
           ?i2_vfpfcnvrt 0040                  __pcinit 3962                ?_writeI2C 007F  
                __ramtop 0800     __size_of_mover_servo 00C4                  __ptext0 3EF6  
                __ptext1 2280                  __ptext2 1B6C                  __ptext3 341E  
                __ptext4 3F0E                  __ptext5 3D7E                  __ptext6 2B86  
                __ptext7 3B66                  __ptext8 0D46                  __ptext9 2C8E  
           __size_of_LCD 00EA                  _readI2C 341E          __size_of_strlen 003A  
           __size_of_abs 0042               _receiveI2C 3D7E             __size_of_map 0046  
           __size_of_pad 00CA                  _isdigit 3DB6                  _sendI2C 3EDC  
                _receive 0008               _setPWMFreq 1B6C                  _isspace 3B14  
            _SettingsLCD 3EC0               ??_algoritm 0070                  atoi@neg 0015  
           _Coordinate_x 0112             _Coordinate_y 0114             _Coordinate_z 0110  
                _stopI2C 3F16                  _sprintf 3A70           __pintcode_body 3724  
   end_of_initialization 39B2   __size_ofi2_mover_servo 00BA                  fputc@fp 007F  
           ??i2_readyI2C 0001            __Lmediumconst 0000               ??_readyI2C 007D  
                int_func 3724                  fputs@fp 0088      i2___wmul@multiplier 0009  
      __end_of_vfpfcnvrt 205A                  postdec1 000FE5                  postdec2 000FDD  
             ??_settings 0193                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE             ??i2_startI2C 0002               ??_startI2C 007E  
             map@Out_Max 0093               map@Out_Min 0091             ??i2_vfprintf 0057  
             ??_vfprintf 00C4                  strlen@a 007F                  strlen@s 007D  
           ??i2_writeI2C 0008               ??_writeI2C 0084                _PORTBbits 000F81  
      i2___aodiv@divisor 0009              ___fladd@grs 008C       __end_ofi2_readyI2C 3E9A  
      i2___aodiv@counter 0011    setPWMFreq@prescaleval 009D                _TRISBbits 000F93  
              _TRISCbits 000F94              ___fldiv@grs 0090              ___fldiv@rem 0089  
              i2___aodiv 2734                i2___aomod 2A22                i2___awdiv 35A6  
     __end_ofi2_startI2C 3F36       __end_ofi2_vfprintf 3962             _coordinate_x 0168  
           _coordinate_y 0165             _coordinate_z 0162   __size_of_repeatedStart 0008  
     i2___awdiv@dividend 0001       __end_ofi2_writeI2C 389E                i2_sendI2C 3F02  
       mover_servo@servo 018D           __end_ofi2_ctoa 3032           __end_ofi2_dtoa 1B6C  
              i2_stopI2C 3F26                i2_sprintf 3AC2           __end_of___flge 2D94  
            vfpfcnvrt@ap 00C0              vfpfcnvrt@fp 00BC              vfpfcnvrt@ll 016E  
         __end_of___wmul 3E74            i2_mover_servo 366A                i2fputc@fp 0003  
              i2fputs@fp 000C       i2writeI2C@Register 0003         i2___wmul@product 000D  
            ?_receiveI2C 0001                _DriverPin 0116           __end_of_strlen 3D7E  
        readI2C@Register 0080              ?_setPWMFreq 0096      start_initialization 3962  
            __end_of_LCD 2E7E       i2___awdiv@quotient 0007        __size_ofi2___wmul 0026  
            __end_of_abs 3CC2              __end_of_map 3C3C              __end_of_pad 31C8  
             ?i2___aodiv 0001               ?i2___aomod 0001               ?i2___awdiv 0001  
           i2vfpfcnvrt@c 0050        __size_ofi2_strlen 0036                i2strlen@a 0003  
              i2strlen@s 0001                 ??i2_ctoa 000D                 ??i2_dtoa 0026  
             ?i2_sendI2C 0001           i2writeI2C@Data 0004              vfprintf@fmt 0179  
           i2vfprintf@ap 0055             i2vfprintf@fp 0051                 ??___flge 0085  
             ?i2_stopI2C 0001                 ??___wmul 0089               ?i2_sprintf 0059  
            __pdataBANK0 00E0              __pdataBANK1 0195           ?i2_mover_servo 006A  
      i2___aomod@divisor 0009            _repeatedStart 3F0E                 ??_strlen 007F  
      i2___aomod@counter 0011                ___fladd@a 0081                ___fladd@b 007D  
   __size_ofi2_vfpfcnvrt 0226                ___fldiv@a 0081                ___fldiv@b 007D  
           i2sprintf@fmt 005B                ___flsub@a 0091                ___flsub@b 008D  
          __pcstackBANK0 0060            __pcstackBANK1 016E         ___aodiv@dividend 007D  
      __size_of_algoritm 04E2                 ?i2_fputc 0001                 ?i2_fputs 000A  
               ?i2_putch 0001                 ?i2_start 0001        __size_of_readyI2C 0028  
    __size_of_receiveI2C 0038      __size_of_setPWMFreq 02C0         receiveI2C@buffer 007F  
              __pintcode 0008                 ?___aodiv 007D                 ?___fladd 007D  
               ?___aomod 007D                 ?___fldiv 007D                 ?___awdiv 007D  
       ___aodiv@quotient 008F                 ?___flsub 008D                 ?___fltol 007D  
      __size_of_settings 01A0        __size_of_startI2C 0008           ?_repeatedStart 0001  
      __size_of_vfprintf 0062                 ?_readI2C 0080              __smallconst 0800  
      __size_of_writeI2C 007C                 ?_isdigit 0001                 ?_sendI2C 0001  
               ?_receive 0001           __size_ofi2_abs 0040           __size_ofi2_map 0042  
         __size_ofi2_pad 00C6                 ?_isspace 0001             ?_SettingsLCD 0001  
               ?_stopI2C 0001              ??i2___aodiv 0011              ??i2___aomod 0011  
            ??i2___awdiv 0005                 ?_sprintf 017D           __size_of_fputc 00CC  
         __size_of_fputs 0048           __size_of_putch 0002           __size_of_start 0058  
         ___wmul@product 0089                 _LATDbits 000F8C              ??i2_sendI2C 0002  
              algoritm@i 0071                map@In_Max 008F                map@In_Min 008D  
               i2u320_40 2F6E                 i2u320_41 2F6A                 i2u321_40 2F94  
               i2u321_41 2F90                 i2u402_40 35B8                 i2u322_40 2FB4  
               i2u330_40 194A                 i2u402_41 35B4                 i2u322_41 2FB0  
               i2u330_41 1946                 i2u403_40 35D2                 i2u323_40 3002  
               i2u331_40 1958                 i2u403_41 35CE                 i2u323_41 2FFE  
               i2u331_41 1954                 i2u404_40 35F8                 i2u324_40 3012  
               i2u332_40 1A82                 i2u404_41 35F4                 i2u324_41 300E  
               i2u332_41 1A7E                 i2u405_40 3616                 i2u333_40 1AA0  
               i2u325_40 18B8                 i2u405_41 3612                 i2u333_41 1A9C  
               i2u325_41 18B2                 i2u406_40 3632                 i2u262_40 3C7E  
               i2u334_40 1ABA                 i2u326_40 18BA                 i2u350_40 20C6  
               i2u406_41 362E                 i2u262_41 3C7A                 i2u334_41 1AB6  
               i2u350_41 20C2                 i2u407_40 3658                 i2u263_40 3E16  
               i2u335_40 1AD4                 i2u327_40 18D0                 i2u351_40 2138  
               i2u407_41 3654                 i2u263_41 3E12                 i2u335_41 1AD0  
               i2u327_41 18CC                 i2u351_41 2134                 i2u256_40 31DA  
               i2u336_40 1AE4                 i2u328_40 1900                 i2u352_40 215C  
               i2u408_40 3958                 i2u256_41 31D6                 i2u336_41 1AE0  
               i2u328_41 18FC                 i2u352_41 2158                 i2u408_41 3954  
               i2u257_40 31EC                 i2u337_40 1AF6                 i2u329_40 191C  
               i2u353_40 2200                 i2u257_41 31E8                 i2u337_41 1AF2  
               i2u329_41 1918                 i2u353_41 21FC                 i2u450_40 3B5A  
               i2u258_40 3214                 i2u282_40 2746                 i2u290_40 2A66  
               i2u338_40 1B06                 i2u450_41 3B56                 i2u258_41 3210  
               i2u282_41 2742                 i2u290_41 2A62                 i2u338_41 1B02  
               i2u451_40 3DE6                 i2u259_40 324A                 i2u283_40 2778  
               i2u291_40 2AA4                 i2u339_40 1B1E                 i2u347_40 3E8A  
               i2u451_41 3DE0                 i2u259_41 3246                 i2u283_41 2774  
               i2u291_41 2AA0                 i2u339_41 1B1A                 i2u347_41 3E86  
               i2u452_40 3DE8                 i2u460_40 25E0                 i2u292_40 2ACE  
               i2u348_40 3E98                 i2u460_41 25DC                 i2u284_41 27A2  
               i2u292_41 2ACA                 i2u348_41 3E94                 i2u461_40 2614  
               i2u285_40 27C6                 i2u293_40 2AFC                 i2u349_40 207E  
               i2u453_40 3A34                 i2u461_41 2610                 i2u285_41 27C2  
               i2u293_41 2AF8                 i2u349_41 207A                 i2u453_41 3A30  
               i2u462_40 2630                 i2u286_40 27F0                 i2u294_40 2B44  
               i2u454_40 3A6E                 i2u470_40 08C0                 i2u462_41 262C  
               i2u286_41 27EC                 i2u294_41 2B40                 i2u454_41 3A6A  
               i2u470_41 08BC                 i2u463_40 26E4                 i2u287_40 2830  
               i2u295_40 3368                 i2u455_40 3880                 i2u471_40 08D2  
               i2u463_41 26DE                 i2u287_41 282C                 i2u295_41 3364  
               i2u455_41 387C                 i2u471_41 08CE                 i2u464_40 26E6  
               i2u288_40 287A                 i2u296_40 338A                 i2u480_40 0A0A  
               i2u472_40 08F0                 i2u288_41 2876                 i2u296_41 3386  
               i2u480_41 0A06                 i2u472_41 08EC                 i2u449_40 3B2C  
               i2u465_40 26FC                 i2u289_40 2A34                 i2u297_40 33E0  
               i2u481_40 0A62                 i2u473_40 090E                 i2u449_41 3B28  
               i2u465_41 26F8                 i2u289_41 2A30                 i2u297_41 33DC  
               i2u481_41 0A5E                 i2u473_41 090A                 i2u466_40 270E  
               i2u298_40 33F0                 i2u490_40 0BBC                 i2u482_40 0AB2  
               i2u474_40 092C                 i2u466_41 270A                 i2u298_41 33EC  
               i2u490_41 0BB8                 i2u482_41 0AAE                 i2u474_41 0928  
               i2u299_40 3D1E                 i2u491_40 0BE4                 i2u483_40 0AD0  
               i2u475_40 094A                 i2u467_40 0878                 i2u299_41 3D1A  
               i2u491_41 0BE0                 i2u483_41 0ACC                 i2u475_41 0946  
               i2u467_41 0874                 i2u492_40 0C18                 i2u484_40 0AF0  
               i2u476_40 0968                 i2u468_40 0892                 i2u492_41 0C14  
               i2u484_41 0AEC                 i2u476_41 0964                 i2u468_41 088E  
               i2u493_40 0C34                 i2u485_40 0B10                 i2u477_40 0986  
               i2u469_40 08AC                 i2u493_41 0C30                 i2u485_41 0B0C  
               i2u477_41 0982                 i2u469_41 08A8                 i2u494_40 0C5C  
               i2u486_40 0B30                 i2u478_40 0998                 i2u494_41 0C58  
               i2u486_41 0B2C                 i2u478_41 0994                 i2u495_40 0C90  
               i2u487_40 0B50                 i2u479_40 09F0                 i2u495_41 0C8C  
               i2u487_41 0B4C                 i2u479_41 09EC                 i2u496_40 0CAC  
               i2u488_40 0B86                 i2u496_41 0CA8                 i2u488_41 0B82  
               i2u568_47 3714                 i2u497_40 0CD4                 i2u489_40 0BA0  
               i2u497_41 0CD0                 i2u489_41 0B9C                 i2u569_47 388E  
               i2u498_40 0D44                 i2u498_41 0D40                 i2u499_40 375C  
               i2u499_41 3758              ??i2_stopI2C 0002          ??i2_mover_servo 006E  
            ??i2_sprintf 005F            ??_mover_servo 0191                _vfpfcnvrt 1E2C  
              _texto_LCD 0100      i2mover_servo@angulo 006C        ___wmul@multiplier 0085  
               i2___wmul 3E9A        i2writeI2C@Address 000A           readI2C@Address 0087  
      i2___awdiv@divisor 0003        i2___awdiv@counter 0005                 i2pad@buf 0013  
               i2ctoa@fp 000A                 i2dtoa@fp 001C                 i2_strlen 3DEE  
             vfpfcnvrt@c 0176                copy_data0 3976                 i2fputc@c 0001  
               i2fputs@c 000E                 i2fputs@i 000F                 i2fputs@s 000A  
          writeI2C@bytes 0082         __size_ofi2_fputc 00CA         __size_ofi2_fputs 0044  
       __size_ofi2_putch 0002         __size_ofi2_start 0058                 __Hrparam 0000  
             vfprintf@ap 017B                 __Lrparam 0000               vfprintf@fp 0177  
        ??_repeatedStart 007E         __size_of___aodiv 018A         __size_of___fladd 04C2  
       __size_of___aomod 0166         __size_of___fldiv 039C         __size_of___awdiv 00C6  
       __size_of___flsub 0048         __size_of___fltol 0108    i2___wmul@multiplicand 000B  
             ?_vfpfcnvrt 00BC          ___aodiv@divisor 0085          ___aodiv@counter 008D  
           ??_receiveI2C 007E      __end_of_mover_servo 35A6               sprintf@fmt 017F  
           ??_setPWMFreq 009A         __size_of_readI2C 00C4                 _atoi$866 0017  
               _atoi$867 001B                 _atoi$868 0019         __size_of_isdigit 0038  
       __size_of_sendI2C 000E         __size_of_receive 37A6                 _dtoa$962 00AA  
               _algoritm 0864         __size_of_isspace 0052                 __ptext10 1208  
               __ptext11 34E2                 __ptext20 1E2C                 __ptext12 37AE  
               __ptext21 15A4                 __ptext13 3F16                 __ptext30 3F38  
               __ptext22 30FE                 __ptext14 3F1E                 __ptext31 3BF6  
               __ptext23 3D44                 __ptext15 3EDC                 __ptext40 3F26  
               __ptext32 3E4C                 __ptext24 3BAE                 __ptext16 3E24  
               __ptext41 3F2E                 __ptext33 3292                 __ptext25 3C80  
               __ptext17 39C0                 __ptext50 3DEE                 __ptext42 3F02  
               __ptext34 3EC0                 __ptext26 28BC                 __ptext18 3A70  
               __ptext51 3C3C                 __ptext43 3E74                 __ptext35 2D94  
               __ptext27 2420                 __ptext19 389E                 __ptext60 25AA  
               __ptext52 3D04                 __ptext44 3A18                 __ptext28 2E7E  
               __ptext61 3E9A                 __ptext53 2A22                 __ptext45 3AC2  
               __ptext37 0864                 __ptext29 3032                 __ptext62 3B14  
               __ptext54 2734                 __ptext46 3900                 __ptext38 366A  
               __ptext63 3DB6                 __ptext55 2F5A                 __ptext47 205A  
               __ptext39 382A                 __ptext56 31C8                 __ptext48 1888  
               __ptext57 3F3A                 __ptext49 3358                 __ptext58 3CC2  
               __ptext59 35A6         __size_of_stopI2C 0008         __size_of_sprintf 0052  
          i2sendI2C@data 0002                 _readyI2C 3E24            __size_of_atoi 018A  
          __size_of_ctoa 00DC            __size_of_main 000C            __size_of_dtoa 02E4  
     __end_of_receiveI2C 3DB6       __end_of_setPWMFreq 1E2C                 _settings 2280  
               int$flags 005F                 _startI2C 3F1E                 _vfprintf 389E  
     i2mover_servo@servo 006A                 _writeI2C 37AE              _isspace$884 0007  
       ___aomod@dividend 007D                 isdigit@c 0001     __size_of_SettingsLCD 001C  
               intlevel2 0000                sprintf@ap 0185                 isspace@c 0001  
            _mover_servo 34E2          ___aomod@divisor 0085            ??i2_vfpfcnvrt 0046  
            ??_vfpfcnvrt 00C2          ___aomod@counter 008D                 sprintf@f 0187  
               sprintf@s 017D          SettingsLCD@word 007F            ___fladd@signs 0089  
           ___aodiv@sign 008E       i2___aodiv@dividend 0001             ___fladd@aexp 008A  
           ___fladd@bexp 008B             ___aomod@sign 008E  

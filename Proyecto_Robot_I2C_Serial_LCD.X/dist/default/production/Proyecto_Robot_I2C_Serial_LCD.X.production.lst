

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 12 17:55:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 12/02/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4550 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataCOMRAM
   107  002DA0                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _servos
   111  002DA0  0005               	dw	5
   112                           
   113                           	psect	smallconst
   114  000800                     __psmallconst:
   115                           	callstack 0
   116  000800  00                 	db	0
   117  000801                     _dpowers:
   118                           	callstack 0
   119  000801  0001               	dw	1
   120  000803  000A               	dw	10
   121  000805  0064               	dw	100
   122  000807  03E8               	dw	1000
   123  000809  2710               	dw	10000
   124  00080B                     __end_of_dpowers:
   125                           	callstack 0
   126  0000                     _LATDbits	set	3980
   127  0000                     _SSPBUF	set	4041
   128  0000                     _TXREG	set	4013
   129  0000                     _RCREG	set	4014
   130  0000                     _PORTBbits	set	3969
   131  0000                     _TXSTA	set	4012
   132  0000                     _RCSTA	set	4011
   133  0000                     _SPBRG	set	4015
   134  0000                     _TRISCbits	set	3988
   135  0000                     _SSPADD	set	4040
   136  0000                     _SSPCON2	set	4037
   137  0000                     _SSPCON1	set	4038
   138  0000                     _SSPSTAT	set	4039
   139  0000                     _LATE	set	3981
   140  0000                     _LATD	set	3980
   141  0000                     _TRISE	set	3990
   142  0000                     _TRISD	set	3989
   143  0000                     _TRISBbits	set	3987
   144  0000                     _ADCON1	set	4033
   145  0000                     _OSCCON	set	4051
   146  0000                     _LATE0	set	31848
   147  0000                     _LATE1	set	31849
   148  0000                     _ACKEN	set	32300
   149  0000                     _ACKDT	set	32301
   150  0000                     _RCEN	set	32299
   151  0000                     _RSEN	set	32297
   152  0000                     _PEN	set	32298
   153  0000                     _SEN	set	32296
   154  0000                     _TXIF	set	31988
   155  0000                     _RCIF	set	31989
   156  0000                     _RCIE	set	31981
   157  0000                     _PEIE	set	32662
   158  0000                     _GIE	set	32663
   159  00080B                     STR_5:
   160  00080B  20                 	db	32
   161  00080C  45                 	db	69	;'E'
   162  00080D  6C                 	db	108	;'l'
   163  00080E  20                 	db	32
   164  00080F  63                 	db	99	;'c'
   165  000810  61                 	db	97	;'a'
   166  000811  72                 	db	114	;'r'
   167  000812  61                 	db	97	;'a'
   168  000813  63                 	db	99	;'c'
   169  000814  74                 	db	116	;'t'
   170  000815  65                 	db	101	;'e'
   171  000816  72                 	db	114	;'r'
   172  000817  20                 	db	32
   173  000818  72                 	db	114	;'r'
   174  000819  65                 	db	101	;'e'
   175  00081A  63                 	db	99	;'c'
   176  00081B  69                 	db	105	;'i'
   177  00081C  62                 	db	98	;'b'
   178  00081D  69                 	db	105	;'i'
   179  00081E  64                 	db	100	;'d'
   180  00081F  6F                 	db	111	;'o'
   181  000820  20                 	db	32
   182  000821  66                 	db	102	;'f'
   183  000822  75                 	db	117	;'u'
   184  000823  65                 	db	101	;'e'
   185  000824  3A                 	db	58	;':'
   186  000825  20                 	db	32
   187  000826  25                 	db	37
   188  000827  63                 	db	99	;'c'
   189  000828  00                 	db	0
   190  000829                     STR_4:
   191  000829  61                 	db	97	;'a'
   192  00082A  6E                 	db	110	;'n'
   193  00082B  67                 	db	103	;'g'
   194  00082C  75                 	db	117	;'u'
   195  00082D  6C                 	db	108	;'l'
   196  00082E  6F                 	db	111	;'o'
   197  00082F  20                 	db	32
   198  000830  61                 	db	97	;'a'
   199  000831  74                 	db	116	;'t'
   200  000832  6F                 	db	111	;'o'
   201  000833  69                 	db	105	;'i'
   202  000834  20                 	db	32
   203  000835  25                 	db	37
   204  000836  64                 	db	100	;'d'
   205  000837  20                 	db	32
   206  000838  0A                 	db	10
   207  000839  00                 	db	0
   208  00083A                     STR_3:
   209  00083A  61                 	db	97	;'a'
   210  00083B  6E                 	db	110	;'n'
   211  00083C  67                 	db	103	;'g'
   212  00083D  75                 	db	117	;'u'
   213  00083E  6C                 	db	108	;'l'
   214  00083F  6F                 	db	111	;'o'
   215  000840  20                 	db	32
   216  000841  7A                 	db	122	;'z'
   217  000842  20                 	db	32
   218  000843  25                 	db	37
   219  000844  63                 	db	99	;'c'
   220  000845  20                 	db	32
   221  000846  0A                 	db	10
   222  000847  00                 	db	0
   223  000848                     STR_8:
   224  000848  20                 	db	32
   225  000849  41                 	db	65	;'A'
   226  00084A  6E                 	db	110	;'n'
   227  00084B  67                 	db	103	;'g'
   228  00084C  75                 	db	117	;'u'
   229  00084D  6C                 	db	108	;'l'
   230  00084E  6F                 	db	111	;'o'
   231  00084F  3A                 	db	58	;':'
   232  000850  20                 	db	32
   233  000851  25                 	db	37
   234  000852  64                 	db	100	;'d'
   235  000853  20                 	db	32
   236  000854  0A                 	db	10
   237  000855  00                 	db	0
   238  000856                     STR_7:
   239  000856  20                 	db	32
   240  000857  53                 	db	83	;'S'
   241  000858  65                 	db	101	;'e'
   242  000859  72                 	db	114	;'r'
   243  00085A  76                 	db	118	;'v'
   244  00085B  6F                 	db	111	;'o'
   245  00085C  3A                 	db	58	;':'
   246  00085D  20                 	db	32
   247  00085E  25                 	db	37
   248  00085F  64                 	db	100	;'d'
   249  000860  20                 	db	32
   250  000861  0A                 	db	10
   251  000862  00                 	db	0
   252  000863                     STR_6:
   253  000863  44                 	db	68	;'D'
   254  000864  61                 	db	97	;'a'
   255  000865  74                 	db	116	;'t'
   256  000866  6F                 	db	111	;'o'
   257  000867  3A                 	db	58	;':'
   258  000868  20                 	db	32
   259  000869  25                 	db	37
   260  00086A  63                 	db	99	;'c'
   261  00086B  00                 	db	0
   262  00086C                     STR_1:
   263  00086C  53                 	db	83	;'S'
   264  00086D  65                 	db	101	;'e'
   265  00086E  74                 	db	116	;'t'
   266  00086F  74                 	db	116	;'t'
   267  000870  69                 	db	105	;'i'
   268  000871  6E                 	db	110	;'n'
   269  000872  67                 	db	103	;'g'
   270  000873  73                 	db	115	;'s'
   271  000874  00                 	db	0
   272  000875  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           ; #config settings
   275                           
   276                           	psect	cinit
   277  002B3A                     __pcinit:
   278                           	callstack 0
   279  002B3A                     start_initialization:
   280                           	callstack 0
   281  002B3A                     __initialization:
   282                           	callstack 0
   283                           
   284                           ; Initialize objects allocated to COMRAM (2 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286  002B3A  0EA0               	movlw	low __pidataCOMRAM
   287  002B3C  6EF6               	movwf	tblptrl,c
   288  002B3E  0E2D               	movlw	high __pidataCOMRAM
   289  002B40  6EF7               	movwf	tblptrh,c
   290  002B42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291  002B44  6EF8               	movwf	tblptru,c
   292  002B46  0009               	tblrd		*+	;fetch initializer
   293  002B48  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   294  002B4C  0009               	tblrd		*+	;fetch initializer
   295  002B4E  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   296                           
   297                           ; Clear objects allocated to BANK0 (76 bytes)
   298  002B52  EE00  F060         	lfsr	0,__pbssBANK0
   299  002B56  0E4C               	movlw	76
   300  002B58                     clear_0:
   301  002B58  6AEE               	clrf	postinc0,c
   302  002B5A  06E8               	decf	wreg,f,c
   303  002B5C  E1FD               	bnz	clear_0
   304                           
   305                           ; Clear objects allocated to COMRAM (32 bytes)
   306  002B5E  EE00  F02A         	lfsr	0,__pbssCOMRAM
   307  002B62  0E20               	movlw	32
   308  002B64                     clear_1:
   309  002B64  6AEE               	clrf	postinc0,c
   310  002B66  06E8               	decf	wreg,f,c
   311  002B68  E1FD               	bnz	clear_1
   312  002B6A                     end_of_initialization:
   313                           	callstack 0
   314  002B6A                     __end_of__initialization:
   315                           	callstack 0
   316  002B6A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   317  002B6C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   318  002B6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   319  002B70  6EF8               	movwf	tblptru,c
   320  002B72  0100               	movlb	0
   321  002B74  EFB0  F016         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324  00002A                     __pbssCOMRAM:
   325                           	callstack 0
   326  00002A                     _Coordinate_z:
   327                           	callstack 0
   328  00002A                     	ds	2
   329  00002C                     _Coordinate_x:
   330                           	callstack 0
   331  00002C                     	ds	2
   332  00002E                     _Coordinate_y:
   333                           	callstack 0
   334  00002E                     	ds	2
   335  000030                     _coor:
   336                           	callstack 0
   337  000030                     	ds	2
   338  000032                     _Angle:
   339                           	callstack 0
   340  000032                     	ds	2
   341  000034                     _z:
   342                           	callstack 0
   343  000034                     	ds	2
   344  000036                     _DriverPin:
   345                           	callstack 0
   346  000036                     	ds	2
   347  000038                     _dato:
   348                           	callstack 0
   349  000038                     	ds	2
   350  00003A                     _i:
   351                           	callstack 0
   352  00003A                     	ds	2
   353  00003C                     _d:
   354                           	callstack 0
   355  00003C                     	ds	1
   356  00003D                     _flag:
   357                           	callstack 0
   358  00003D                     	ds	1
   359  00003E                     _coordinate_z:
   360                           	callstack 0
   361  00003E                     	ds	3
   362  000041                     _coordinate_y:
   363                           	callstack 0
   364  000041                     	ds	3
   365  000044                     _coordinate_x:
   366                           	callstack 0
   367  000044                     	ds	3
   368  000047                     _angle:
   369                           	callstack 0
   370  000047                     	ds	3
   371                           
   372                           	psect	dataCOMRAM
   373  00004A                     __pdataCOMRAM:
   374                           	callstack 0
   375  00004A                     _servos:
   376                           	callstack 0
   377  00004A                     	ds	2
   378                           
   379                           	psect	bssBANK0
   380  000060                     __pbssBANK0:
   381                           	callstack 0
   382  000060                     _angle_servos:
   383                           	callstack 0
   384  000060                     	ds	12
   385  00006C                     _pos:
   386                           	callstack 0
   387  00006C                     	ds	2
   388  00006E                     _text:
   389                           	callstack 0
   390  00006E                     	ds	40
   391  000096                     _texto_LCD:
   392                           	callstack 0
   393  000096                     	ds	16
   394  0000A6                     _data2:
   395                           	callstack 0
   396  0000A6                     	ds	4
   397  0000AA                     _d1:
   398                           	callstack 0
   399  0000AA                     	ds	1
   400  0000AB                     _data1:
   401                           	callstack 0
   402  0000AB                     	ds	1
   403                           
   404                           	psect	cstackBANK0
   405  0000AC                     __pcstackBANK0:
   406                           	callstack 0
   407  0000AC                     ??_readyI2C:
   408  0000AC                     ??_LCD:
   409  0000AC                     ?_strlen:
   410                           	callstack 0
   411  0000AC                     ?___awdiv:
   412                           	callstack 0
   413  0000AC                     ?___lwdiv:
   414                           	callstack 0
   415  0000AC                     ?___fladd:
   416                           	callstack 0
   417  0000AC                     ?___fldiv:
   418                           	callstack 0
   419  0000AC                     ?___fltol:
   420                           	callstack 0
   421  0000AC                     ___awdiv@dividend:
   422                           	callstack 0
   423  0000AC                     ___lwdiv@dividend:
   424                           	callstack 0
   425  0000AC                     strlen@s:
   426                           	callstack 0
   427  0000AC                     ___flge@ff1:
   428                           	callstack 0
   429  0000AC                     ___fltol@f1:
   430                           	callstack 0
   431  0000AC                     ___fladd@b:
   432                           	callstack 0
   433  0000AC                     ___fldiv@b:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x0
   437  0000AC                     	ds	1
   438  0000AD                     sendI2C@data:
   439                           	callstack 0
   440  0000AD                     receiveI2C@flag:
   441                           	callstack 0
   442  0000AD                     LCD@data:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x1
   446  0000AD                     	ds	1
   447  0000AE                     writeI2C@Register:
   448                           	callstack 0
   449  0000AE                     receiveI2C@buffer:
   450                           	callstack 0
   451  0000AE                     SettingsLCD@word:
   452                           	callstack 0
   453  0000AE                     WriteLCD@word:
   454                           	callstack 0
   455  0000AE                     ___awdiv@divisor:
   456                           	callstack 0
   457  0000AE                     ___lwdiv@divisor:
   458                           	callstack 0
   459  0000AE                     strlen@cp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x2
   463  0000AE                     	ds	1
   464  0000AF                     readI2C@Register:
   465                           	callstack 0
   466  0000AF                     writeI2C@Data:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x3
   470  0000AF                     	ds	1
   471  0000B0                     ??___fltol:
   472  0000B0                     ___awdiv@counter:
   473                           	callstack 0
   474  0000B0                     ___lwdiv@counter:
   475                           	callstack 0
   476  0000B0                     readI2C@Data:
   477                           	callstack 0
   478  0000B0                     ___flge@ff2:
   479                           	callstack 0
   480  0000B0                     ___fladd@a:
   481                           	callstack 0
   482  0000B0                     ___fldiv@a:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x4
   486  0000B0                     	ds	1
   487  0000B1                     ___awdiv@sign:
   488                           	callstack 0
   489  0000B1                     writeI2C@bytes:
   490                           	callstack 0
   491  0000B1                     ___lwdiv@quotient:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x5
   495  0000B1                     	ds	1
   496  0000B2                     readI2C@bytes:
   497                           	callstack 0
   498  0000B2                     ___awdiv@quotient:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x6
   502  0000B2                     	ds	1
   503  0000B3                     ??_writeI2C:
   504  0000B3                     ?___lwmod:
   505                           	callstack 0
   506  0000B3                     ___lwmod@dividend:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x7
   510  0000B3                     	ds	1
   511  0000B4                     ??___fladd:
   512  0000B4                     ??___fldiv:
   513  0000B4                     ??_readI2C:
   514  0000B4                     ??___flge:
   515  0000B4                     ?___wmul:
   516                           	callstack 0
   517  0000B4                     ___fltol@sign1:
   518                           	callstack 0
   519  0000B4                     ___wmul@multiplier:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x8
   523  0000B4                     	ds	1
   524  0000B5                     writeI2C@Address:
   525                           	callstack 0
   526  0000B5                     ___fltol@exp1:
   527                           	callstack 0
   528  0000B5                     ___lwmod@divisor:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x9
   532  0000B5                     	ds	1
   533  0000B6                     readI2C@Address:
   534                           	callstack 0
   535  0000B6                     ___wmul@multiplicand:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xA
   539  0000B6                     	ds	1
   540  0000B7                     ___lwmod@counter:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0xB
   544  0000B7                     	ds	1
   545  0000B8                     ?_sprintf:
   546                           	callstack 0
   547  0000B8                     ___fladd@signs:
   548                           	callstack 0
   549  0000B8                     sprintf@sp:
   550                           	callstack 0
   551  0000B8                     ___wmul@product:
   552                           	callstack 0
   553  0000B8                     ___fldiv@rem:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0xC
   557  0000B8                     	ds	1
   558  0000B9                     ___fladd@aexp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0xD
   562  0000B9                     	ds	1
   563  0000BA                     ?_map:
   564                           	callstack 0
   565  0000BA                     ___fladd@bexp:
   566                           	callstack 0
   567  0000BA                     map@x:
   568                           	callstack 0
   569  0000BA                     sprintf@f:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0xE
   573  0000BA                     	ds	1
   574  0000BB                     ___fladd@grs:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xF
   578  0000BB                     	ds	1
   579  0000BC                     ?___flsub:
   580                           	callstack 0
   581  0000BC                     ___fldiv@sign:
   582                           	callstack 0
   583  0000BC                     map@In_Min:
   584                           	callstack 0
   585  0000BC                     ___flsub@b:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x10
   589  0000BC                     	ds	1
   590  0000BD                     ___fldiv@new_exp:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x11
   594  0000BD                     	ds	1
   595  0000BE                     ??_sprintf:
   596  0000BE                     map@In_Max:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  0000BE                     	ds	1
   601  0000BF                     sprintf@flag:
   602                           	callstack 0
   603  0000BF                     ___fldiv@grs:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x13
   607  0000BF                     	ds	1
   608  0000C0                     sprintf@prec:
   609                           	callstack 0
   610  0000C0                     map@Out_Min:
   611                           	callstack 0
   612  0000C0                     ___flsub@a:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x14
   616  0000C0                     	ds	1
   617  0000C1                     sprintf@ap:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x15
   621  0000C1                     	ds	1
   622  0000C2                     map@Out_Max:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x16
   626  0000C2                     	ds	1
   627  0000C3                     ___fldiv@bexp:
   628                           	callstack 0
   629  0000C3                     sprintf@val:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x17
   633  0000C3                     	ds	1
   634  0000C4                     ___fldiv@aexp:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x18
   638  0000C4                     	ds	1
   639  0000C5                     sprintf@c:
   640                           	callstack 0
   641  0000C5                     setPWMFreq@freq:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x19
   645  0000C5                     	ds	1
   646  0000C6                     mover_servo@servo:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x1A
   650  0000C6                     	ds	2
   651  0000C8                     mover_servo@angulo:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1C
   655  0000C8                     	ds	1
   656  0000C9                     ??_setPWMFreq:
   657                           
   658                           ; 1 bytes @ 0x1D
   659  0000C9                     	ds	1
   660  0000CA                     ??_mover_servo:
   661  0000CA                     setPWMFreq@prescale:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x1E
   665  0000CA                     	ds	1
   666  0000CB                     setPWMFreq@newmode:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x1F
   670  0000CB                     	ds	1
   671  0000CC                     setPWMFreq@prescaleval:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x20
   675  0000CC                     	ds	4
   676  0000D0                     ??_settings:
   677                           
   678                           ; 1 bytes @ 0x24
   679  0000D0                     	ds	2
   680  0000D2                     
   681                           ; 1 bytes @ 0x26
   682                           
   683                           	psect	cstackCOMRAM
   684  000001                     __pcstackCOMRAM:
   685                           	callstack 0
   686  000001                     ??_isdigit:
   687  000001                     ??i2_readyI2C:
   688  000001                     ??i2_LCD:
   689  000001                     ?i2___awdiv:
   690                           	callstack 0
   691  000001                     ?i2___lwdiv:
   692                           	callstack 0
   693  000001                     ?i2_strlen:
   694                           	callstack 0
   695  000001                     i2___awdiv@dividend:
   696                           	callstack 0
   697  000001                     i2___lwdiv@dividend:
   698                           	callstack 0
   699  000001                     i2strlen@s:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x0
   703  000001                     	ds	1
   704  000002                     _isdigit$894:
   705                           	callstack 0
   706  000002                     i2sendI2C@data:
   707                           	callstack 0
   708  000002                     i2LCD@data:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x1
   712  000002                     	ds	1
   713  000003                     isdigit@c:
   714                           	callstack 0
   715  000003                     i2writeI2C@Register:
   716                           	callstack 0
   717  000003                     i2SettingsLCD@word:
   718                           	callstack 0
   719  000003                     i2WriteLCD@word:
   720                           	callstack 0
   721  000003                     i2___awdiv@divisor:
   722                           	callstack 0
   723  000003                     i2___lwdiv@divisor:
   724                           	callstack 0
   725  000003                     i2strlen@cp:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x2
   729  000003                     	ds	1
   730  000004                     i2writeI2C@Data:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x3
   734  000004                     	ds	1
   735  000005                     i2___awdiv@counter:
   736                           	callstack 0
   737  000005                     i2___lwdiv@quotient:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x4
   741  000005                     	ds	1
   742  000006                     i2___awdiv@sign:
   743                           	callstack 0
   744  000006                     i2writeI2C@bytes:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x5
   748  000006                     	ds	1
   749  000007                     i2___lwdiv@counter:
   750                           	callstack 0
   751  000007                     i2___awdiv@quotient:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x6
   755  000007                     	ds	1
   756  000008                     ??i2_writeI2C:
   757  000008                     ?i2___lwmod:
   758                           	callstack 0
   759  000008                     i2___lwmod@dividend:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x7
   763  000008                     	ds	1
   764  000009                     ?i2___wmul:
   765                           	callstack 0
   766  000009                     i2___wmul@multiplier:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x8
   770  000009                     	ds	1
   771  00000A                     i2writeI2C@Address:
   772                           	callstack 0
   773  00000A                     i2___lwmod@divisor:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x9
   777  00000A                     	ds	1
   778  00000B                     i2___wmul@multiplicand:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0xA
   782  00000B                     	ds	1
   783  00000C                     i2___lwmod@counter:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0xB
   787  00000C                     	ds	1
   788  00000D                     ?i2_sprintf:
   789                           	callstack 0
   790  00000D                     i2sprintf@sp:
   791                           	callstack 0
   792  00000D                     i2___wmul@product:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0xC
   796  00000D                     	ds	2
   797  00000F                     ?_atoi:
   798                           	callstack 0
   799  00000F                     ?i2_map:
   800                           	callstack 0
   801  00000F                     atoi@s:
   802                           	callstack 0
   803  00000F                     i2map@x:
   804                           	callstack 0
   805  00000F                     i2sprintf@f:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0xE
   809  00000F                     	ds	2
   810  000011                     ??_atoi:
   811  000011                     i2map@In_Min:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x10
   815  000011                     	ds	2
   816  000013                     ??i2_sprintf:
   817  000013                     atoi@sign:
   818                           	callstack 0
   819  000013                     i2map@In_Max:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x12
   823  000013                     	ds	1
   824  000014                     i2sprintf@flag:
   825                           	callstack 0
   826  000014                     atoi@a:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x13
   830  000014                     	ds	1
   831  000015                     i2sprintf@prec:
   832                           	callstack 0
   833  000015                     i2map@Out_Min:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x14
   837  000015                     	ds	1
   838  000016                     i2sprintf@ap:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x15
   842  000016                     	ds	1
   843  000017                     i2map@Out_Max:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x16
   847  000017                     	ds	1
   848  000018                     i2sprintf@val:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x17
   852  000018                     	ds	1
   853  000019                     
   854                           ; 1 bytes @ 0x18
   855  000019                     	ds	1
   856  00001A                     i2sprintf@c:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x19
   860  00001A                     	ds	1
   861  00001B                     i2mover_servo@servo:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x1A
   865  00001B                     	ds	2
   866  00001D                     i2mover_servo@angulo:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x1C
   870  00001D                     	ds	2
   871  00001F                     ??i2_mover_servo:
   872                           
   873                           ; 1 bytes @ 0x1E
   874  00001F                     	ds	2
   875  000021                     ??_algoritm:
   876                           
   877                           ; 1 bytes @ 0x20
   878  000021                     	ds	1
   879  000022                     ??_receive:
   880                           
   881                           ; 1 bytes @ 0x21
   882  000022                     	ds	8
   883                           
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 81 in file "Main_Robot_I2C_Serial_LCD.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   903 ;;      Params:         0       0       0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels required when called:   11
   909 ;; This function calls:
   910 ;;		_settings
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917  002D60                     __ptext0:
   918                           	callstack 0
   919  002D60                     _main:
   920                           	callstack 20
   921  002D60                     
   922                           ;Main_Robot_I2C_Serial_LCD.c: 82: settings();
   923  002D60  EC0C  F00C         	call	_settings	;wreg free
   924  002D64                     l153:
   925  002D64  EFB2  F016         	goto	l153
   926  002D68  EF07  F000         	goto	start
   927  002D6C                     __end_of_main:
   928                           	callstack 0
   929                           
   930 ;; *************** function _settings *****************
   931 ;; Defined at:
   932 ;;		line 92 in file "Main_Robot_I2C_Serial_LCD.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   946 ;;      Params:         0       0       0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       2       0       0       0       0       0       0       0
   949 ;;      Totals:         0       2       0       0       0       0       0       0       0
   950 ;;Total ram usage:        2 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:   10
   953 ;; This function calls:
   954 ;;		_PrintDataLCD
   955 ;;		_SettingsLCD
   956 ;;		_mover_servo
   957 ;;		_setPWMFreq
   958 ;;		_sprintf
   959 ;;		_start
   960 ;;		_writeI2C
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text1
   967  001818                     __ptext1:
   968                           	callstack 0
   969  001818                     _settings:
   970                           	callstack 20
   971  001818                     
   972                           ;Main_Robot_I2C_Serial_LCD.c: 93: OSCCON = 0x72;
   973  001818  0E72               	movlw	114
   974  00181A  6ED3               	movwf	211,c	;volatile
   975                           
   976                           ;Main_Robot_I2C_Serial_LCD.c: 94: ADCON1 = 0x0F;
   977  00181C  0E0F               	movlw	15
   978  00181E  6EC1               	movwf	193,c	;volatile
   979  001820                     
   980                           ;Main_Robot_I2C_Serial_LCD.c: 95: TRISBbits.RB7=1;
   981  001820  8E93               	bsf	147,7,c	;volatile
   982  001822                     
   983                           ;Main_Robot_I2C_Serial_LCD.c: 96: TRISBbits.RB6=0;
   984  001822  9C93               	bcf	147,6,c	;volatile
   985                           
   986                           ;Main_Robot_I2C_Serial_LCD.c: 97: OSCCON = 0x72;
   987  001824  0E72               	movlw	114
   988  001826  6ED3               	movwf	211,c	;volatile
   989                           
   990                           ;Main_Robot_I2C_Serial_LCD.c: 98: ADCON1 = 0x0F;
   991  001828  0E0F               	movlw	15
   992  00182A  6EC1               	movwf	193,c	;volatile
   993                           
   994                           ;Main_Robot_I2C_Serial_LCD.c: 99: TRISD = 0;
   995  00182C  0E00               	movlw	0
   996  00182E  6E95               	movwf	149,c	;volatile
   997                           
   998                           ;Main_Robot_I2C_Serial_LCD.c: 100: TRISE = 0;
   999  001830  0E00               	movlw	0
  1000  001832  6E96               	movwf	150,c	;volatile
  1001                           
  1002                           ;Main_Robot_I2C_Serial_LCD.c: 101: LATD = 0;
  1003  001834  0E00               	movlw	0
  1004  001836  6E8C               	movwf	140,c	;volatile
  1005                           
  1006                           ;Main_Robot_I2C_Serial_LCD.c: 102: LATE = 0;
  1007  001838  0E00               	movlw	0
  1008  00183A  6E8D               	movwf	141,c	;volatile
  1009  00183C                     
  1010                           ;Main_Robot_I2C_Serial_LCD.c: 104: TRISBbits.RB0=1;
  1011  00183C  8093               	bsf	147,0,c	;volatile
  1012  00183E                     
  1013                           ;Main_Robot_I2C_Serial_LCD.c: 105: TRISBbits.RB1=1;
  1014  00183E  8293               	bsf	147,1,c	;volatile
  1015                           
  1016                           ;Main_Robot_I2C_Serial_LCD.c: 106: SSPSTAT = 0x80;
  1017  001840  0E80               	movlw	128
  1018  001842  6EC7               	movwf	199,c	;volatile
  1019                           
  1020                           ;Main_Robot_I2C_Serial_LCD.c: 107: SSPCON1 = 0x28;
  1021  001844  0E28               	movlw	40
  1022  001846  6EC6               	movwf	198,c	;volatile
  1023                           
  1024                           ;Main_Robot_I2C_Serial_LCD.c: 108: SSPCON2 = 0x00;
  1025  001848  0E00               	movlw	0
  1026  00184A  6EC5               	movwf	197,c	;volatile
  1027                           
  1028                           ;Main_Robot_I2C_Serial_LCD.c: 109: SSPADD = 0x13;
  1029  00184C  0E13               	movlw	19
  1030  00184E  6EC8               	movwf	200,c	;volatile
  1031  001850                     
  1032                           ;Main_Robot_I2C_Serial_LCD.c: 111: TRISCbits.TRISC6 = 0;
  1033  001850  9C94               	bcf	148,6,c	;volatile
  1034  001852                     
  1035                           ;Main_Robot_I2C_Serial_LCD.c: 112: TRISCbits.TRISC7 = 1;
  1036  001852  8E94               	bsf	148,7,c	;volatile
  1037                           
  1038                           ;Main_Robot_I2C_Serial_LCD.c: 113: SPBRG = 0x0C;
  1039  001854  0E0C               	movlw	12
  1040  001856  6EAF               	movwf	175,c	;volatile
  1041                           
  1042                           ;Main_Robot_I2C_Serial_LCD.c: 114: RCSTA = 0x90;
  1043  001858  0E90               	movlw	144
  1044  00185A  6EAB               	movwf	171,c	;volatile
  1045                           
  1046                           ;Main_Robot_I2C_Serial_LCD.c: 115: TXSTA = 0x20;
  1047  00185C  0E20               	movlw	32
  1048  00185E  6EAC               	movwf	172,c	;volatile
  1049  001860                     
  1050                           ;Main_Robot_I2C_Serial_LCD.c: 117: writeI2C(0x80, 0x00,0x80,1);
  1051  001860  0E00               	movlw	0
  1052  001862  0100               	movlb	0	; () banked
  1053  001864  6FAE               	movwf	writeI2C@Register& (0+255),b
  1054  001866  0E80               	movlw	128
  1055  001868  6FAF               	movwf	writeI2C@Data& (0+255),b
  1056  00186A  0E00               	movlw	0
  1057  00186C  6FB0               	movwf	(writeI2C@Data+1)& (0+255),b
  1058  00186E  0E00               	movlw	0
  1059  001870  6FB2               	movwf	(writeI2C@bytes+1)& (0+255),b
  1060  001872  0E01               	movlw	1
  1061  001874  6FB1               	movwf	writeI2C@bytes& (0+255),b
  1062  001876  0E80               	movlw	128
  1063  001878  EC3D  F013         	call	_writeI2C
  1064  00187C                     
  1065                           ;Main_Robot_I2C_Serial_LCD.c: 118: _delay((unsigned long)((10)*(8000000/4000.0)));
  1066  00187C  0E1A               	movlw	26
  1067  00187E  0100               	movlb	0	; () banked
  1068  001880  6FD0               	movwf	??_settings& (0+255),b
  1069  001882  0EF8               	movlw	248
  1070  001884                     u4637:
  1071  001884  2EE8               	decfsz	wreg,f,c
  1072  001886  D7FE               	bra	u4637
  1073  001888  2FD0               	decfsz	??_settings& (0+255),f,b
  1074  00188A  D7FC               	bra	u4637
  1075  00188C  F000               	nop	
  1076  00188E                     
  1077                           ;Main_Robot_I2C_Serial_LCD.c: 120: setPWMFreq(1000);
  1078  00188E  0E00               	movlw	0
  1079  001890  0100               	movlb	0	; () banked
  1080  001892  6FC5               	movwf	setPWMFreq@freq& (0+255),b
  1081  001894  0E00               	movlw	0
  1082  001896  6FC6               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1083  001898  0E7A               	movlw	122
  1084  00189A  6FC7               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1085  00189C  0E44               	movlw	68
  1086  00189E  6FC8               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1087  0018A0  ECAC  F00A         	call	_setPWMFreq	;wreg free
  1088  0018A4                     
  1089                           ;Main_Robot_I2C_Serial_LCD.c: 122: setPWMFreq(50);
  1090  0018A4  0E00               	movlw	0
  1091  0018A6  0100               	movlb	0	; () banked
  1092  0018A8  6FC5               	movwf	setPWMFreq@freq& (0+255),b
  1093  0018AA  0E00               	movlw	0
  1094  0018AC  6FC6               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1095  0018AE  0E48               	movlw	72
  1096  0018B0  6FC7               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1097  0018B2  0E42               	movlw	66
  1098  0018B4  6FC8               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1099  0018B6  ECAC  F00A         	call	_setPWMFreq	;wreg free
  1100  0018BA                     
  1101                           ;Main_Robot_I2C_Serial_LCD.c: 123: _delay((unsigned long)((300)*(8000000/4000.0)));
  1102  0018BA  0E04               	movlw	4
  1103  0018BC  0100               	movlb	0	; () banked
  1104  0018BE  6FD1               	movwf	(??_settings+1)& (0+255),b
  1105  0018C0  0E0C               	movlw	12
  1106  0018C2  6FD0               	movwf	??_settings& (0+255),b
  1107  0018C4  0E33               	movlw	51
  1108  0018C6                     u4647:
  1109  0018C6  2EE8               	decfsz	wreg,f,c
  1110  0018C8  D7FE               	bra	u4647
  1111  0018CA  2FD0               	decfsz	??_settings& (0+255),f,b
  1112  0018CC  D7FC               	bra	u4647
  1113  0018CE  2FD1               	decfsz	(??_settings+1)& (0+255),f,b
  1114  0018D0  D7FA               	bra	u4647
  1115  0018D2  D000               	nop2	
  1116  0018D4                     
  1117                           ;Main_Robot_I2C_Serial_LCD.c: 125: SettingsLCD(0x02);
  1118  0018D4  0E02               	movlw	2
  1119  0018D6  EC85  F016         	call	_SettingsLCD
  1120  0018DA                     
  1121                           ;Main_Robot_I2C_Serial_LCD.c: 126: SettingsLCD(0x06);
  1122  0018DA  0E06               	movlw	6
  1123  0018DC  EC85  F016         	call	_SettingsLCD
  1124  0018E0                     
  1125                           ;Main_Robot_I2C_Serial_LCD.c: 127: SettingsLCD(0x0F);
  1126  0018E0  0E0F               	movlw	15
  1127  0018E2  EC85  F016         	call	_SettingsLCD
  1128  0018E6                     
  1129                           ;Main_Robot_I2C_Serial_LCD.c: 128: SettingsLCD(0x28);
  1130  0018E6  0E28               	movlw	40
  1131  0018E8  EC85  F016         	call	_SettingsLCD
  1132  0018EC                     
  1133                           ;Main_Robot_I2C_Serial_LCD.c: 129: SettingsLCD(0x01);
  1134  0018EC  0E01               	movlw	1
  1135  0018EE  EC85  F016         	call	_SettingsLCD
  1136  0018F2                     
  1137                           ;Main_Robot_I2C_Serial_LCD.c: 131: GIE = 1;
  1138  0018F2  8EF2               	bsf	4082,7,c	;volatile
  1139  0018F4                     
  1140                           ;Main_Robot_I2C_Serial_LCD.c: 132: PEIE = 1;
  1141  0018F4  8CF2               	bsf	4082,6,c	;volatile
  1142  0018F6                     
  1143                           ;Main_Robot_I2C_Serial_LCD.c: 133: RCIE = 1;
  1144  0018F6  8A9D               	bsf	3997,5,c	;volatile
  1145  0018F8                     
  1146                           ;Main_Robot_I2C_Serial_LCD.c: 134: RCIF = 0;
  1147  0018F8  9A9E               	bcf	3998,5,c	;volatile
  1148  0018FA                     
  1149                           ;Main_Robot_I2C_Serial_LCD.c: 136: sprintf(text,"Settings");
  1150  0018FA  0E6E               	movlw	low _text
  1151  0018FC  0100               	movlb	0	; () banked
  1152  0018FE  6FB8               	movwf	sprintf@sp& (0+255),b
  1153  001900  0E00               	movlw	high _text
  1154  001902  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  1155  001904  0E6C               	movlw	low STR_1
  1156  001906  6FBA               	movwf	sprintf@f& (0+255),b
  1157  001908  0E08               	movlw	high STR_1
  1158  00190A  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  1159  00190C  EC0C  F00D         	call	_sprintf	;wreg free
  1160  001910                     
  1161                           ;Main_Robot_I2C_Serial_LCD.c: 137: sprintf(texto_LCD,"Settings");
  1162  001910  0E96               	movlw	low _texto_LCD
  1163  001912  0100               	movlb	0	; () banked
  1164  001914  6FB8               	movwf	sprintf@sp& (0+255),b
  1165  001916  0E00               	movlw	high _texto_LCD
  1166  001918  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  1167  00191A  0E6C               	movlw	low STR_1
  1168  00191C  6FBA               	movwf	sprintf@f& (0+255),b
  1169  00191E  0E08               	movlw	high STR_1
  1170  001920  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  1171  001922  EC0C  F00D         	call	_sprintf	;wreg free
  1172  001926                     
  1173                           ;Main_Robot_I2C_Serial_LCD.c: 138: PrintDataLCD();
  1174  001926  ECB8  F014         	call	_PrintDataLCD	;wreg free
  1175  00192A                     
  1176                           ;Main_Robot_I2C_Serial_LCD.c: 139: start();
  1177  00192A  EC8D  F014         	call	_start	;wreg free
  1178  00192E                     
  1179                           ;Main_Robot_I2C_Serial_LCD.c: 140: PORTBbits.RB6=1;
  1180  00192E  8C81               	bsf	129,6,c	;volatile
  1181  001930                     
  1182                           ;Main_Robot_I2C_Serial_LCD.c: 141: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1183  001930  0E0B               	movlw	11
  1184  001932  0100               	movlb	0	; () banked
  1185  001934  6FD1               	movwf	(??_settings+1)& (0+255),b
  1186  001936  0E26               	movlw	38
  1187  001938  6FD0               	movwf	??_settings& (0+255),b
  1188  00193A  0E5D               	movlw	93
  1189  00193C                     u4657:
  1190  00193C  2EE8               	decfsz	wreg,f,c
  1191  00193E  D7FE               	bra	u4657
  1192  001940  2FD0               	decfsz	??_settings& (0+255),f,b
  1193  001942  D7FC               	bra	u4657
  1194  001944  2FD1               	decfsz	(??_settings+1)& (0+255),f,b
  1195  001946  D7FA               	bra	u4657
  1196  001948  D000               	nop2	
  1197  00194A                     
  1198                           ;Main_Robot_I2C_Serial_LCD.c: 142: PORTBbits.RB6=0;
  1199  00194A  9C81               	bcf	129,6,c	;volatile
  1200  00194C                     
  1201                           ;Main_Robot_I2C_Serial_LCD.c: 143: mover_servo(0,90);
  1202  00194C  0E00               	movlw	0
  1203  00194E  0100               	movlb	0	; () banked
  1204  001950  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1205  001952  0E00               	movlw	0
  1206  001954  6FC6               	movwf	mover_servo@servo& (0+255),b
  1207  001956  0E00               	movlw	0
  1208  001958  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1209  00195A  0E5A               	movlw	90
  1210  00195C  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1211  00195E  EC8D  F011         	call	_mover_servo	;wreg free
  1212  001962                     
  1213                           ;Main_Robot_I2C_Serial_LCD.c: 144: mover_servo(1,90);
  1214  001962  0E00               	movlw	0
  1215  001964  0100               	movlb	0	; () banked
  1216  001966  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1217  001968  0E01               	movlw	1
  1218  00196A  6FC6               	movwf	mover_servo@servo& (0+255),b
  1219  00196C  0E00               	movlw	0
  1220  00196E  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1221  001970  0E5A               	movlw	90
  1222  001972  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1223  001974  EC8D  F011         	call	_mover_servo	;wreg free
  1224  001978                     
  1225                           ;Main_Robot_I2C_Serial_LCD.c: 145: mover_servo(2,90);
  1226  001978  0E00               	movlw	0
  1227  00197A  0100               	movlb	0	; () banked
  1228  00197C  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1229  00197E  0E02               	movlw	2
  1230  001980  6FC6               	movwf	mover_servo@servo& (0+255),b
  1231  001982  0E00               	movlw	0
  1232  001984  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1233  001986  0E5A               	movlw	90
  1234  001988  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1235  00198A  EC8D  F011         	call	_mover_servo	;wreg free
  1236  00198E                     
  1237                           ;Main_Robot_I2C_Serial_LCD.c: 146: mover_servo(3,90);
  1238  00198E  0E00               	movlw	0
  1239  001990  0100               	movlb	0	; () banked
  1240  001992  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1241  001994  0E03               	movlw	3
  1242  001996  6FC6               	movwf	mover_servo@servo& (0+255),b
  1243  001998  0E00               	movlw	0
  1244  00199A  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1245  00199C  0E5A               	movlw	90
  1246  00199E  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1247  0019A0  EC8D  F011         	call	_mover_servo	;wreg free
  1248  0019A4                     
  1249                           ;Main_Robot_I2C_Serial_LCD.c: 147: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1250  0019A4  0E0B               	movlw	11
  1251  0019A6  0100               	movlb	0	; () banked
  1252  0019A8  6FD1               	movwf	(??_settings+1)& (0+255),b
  1253  0019AA  0E26               	movlw	38
  1254  0019AC  6FD0               	movwf	??_settings& (0+255),b
  1255  0019AE  0E5D               	movlw	93
  1256  0019B0                     u4667:
  1257  0019B0  2EE8               	decfsz	wreg,f,c
  1258  0019B2  D7FE               	bra	u4667
  1259  0019B4  2FD0               	decfsz	??_settings& (0+255),f,b
  1260  0019B6  D7FC               	bra	u4667
  1261  0019B8  2FD1               	decfsz	(??_settings+1)& (0+255),f,b
  1262  0019BA  D7FA               	bra	u4667
  1263  0019BC  D000               	nop2	
  1264  0019BE                     
  1265                           ;Main_Robot_I2C_Serial_LCD.c: 148: mover_servo(0,0);
  1266  0019BE  0E00               	movlw	0
  1267  0019C0  0100               	movlb	0	; () banked
  1268  0019C2  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1269  0019C4  0E00               	movlw	0
  1270  0019C6  6FC6               	movwf	mover_servo@servo& (0+255),b
  1271  0019C8  0E00               	movlw	0
  1272  0019CA  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1273  0019CC  0E00               	movlw	0
  1274  0019CE  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1275  0019D0  EC8D  F011         	call	_mover_servo	;wreg free
  1276  0019D4                     
  1277                           ;Main_Robot_I2C_Serial_LCD.c: 149: mover_servo(1,0);
  1278  0019D4  0E00               	movlw	0
  1279  0019D6  0100               	movlb	0	; () banked
  1280  0019D8  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1281  0019DA  0E01               	movlw	1
  1282  0019DC  6FC6               	movwf	mover_servo@servo& (0+255),b
  1283  0019DE  0E00               	movlw	0
  1284  0019E0  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1285  0019E2  0E00               	movlw	0
  1286  0019E4  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1287  0019E6  EC8D  F011         	call	_mover_servo	;wreg free
  1288  0019EA                     
  1289                           ;Main_Robot_I2C_Serial_LCD.c: 150: mover_servo(2,0);
  1290  0019EA  0E00               	movlw	0
  1291  0019EC  0100               	movlb	0	; () banked
  1292  0019EE  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1293  0019F0  0E02               	movlw	2
  1294  0019F2  6FC6               	movwf	mover_servo@servo& (0+255),b
  1295  0019F4  0E00               	movlw	0
  1296  0019F6  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1297  0019F8  0E00               	movlw	0
  1298  0019FA  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1299  0019FC  EC8D  F011         	call	_mover_servo	;wreg free
  1300  001A00                     
  1301                           ;Main_Robot_I2C_Serial_LCD.c: 151: mover_servo(3,0);
  1302  001A00  0E00               	movlw	0
  1303  001A02  0100               	movlb	0	; () banked
  1304  001A04  6FC7               	movwf	(mover_servo@servo+1)& (0+255),b
  1305  001A06  0E03               	movlw	3
  1306  001A08  6FC6               	movwf	mover_servo@servo& (0+255),b
  1307  001A0A  0E00               	movlw	0
  1308  001A0C  6FC9               	movwf	(mover_servo@angulo+1)& (0+255),b
  1309  001A0E  0E00               	movlw	0
  1310  001A10  6FC8               	movwf	mover_servo@angulo& (0+255),b
  1311  001A12  EC8D  F011         	call	_mover_servo	;wreg free
  1312  001A16  0012               	return		;funcret
  1313  001A18                     __end_of_settings:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _setPWMFreq *****************
  1317 ;; Defined at:
  1318 ;;		line 352 in file "Main_Robot_I2C_Serial_LCD.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  freq            4   25[BANK0 ] float 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  prescaleval     4   32[BANK0 ] float 
  1323 ;;  newmode         1   31[BANK0 ] unsigned char 
  1324 ;;  prescale        1   30[BANK0 ] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       4       0       0       0       0       0       0       0
  1335 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1337 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1338 ;;Total ram usage:       11 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    9
  1341 ;; This function calls:
  1342 ;;		___fladd
  1343 ;;		___fldiv
  1344 ;;		___flge
  1345 ;;		___flsub
  1346 ;;		___fltol
  1347 ;;		_readI2C
  1348 ;;		_writeI2C
  1349 ;; This function is called by:
  1350 ;;		_settings
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text2
  1355  001558                     __ptext2:
  1356                           	callstack 0
  1357  001558                     _setPWMFreq:
  1358                           	callstack 20
  1359  001558                     
  1360                           ;Main_Robot_I2C_Serial_LCD.c: 354: if (freq < 1) freq = 1;
  1361  001558  C0C5  F0AC         	movff	setPWMFreq@freq,___flge@ff1
  1362  00155C  C0C6  F0AD         	movff	setPWMFreq@freq+1,___flge@ff1+1
  1363  001560  C0C7  F0AE         	movff	setPWMFreq@freq+2,___flge@ff1+2
  1364  001564  C0C8  F0AF         	movff	setPWMFreq@freq+3,___flge@ff1+3
  1365  001568  0E00               	movlw	0
  1366  00156A  0100               	movlb	0	; () banked
  1367  00156C  6FB0               	movwf	___flge@ff2& (0+255),b
  1368  00156E  0E00               	movlw	0
  1369  001570  6FB1               	movwf	(___flge@ff2+1)& (0+255),b
  1370  001572  0E80               	movlw	128
  1371  001574  6FB2               	movwf	(___flge@ff2+2)& (0+255),b
  1372  001576  0E3F               	movlw	63
  1373  001578  6FB3               	movwf	(___flge@ff2+3)& (0+255),b
  1374  00157A  ECE3  F00F         	call	___flge	;wreg free
  1375  00157E  0100               	movlb	0	; () banked
  1376  001580  B0D8               	btfsc	status,0,c
  1377  001582  EFC5  F00A         	goto	u4561
  1378  001586  EFC7  F00A         	goto	u4560
  1379  00158A                     u4561:
  1380  00158A  EFCF  F00A         	goto	l4476
  1381  00158E                     u4560:
  1382  00158E                     
  1383                           ; BSR set to: 0
  1384  00158E  0E00               	movlw	0
  1385  001590  6FC5               	movwf	setPWMFreq@freq& (0+255),b
  1386  001592  0E00               	movlw	0
  1387  001594  6FC6               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1388  001596  0E80               	movlw	128
  1389  001598  6FC7               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1390  00159A  0E3F               	movlw	63
  1391  00159C  6FC8               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1392  00159E                     l4476:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;Main_Robot_I2C_Serial_LCD.c: 355: if (freq > 3500) freq = 3500;
  1396  00159E  0E00               	movlw	0
  1397  0015A0  6FAC               	movwf	___flge@ff1& (0+255),b
  1398  0015A2  0EC0               	movlw	192
  1399  0015A4  6FAD               	movwf	(___flge@ff1+1)& (0+255),b
  1400  0015A6  0E5A               	movlw	90
  1401  0015A8  6FAE               	movwf	(___flge@ff1+2)& (0+255),b
  1402  0015AA  0E45               	movlw	69
  1403  0015AC  6FAF               	movwf	(___flge@ff1+3)& (0+255),b
  1404  0015AE  C0C5  F0B0         	movff	setPWMFreq@freq,___flge@ff2
  1405  0015B2  C0C6  F0B1         	movff	setPWMFreq@freq+1,___flge@ff2+1
  1406  0015B6  C0C7  F0B2         	movff	setPWMFreq@freq+2,___flge@ff2+2
  1407  0015BA  C0C8  F0B3         	movff	setPWMFreq@freq+3,___flge@ff2+3
  1408  0015BE  ECE3  F00F         	call	___flge	;wreg free
  1409  0015C2  0100               	movlb	0	; () banked
  1410  0015C4  B0D8               	btfsc	status,0,c
  1411  0015C6  EFE7  F00A         	goto	u4571
  1412  0015CA  EFE9  F00A         	goto	u4570
  1413  0015CE                     u4571:
  1414  0015CE  EFF1  F00A         	goto	l269
  1415  0015D2                     u4570:
  1416  0015D2                     
  1417                           ; BSR set to: 0
  1418  0015D2  0E00               	movlw	0
  1419  0015D4  6FC5               	movwf	setPWMFreq@freq& (0+255),b
  1420  0015D6  0EC0               	movlw	192
  1421  0015D8  6FC6               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1422  0015DA  0E5A               	movlw	90
  1423  0015DC  6FC7               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1424  0015DE  0E45               	movlw	69
  1425  0015E0  6FC8               	movwf	(setPWMFreq@freq+3)& (0+255),b
  1426  0015E2                     l269:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;Main_Robot_I2C_Serial_LCD.c: 360: float prescaleval = 26075000;
  1430  0015E2  0EBC               	movlw	188
  1431  0015E4  6FCC               	movwf	setPWMFreq@prescaleval& (0+255),b
  1432  0015E6  0EEF               	movlw	239
  1433  0015E8  6FCD               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1434  0015EA  0EC6               	movlw	198
  1435  0015EC  6FCE               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1436  0015EE  0E4B               	movlw	75
  1437  0015F0  6FCF               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1438  0015F2                     
  1439                           ; BSR set to: 0
  1440                           ;Main_Robot_I2C_Serial_LCD.c: 361: prescaleval /= freq;
  1441  0015F2  C0CC  F0AC         	movff	setPWMFreq@prescaleval,___fldiv@b
  1442  0015F6  C0CD  F0AD         	movff	setPWMFreq@prescaleval+1,___fldiv@b+1
  1443  0015FA  C0CE  F0AE         	movff	setPWMFreq@prescaleval+2,___fldiv@b+2
  1444  0015FE  C0CF  F0AF         	movff	setPWMFreq@prescaleval+3,___fldiv@b+3
  1445  001602  C0C5  F0B0         	movff	setPWMFreq@freq,___fldiv@a
  1446  001606  C0C6  F0B1         	movff	setPWMFreq@freq+1,___fldiv@a+1
  1447  00160A  C0C7  F0B2         	movff	setPWMFreq@freq+2,___fldiv@a+2
  1448  00160E  C0C8  F0B3         	movff	setPWMFreq@freq+3,___fldiv@a+3
  1449  001612  ECDE  F008         	call	___fldiv	;wreg free
  1450  001616  C0AC  F0CC         	movff	?___fldiv,setPWMFreq@prescaleval
  1451  00161A  C0AD  F0CD         	movff	?___fldiv+1,setPWMFreq@prescaleval+1
  1452  00161E  C0AE  F0CE         	movff	?___fldiv+2,setPWMFreq@prescaleval+2
  1453  001622  C0AF  F0CF         	movff	?___fldiv+3,setPWMFreq@prescaleval+3
  1454  001626                     
  1455                           ;Main_Robot_I2C_Serial_LCD.c: 363: prescaleval += 2048;
  1456  001626  C0CC  F0AC         	movff	setPWMFreq@prescaleval,___fladd@b
  1457  00162A  C0CD  F0AD         	movff	setPWMFreq@prescaleval+1,___fladd@b+1
  1458  00162E  C0CE  F0AE         	movff	setPWMFreq@prescaleval+2,___fladd@b+2
  1459  001632  C0CF  F0AF         	movff	setPWMFreq@prescaleval+3,___fladd@b+3
  1460  001636  0E00               	movlw	0
  1461  001638  0100               	movlb	0	; () banked
  1462  00163A  6FB0               	movwf	___fladd@a& (0+255),b
  1463  00163C  0E00               	movlw	0
  1464  00163E  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  1465  001640  0E00               	movlw	0
  1466  001642  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  1467  001644  0E45               	movlw	69
  1468  001646  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  1469  001648  EC3B  F004         	call	___fladd	;wreg free
  1470  00164C  C0AC  F0CC         	movff	?___fladd,setPWMFreq@prescaleval
  1471  001650  C0AD  F0CD         	movff	?___fladd+1,setPWMFreq@prescaleval+1
  1472  001654  C0AE  F0CE         	movff	?___fladd+2,setPWMFreq@prescaleval+2
  1473  001658  C0AF  F0CF         	movff	?___fladd+3,setPWMFreq@prescaleval+3
  1474  00165C                     
  1475                           ;Main_Robot_I2C_Serial_LCD.c: 364: prescaleval /= 4096;
  1476  00165C  C0CC  F0AC         	movff	setPWMFreq@prescaleval,___fldiv@b
  1477  001660  C0CD  F0AD         	movff	setPWMFreq@prescaleval+1,___fldiv@b+1
  1478  001664  C0CE  F0AE         	movff	setPWMFreq@prescaleval+2,___fldiv@b+2
  1479  001668  C0CF  F0AF         	movff	setPWMFreq@prescaleval+3,___fldiv@b+3
  1480  00166C  0E00               	movlw	0
  1481  00166E  0100               	movlb	0	; () banked
  1482  001670  6FB0               	movwf	___fldiv@a& (0+255),b
  1483  001672  0E00               	movlw	0
  1484  001674  6FB1               	movwf	(___fldiv@a+1)& (0+255),b
  1485  001676  0E80               	movlw	128
  1486  001678  6FB2               	movwf	(___fldiv@a+2)& (0+255),b
  1487  00167A  0E45               	movlw	69
  1488  00167C  6FB3               	movwf	(___fldiv@a+3)& (0+255),b
  1489  00167E  ECDE  F008         	call	___fldiv	;wreg free
  1490  001682  C0AC  F0CC         	movff	?___fldiv,setPWMFreq@prescaleval
  1491  001686  C0AD  F0CD         	movff	?___fldiv+1,setPWMFreq@prescaleval+1
  1492  00168A  C0AE  F0CE         	movff	?___fldiv+2,setPWMFreq@prescaleval+2
  1493  00168E  C0AF  F0CF         	movff	?___fldiv+3,setPWMFreq@prescaleval+3
  1494  001692                     
  1495                           ;Main_Robot_I2C_Serial_LCD.c: 365: prescaleval -= 1;
  1496  001692  C0CC  F0BC         	movff	setPWMFreq@prescaleval,___flsub@b
  1497  001696  C0CD  F0BD         	movff	setPWMFreq@prescaleval+1,___flsub@b+1
  1498  00169A  C0CE  F0BE         	movff	setPWMFreq@prescaleval+2,___flsub@b+2
  1499  00169E  C0CF  F0BF         	movff	setPWMFreq@prescaleval+3,___flsub@b+3
  1500  0016A2  0E00               	movlw	0
  1501  0016A4  0100               	movlb	0	; () banked
  1502  0016A6  6FC0               	movwf	___flsub@a& (0+255),b
  1503  0016A8  0E00               	movlw	0
  1504  0016AA  6FC1               	movwf	(___flsub@a+1)& (0+255),b
  1505  0016AC  0E80               	movlw	128
  1506  0016AE  6FC2               	movwf	(___flsub@a+2)& (0+255),b
  1507  0016B0  0E3F               	movlw	63
  1508  0016B2  6FC3               	movwf	(___flsub@a+3)& (0+255),b
  1509  0016B4  EC35  F015         	call	___flsub	;wreg free
  1510  0016B8  C0BC  F0CC         	movff	?___flsub,setPWMFreq@prescaleval
  1511  0016BC  C0BD  F0CD         	movff	?___flsub+1,setPWMFreq@prescaleval+1
  1512  0016C0  C0BE  F0CE         	movff	?___flsub+2,setPWMFreq@prescaleval+2
  1513  0016C4  C0BF  F0CF         	movff	?___flsub+3,setPWMFreq@prescaleval+3
  1514  0016C8                     
  1515                           ;Main_Robot_I2C_Serial_LCD.c: 366: if (prescaleval < 3) prescaleval = 3;
  1516  0016C8  C0CC  F0AC         	movff	setPWMFreq@prescaleval,___flge@ff1
  1517  0016CC  C0CD  F0AD         	movff	setPWMFreq@prescaleval+1,___flge@ff1+1
  1518  0016D0  C0CE  F0AE         	movff	setPWMFreq@prescaleval+2,___flge@ff1+2
  1519  0016D4  C0CF  F0AF         	movff	setPWMFreq@prescaleval+3,___flge@ff1+3
  1520  0016D8  0E00               	movlw	0
  1521  0016DA  0100               	movlb	0	; () banked
  1522  0016DC  6FB0               	movwf	___flge@ff2& (0+255),b
  1523  0016DE  0E00               	movlw	0
  1524  0016E0  6FB1               	movwf	(___flge@ff2+1)& (0+255),b
  1525  0016E2  0E40               	movlw	64
  1526  0016E4  6FB2               	movwf	(___flge@ff2+2)& (0+255),b
  1527  0016E6  0E40               	movlw	64
  1528  0016E8  6FB3               	movwf	(___flge@ff2+3)& (0+255),b
  1529  0016EA  ECE3  F00F         	call	___flge	;wreg free
  1530  0016EE  0100               	movlb	0	; () banked
  1531  0016F0  B0D8               	btfsc	status,0,c
  1532  0016F2  EF7D  F00B         	goto	u4581
  1533  0016F6  EF7F  F00B         	goto	u4580
  1534  0016FA                     u4581:
  1535  0016FA  EF87  F00B         	goto	l4492
  1536  0016FE                     u4580:
  1537  0016FE                     
  1538                           ; BSR set to: 0
  1539  0016FE  0E00               	movlw	0
  1540  001700  6FCC               	movwf	setPWMFreq@prescaleval& (0+255),b
  1541  001702  0E00               	movlw	0
  1542  001704  6FCD               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1543  001706  0E40               	movlw	64
  1544  001708  6FCE               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1545  00170A  0E40               	movlw	64
  1546  00170C  6FCF               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1547  00170E                     l4492:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;Main_Robot_I2C_Serial_LCD.c: 367: if (prescaleval > 255) prescaleval = 255;
  1551  00170E  0E00               	movlw	0
  1552  001710  6FAC               	movwf	___flge@ff1& (0+255),b
  1553  001712  0E00               	movlw	0
  1554  001714  6FAD               	movwf	(___flge@ff1+1)& (0+255),b
  1555  001716  0E7F               	movlw	127
  1556  001718  6FAE               	movwf	(___flge@ff1+2)& (0+255),b
  1557  00171A  0E43               	movlw	67
  1558  00171C  6FAF               	movwf	(___flge@ff1+3)& (0+255),b
  1559  00171E  C0CC  F0B0         	movff	setPWMFreq@prescaleval,___flge@ff2
  1560  001722  C0CD  F0B1         	movff	setPWMFreq@prescaleval+1,___flge@ff2+1
  1561  001726  C0CE  F0B2         	movff	setPWMFreq@prescaleval+2,___flge@ff2+2
  1562  00172A  C0CF  F0B3         	movff	setPWMFreq@prescaleval+3,___flge@ff2+3
  1563  00172E  ECE3  F00F         	call	___flge	;wreg free
  1564  001732  0100               	movlb	0	; () banked
  1565  001734  B0D8               	btfsc	status,0,c
  1566  001736  EF9F  F00B         	goto	u4591
  1567  00173A  EFA1  F00B         	goto	u4590
  1568  00173E                     u4591:
  1569  00173E  EFA9  F00B         	goto	l4496
  1570  001742                     u4590:
  1571  001742                     
  1572                           ; BSR set to: 0
  1573  001742  0E00               	movlw	0
  1574  001744  6FCC               	movwf	setPWMFreq@prescaleval& (0+255),b
  1575  001746  0E00               	movlw	0
  1576  001748  6FCD               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1577  00174A  0E7F               	movlw	127
  1578  00174C  6FCE               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1579  00174E  0E43               	movlw	67
  1580  001750  6FCF               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1581  001752                     l4496:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;Main_Robot_I2C_Serial_LCD.c: 368: unsigned char prescale = (unsigned char) prescaleval;
  1585  001752  C0CC  F0AC         	movff	setPWMFreq@prescaleval,___fltol@f1
  1586  001756  C0CD  F0AD         	movff	setPWMFreq@prescaleval+1,___fltol@f1+1
  1587  00175A  C0CE  F0AE         	movff	setPWMFreq@prescaleval+2,___fltol@f1+2
  1588  00175E  C0CF  F0AF         	movff	setPWMFreq@prescaleval+3,___fltol@f1+3
  1589  001762  EC5F  F00F         	call	___fltol	;wreg free
  1590  001766  0100               	movlb	0	; () banked
  1591  001768  51AC               	movf	?___fltol& (0+255),w,b
  1592  00176A  6FCA               	movwf	setPWMFreq@prescale& (0+255),b
  1593  00176C                     
  1594                           ; BSR set to: 0
  1595                           ;Main_Robot_I2C_Serial_LCD.c: 369: readI2C(0x80, 0x00, &data1, 1);
  1596  00176C  0E00               	movlw	0
  1597  00176E  6FAF               	movwf	readI2C@Register& (0+255),b
  1598  001770  0EAB               	movlw	low _data1
  1599  001772  6FB0               	movwf	readI2C@Data& (0+255),b
  1600  001774  0E00               	movlw	high _data1
  1601  001776  6FB1               	movwf	(readI2C@Data+1)& (0+255),b
  1602  001778  0E00               	movlw	0
  1603  00177A  6FB3               	movwf	(readI2C@bytes+1)& (0+255),b
  1604  00177C  0E01               	movlw	1
  1605  00177E  6FB2               	movwf	readI2C@bytes& (0+255),b
  1606  001780  0E80               	movlw	128
  1607  001782  ECC9  F010         	call	_readI2C
  1608  001786                     
  1609                           ;Main_Robot_I2C_Serial_LCD.c: 371: unsigned char newmode = (data1 & ~0x80) | 0x10;
  1610  001786  0100               	movlb	0	; () banked
  1611  001788  51AB               	movf	_data1& (0+255),w,b
  1612  00178A  0B7F               	andlw	127
  1613  00178C  0910               	iorlw	16
  1614  00178E  6FCB               	movwf	setPWMFreq@newmode& (0+255),b
  1615  001790                     
  1616                           ; BSR set to: 0
  1617                           ;Main_Robot_I2C_Serial_LCD.c: 372: writeI2C(0x80, 0x00, &newmode,1);
  1618  001790  0E00               	movlw	0
  1619  001792  6FAE               	movwf	writeI2C@Register& (0+255),b
  1620  001794  0ECB               	movlw	low setPWMFreq@newmode
  1621  001796  6FAF               	movwf	writeI2C@Data& (0+255),b
  1622  001798  0E00               	movlw	high setPWMFreq@newmode
  1623  00179A  6FB0               	movwf	(writeI2C@Data+1)& (0+255),b
  1624  00179C  0E00               	movlw	0
  1625  00179E  6FB2               	movwf	(writeI2C@bytes+1)& (0+255),b
  1626  0017A0  0E01               	movlw	1
  1627  0017A2  6FB1               	movwf	writeI2C@bytes& (0+255),b
  1628  0017A4  0E80               	movlw	128
  1629  0017A6  EC3D  F013         	call	_writeI2C
  1630  0017AA                     
  1631                           ;Main_Robot_I2C_Serial_LCD.c: 373: writeI2C(0x80, 0xFE, &prescale,1);
  1632  0017AA  0EFE               	movlw	254
  1633  0017AC  0100               	movlb	0	; () banked
  1634  0017AE  6FAE               	movwf	writeI2C@Register& (0+255),b
  1635  0017B0  0ECA               	movlw	low setPWMFreq@prescale
  1636  0017B2  6FAF               	movwf	writeI2C@Data& (0+255),b
  1637  0017B4  0E00               	movlw	high setPWMFreq@prescale
  1638  0017B6  6FB0               	movwf	(writeI2C@Data+1)& (0+255),b
  1639  0017B8  0E00               	movlw	0
  1640  0017BA  6FB2               	movwf	(writeI2C@bytes+1)& (0+255),b
  1641  0017BC  0E01               	movlw	1
  1642  0017BE  6FB1               	movwf	writeI2C@bytes& (0+255),b
  1643  0017C0  0E80               	movlw	128
  1644  0017C2  EC3D  F013         	call	_writeI2C
  1645  0017C6                     
  1646                           ;Main_Robot_I2C_Serial_LCD.c: 374: writeI2C(0x80, 0x00, &data1,1);
  1647  0017C6  0E00               	movlw	0
  1648  0017C8  0100               	movlb	0	; () banked
  1649  0017CA  6FAE               	movwf	writeI2C@Register& (0+255),b
  1650  0017CC  0EAB               	movlw	low _data1
  1651  0017CE  6FAF               	movwf	writeI2C@Data& (0+255),b
  1652  0017D0  0E00               	movlw	high _data1
  1653  0017D2  6FB0               	movwf	(writeI2C@Data+1)& (0+255),b
  1654  0017D4  0E00               	movlw	0
  1655  0017D6  6FB2               	movwf	(writeI2C@bytes+1)& (0+255),b
  1656  0017D8  0E01               	movlw	1
  1657  0017DA  6FB1               	movwf	writeI2C@bytes& (0+255),b
  1658  0017DC  0E80               	movlw	128
  1659  0017DE  EC3D  F013         	call	_writeI2C
  1660  0017E2                     
  1661                           ;Main_Robot_I2C_Serial_LCD.c: 375: _delay((unsigned long)((5)*(8000000/4000.0)));
  1662  0017E2  0E0D               	movlw	13
  1663  0017E4  0100               	movlb	0	; () banked
  1664  0017E6  6FC9               	movwf	??_setPWMFreq& (0+255),b
  1665  0017E8  0EFB               	movlw	251
  1666  0017EA                     u4677:
  1667  0017EA  2EE8               	decfsz	wreg,f,c
  1668  0017EC  D7FE               	bra	u4677
  1669  0017EE  2FC9               	decfsz	??_setPWMFreq& (0+255),f,b
  1670  0017F0  D7FC               	bra	u4677
  1671  0017F2  D000               	nop2	
  1672  0017F4                     
  1673                           ;Main_Robot_I2C_Serial_LCD.c: 377: d1=(data1 | 0x80 | 0x20);
  1674  0017F4  0100               	movlb	0	; () banked
  1675  0017F6  51AB               	movf	_data1& (0+255),w,b
  1676  0017F8  09A0               	iorlw	160
  1677  0017FA  6FAA               	movwf	_d1& (0+255),b
  1678  0017FC                     
  1679                           ; BSR set to: 0
  1680                           ;Main_Robot_I2C_Serial_LCD.c: 378: writeI2C(0x80, 0x00, &d1, 1);
  1681  0017FC  0E00               	movlw	0
  1682  0017FE  6FAE               	movwf	writeI2C@Register& (0+255),b
  1683  001800  0EAA               	movlw	low _d1
  1684  001802  6FAF               	movwf	writeI2C@Data& (0+255),b
  1685  001804  0E00               	movlw	high _d1
  1686  001806  6FB0               	movwf	(writeI2C@Data+1)& (0+255),b
  1687  001808  0E00               	movlw	0
  1688  00180A  6FB2               	movwf	(writeI2C@bytes+1)& (0+255),b
  1689  00180C  0E01               	movlw	1
  1690  00180E  6FB1               	movwf	writeI2C@bytes& (0+255),b
  1691  001810  0E80               	movlw	128
  1692  001812  EC3D  F013         	call	_writeI2C
  1693  001816  0012               	return		;funcret
  1694  001818                     __end_of_setPWMFreq:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _readI2C *****************
  1698 ;; Defined at:
  1699 ;;		line 310 in file "Main_Robot_I2C_Serial_LCD.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  Address         1    wreg     unsigned char 
  1702 ;;  Register        1    3[BANK0 ] unsigned char 
  1703 ;;  Data            2    4[BANK0 ] PTR unsigned char 
  1704 ;;		 -> data1(1), 
  1705 ;;  bytes           2    6[BANK0 ] int 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  Address         1   10[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1717 ;;      Params:         0       5       0       0       0       0       0       0       0
  1718 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1719 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1720 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1721 ;;Total ram usage:        8 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    8
  1724 ;; This function calls:
  1725 ;;		_receiveI2C
  1726 ;;		_repeatedStart
  1727 ;;		_sendI2C
  1728 ;;		_startI2C
  1729 ;;		_stopI2C
  1730 ;; This function is called by:
  1731 ;;		_setPWMFreq
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text3
  1736  002192                     __ptext3:
  1737                           	callstack 0
  1738  002192                     _readI2C:
  1739                           	callstack 20
  1740                           
  1741                           ;incstack = 0
  1742                           ;readI2C@Address stored from wreg
  1743  002192  0100               	movlb	0	; () banked
  1744  002194  6FB6               	movwf	readI2C@Address& (0+255),b
  1745  002196                     
  1746                           ;Main_Robot_I2C_Serial_LCD.c: 311: startI2C();
  1747  002196  ECC4  F016         	call	_startI2C	;wreg free
  1748                           
  1749                           ;Main_Robot_I2C_Serial_LCD.c: 312: sendI2C(Address);
  1750  00219A  0100               	movlb	0	; () banked
  1751  00219C  51B6               	movf	readI2C@Address& (0+255),w,b
  1752  00219E  ECA9  F016         	call	_sendI2C
  1753                           
  1754                           ;Main_Robot_I2C_Serial_LCD.c: 313: sendI2C(Register);
  1755  0021A2  0100               	movlb	0	; () banked
  1756  0021A4  51AF               	movf	readI2C@Register& (0+255),w,b
  1757  0021A6  ECA9  F016         	call	_sendI2C
  1758                           
  1759                           ;Main_Robot_I2C_Serial_LCD.c: 314: repeatedStart();
  1760  0021AA  ECBC  F016         	call	_repeatedStart	;wreg free
  1761                           
  1762                           ;Main_Robot_I2C_Serial_LCD.c: 315: sendI2C(Address|0x01);
  1763  0021AE  0100               	movlb	0	; () banked
  1764  0021B0  51B6               	movf	readI2C@Address& (0+255),w,b
  1765  0021B2  0901               	iorlw	1
  1766  0021B4  ECA9  F016         	call	_sendI2C
  1767  0021B8                     
  1768                           ;Main_Robot_I2C_Serial_LCD.c: 317: for(i=0;i<bytes;i++){
  1769  0021B8  0E00               	movlw	0
  1770  0021BA  6E3B               	movwf	(_i+1)^0,c
  1771  0021BC  0E00               	movlw	0
  1772  0021BE  6E3A               	movwf	_i^0,c
  1773  0021C0  EF0B  F011         	goto	l4248
  1774  0021C4                     l4236:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;Main_Robot_I2C_Serial_LCD.c: 318: if(i+1 == bytes){
  1778  0021C4  0E01               	movlw	1
  1779  0021C6  243A               	addwf	_i^0,w,c
  1780  0021C8  6FB4               	movwf	??_readI2C& (0+255),b
  1781  0021CA  0E00               	movlw	0
  1782  0021CC  203B               	addwfc	(_i+1)^0,w,c
  1783  0021CE  6FB5               	movwf	(??_readI2C+1)& (0+255),b
  1784  0021D0  51B2               	movf	readI2C@bytes& (0+255),w,b
  1785  0021D2  19B4               	xorwf	??_readI2C& (0+255),w,b
  1786  0021D4  E107               	bnz	u4191
  1787  0021D6  51B3               	movf	(readI2C@bytes+1)& (0+255),w,b
  1788  0021D8  19B5               	xorwf	(??_readI2C+1)& (0+255),w,b
  1789  0021DA  A4D8               	btfss	status,2,c
  1790  0021DC  EFF2  F010         	goto	u4191
  1791  0021E0  EFF4  F010         	goto	u4190
  1792  0021E4                     u4191:
  1793  0021E4  EFFE  F010         	goto	l4240
  1794  0021E8                     u4190:
  1795  0021E8                     
  1796                           ; BSR set to: 0
  1797                           ;Main_Robot_I2C_Serial_LCD.c: 319: *Data = receiveI2C(1);
  1798  0021E8  0E01               	movlw	1
  1799  0021EA  ECD9  F015         	call	_receiveI2C
  1800  0021EE  C0B0  FFD9         	movff	readI2C@Data,fsr2l
  1801  0021F2  C0B1  FFDA         	movff	readI2C@Data+1,fsr2h
  1802  0021F6  6EDF               	movwf	indf2,c
  1803                           
  1804                           ;Main_Robot_I2C_Serial_LCD.c: 320: }
  1805  0021F8  EF06  F011         	goto	l4246
  1806  0021FC                     l4240:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;Main_Robot_I2C_Serial_LCD.c: 321: else{;Main_Robot_I2C_Serial_LCD.c: 322: *Data = recei
      +                          veI2C(0);
  1810  0021FC  0E00               	movlw	0
  1811  0021FE  ECD9  F015         	call	_receiveI2C
  1812  002202  C0B0  FFD9         	movff	readI2C@Data,fsr2l
  1813  002206  C0B1  FFDA         	movff	readI2C@Data+1,fsr2h
  1814  00220A  6EDF               	movwf	indf2,c
  1815  00220C                     l4246:
  1816                           
  1817                           ;Main_Robot_I2C_Serial_LCD.c: 326: };Main_Robot_I2C_Serial_LCD.c: 327: Data++;
  1818  00220C  0100               	movlb	0	; () banked
  1819  00220E  4BB0               	infsnz	readI2C@Data& (0+255),f,b
  1820  002210  2BB1               	incf	(readI2C@Data+1)& (0+255),f,b
  1821  002212  4A3A               	infsnz	_i^0,f,c
  1822  002214  2A3B               	incf	(_i+1)^0,f,c
  1823  002216                     l4248:
  1824  002216  0100               	movlb	0	; () banked
  1825  002218  51B2               	movf	readI2C@bytes& (0+255),w,b
  1826  00221A  5C3A               	subwf	_i^0,w,c
  1827  00221C  503B               	movf	(_i+1)^0,w,c
  1828  00221E  0A80               	xorlw	128
  1829  002220  6FB4               	movwf	??_readI2C& (0+255),b
  1830  002222  51B3               	movf	(readI2C@bytes+1)& (0+255),w,b
  1831  002224  0A80               	xorlw	128
  1832  002226  59B4               	subwfb	??_readI2C& (0+255),w,b
  1833  002228  A0D8               	btfss	status,0,c
  1834  00222A  EF19  F011         	goto	u4201
  1835  00222E  EF1B  F011         	goto	u4200
  1836  002232                     u4201:
  1837  002232  EFE2  F010         	goto	l4236
  1838  002236                     u4200:
  1839  002236                     
  1840                           ; BSR set to: 0
  1841                           ;Main_Robot_I2C_Serial_LCD.c: 328: };Main_Robot_I2C_Serial_LCD.c: 330: stopI2C();
  1842  002236  ECC0  F016         	call	_stopI2C	;wreg free
  1843  00223A                     
  1844                           ;Main_Robot_I2C_Serial_LCD.c: 331: _delay((unsigned long)((100)*(8000000/4000.0)));
  1845  00223A  0E02               	movlw	2
  1846  00223C  0100               	movlb	0	; () banked
  1847  00223E  6FB5               	movwf	(??_readI2C+1)& (0+255),b
  1848  002240  0E04               	movlw	4
  1849  002242  6FB4               	movwf	??_readI2C& (0+255),b
  1850  002244  0EBA               	movlw	186
  1851  002246                     u4687:
  1852  002246  2EE8               	decfsz	wreg,f,c
  1853  002248  D7FE               	bra	u4687
  1854  00224A  2FB4               	decfsz	??_readI2C& (0+255),f,b
  1855  00224C  D7FC               	bra	u4687
  1856  00224E  2FB5               	decfsz	(??_readI2C+1)& (0+255),f,b
  1857  002250  D7FA               	bra	u4687
  1858  002252  F000               	nop	
  1859  002254  0012               	return		;funcret
  1860  002256                     __end_of_readI2C:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _repeatedStart *****************
  1864 ;; Defined at:
  1865 ;;		line 334 in file "Main_Robot_I2C_Serial_LCD.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    7
  1886 ;; This function calls:
  1887 ;;		_readyI2C
  1888 ;; This function is called by:
  1889 ;;		_readI2C
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text4
  1894  002D78                     __ptext4:
  1895                           	callstack 0
  1896  002D78                     _repeatedStart:
  1897                           	callstack 20
  1898  002D78                     
  1899                           ;Main_Robot_I2C_Serial_LCD.c: 335: readyI2C();
  1900  002D78  EC29  F016         	call	_readyI2C	;wreg free
  1901  002D7C                     
  1902                           ;Main_Robot_I2C_Serial_LCD.c: 336: RSEN = 1;
  1903  002D7C  82C5               	bsf	4037,1,c	;volatile
  1904  002D7E  0012               	return		;funcret
  1905  002D80                     __end_of_repeatedStart:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _receiveI2C *****************
  1909 ;; Defined at:
  1910 ;;		line 339 in file "Main_Robot_I2C_Serial_LCD.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  flag            1    wreg     unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  flag            1    1[BANK0 ] unsigned char 
  1915 ;;  buffer          1    2[BANK0 ] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      unsigned char 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0
  1926 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1928 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    7
  1932 ;; This function calls:
  1933 ;;		_readyI2C
  1934 ;; This function is called by:
  1935 ;;		_readI2C
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text5
  1940  002BB2                     __ptext5:
  1941                           	callstack 0
  1942  002BB2                     _receiveI2C:
  1943                           	callstack 20
  1944                           
  1945                           ;incstack = 0
  1946                           ;receiveI2C@flag stored from wreg
  1947  002BB2  0100               	movlb	0	; () banked
  1948  002BB4  6FAD               	movwf	receiveI2C@flag& (0+255),b
  1949  002BB6                     
  1950                           ;Main_Robot_I2C_Serial_LCD.c: 340: unsigned char buffer;;Main_Robot_I2C_Serial_LCD.c: 34
      +                          1: readyI2C();
  1951  002BB6  EC29  F016         	call	_readyI2C	;wreg free
  1952  002BBA                     
  1953                           ;Main_Robot_I2C_Serial_LCD.c: 342: RCEN = 1;
  1954  002BBA  86C5               	bsf	4037,3,c	;volatile
  1955                           
  1956                           ;Main_Robot_I2C_Serial_LCD.c: 343: readyI2C();
  1957  002BBC  EC29  F016         	call	_readyI2C	;wreg free
  1958  002BC0                     
  1959                           ;Main_Robot_I2C_Serial_LCD.c: 344: buffer = SSPBUF;
  1960  002BC0  CFC9 F0AE          	movff	4041,receiveI2C@buffer	;volatile
  1961                           
  1962                           ;Main_Robot_I2C_Serial_LCD.c: 345: readyI2C();
  1963  002BC4  EC29  F016         	call	_readyI2C	;wreg free
  1964  002BC8                     
  1965                           ;Main_Robot_I2C_Serial_LCD.c: 346: ACKDT = flag==1? 1 : 0;
  1966  002BC8  0100               	movlb	0	; () banked
  1967  002BCA  05AD               	decf	receiveI2C@flag& (0+255),w,b
  1968  002BCC  B4D8               	btfsc	status,2,c
  1969  002BCE  EFEB  F015         	goto	u3561
  1970  002BD2  EFEE  F015         	goto	u3560
  1971  002BD6                     u3561:
  1972  002BD6  8AC5               	bsf	4037,5,c	;volatile
  1973  002BD8  EFEF  F015         	goto	u3575
  1974  002BDC                     u3560:
  1975  002BDC  9AC5               	bcf	4037,5,c	;volatile
  1976  002BDE                     u3575:
  1977  002BDE                     
  1978                           ;Main_Robot_I2C_Serial_LCD.c: 347: ACKEN = 1;
  1979  002BDE  88C5               	bsf	4037,4,c	;volatile
  1980  002BE0                     
  1981                           ;Main_Robot_I2C_Serial_LCD.c: 348: readyI2C();
  1982  002BE0  EC29  F016         	call	_readyI2C	;wreg free
  1983  002BE4                     
  1984                           ;Main_Robot_I2C_Serial_LCD.c: 349: return buffer;
  1985  002BE4  0100               	movlb	0	; () banked
  1986  002BE6  51AE               	movf	receiveI2C@buffer& (0+255),w,b
  1987  002BE8                     
  1988                           ; BSR set to: 0
  1989  002BE8  0012               	return		;funcret
  1990  002BEA                     __end_of_receiveI2C:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function ___fltol *****************
  1994 ;; Defined at:
  1995 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  f1              4    0[BANK0 ] unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  exp1            1    9[BANK0 ] unsigned char 
  2000 ;;  sign1           1    8[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  4    0[BANK0 ] long 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2010 ;;      Params:         0       4       0       0       0       0       0       0       0
  2011 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2012 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2013 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2014 ;;Total ram usage:       10 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    6
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_setPWMFreq
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text6
  2025  001EBE                     __ptext6:
  2026                           	callstack 0
  2027  001EBE                     ___fltol:
  2028                           	callstack 22
  2029  001EBE  0100               	movlb	0	; () banked
  2030  001EC0  35AE               	rlcf	(___fltol@f1+2)& (0+255),w,b
  2031  001EC2  35AF               	rlcf	(___fltol@f1+3)& (0+255),w,b
  2032  001EC4  6FB5               	movwf	___fltol@exp1& (0+255),b
  2033  001EC6  51B5               	movf	___fltol@exp1& (0+255),w,b
  2034  001EC8  A4D8               	btfss	status,2,c
  2035  001ECA  EF69  F00F         	goto	u4491
  2036  001ECE  EF6B  F00F         	goto	u4490
  2037  001ED2                     u4491:
  2038  001ED2  EF75  F00F         	goto	l4434
  2039  001ED6                     u4490:
  2040  001ED6                     l4430:
  2041                           
  2042                           ; BSR set to: 0
  2043  001ED6  0E00               	movlw	0
  2044  001ED8  6FAC               	movwf	?___fltol& (0+255),b
  2045  001EDA  0E00               	movlw	0
  2046  001EDC  6FAD               	movwf	(?___fltol+1)& (0+255),b
  2047  001EDE  0E00               	movlw	0
  2048  001EE0  6FAE               	movwf	(?___fltol+2)& (0+255),b
  2049  001EE2  0E00               	movlw	0
  2050  001EE4  6FAF               	movwf	(?___fltol+3)& (0+255),b
  2051  001EE6  EFE2  F00F         	goto	l624
  2052  001EEA                     l4434:
  2053                           
  2054                           ; BSR set to: 0
  2055  001EEA  C0AC  F0B0         	movff	___fltol@f1,??___fltol
  2056  001EEE  C0AD  F0B1         	movff	___fltol@f1+1,??___fltol+1
  2057  001EF2  C0AE  F0B2         	movff	___fltol@f1+2,??___fltol+2
  2058  001EF6  C0AF  F0B3         	movff	___fltol@f1+3,??___fltol+3
  2059  001EFA  0E20               	movlw	32
  2060  001EFC  EF85  F00F         	goto	u4500
  2061  001F00                     u4505:
  2062  001F00  90D8               	bcf	status,0,c
  2063  001F02  33B3               	rrcf	(??___fltol+3)& (0+255),f,b
  2064  001F04  33B2               	rrcf	(??___fltol+2)& (0+255),f,b
  2065  001F06  33B1               	rrcf	(??___fltol+1)& (0+255),f,b
  2066  001F08  33B0               	rrcf	??___fltol& (0+255),f,b
  2067  001F0A                     u4500:
  2068  001F0A  2EE8               	decfsz	wreg,f,c
  2069  001F0C  EF80  F00F         	goto	u4505
  2070  001F10  51B0               	movf	??___fltol& (0+255),w,b
  2071  001F12  6FB4               	movwf	___fltol@sign1& (0+255),b
  2072  001F14                     
  2073                           ; BSR set to: 0
  2074  001F14  8FAE               	bsf	(___fltol@f1+2)& (0+255),7,b
  2075  001F16                     
  2076                           ; BSR set to: 0
  2077  001F16  0EFF               	movlw	255
  2078  001F18  17AC               	andwf	___fltol@f1& (0+255),f,b
  2079  001F1A  0EFF               	movlw	255
  2080  001F1C  17AD               	andwf	(___fltol@f1+1)& (0+255),f,b
  2081  001F1E  0EFF               	movlw	255
  2082  001F20  17AE               	andwf	(___fltol@f1+2)& (0+255),f,b
  2083  001F22  0E00               	movlw	0
  2084  001F24  17AF               	andwf	(___fltol@f1+3)& (0+255),f,b
  2085  001F26                     
  2086                           ; BSR set to: 0
  2087  001F26  0E96               	movlw	150
  2088  001F28  5FB5               	subwf	___fltol@exp1& (0+255),f,b
  2089  001F2A                     
  2090                           ; BSR set to: 0
  2091  001F2A  BFB5               	btfsc	___fltol@exp1& (0+255),7,b
  2092  001F2C  EF9C  F00F         	goto	u4510
  2093  001F30  EF9A  F00F         	goto	u4511
  2094  001F34                     u4511:
  2095  001F34  EFB2  F00F         	goto	l4454
  2096  001F38                     u4510:
  2097  001F38                     
  2098                           ; BSR set to: 0
  2099  001F38  51B5               	movf	___fltol@exp1& (0+255),w,b
  2100  001F3A  0A80               	xorlw	128
  2101  001F3C  0F97               	addlw	151
  2102  001F3E  B0D8               	btfsc	status,0,c
  2103  001F40  EFA4  F00F         	goto	u4521
  2104  001F44  EFA6  F00F         	goto	u4520
  2105  001F48                     u4521:
  2106  001F48  EFA8  F00F         	goto	l4450
  2107  001F4C                     u4520:
  2108  001F4C  EF6B  F00F         	goto	l4430
  2109  001F50                     l4450:
  2110                           
  2111                           ; BSR set to: 0
  2112  001F50  90D8               	bcf	status,0,c
  2113  001F52  33AF               	rrcf	(___fltol@f1+3)& (0+255),f,b
  2114  001F54  33AE               	rrcf	(___fltol@f1+2)& (0+255),f,b
  2115  001F56  33AD               	rrcf	(___fltol@f1+1)& (0+255),f,b
  2116  001F58  33AC               	rrcf	___fltol@f1& (0+255),f,b
  2117  001F5A                     
  2118                           ; BSR set to: 0
  2119  001F5A  3FB5               	incfsz	___fltol@exp1& (0+255),f,b
  2120  001F5C  EFA8  F00F         	goto	l4450
  2121  001F60  EFCA  F00F         	goto	l4464
  2122  001F64                     l4454:
  2123                           
  2124                           ; BSR set to: 0
  2125  001F64  0E1F               	movlw	31
  2126  001F66  65B5               	cpfsgt	___fltol@exp1& (0+255),b
  2127  001F68  EFB8  F00F         	goto	u4531
  2128  001F6C  EFBA  F00F         	goto	u4530
  2129  001F70                     u4531:
  2130  001F70  EFC2  F00F         	goto	l4462
  2131  001F74                     u4530:
  2132  001F74  EF6B  F00F         	goto	l4430
  2133  001F78                     l4460:
  2134                           
  2135                           ; BSR set to: 0
  2136  001F78  90D8               	bcf	status,0,c
  2137  001F7A  37AC               	rlcf	___fltol@f1& (0+255),f,b
  2138  001F7C  37AD               	rlcf	(___fltol@f1+1)& (0+255),f,b
  2139  001F7E  37AE               	rlcf	(___fltol@f1+2)& (0+255),f,b
  2140  001F80  37AF               	rlcf	(___fltol@f1+3)& (0+255),f,b
  2141  001F82  07B5               	decf	___fltol@exp1& (0+255),f,b
  2142  001F84                     l4462:
  2143                           
  2144                           ; BSR set to: 0
  2145  001F84  51B5               	movf	___fltol@exp1& (0+255),w,b
  2146  001F86  A4D8               	btfss	status,2,c
  2147  001F88  EFC8  F00F         	goto	u4541
  2148  001F8C  EFCA  F00F         	goto	u4540
  2149  001F90                     u4541:
  2150  001F90  EFBC  F00F         	goto	l4460
  2151  001F94                     u4540:
  2152  001F94                     l4464:
  2153                           
  2154                           ; BSR set to: 0
  2155  001F94  51B4               	movf	___fltol@sign1& (0+255),w,b
  2156  001F96  B4D8               	btfsc	status,2,c
  2157  001F98  EFD0  F00F         	goto	u4551
  2158  001F9C  EFD2  F00F         	goto	u4550
  2159  001FA0                     u4551:
  2160  001FA0  EFDA  F00F         	goto	l4468
  2161  001FA4                     u4550:
  2162  001FA4                     
  2163                           ; BSR set to: 0
  2164  001FA4  1FAF               	comf	(___fltol@f1+3)& (0+255),f,b
  2165  001FA6  1FAE               	comf	(___fltol@f1+2)& (0+255),f,b
  2166  001FA8  1FAD               	comf	(___fltol@f1+1)& (0+255),f,b
  2167  001FAA  6DAC               	negf	___fltol@f1& (0+255),b
  2168  001FAC  0E00               	movlw	0
  2169  001FAE  23AD               	addwfc	(___fltol@f1+1)& (0+255),f,b
  2170  001FB0  23AE               	addwfc	(___fltol@f1+2)& (0+255),f,b
  2171  001FB2  23AF               	addwfc	(___fltol@f1+3)& (0+255),f,b
  2172  001FB4                     l4468:
  2173                           
  2174                           ; BSR set to: 0
  2175  001FB4  C0AC  F0AC         	movff	___fltol@f1,?___fltol
  2176  001FB8  C0AD  F0AD         	movff	___fltol@f1+1,?___fltol+1
  2177  001FBC  C0AE  F0AE         	movff	___fltol@f1+2,?___fltol+2
  2178  001FC0  C0AF  F0AF         	movff	___fltol@f1+3,?___fltol+3
  2179  001FC4                     l624:
  2180                           
  2181                           ; BSR set to: 0
  2182  001FC4  0012               	return		;funcret
  2183  001FC6                     __end_of___fltol:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function ___flsub *****************
  2187 ;; Defined at:
  2188 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  b               4   16[BANK0 ] long 
  2191 ;;  a               4   20[BANK0 ] long 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  4   16[BANK0 ] long 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2203 ;;      Params:         0       8       0       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2206 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2207 ;;Total ram usage:        8 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    7
  2210 ;; This function calls:
  2211 ;;		___fladd
  2212 ;; This function is called by:
  2213 ;;		_setPWMFreq
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text7
  2218  002A6A                     __ptext7:
  2219                           	callstack 0
  2220  002A6A                     ___flsub:
  2221                           	callstack 21
  2222  002A6A  0E00               	movlw	0
  2223  002A6C  0100               	movlb	0	; () banked
  2224  002A6E  1BC0               	xorwf	___flsub@a& (0+255),f,b
  2225  002A70  0E00               	movlw	0
  2226  002A72  1BC1               	xorwf	(___flsub@a+1)& (0+255),f,b
  2227  002A74  0E00               	movlw	0
  2228  002A76  1BC2               	xorwf	(___flsub@a+2)& (0+255),f,b
  2229  002A78  0E80               	movlw	128
  2230  002A7A  1BC3               	xorwf	(___flsub@a+3)& (0+255),f,b
  2231  002A7C                     
  2232                           ; BSR set to: 0
  2233  002A7C  C0BC  F0AC         	movff	___flsub@b,___fladd@b
  2234  002A80  C0BD  F0AD         	movff	___flsub@b+1,___fladd@b+1
  2235  002A84  C0BE  F0AE         	movff	___flsub@b+2,___fladd@b+2
  2236  002A88  C0BF  F0AF         	movff	___flsub@b+3,___fladd@b+3
  2237  002A8C  C0C0  F0B0         	movff	___flsub@a,___fladd@a
  2238  002A90  C0C1  F0B1         	movff	___flsub@a+1,___fladd@a+1
  2239  002A94  C0C2  F0B2         	movff	___flsub@a+2,___fladd@a+2
  2240  002A98  C0C3  F0B3         	movff	___flsub@a+3,___fladd@a+3
  2241  002A9C  EC3B  F004         	call	___fladd	;wreg free
  2242  002AA0  C0AC  F0BC         	movff	?___fladd,?___flsub
  2243  002AA4  C0AD  F0BD         	movff	?___fladd+1,?___flsub+1
  2244  002AA8  C0AE  F0BE         	movff	?___fladd+2,?___flsub+2
  2245  002AAC  C0AF  F0BF         	movff	?___fladd+3,?___flsub+3
  2246  002AB0  0012               	return		;funcret
  2247  002AB2                     __end_of___flsub:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function ___fladd *****************
  2251 ;; Defined at:
  2252 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  b               4    0[BANK0 ] long 
  2255 ;;  a               4    4[BANK0 ] long 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  grs             1   15[BANK0 ] unsigned char 
  2258 ;;  bexp            1   14[BANK0 ] unsigned char 
  2259 ;;  aexp            1   13[BANK0 ] unsigned char 
  2260 ;;  signs           1   12[BANK0 ] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  4    0[BANK0 ] unsigned char 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2270 ;;      Params:         0       8       0       0       0       0       0       0       0
  2271 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2272 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2273 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2274 ;;Total ram usage:       16 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    6
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_setPWMFreq
  2281 ;;		___flsub
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text8
  2286  000876                     __ptext8:
  2287                           	callstack 0
  2288  000876                     ___fladd:
  2289                           	callstack 21
  2290  000876  0100               	movlb	0	; () banked
  2291  000878  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  2292  00087A  0B80               	andlw	128
  2293  00087C  6FB8               	movwf	___fladd@signs& (0+255),b
  2294  00087E  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  2295  000880  25AF               	addwf	(___fladd@b+3)& (0+255),w,b
  2296  000882  6FBA               	movwf	___fladd@bexp& (0+255),b
  2297  000884                     
  2298                           ; BSR set to: 0
  2299  000884  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  2300  000886  EF47  F004         	goto	u3581
  2301  00088A  EF49  F004         	goto	u3580
  2302  00088E                     u3581:
  2303  00088E  EF4A  F004         	goto	l3858
  2304  000892                     u3580:
  2305  000892                     
  2306                           ; BSR set to: 0
  2307  000892  81BA               	bsf	___fladd@bexp& (0+255),0,b
  2308  000894                     l3858:
  2309                           
  2310                           ; BSR set to: 0
  2311  000894  51BA               	movf	___fladd@bexp& (0+255),w,b
  2312  000896  B4D8               	btfsc	status,2,c
  2313  000898  EF50  F004         	goto	u3591
  2314  00089C  EF52  F004         	goto	u3590
  2315  0008A0                     u3591:
  2316  0008A0  EF67  F004         	goto	l3868
  2317  0008A4                     u3590:
  2318  0008A4                     
  2319                           ; BSR set to: 0
  2320  0008A4  29BA               	incf	___fladd@bexp& (0+255),w,b
  2321  0008A6  A4D8               	btfss	status,2,c
  2322  0008A8  EF58  F004         	goto	u3601
  2323  0008AC  EF5A  F004         	goto	u3600
  2324  0008B0                     u3601:
  2325  0008B0  EF62  F004         	goto	l3864
  2326  0008B4                     u3600:
  2327  0008B4                     
  2328                           ; BSR set to: 0
  2329  0008B4  0E00               	movlw	0
  2330  0008B6  6FAC               	movwf	___fladd@b& (0+255),b
  2331  0008B8  0E00               	movlw	0
  2332  0008BA  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  2333  0008BC  0E00               	movlw	0
  2334  0008BE  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  2335  0008C0  0E00               	movlw	0
  2336  0008C2  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  2337  0008C4                     l3864:
  2338                           
  2339                           ; BSR set to: 0
  2340  0008C4  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  2341  0008C6                     
  2342                           ; BSR set to: 0
  2343  0008C6  0E00               	movlw	0
  2344  0008C8  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  2345  0008CA  EF6F  F004         	goto	l3870
  2346  0008CE                     l3868:
  2347                           
  2348                           ; BSR set to: 0
  2349  0008CE  0E00               	movlw	0
  2350  0008D0  6FAC               	movwf	___fladd@b& (0+255),b
  2351  0008D2  0E00               	movlw	0
  2352  0008D4  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  2353  0008D6  0E00               	movlw	0
  2354  0008D8  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  2355  0008DA  0E00               	movlw	0
  2356  0008DC  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  2357  0008DE                     l3870:
  2358                           
  2359                           ; BSR set to: 0
  2360  0008DE  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  2361  0008E0  0B80               	andlw	128
  2362  0008E2  6FB9               	movwf	___fladd@aexp& (0+255),b
  2363  0008E4                     
  2364                           ; BSR set to: 0
  2365  0008E4  51B8               	movf	___fladd@signs& (0+255),w,b
  2366  0008E6  19B9               	xorwf	___fladd@aexp& (0+255),w,b
  2367  0008E8  B4D8               	btfsc	status,2,c
  2368  0008EA  EF79  F004         	goto	u3611
  2369  0008EE  EF7B  F004         	goto	u3610
  2370  0008F2                     u3611:
  2371  0008F2  EF7C  F004         	goto	l3876
  2372  0008F6                     u3610:
  2373  0008F6                     
  2374                           ; BSR set to: 0
  2375  0008F6  8DB8               	bsf	___fladd@signs& (0+255),6,b
  2376  0008F8                     l3876:
  2377                           
  2378                           ; BSR set to: 0
  2379  0008F8  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  2380  0008FA  25B3               	addwf	(___fladd@a+3)& (0+255),w,b
  2381  0008FC  6FB9               	movwf	___fladd@aexp& (0+255),b
  2382  0008FE                     
  2383                           ; BSR set to: 0
  2384  0008FE  AFB2               	btfss	(___fladd@a+2)& (0+255),7,b
  2385  000900  EF84  F004         	goto	u3621
  2386  000904  EF86  F004         	goto	u3620
  2387  000908                     u3621:
  2388  000908  EF87  F004         	goto	l3882
  2389  00090C                     u3620:
  2390  00090C                     
  2391                           ; BSR set to: 0
  2392  00090C  81B9               	bsf	___fladd@aexp& (0+255),0,b
  2393  00090E                     l3882:
  2394                           
  2395                           ; BSR set to: 0
  2396  00090E  51B9               	movf	___fladd@aexp& (0+255),w,b
  2397  000910  B4D8               	btfsc	status,2,c
  2398  000912  EF8D  F004         	goto	u3631
  2399  000916  EF8F  F004         	goto	u3630
  2400  00091A                     u3631:
  2401  00091A  EFA4  F004         	goto	l3892
  2402  00091E                     u3630:
  2403  00091E                     
  2404                           ; BSR set to: 0
  2405  00091E  29B9               	incf	___fladd@aexp& (0+255),w,b
  2406  000920  A4D8               	btfss	status,2,c
  2407  000922  EF95  F004         	goto	u3641
  2408  000926  EF97  F004         	goto	u3640
  2409  00092A                     u3641:
  2410  00092A  EF9F  F004         	goto	l3888
  2411  00092E                     u3640:
  2412  00092E                     
  2413                           ; BSR set to: 0
  2414  00092E  0E00               	movlw	0
  2415  000930  6FB0               	movwf	___fladd@a& (0+255),b
  2416  000932  0E00               	movlw	0
  2417  000934  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  2418  000936  0E00               	movlw	0
  2419  000938  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  2420  00093A  0E00               	movlw	0
  2421  00093C  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  2422  00093E                     l3888:
  2423                           
  2424                           ; BSR set to: 0
  2425  00093E  8FB2               	bsf	(___fladd@a+2)& (0+255),7,b
  2426  000940                     
  2427                           ; BSR set to: 0
  2428  000940  0E00               	movlw	0
  2429  000942  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  2430  000944  EFAC  F004         	goto	l3894
  2431  000948                     l3892:
  2432                           
  2433                           ; BSR set to: 0
  2434  000948  0E00               	movlw	0
  2435  00094A  6FB0               	movwf	___fladd@a& (0+255),b
  2436  00094C  0E00               	movlw	0
  2437  00094E  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  2438  000950  0E00               	movlw	0
  2439  000952  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  2440  000954  0E00               	movlw	0
  2441  000956  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  2442  000958                     l3894:
  2443                           
  2444                           ; BSR set to: 0
  2445  000958  51BA               	movf	___fladd@bexp& (0+255),w,b
  2446  00095A  5DB9               	subwf	___fladd@aexp& (0+255),w,b
  2447  00095C  B0D8               	btfsc	status,0,c
  2448  00095E  EFB3  F004         	goto	u3651
  2449  000962  EFB5  F004         	goto	u3650
  2450  000966                     u3651:
  2451  000966  EFDC  F004         	goto	l3930
  2452  00096A                     u3650:
  2453  00096A                     
  2454                           ; BSR set to: 0
  2455  00096A  ADB8               	btfss	___fladd@signs& (0+255),6,b
  2456  00096C  EFBA  F004         	goto	u3661
  2457  000970  EFBC  F004         	goto	u3660
  2458  000974                     u3661:
  2459  000974  EFBE  F004         	goto	l3900
  2460  000978                     u3660:
  2461  000978                     
  2462                           ; BSR set to: 0
  2463  000978  0E80               	movlw	128
  2464  00097A  1BB8               	xorwf	___fladd@signs& (0+255),f,b
  2465  00097C                     l3900:
  2466                           
  2467                           ; BSR set to: 0
  2468  00097C  C0BA  F0BB         	movff	___fladd@bexp,___fladd@grs
  2469  000980                     
  2470                           ; BSR set to: 0
  2471  000980  C0B9  F0BA         	movff	___fladd@aexp,___fladd@bexp
  2472  000984                     
  2473                           ; BSR set to: 0
  2474  000984  C0BB  F0B9         	movff	___fladd@grs,___fladd@aexp
  2475  000988                     
  2476                           ; BSR set to: 0
  2477  000988  C0AC  F0BB         	movff	___fladd@b,___fladd@grs
  2478  00098C                     
  2479                           ; BSR set to: 0
  2480  00098C  C0B0  F0AC         	movff	___fladd@a,___fladd@b
  2481  000990                     
  2482                           ; BSR set to: 0
  2483  000990  C0BB  F0B0         	movff	___fladd@grs,___fladd@a
  2484  000994                     
  2485                           ; BSR set to: 0
  2486  000994  C0AD  F0BB         	movff	___fladd@b+1,___fladd@grs
  2487  000998                     
  2488                           ; BSR set to: 0
  2489  000998  C0B1  F0AD         	movff	___fladd@a+1,___fladd@b+1
  2490  00099C                     
  2491                           ; BSR set to: 0
  2492  00099C  C0BB  F0B1         	movff	___fladd@grs,___fladd@a+1
  2493  0009A0                     
  2494                           ; BSR set to: 0
  2495  0009A0  C0AE  F0BB         	movff	___fladd@b+2,___fladd@grs
  2496  0009A4                     
  2497                           ; BSR set to: 0
  2498  0009A4  C0B2  F0AE         	movff	___fladd@a+2,___fladd@b+2
  2499  0009A8                     
  2500                           ; BSR set to: 0
  2501  0009A8  C0BB  F0B2         	movff	___fladd@grs,___fladd@a+2
  2502  0009AC                     
  2503                           ; BSR set to: 0
  2504  0009AC  C0AF  F0BB         	movff	___fladd@b+3,___fladd@grs
  2505  0009B0                     
  2506                           ; BSR set to: 0
  2507  0009B0  C0B3  F0AF         	movff	___fladd@a+3,___fladd@b+3
  2508  0009B4                     
  2509                           ; BSR set to: 0
  2510  0009B4  C0BB  F0B3         	movff	___fladd@grs,___fladd@a+3
  2511  0009B8                     l3930:
  2512                           
  2513                           ; BSR set to: 0
  2514  0009B8  0E00               	movlw	0
  2515  0009BA  6FBB               	movwf	___fladd@grs& (0+255),b
  2516  0009BC                     
  2517                           ; BSR set to: 0
  2518  0009BC  51BA               	movf	___fladd@bexp& (0+255),w,b
  2519  0009BE  C0B9  F0B4         	movff	___fladd@aexp,??___fladd
  2520  0009C2  6BB5               	clrf	(??___fladd+1)& (0+255),b
  2521  0009C4  5FB4               	subwf	??___fladd& (0+255),f,b
  2522  0009C6  0E00               	movlw	0
  2523  0009C8  5BB5               	subwfb	(??___fladd+1)& (0+255),f,b
  2524  0009CA  BFB5               	btfsc	(??___fladd+1)& (0+255),7,b
  2525  0009CC  EFF1  F004         	goto	u3671
  2526  0009D0  51B5               	movf	(??___fladd+1)& (0+255),w,b
  2527  0009D2  E109               	bnz	u3670
  2528  0009D4  0E1A               	movlw	26
  2529  0009D6  5DB4               	subwf	??___fladd& (0+255),w,b
  2530  0009D8  A0D8               	btfss	status,0,c
  2531  0009DA  EFF1  F004         	goto	u3671
  2532  0009DE  EFF3  F004         	goto	u3670
  2533  0009E2                     u3671:
  2534  0009E2  EF2A  F005         	goto	l852
  2535  0009E6                     u3670:
  2536  0009E6                     
  2537                           ; BSR set to: 0
  2538  0009E6  51AC               	movf	___fladd@b& (0+255),w,b
  2539  0009E8  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  2540  0009EA  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  2541  0009EC  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  2542  0009EE  A4D8               	btfss	status,2,c
  2543  0009F0  EFFC  F004         	goto	u3681
  2544  0009F4  EFFF  F004         	goto	u3680
  2545  0009F8                     u3681:
  2546  0009F8  0E01               	movlw	1
  2547  0009FA  EF00  F005         	goto	u3690
  2548  0009FE                     u3680:
  2549  0009FE  0E00               	movlw	0
  2550  000A00                     u3690:
  2551  000A00  6FBB               	movwf	___fladd@grs& (0+255),b
  2552  000A02                     
  2553                           ; BSR set to: 0
  2554  000A02  0E00               	movlw	0
  2555  000A04  6FAC               	movwf	___fladd@b& (0+255),b
  2556  000A06  0E00               	movlw	0
  2557  000A08  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  2558  000A0A  0E00               	movlw	0
  2559  000A0C  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  2560  000A0E  0E00               	movlw	0
  2561  000A10  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  2562  000A12                     
  2563                           ; BSR set to: 0
  2564  000A12  C0B9  F0BA         	movff	___fladd@aexp,___fladd@bexp
  2565  000A16  EF33  F005         	goto	l851
  2566  000A1A                     l853:
  2567                           
  2568                           ; BSR set to: 0
  2569  000A1A  A1BB               	btfss	___fladd@grs& (0+255),0,b
  2570  000A1C  EF12  F005         	goto	u3701
  2571  000A20  EF14  F005         	goto	u3700
  2572  000A24                     u3701:
  2573  000A24  EF1A  F005         	goto	l3942
  2574  000A28                     u3700:
  2575  000A28                     
  2576                           ; BSR set to: 0
  2577  000A28  90D8               	bcf	status,0,c
  2578  000A2A  31BB               	rrcf	___fladd@grs& (0+255),w,b
  2579  000A2C  0901               	iorlw	1
  2580  000A2E  6FBB               	movwf	___fladd@grs& (0+255),b
  2581  000A30  EF1C  F005         	goto	l3944
  2582  000A34                     l3942:
  2583                           
  2584                           ; BSR set to: 0
  2585  000A34  90D8               	bcf	status,0,c
  2586  000A36  33BB               	rrcf	___fladd@grs& (0+255),f,b
  2587  000A38                     l3944:
  2588                           
  2589                           ; BSR set to: 0
  2590  000A38  A1AC               	btfss	___fladd@b& (0+255),0,b
  2591  000A3A  EF21  F005         	goto	u3711
  2592  000A3E  EF23  F005         	goto	u3710
  2593  000A42                     u3711:
  2594  000A42  EF24  F005         	goto	l3948
  2595  000A46                     u3710:
  2596  000A46                     
  2597                           ; BSR set to: 0
  2598  000A46  8FBB               	bsf	___fladd@grs& (0+255),7,b
  2599  000A48                     l3948:
  2600                           
  2601                           ; BSR set to: 0
  2602  000A48  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  2603  000A4A  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  2604  000A4C  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  2605  000A4E  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  2606  000A50  33AC               	rrcf	___fladd@b& (0+255),f,b
  2607  000A52                     
  2608                           ; BSR set to: 0
  2609  000A52  2BBA               	incf	___fladd@bexp& (0+255),f,b
  2610  000A54                     l852:
  2611                           
  2612                           ; BSR set to: 0
  2613  000A54  51B9               	movf	___fladd@aexp& (0+255),w,b
  2614  000A56  5DBA               	subwf	___fladd@bexp& (0+255),w,b
  2615  000A58  A0D8               	btfss	status,0,c
  2616  000A5A  EF31  F005         	goto	u3721
  2617  000A5E  EF33  F005         	goto	u3720
  2618  000A62                     u3721:
  2619  000A62  EF0D  F005         	goto	l853
  2620  000A66                     u3720:
  2621  000A66                     l851:
  2622                           
  2623                           ; BSR set to: 0
  2624  000A66  BDB8               	btfsc	___fladd@signs& (0+255),6,b
  2625  000A68  EF38  F005         	goto	u3731
  2626  000A6C  EF3A  F005         	goto	u3730
  2627  000A70                     u3731:
  2628  000A70  EF7A  F005         	goto	l3976
  2629  000A74                     u3730:
  2630  000A74                     
  2631                           ; BSR set to: 0
  2632  000A74  51BA               	movf	___fladd@bexp& (0+255),w,b
  2633  000A76  A4D8               	btfss	status,2,c
  2634  000A78  EF40  F005         	goto	u3741
  2635  000A7C  EF42  F005         	goto	u3740
  2636  000A80                     u3741:
  2637  000A80  EF4C  F005         	goto	l3958
  2638  000A84                     u3740:
  2639  000A84                     
  2640                           ; BSR set to: 0
  2641  000A84  0E00               	movlw	0
  2642  000A86  6FAC               	movwf	?___fladd& (0+255),b
  2643  000A88  0E00               	movlw	0
  2644  000A8A  6FAD               	movwf	(?___fladd+1)& (0+255),b
  2645  000A8C  0E00               	movlw	0
  2646  000A8E  6FAE               	movwf	(?___fladd+2)& (0+255),b
  2647  000A90  0E00               	movlw	0
  2648  000A92  6FAF               	movwf	(?___fladd+3)& (0+255),b
  2649  000A94  EF9B  F006         	goto	l860
  2650  000A98                     l3958:
  2651                           
  2652                           ; BSR set to: 0
  2653  000A98  51B0               	movf	___fladd@a& (0+255),w,b
  2654  000A9A  27AC               	addwf	___fladd@b& (0+255),f,b
  2655  000A9C  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  2656  000A9E  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  2657  000AA0  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  2658  000AA2  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  2659  000AA4  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  2660  000AA6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  2661  000AA8                     
  2662                           ; BSR set to: 0
  2663  000AA8  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  2664  000AAA  EF59  F005         	goto	u3751
  2665  000AAE  EF5B  F005         	goto	u3750
  2666  000AB2                     u3751:
  2667  000AB2  EF07  F006         	goto	l4012
  2668  000AB6                     u3750:
  2669  000AB6                     
  2670                           ; BSR set to: 0
  2671  000AB6  A1BB               	btfss	___fladd@grs& (0+255),0,b
  2672  000AB8  EF60  F005         	goto	u3761
  2673  000ABC  EF62  F005         	goto	u3760
  2674  000AC0                     u3761:
  2675  000AC0  EF68  F005         	goto	l3966
  2676  000AC4                     u3760:
  2677  000AC4                     
  2678                           ; BSR set to: 0
  2679  000AC4  90D8               	bcf	status,0,c
  2680  000AC6  31BB               	rrcf	___fladd@grs& (0+255),w,b
  2681  000AC8  0901               	iorlw	1
  2682  000ACA  6FBB               	movwf	___fladd@grs& (0+255),b
  2683  000ACC  EF6A  F005         	goto	l3968
  2684  000AD0                     l3966:
  2685                           
  2686                           ; BSR set to: 0
  2687  000AD0  90D8               	bcf	status,0,c
  2688  000AD2  33BB               	rrcf	___fladd@grs& (0+255),f,b
  2689  000AD4                     l3968:
  2690                           
  2691                           ; BSR set to: 0
  2692  000AD4  A1AC               	btfss	___fladd@b& (0+255),0,b
  2693  000AD6  EF6F  F005         	goto	u3771
  2694  000ADA  EF71  F005         	goto	u3770
  2695  000ADE                     u3771:
  2696  000ADE  EF72  F005         	goto	l3972
  2697  000AE2                     u3770:
  2698  000AE2                     
  2699                           ; BSR set to: 0
  2700  000AE2  8FBB               	bsf	___fladd@grs& (0+255),7,b
  2701  000AE4                     l3972:
  2702                           
  2703                           ; BSR set to: 0
  2704  000AE4  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  2705  000AE6  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  2706  000AE8  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  2707  000AEA  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  2708  000AEC  33AC               	rrcf	___fladd@b& (0+255),f,b
  2709  000AEE                     
  2710                           ; BSR set to: 0
  2711  000AEE  2BBA               	incf	___fladd@bexp& (0+255),f,b
  2712  000AF0  EF07  F006         	goto	l4012
  2713  000AF4                     l3976:
  2714                           
  2715                           ; BSR set to: 0
  2716  000AF4  51B0               	movf	___fladd@a& (0+255),w,b
  2717  000AF6  5DAC               	subwf	___fladd@b& (0+255),w,b
  2718  000AF8  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  2719  000AFA  59AD               	subwfb	(___fladd@b+1)& (0+255),w,b
  2720  000AFC  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  2721  000AFE  59AE               	subwfb	(___fladd@b+2)& (0+255),w,b
  2722  000B00  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  2723  000B02  0A80               	xorlw	128
  2724  000B04  6FB4               	movwf	??___fladd& (0+255),b
  2725  000B06  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  2726  000B08  0A80               	xorlw	128
  2727  000B0A  59B4               	subwfb	??___fladd& (0+255),w,b
  2728  000B0C  B0D8               	btfsc	status,0,c
  2729  000B0E  EF8B  F005         	goto	u3781
  2730  000B12  EF8D  F005         	goto	u3780
  2731  000B16                     u3781:
  2732  000B16  EFB8  F005         	goto	l3986
  2733  000B1A                     u3780:
  2734  000B1A                     
  2735                           ; BSR set to: 0
  2736  000B1A  51AC               	movf	___fladd@b& (0+255),w,b
  2737  000B1C  5DB0               	subwf	___fladd@a& (0+255),w,b
  2738  000B1E  6FB4               	movwf	??___fladd& (0+255),b
  2739  000B20  51AD               	movf	(___fladd@b+1)& (0+255),w,b
  2740  000B22  59B1               	subwfb	(___fladd@a+1)& (0+255),w,b
  2741  000B24  6FB5               	movwf	(??___fladd+1)& (0+255),b
  2742  000B26  51AE               	movf	(___fladd@b+2)& (0+255),w,b
  2743  000B28  59B2               	subwfb	(___fladd@a+2)& (0+255),w,b
  2744  000B2A  6FB6               	movwf	(??___fladd+2)& (0+255),b
  2745  000B2C  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  2746  000B2E  59B3               	subwfb	(___fladd@a+3)& (0+255),w,b
  2747  000B30  6FB7               	movwf	(??___fladd+3)& (0+255),b
  2748  000B32  0EFF               	movlw	255
  2749  000B34  25B4               	addwf	??___fladd& (0+255),w,b
  2750  000B36  6FAC               	movwf	___fladd@b& (0+255),b
  2751  000B38  0EFF               	movlw	255
  2752  000B3A  21B5               	addwfc	(??___fladd+1)& (0+255),w,b
  2753  000B3C  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  2754  000B3E  0EFF               	movlw	255
  2755  000B40  21B6               	addwfc	(??___fladd+2)& (0+255),w,b
  2756  000B42  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  2757  000B44  0EFF               	movlw	255
  2758  000B46  21B7               	addwfc	(??___fladd+3)& (0+255),w,b
  2759  000B48  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  2760  000B4A  0E80               	movlw	128
  2761  000B4C  1BB8               	xorwf	___fladd@signs& (0+255),f,b
  2762  000B4E                     
  2763                           ; BSR set to: 0
  2764  000B4E  6DBB               	negf	___fladd@grs& (0+255),b
  2765  000B50                     
  2766                           ; BSR set to: 0
  2767  000B50  51BB               	movf	___fladd@grs& (0+255),w,b
  2768  000B52  A4D8               	btfss	status,2,c
  2769  000B54  EFAE  F005         	goto	u3791
  2770  000B58  EFB0  F005         	goto	u3790
  2771  000B5C                     u3791:
  2772  000B5C  EFC0  F005         	goto	l868
  2773  000B60                     u3790:
  2774  000B60                     
  2775                           ; BSR set to: 0
  2776  000B60  0E01               	movlw	1
  2777  000B62  27AC               	addwf	___fladd@b& (0+255),f,b
  2778  000B64  0E00               	movlw	0
  2779  000B66  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  2780  000B68  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  2781  000B6A  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  2782  000B6C  EFC0  F005         	goto	l868
  2783  000B70                     l3986:
  2784                           
  2785                           ; BSR set to: 0
  2786  000B70  51B0               	movf	___fladd@a& (0+255),w,b
  2787  000B72  5FAC               	subwf	___fladd@b& (0+255),f,b
  2788  000B74  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  2789  000B76  5BAD               	subwfb	(___fladd@b+1)& (0+255),f,b
  2790  000B78  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  2791  000B7A  5BAE               	subwfb	(___fladd@b+2)& (0+255),f,b
  2792  000B7C  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  2793  000B7E  5BAF               	subwfb	(___fladd@b+3)& (0+255),f,b
  2794  000B80                     l868:
  2795                           
  2796                           ; BSR set to: 0
  2797  000B80  51AC               	movf	___fladd@b& (0+255),w,b
  2798  000B82  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  2799  000B84  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  2800  000B86  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  2801  000B88  A4D8               	btfss	status,2,c
  2802  000B8A  EFC9  F005         	goto	u3801
  2803  000B8E  EFCB  F005         	goto	u3800
  2804  000B92                     u3801:
  2805  000B92  EF00  F006         	goto	l4010
  2806  000B96                     u3800:
  2807  000B96                     
  2808                           ; BSR set to: 0
  2809  000B96  51BB               	movf	___fladd@grs& (0+255),w,b
  2810  000B98  A4D8               	btfss	status,2,c
  2811  000B9A  EFD1  F005         	goto	u3811
  2812  000B9E  EFD3  F005         	goto	u3810
  2813  000BA2                     u3811:
  2814  000BA2  EF00  F006         	goto	l4010
  2815  000BA6                     u3810:
  2816  000BA6                     
  2817                           ; BSR set to: 0
  2818  000BA6  0E00               	movlw	0
  2819  000BA8  6FAC               	movwf	?___fladd& (0+255),b
  2820  000BAA  0E00               	movlw	0
  2821  000BAC  6FAD               	movwf	(?___fladd+1)& (0+255),b
  2822  000BAE  0E00               	movlw	0
  2823  000BB0  6FAE               	movwf	(?___fladd+2)& (0+255),b
  2824  000BB2  0E00               	movlw	0
  2825  000BB4  6FAF               	movwf	(?___fladd+3)& (0+255),b
  2826  000BB6  EF9B  F006         	goto	l860
  2827  000BBA                     l3994:
  2828                           
  2829                           ; BSR set to: 0
  2830  000BBA  90D8               	bcf	status,0,c
  2831  000BBC  37AC               	rlcf	___fladd@b& (0+255),f,b
  2832  000BBE  37AD               	rlcf	(___fladd@b+1)& (0+255),f,b
  2833  000BC0  37AE               	rlcf	(___fladd@b+2)& (0+255),f,b
  2834  000BC2  37AF               	rlcf	(___fladd@b+3)& (0+255),f,b
  2835  000BC4                     
  2836                           ; BSR set to: 0
  2837  000BC4  AFBB               	btfss	___fladd@grs& (0+255),7,b
  2838  000BC6  EFE7  F005         	goto	u3821
  2839  000BCA  EFE9  F005         	goto	u3820
  2840  000BCE                     u3821:
  2841  000BCE  EFEA  F005         	goto	l4000
  2842  000BD2                     u3820:
  2843  000BD2                     
  2844                           ; BSR set to: 0
  2845  000BD2  81AC               	bsf	___fladd@b& (0+255),0,b
  2846  000BD4                     l4000:
  2847                           
  2848                           ; BSR set to: 0
  2849  000BD4  A1BB               	btfss	___fladd@grs& (0+255),0,b
  2850  000BD6  EFEF  F005         	goto	u3831
  2851  000BDA  EFF1  F005         	goto	u3830
  2852  000BDE                     u3831:
  2853  000BDE  EFF5  F005         	goto	l4004
  2854  000BE2                     u3830:
  2855  000BE2                     
  2856                           ; BSR set to: 0
  2857  000BE2  80D8               	bsf	status,0,c
  2858  000BE4  37BB               	rlcf	___fladd@grs& (0+255),f,b
  2859  000BE6  EFF7  F005         	goto	l4006
  2860  000BEA                     l4004:
  2861                           
  2862                           ; BSR set to: 0
  2863  000BEA  90D8               	bcf	status,0,c
  2864  000BEC  37BB               	rlcf	___fladd@grs& (0+255),f,b
  2865  000BEE                     l4006:
  2866                           
  2867                           ; BSR set to: 0
  2868  000BEE  51BA               	movf	___fladd@bexp& (0+255),w,b
  2869  000BF0  B4D8               	btfsc	status,2,c
  2870  000BF2  EFFD  F005         	goto	u3841
  2871  000BF6  EFFF  F005         	goto	u3840
  2872  000BFA                     u3841:
  2873  000BFA  EF00  F006         	goto	l4010
  2874  000BFE                     u3840:
  2875  000BFE                     
  2876                           ; BSR set to: 0
  2877  000BFE  07BA               	decf	___fladd@bexp& (0+255),f,b
  2878  000C00                     l4010:
  2879                           
  2880                           ; BSR set to: 0
  2881  000C00  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  2882  000C02  EF05  F006         	goto	u3851
  2883  000C06  EF07  F006         	goto	u3850
  2884  000C0A                     u3851:
  2885  000C0A  EFDD  F005         	goto	l3994
  2886  000C0E                     u3850:
  2887  000C0E                     l4012:
  2888                           
  2889                           ; BSR set to: 0
  2890  000C0E  0E00               	movlw	0
  2891  000C10  6FB9               	movwf	___fladd@aexp& (0+255),b
  2892  000C12                     
  2893                           ; BSR set to: 0
  2894  000C12  AFBB               	btfss	___fladd@grs& (0+255),7,b
  2895  000C14  EF0E  F006         	goto	u3861
  2896  000C18  EF10  F006         	goto	u3860
  2897  000C1C                     u3861:
  2898  000C1C  EF28  F006         	goto	l877
  2899  000C20                     u3860:
  2900  000C20                     
  2901                           ; BSR set to: 0
  2902  000C20  C0BB  F0B4         	movff	___fladd@grs,??___fladd
  2903  000C24  0E7F               	movlw	127
  2904  000C26  17B4               	andwf	??___fladd& (0+255),f,b
  2905  000C28  B4D8               	btfsc	status,2,c
  2906  000C2A  EF19  F006         	goto	u3871
  2907  000C2E  EF1B  F006         	goto	u3870
  2908  000C32                     u3871:
  2909  000C32  EF1F  F006         	goto	l878
  2910  000C36                     u3870:
  2911  000C36                     l4018:
  2912                           
  2913                           ; BSR set to: 0
  2914  000C36  0E01               	movlw	1
  2915  000C38  6FB9               	movwf	___fladd@aexp& (0+255),b
  2916  000C3A  EF28  F006         	goto	l877
  2917  000C3E                     l878:
  2918                           
  2919                           ; BSR set to: 0
  2920  000C3E  A1AC               	btfss	___fladd@b& (0+255),0,b
  2921  000C40  EF24  F006         	goto	u3881
  2922  000C44  EF26  F006         	goto	u3880
  2923  000C48                     u3881:
  2924  000C48  EF28  F006         	goto	l877
  2925  000C4C                     u3880:
  2926  000C4C  EF1B  F006         	goto	l4018
  2927  000C50                     l877:
  2928                           
  2929                           ; BSR set to: 0
  2930  000C50  51B9               	movf	___fladd@aexp& (0+255),w,b
  2931  000C52  B4D8               	btfsc	status,2,c
  2932  000C54  EF2E  F006         	goto	u3891
  2933  000C58  EF30  F006         	goto	u3890
  2934  000C5C                     u3891:
  2935  000C5C  EF5B  F006         	goto	l4030
  2936  000C60                     u3890:
  2937  000C60                     
  2938                           ; BSR set to: 0
  2939  000C60  0E01               	movlw	1
  2940  000C62  27AC               	addwf	___fladd@b& (0+255),f,b
  2941  000C64  0E00               	movlw	0
  2942  000C66  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  2943  000C68  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  2944  000C6A  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  2945  000C6C                     
  2946                           ; BSR set to: 0
  2947  000C6C  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  2948  000C6E  EF3B  F006         	goto	u3901
  2949  000C72  EF3D  F006         	goto	u3900
  2950  000C76                     u3901:
  2951  000C76  EF5B  F006         	goto	l4030
  2952  000C7A                     u3900:
  2953  000C7A                     
  2954                           ; BSR set to: 0
  2955  000C7A  C0AC  F0B4         	movff	___fladd@b,??___fladd
  2956  000C7E  C0AD  F0B5         	movff	___fladd@b+1,??___fladd+1
  2957  000C82  C0AE  F0B6         	movff	___fladd@b+2,??___fladd+2
  2958  000C86  C0AF  F0B7         	movff	___fladd@b+3,??___fladd+3
  2959  000C8A  35B7               	rlcf	(??___fladd+3)& (0+255),w,b
  2960  000C8C  33B7               	rrcf	(??___fladd+3)& (0+255),f,b
  2961  000C8E  33B6               	rrcf	(??___fladd+2)& (0+255),f,b
  2962  000C90  33B5               	rrcf	(??___fladd+1)& (0+255),f,b
  2963  000C92  33B4               	rrcf	??___fladd& (0+255),f,b
  2964  000C94  C0B4  F0AC         	movff	??___fladd,___fladd@b
  2965  000C98  C0B5  F0AD         	movff	??___fladd+1,___fladd@b+1
  2966  000C9C  C0B6  F0AE         	movff	??___fladd+2,___fladd@b+2
  2967  000CA0  C0B7  F0AF         	movff	??___fladd+3,___fladd@b+3
  2968  000CA4  29BA               	incf	___fladd@bexp& (0+255),w,b
  2969  000CA6  B4D8               	btfsc	status,2,c
  2970  000CA8  EF58  F006         	goto	u3911
  2971  000CAC  EF5A  F006         	goto	u3910
  2972  000CB0                     u3911:
  2973  000CB0  EF5B  F006         	goto	l4030
  2974  000CB4                     u3910:
  2975  000CB4                     
  2976                           ; BSR set to: 0
  2977  000CB4  2BBA               	incf	___fladd@bexp& (0+255),f,b
  2978  000CB6                     l4030:
  2979                           
  2980                           ; BSR set to: 0
  2981  000CB6  29BA               	incf	___fladd@bexp& (0+255),w,b
  2982  000CB8  B4D8               	btfsc	status,2,c
  2983  000CBA  EF61  F006         	goto	u3921
  2984  000CBE  EF63  F006         	goto	u3920
  2985  000CC2                     u3921:
  2986  000CC2  EF6B  F006         	goto	l4034
  2987  000CC6                     u3920:
  2988  000CC6                     
  2989                           ; BSR set to: 0
  2990  000CC6  51BA               	movf	___fladd@bexp& (0+255),w,b
  2991  000CC8  A4D8               	btfss	status,2,c
  2992  000CCA  EF69  F006         	goto	u3931
  2993  000CCE  EF6B  F006         	goto	u3930
  2994  000CD2                     u3931:
  2995  000CD2  EF7D  F006         	goto	l4038
  2996  000CD6                     u3930:
  2997  000CD6                     l4034:
  2998                           
  2999                           ; BSR set to: 0
  3000  000CD6  0E00               	movlw	0
  3001  000CD8  6FAC               	movwf	___fladd@b& (0+255),b
  3002  000CDA  0E00               	movlw	0
  3003  000CDC  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3004  000CDE  0E00               	movlw	0
  3005  000CE0  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3006  000CE2  0E00               	movlw	0
  3007  000CE4  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3008  000CE6  51BA               	movf	___fladd@bexp& (0+255),w,b
  3009  000CE8  A4D8               	btfss	status,2,c
  3010  000CEA  EF79  F006         	goto	u3941
  3011  000CEE  EF7B  F006         	goto	u3940
  3012  000CF2                     u3941:
  3013  000CF2  EF7D  F006         	goto	l4038
  3014  000CF6                     u3940:
  3015  000CF6                     
  3016                           ; BSR set to: 0
  3017  000CF6  0E00               	movlw	0
  3018  000CF8  6FB8               	movwf	___fladd@signs& (0+255),b
  3019  000CFA                     l4038:
  3020                           
  3021                           ; BSR set to: 0
  3022  000CFA  A1BA               	btfss	___fladd@bexp& (0+255),0,b
  3023  000CFC  EF82  F006         	goto	u3951
  3024  000D00  EF84  F006         	goto	u3950
  3025  000D04                     u3951:
  3026  000D04  EF87  F006         	goto	l4042
  3027  000D08                     u3950:
  3028  000D08                     
  3029                           ; BSR set to: 0
  3030  000D08  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  3031  000D0A  EF88  F006         	goto	l4044
  3032  000D0E                     l4042:
  3033                           
  3034                           ; BSR set to: 0
  3035  000D0E  9FAE               	bcf	(___fladd@b+2)& (0+255),7,b
  3036  000D10                     l4044:
  3037                           
  3038                           ; BSR set to: 0
  3039  000D10  90D8               	bcf	status,0,c
  3040  000D12  31BA               	rrcf	___fladd@bexp& (0+255),w,b
  3041  000D14  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3042  000D16                     
  3043                           ; BSR set to: 0
  3044  000D16  AFB8               	btfss	___fladd@signs& (0+255),7,b
  3045  000D18  EF90  F006         	goto	u3961
  3046  000D1C  EF92  F006         	goto	u3960
  3047  000D20                     u3961:
  3048  000D20  EF93  F006         	goto	l4050
  3049  000D24                     u3960:
  3050  000D24                     
  3051                           ; BSR set to: 0
  3052  000D24  8FAF               	bsf	(___fladd@b+3)& (0+255),7,b
  3053  000D26                     l4050:
  3054                           
  3055                           ; BSR set to: 0
  3056  000D26  C0AC  F0AC         	movff	___fladd@b,?___fladd
  3057  000D2A  C0AD  F0AD         	movff	___fladd@b+1,?___fladd+1
  3058  000D2E  C0AE  F0AE         	movff	___fladd@b+2,?___fladd+2
  3059  000D32  C0AF  F0AF         	movff	___fladd@b+3,?___fladd+3
  3060  000D36                     l860:
  3061                           
  3062                           ; BSR set to: 0
  3063  000D36  0012               	return		;funcret
  3064  000D38                     __end_of___fladd:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function ___flge *****************
  3068 ;; Defined at:
  3069 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  ff1             4    0[BANK0 ] unsigned char 
  3072 ;;  ff2             4    4[BANK0 ] unsigned char 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3084 ;;      Params:         0       8       0       0       0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3086 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3087 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3088 ;;Total ram usage:       12 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    6
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_setPWMFreq
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text9
  3099  001FC6                     __ptext9:
  3100                           	callstack 0
  3101  001FC6                     ___flge:
  3102                           	callstack 22
  3103  001FC6  0E00               	movlw	0
  3104  001FC8  0100               	movlb	0	; () banked
  3105  001FCA  15AC               	andwf	___flge@ff1& (0+255),w,b
  3106  001FCC  6FB4               	movwf	??___flge& (0+255),b
  3107  001FCE  0E00               	movlw	0
  3108  001FD0  15AD               	andwf	(___flge@ff1+1)& (0+255),w,b
  3109  001FD2  6FB5               	movwf	(??___flge+1)& (0+255),b
  3110  001FD4  0E80               	movlw	128
  3111  001FD6  15AE               	andwf	(___flge@ff1+2)& (0+255),w,b
  3112  001FD8  6FB6               	movwf	(??___flge+2)& (0+255),b
  3113  001FDA  0E7F               	movlw	127
  3114  001FDC  15AF               	andwf	(___flge@ff1+3)& (0+255),w,b
  3115  001FDE  6FB7               	movwf	(??___flge+3)& (0+255),b
  3116  001FE0  51B4               	movf	??___flge& (0+255),w,b
  3117  001FE2  11B5               	iorwf	(??___flge+1)& (0+255),w,b
  3118  001FE4  11B6               	iorwf	(??___flge+2)& (0+255),w,b
  3119  001FE6  11B7               	iorwf	(??___flge+3)& (0+255),w,b
  3120  001FE8  A4D8               	btfss	status,2,c
  3121  001FEA  EFF9  F00F         	goto	u4441
  3122  001FEE  EFFB  F00F         	goto	u4440
  3123  001FF2                     u4441:
  3124  001FF2  EF03  F010         	goto	l4410
  3125  001FF6                     u4440:
  3126  001FF6                     
  3127                           ; BSR set to: 0
  3128  001FF6  0E00               	movlw	0
  3129  001FF8  6FAC               	movwf	___flge@ff1& (0+255),b
  3130  001FFA  0E00               	movlw	0
  3131  001FFC  6FAD               	movwf	(___flge@ff1+1)& (0+255),b
  3132  001FFE  0E00               	movlw	0
  3133  002000  6FAE               	movwf	(___flge@ff1+2)& (0+255),b
  3134  002002  0E00               	movlw	0
  3135  002004  6FAF               	movwf	(___flge@ff1+3)& (0+255),b
  3136  002006                     l4410:
  3137                           
  3138                           ; BSR set to: 0
  3139  002006  0E00               	movlw	0
  3140  002008  15B0               	andwf	___flge@ff2& (0+255),w,b
  3141  00200A  6FB4               	movwf	??___flge& (0+255),b
  3142  00200C  0E00               	movlw	0
  3143  00200E  15B1               	andwf	(___flge@ff2+1)& (0+255),w,b
  3144  002010  6FB5               	movwf	(??___flge+1)& (0+255),b
  3145  002012  0E80               	movlw	128
  3146  002014  15B2               	andwf	(___flge@ff2+2)& (0+255),w,b
  3147  002016  6FB6               	movwf	(??___flge+2)& (0+255),b
  3148  002018  0E7F               	movlw	127
  3149  00201A  15B3               	andwf	(___flge@ff2+3)& (0+255),w,b
  3150  00201C  6FB7               	movwf	(??___flge+3)& (0+255),b
  3151  00201E  51B4               	movf	??___flge& (0+255),w,b
  3152  002020  11B5               	iorwf	(??___flge+1)& (0+255),w,b
  3153  002022  11B6               	iorwf	(??___flge+2)& (0+255),w,b
  3154  002024  11B7               	iorwf	(??___flge+3)& (0+255),w,b
  3155  002026  A4D8               	btfss	status,2,c
  3156  002028  EF18  F010         	goto	u4451
  3157  00202C  EF1A  F010         	goto	u4450
  3158  002030                     u4451:
  3159  002030  EF22  F010         	goto	l4414
  3160  002034                     u4450:
  3161  002034                     
  3162                           ; BSR set to: 0
  3163  002034  0E00               	movlw	0
  3164  002036  6FB0               	movwf	___flge@ff2& (0+255),b
  3165  002038  0E00               	movlw	0
  3166  00203A  6FB1               	movwf	(___flge@ff2+1)& (0+255),b
  3167  00203C  0E00               	movlw	0
  3168  00203E  6FB2               	movwf	(___flge@ff2+2)& (0+255),b
  3169  002040  0E00               	movlw	0
  3170  002042  6FB3               	movwf	(___flge@ff2+3)& (0+255),b
  3171  002044                     l4414:
  3172                           
  3173                           ; BSR set to: 0
  3174  002044  AFAF               	btfss	(___flge@ff1+3)& (0+255),7,b
  3175  002046  EF27  F010         	goto	u4461
  3176  00204A  EF29  F010         	goto	u4460
  3177  00204E                     u4461:
  3178  00204E  EF32  F010         	goto	l4418
  3179  002052                     u4460:
  3180  002052                     
  3181                           ; BSR set to: 0
  3182  002052  6DAC               	negf	___flge@ff1& (0+255),b
  3183  002054  1FAD               	comf	(___flge@ff1+1)& (0+255),f,b
  3184  002056  B0D8               	btfsc	status,0,c
  3185  002058  2BAD               	incf	(___flge@ff1+1)& (0+255),f,b
  3186  00205A  1FAE               	comf	(___flge@ff1+2)& (0+255),f,b
  3187  00205C  B0D8               	btfsc	status,0,c
  3188  00205E  2BAE               	incf	(___flge@ff1+2)& (0+255),f,b
  3189  002060  0E80               	movlw	128
  3190  002062  57AF               	subfwb	(___flge@ff1+3)& (0+255),f,b
  3191  002064                     l4418:
  3192                           
  3193                           ; BSR set to: 0
  3194  002064  AFB3               	btfss	(___flge@ff2+3)& (0+255),7,b
  3195  002066  EF37  F010         	goto	u4471
  3196  00206A  EF39  F010         	goto	u4470
  3197  00206E                     u4471:
  3198  00206E  EF42  F010         	goto	l596
  3199  002072                     u4470:
  3200  002072                     
  3201                           ; BSR set to: 0
  3202  002072  6DB0               	negf	___flge@ff2& (0+255),b
  3203  002074  1FB1               	comf	(___flge@ff2+1)& (0+255),f,b
  3204  002076  B0D8               	btfsc	status,0,c
  3205  002078  2BB1               	incf	(___flge@ff2+1)& (0+255),f,b
  3206  00207A  1FB2               	comf	(___flge@ff2+2)& (0+255),f,b
  3207  00207C  B0D8               	btfsc	status,0,c
  3208  00207E  2BB2               	incf	(___flge@ff2+2)& (0+255),f,b
  3209  002080  0E80               	movlw	128
  3210  002082  57B3               	subfwb	(___flge@ff2+3)& (0+255),f,b
  3211  002084                     l596:
  3212                           
  3213                           ; BSR set to: 0
  3214  002084  0E00               	movlw	0
  3215  002086  1BAC               	xorwf	___flge@ff1& (0+255),f,b
  3216  002088  0E00               	movlw	0
  3217  00208A  1BAD               	xorwf	(___flge@ff1+1)& (0+255),f,b
  3218  00208C  0E00               	movlw	0
  3219  00208E  1BAE               	xorwf	(___flge@ff1+2)& (0+255),f,b
  3220  002090  0E80               	movlw	128
  3221  002092  1BAF               	xorwf	(___flge@ff1+3)& (0+255),f,b
  3222  002094  0E00               	movlw	0
  3223  002096  1BB0               	xorwf	___flge@ff2& (0+255),f,b
  3224  002098  0E00               	movlw	0
  3225  00209A  1BB1               	xorwf	(___flge@ff2+1)& (0+255),f,b
  3226  00209C  0E00               	movlw	0
  3227  00209E  1BB2               	xorwf	(___flge@ff2+2)& (0+255),f,b
  3228  0020A0  0E80               	movlw	128
  3229  0020A2  1BB3               	xorwf	(___flge@ff2+3)& (0+255),f,b
  3230  0020A4  51B0               	movf	___flge@ff2& (0+255),w,b
  3231  0020A6  5DAC               	subwf	___flge@ff1& (0+255),w,b
  3232  0020A8  51B1               	movf	(___flge@ff2+1)& (0+255),w,b
  3233  0020AA  59AD               	subwfb	(___flge@ff1+1)& (0+255),w,b
  3234  0020AC  51B2               	movf	(___flge@ff2+2)& (0+255),w,b
  3235  0020AE  59AE               	subwfb	(___flge@ff1+2)& (0+255),w,b
  3236  0020B0  51B3               	movf	(___flge@ff2+3)& (0+255),w,b
  3237  0020B2  59AF               	subwfb	(___flge@ff1+3)& (0+255),w,b
  3238  0020B4  B0D8               	btfsc	status,0,c
  3239  0020B6  EF5F  F010         	goto	u4481
  3240  0020BA  EF61  F010         	goto	u4480
  3241  0020BE                     u4481:
  3242  0020BE  EF64  F010         	goto	l4424
  3243  0020C2                     u4480:
  3244  0020C2                     
  3245                           ; BSR set to: 0
  3246  0020C2  90D8               	bcf	status,0,c
  3247  0020C4  EF65  F010         	goto	l597
  3248  0020C8                     l4424:
  3249                           
  3250                           ; BSR set to: 0
  3251  0020C8  80D8               	bsf	status,0,c
  3252  0020CA                     l597:
  3253                           
  3254                           ; BSR set to: 0
  3255  0020CA  0012               	return		;funcret
  3256  0020CC                     __end_of___flge:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function ___fldiv *****************
  3260 ;; Defined at:
  3261 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  b               4    0[BANK0 ] unsigned char 
  3264 ;;  a               4    4[BANK0 ] unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  grs             4   19[BANK0 ] unsigned long 
  3267 ;;  rem             4   12[BANK0 ] unsigned long 
  3268 ;;  new_exp         2   17[BANK0 ] int 
  3269 ;;  aexp            1   24[BANK0 ] unsigned char 
  3270 ;;  bexp            1   23[BANK0 ] unsigned char 
  3271 ;;  sign            1   16[BANK0 ] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  4    0[BANK0 ] unsigned char 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3281 ;;      Params:         0       8       0       0       0       0       0       0       0
  3282 ;;      Locals:         0      13       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3284 ;;      Totals:         0      25       0       0       0       0       0       0       0
  3285 ;;Total ram usage:       25 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    6
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_setPWMFreq
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text10
  3296  0011BC                     __ptext10:
  3297                           	callstack 0
  3298  0011BC                     ___fldiv:
  3299                           	callstack 22
  3300  0011BC  0100               	movlb	0	; () banked
  3301  0011BE  51AF               	movf	(___fldiv@b+3)& (0+255),w,b
  3302  0011C0  0B80               	andlw	128
  3303  0011C2  6FBC               	movwf	___fldiv@sign& (0+255),b
  3304  0011C4  51AF               	movf	(___fldiv@b+3)& (0+255),w,b
  3305  0011C6  25AF               	addwf	(___fldiv@b+3)& (0+255),w,b
  3306  0011C8  6FC3               	movwf	___fldiv@bexp& (0+255),b
  3307  0011CA                     
  3308                           ; BSR set to: 0
  3309  0011CA  AFAE               	btfss	(___fldiv@b+2)& (0+255),7,b
  3310  0011CC  EFEA  F008         	goto	u4211
  3311  0011D0  EFEC  F008         	goto	u4210
  3312  0011D4                     u4211:
  3313  0011D4  EFED  F008         	goto	l4268
  3314  0011D8                     u4210:
  3315  0011D8                     
  3316                           ; BSR set to: 0
  3317  0011D8  81C3               	bsf	___fldiv@bexp& (0+255),0,b
  3318  0011DA                     l4268:
  3319                           
  3320                           ; BSR set to: 0
  3321  0011DA  51C3               	movf	___fldiv@bexp& (0+255),w,b
  3322  0011DC  B4D8               	btfsc	status,2,c
  3323  0011DE  EFF3  F008         	goto	u4221
  3324  0011E2  EFF5  F008         	goto	u4220
  3325  0011E6                     u4221:
  3326  0011E6  EF0A  F009         	goto	l4278
  3327  0011EA                     u4220:
  3328  0011EA                     
  3329                           ; BSR set to: 0
  3330  0011EA  29C3               	incf	___fldiv@bexp& (0+255),w,b
  3331  0011EC  A4D8               	btfss	status,2,c
  3332  0011EE  EFFB  F008         	goto	u4231
  3333  0011F2  EFFD  F008         	goto	u4230
  3334  0011F6                     u4231:
  3335  0011F6  EF05  F009         	goto	l4274
  3336  0011FA                     u4230:
  3337  0011FA                     
  3338                           ; BSR set to: 0
  3339  0011FA  0E00               	movlw	0
  3340  0011FC  6FAC               	movwf	___fldiv@b& (0+255),b
  3341  0011FE  0E00               	movlw	0
  3342  001200  6FAD               	movwf	(___fldiv@b+1)& (0+255),b
  3343  001202  0E00               	movlw	0
  3344  001204  6FAE               	movwf	(___fldiv@b+2)& (0+255),b
  3345  001206  0E00               	movlw	0
  3346  001208  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3347  00120A                     l4274:
  3348                           
  3349                           ; BSR set to: 0
  3350  00120A  8FAE               	bsf	(___fldiv@b+2)& (0+255),7,b
  3351  00120C                     
  3352                           ; BSR set to: 0
  3353  00120C  0E00               	movlw	0
  3354  00120E  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3355  001210  EF12  F009         	goto	l4280
  3356  001214                     l4278:
  3357                           
  3358                           ; BSR set to: 0
  3359  001214  0E00               	movlw	0
  3360  001216  6FAC               	movwf	___fldiv@b& (0+255),b
  3361  001218  0E00               	movlw	0
  3362  00121A  6FAD               	movwf	(___fldiv@b+1)& (0+255),b
  3363  00121C  0E00               	movlw	0
  3364  00121E  6FAE               	movwf	(___fldiv@b+2)& (0+255),b
  3365  001220  0E00               	movlw	0
  3366  001222  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3367  001224                     l4280:
  3368                           
  3369                           ; BSR set to: 0
  3370  001224  51B3               	movf	(___fldiv@a+3)& (0+255),w,b
  3371  001226  0B80               	andlw	128
  3372  001228  1BBC               	xorwf	___fldiv@sign& (0+255),f,b
  3373  00122A                     
  3374                           ; BSR set to: 0
  3375  00122A  51B3               	movf	(___fldiv@a+3)& (0+255),w,b
  3376  00122C  25B3               	addwf	(___fldiv@a+3)& (0+255),w,b
  3377  00122E  6FC4               	movwf	___fldiv@aexp& (0+255),b
  3378  001230                     
  3379                           ; BSR set to: 0
  3380  001230  AFB2               	btfss	(___fldiv@a+2)& (0+255),7,b
  3381  001232  EF1D  F009         	goto	u4241
  3382  001236  EF1F  F009         	goto	u4240
  3383  00123A                     u4241:
  3384  00123A  EF20  F009         	goto	l4288
  3385  00123E                     u4240:
  3386  00123E                     
  3387                           ; BSR set to: 0
  3388  00123E  81C4               	bsf	___fldiv@aexp& (0+255),0,b
  3389  001240                     l4288:
  3390                           
  3391                           ; BSR set to: 0
  3392  001240  51C4               	movf	___fldiv@aexp& (0+255),w,b
  3393  001242  B4D8               	btfsc	status,2,c
  3394  001244  EF26  F009         	goto	u4251
  3395  001248  EF28  F009         	goto	u4250
  3396  00124C                     u4251:
  3397  00124C  EF3D  F009         	goto	l4298
  3398  001250                     u4250:
  3399  001250                     
  3400                           ; BSR set to: 0
  3401  001250  29C4               	incf	___fldiv@aexp& (0+255),w,b
  3402  001252  A4D8               	btfss	status,2,c
  3403  001254  EF2E  F009         	goto	u4261
  3404  001258  EF30  F009         	goto	u4260
  3405  00125C                     u4261:
  3406  00125C  EF38  F009         	goto	l4294
  3407  001260                     u4260:
  3408  001260                     
  3409                           ; BSR set to: 0
  3410  001260  0E00               	movlw	0
  3411  001262  6FB0               	movwf	___fldiv@a& (0+255),b
  3412  001264  0E00               	movlw	0
  3413  001266  6FB1               	movwf	(___fldiv@a+1)& (0+255),b
  3414  001268  0E00               	movlw	0
  3415  00126A  6FB2               	movwf	(___fldiv@a+2)& (0+255),b
  3416  00126C  0E00               	movlw	0
  3417  00126E  6FB3               	movwf	(___fldiv@a+3)& (0+255),b
  3418  001270                     l4294:
  3419                           
  3420                           ; BSR set to: 0
  3421  001270  8FB2               	bsf	(___fldiv@a+2)& (0+255),7,b
  3422  001272                     
  3423                           ; BSR set to: 0
  3424  001272  0E00               	movlw	0
  3425  001274  6FB3               	movwf	(___fldiv@a+3)& (0+255),b
  3426  001276  EF45  F009         	goto	l4300
  3427  00127A                     l4298:
  3428                           
  3429                           ; BSR set to: 0
  3430  00127A  0E00               	movlw	0
  3431  00127C  6FB0               	movwf	___fldiv@a& (0+255),b
  3432  00127E  0E00               	movlw	0
  3433  001280  6FB1               	movwf	(___fldiv@a+1)& (0+255),b
  3434  001282  0E00               	movlw	0
  3435  001284  6FB2               	movwf	(___fldiv@a+2)& (0+255),b
  3436  001286  0E00               	movlw	0
  3437  001288  6FB3               	movwf	(___fldiv@a+3)& (0+255),b
  3438  00128A                     l4300:
  3439                           
  3440                           ; BSR set to: 0
  3441  00128A  51B0               	movf	___fldiv@a& (0+255),w,b
  3442  00128C  11B1               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3443  00128E  11B2               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3444  001290  11B3               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3445  001292  A4D8               	btfss	status,2,c
  3446  001294  EF4E  F009         	goto	u4271
  3447  001298  EF50  F009         	goto	u4270
  3448  00129C                     u4271:
  3449  00129C  EF68  F009         	goto	l4312
  3450  0012A0                     u4270:
  3451  0012A0                     
  3452                           ; BSR set to: 0
  3453  0012A0  0E00               	movlw	0
  3454  0012A2  6FAC               	movwf	___fldiv@b& (0+255),b
  3455  0012A4  0E00               	movlw	0
  3456  0012A6  6FAD               	movwf	(___fldiv@b+1)& (0+255),b
  3457  0012A8  0E00               	movlw	0
  3458  0012AA  6FAE               	movwf	(___fldiv@b+2)& (0+255),b
  3459  0012AC  0E00               	movlw	0
  3460  0012AE  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3461  0012B0                     
  3462                           ; BSR set to: 0
  3463  0012B0  0E80               	movlw	128
  3464  0012B2  13AE               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3465  0012B4  0E7F               	movlw	127
  3466  0012B6  13AF               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3467  0012B8                     l4306:
  3468                           
  3469                           ; BSR set to: 0
  3470  0012B8  51BC               	movf	___fldiv@sign& (0+255),w,b
  3471  0012BA  13AF               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3472  0012BC                     
  3473                           ; BSR set to: 0
  3474  0012BC  C0AC  F0AC         	movff	___fldiv@b,?___fldiv
  3475  0012C0  C0AD  F0AD         	movff	___fldiv@b+1,?___fldiv+1
  3476  0012C4  C0AE  F0AE         	movff	___fldiv@b+2,?___fldiv+2
  3477  0012C8  C0AF  F0AF         	movff	___fldiv@b+3,?___fldiv+3
  3478  0012CC  EFAB  F00A         	goto	l905
  3479  0012D0                     l4312:
  3480                           
  3481                           ; BSR set to: 0
  3482  0012D0  51C3               	movf	___fldiv@bexp& (0+255),w,b
  3483  0012D2  A4D8               	btfss	status,2,c
  3484  0012D4  EF6E  F009         	goto	u4281
  3485  0012D8  EF70  F009         	goto	u4280
  3486  0012DC                     u4281:
  3487  0012DC  EF7A  F009         	goto	l4320
  3488  0012E0                     u4280:
  3489  0012E0                     
  3490                           ; BSR set to: 0
  3491  0012E0  0E00               	movlw	0
  3492  0012E2  6FAC               	movwf	?___fldiv& (0+255),b
  3493  0012E4  0E00               	movlw	0
  3494  0012E6  6FAD               	movwf	(?___fldiv+1)& (0+255),b
  3495  0012E8  0E00               	movlw	0
  3496  0012EA  6FAE               	movwf	(?___fldiv+2)& (0+255),b
  3497  0012EC  0E00               	movlw	0
  3498  0012EE  6FAF               	movwf	(?___fldiv+3)& (0+255),b
  3499  0012F0  EFAB  F00A         	goto	l905
  3500  0012F4                     l4320:
  3501                           
  3502                           ; BSR set to: 0
  3503  0012F4  51C4               	movf	___fldiv@aexp& (0+255),w,b
  3504  0012F6  C0C3  F0B4         	movff	___fldiv@bexp,??___fldiv
  3505  0012FA  6BB5               	clrf	(??___fldiv+1)& (0+255),b
  3506  0012FC  5FB4               	subwf	??___fldiv& (0+255),f,b
  3507  0012FE  0E00               	movlw	0
  3508  001300  5BB5               	subwfb	(??___fldiv+1)& (0+255),f,b
  3509  001302  0E7F               	movlw	127
  3510  001304  25B4               	addwf	??___fldiv& (0+255),w,b
  3511  001306  6FBD               	movwf	___fldiv@new_exp& (0+255),b
  3512  001308  0E00               	movlw	0
  3513  00130A  21B5               	addwfc	(??___fldiv+1)& (0+255),w,b
  3514  00130C  6FBE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3515  00130E                     
  3516                           ; BSR set to: 0
  3517  00130E  C0AC  F0B8         	movff	___fldiv@b,___fldiv@rem
  3518  001312  C0AD  F0B9         	movff	___fldiv@b+1,___fldiv@rem+1
  3519  001316  C0AE  F0BA         	movff	___fldiv@b+2,___fldiv@rem+2
  3520  00131A  C0AF  F0BB         	movff	___fldiv@b+3,___fldiv@rem+3
  3521  00131E                     
  3522                           ; BSR set to: 0
  3523  00131E  0E00               	movlw	0
  3524  001320  6FAC               	movwf	___fldiv@b& (0+255),b
  3525  001322  0E00               	movlw	0
  3526  001324  6FAD               	movwf	(___fldiv@b+1)& (0+255),b
  3527  001326  0E00               	movlw	0
  3528  001328  6FAE               	movwf	(___fldiv@b+2)& (0+255),b
  3529  00132A  0E00               	movlw	0
  3530  00132C  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3531  00132E                     
  3532                           ; BSR set to: 0
  3533  00132E  0E00               	movlw	0
  3534  001330  6FBF               	movwf	___fldiv@grs& (0+255),b
  3535  001332  0E00               	movlw	0
  3536  001334  6FC0               	movwf	(___fldiv@grs+1)& (0+255),b
  3537  001336  0E00               	movlw	0
  3538  001338  6FC1               	movwf	(___fldiv@grs+2)& (0+255),b
  3539  00133A  0E00               	movlw	0
  3540  00133C  6FC2               	movwf	(___fldiv@grs+3)& (0+255),b
  3541  00133E                     
  3542                           ; BSR set to: 0
  3543  00133E  0E00               	movlw	0
  3544  001340  6FC4               	movwf	___fldiv@aexp& (0+255),b
  3545  001342  EFDB  F009         	goto	l907
  3546  001346                     l4330:
  3547                           
  3548                           ; BSR set to: 0
  3549  001346  51C4               	movf	___fldiv@aexp& (0+255),w,b
  3550  001348  B4D8               	btfsc	status,2,c
  3551  00134A  EFA9  F009         	goto	u4291
  3552  00134E  EFAB  F009         	goto	u4290
  3553  001352                     u4291:
  3554  001352  EFC2  F009         	goto	l4338
  3555  001356                     u4290:
  3556  001356                     
  3557                           ; BSR set to: 0
  3558  001356  90D8               	bcf	status,0,c
  3559  001358  37B8               	rlcf	___fldiv@rem& (0+255),f,b
  3560  00135A  37B9               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3561  00135C  37BA               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3562  00135E  37BB               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3563  001360  90D8               	bcf	status,0,c
  3564  001362  37AC               	rlcf	___fldiv@b& (0+255),f,b
  3565  001364  37AD               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3566  001366  37AE               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3567  001368  37AF               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3568  00136A                     
  3569                           ; BSR set to: 0
  3570  00136A  AFC2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3571  00136C  EFBA  F009         	goto	u4301
  3572  001370  EFBC  F009         	goto	u4300
  3573  001374                     u4301:
  3574  001374  EFBD  F009         	goto	l910
  3575  001378                     u4300:
  3576  001378                     
  3577                           ; BSR set to: 0
  3578  001378  81AC               	bsf	___fldiv@b& (0+255),0,b
  3579  00137A                     l910:
  3580                           
  3581                           ; BSR set to: 0
  3582  00137A  90D8               	bcf	status,0,c
  3583  00137C  37BF               	rlcf	___fldiv@grs& (0+255),f,b
  3584  00137E  37C0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3585  001380  37C1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3586  001382  37C2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3587  001384                     l4338:
  3588                           
  3589                           ; BSR set to: 0
  3590  001384  51B0               	movf	___fldiv@a& (0+255),w,b
  3591  001386  5DB8               	subwf	___fldiv@rem& (0+255),w,b
  3592  001388  51B1               	movf	(___fldiv@a+1)& (0+255),w,b
  3593  00138A  59B9               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3594  00138C  51B2               	movf	(___fldiv@a+2)& (0+255),w,b
  3595  00138E  59BA               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3596  001390  51B3               	movf	(___fldiv@a+3)& (0+255),w,b
  3597  001392  59BB               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3598  001394  A0D8               	btfss	status,0,c
  3599  001396  EFCF  F009         	goto	u4311
  3600  00139A  EFD1  F009         	goto	u4310
  3601  00139E                     u4311:
  3602  00139E  EFDA  F009         	goto	l4344
  3603  0013A2                     u4310:
  3604  0013A2                     
  3605                           ; BSR set to: 0
  3606  0013A2  8DC2               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3607  0013A4                     
  3608                           ; BSR set to: 0
  3609  0013A4  51B0               	movf	___fldiv@a& (0+255),w,b
  3610  0013A6  5FB8               	subwf	___fldiv@rem& (0+255),f,b
  3611  0013A8  51B1               	movf	(___fldiv@a+1)& (0+255),w,b
  3612  0013AA  5BB9               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3613  0013AC  51B2               	movf	(___fldiv@a+2)& (0+255),w,b
  3614  0013AE  5BBA               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3615  0013B0  51B3               	movf	(___fldiv@a+3)& (0+255),w,b
  3616  0013B2  5BBB               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3617  0013B4                     l4344:
  3618                           
  3619                           ; BSR set to: 0
  3620  0013B4  2BC4               	incf	___fldiv@aexp& (0+255),f,b
  3621  0013B6                     l907:
  3622                           
  3623                           ; BSR set to: 0
  3624  0013B6  0E19               	movlw	25
  3625  0013B8  65C4               	cpfsgt	___fldiv@aexp& (0+255),b
  3626  0013BA  EFE1  F009         	goto	u4321
  3627  0013BE  EFE3  F009         	goto	u4320
  3628  0013C2                     u4321:
  3629  0013C2  EFA3  F009         	goto	l4330
  3630  0013C6                     u4320:
  3631  0013C6                     
  3632                           ; BSR set to: 0
  3633  0013C6  51B8               	movf	___fldiv@rem& (0+255),w,b
  3634  0013C8  11B9               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3635  0013CA  11BA               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3636  0013CC  11BB               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3637  0013CE  B4D8               	btfsc	status,2,c
  3638  0013D0  EFEC  F009         	goto	u4331
  3639  0013D4  EFEE  F009         	goto	u4330
  3640  0013D8                     u4331:
  3641  0013D8  EF06  F00A         	goto	l4356
  3642  0013DC                     u4330:
  3643  0013DC                     
  3644                           ; BSR set to: 0
  3645  0013DC  81BF               	bsf	___fldiv@grs& (0+255),0,b
  3646  0013DE  EF06  F00A         	goto	l4356
  3647  0013E2                     l4350:
  3648                           
  3649                           ; BSR set to: 0
  3650  0013E2  90D8               	bcf	status,0,c
  3651  0013E4  37AC               	rlcf	___fldiv@b& (0+255),f,b
  3652  0013E6  37AD               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3653  0013E8  37AE               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3654  0013EA  37AF               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3655  0013EC                     
  3656                           ; BSR set to: 0
  3657  0013EC  AFC2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3658  0013EE  EFFB  F009         	goto	u4341
  3659  0013F2  EFFD  F009         	goto	u4340
  3660  0013F6                     u4341:
  3661  0013F6  EFFE  F009         	goto	l916
  3662  0013FA                     u4340:
  3663  0013FA                     
  3664                           ; BSR set to: 0
  3665  0013FA  81AC               	bsf	___fldiv@b& (0+255),0,b
  3666  0013FC                     l916:
  3667                           
  3668                           ; BSR set to: 0
  3669  0013FC  90D8               	bcf	status,0,c
  3670  0013FE  37BF               	rlcf	___fldiv@grs& (0+255),f,b
  3671  001400  37C0               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3672  001402  37C1               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3673  001404  37C2               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3674  001406  07BD               	decf	___fldiv@new_exp& (0+255),f,b
  3675  001408  A0D8               	btfss	status,0,c
  3676  00140A  07BE               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3677  00140C                     l4356:
  3678                           
  3679                           ; BSR set to: 0
  3680  00140C  AFAE               	btfss	(___fldiv@b+2)& (0+255),7,b
  3681  00140E  EF0B  F00A         	goto	u4351
  3682  001412  EF0D  F00A         	goto	u4350
  3683  001416                     u4351:
  3684  001416  EFF1  F009         	goto	l4350
  3685  00141A                     u4350:
  3686  00141A                     
  3687                           ; BSR set to: 0
  3688  00141A  0E00               	movlw	0
  3689  00141C  6FC4               	movwf	___fldiv@aexp& (0+255),b
  3690  00141E                     
  3691                           ; BSR set to: 0
  3692  00141E  AFC2               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3693  001420  EF14  F00A         	goto	u4361
  3694  001424  EF16  F00A         	goto	u4360
  3695  001428                     u4361:
  3696  001428  EF3A  F00A         	goto	l918
  3697  00142C                     u4360:
  3698  00142C                     
  3699                           ; BSR set to: 0
  3700  00142C  0EFF               	movlw	255
  3701  00142E  15BF               	andwf	___fldiv@grs& (0+255),w,b
  3702  001430  6FB4               	movwf	??___fldiv& (0+255),b
  3703  001432  0EFF               	movlw	255
  3704  001434  15C0               	andwf	(___fldiv@grs+1)& (0+255),w,b
  3705  001436  6FB5               	movwf	(??___fldiv+1)& (0+255),b
  3706  001438  0EFF               	movlw	255
  3707  00143A  15C1               	andwf	(___fldiv@grs+2)& (0+255),w,b
  3708  00143C  6FB6               	movwf	(??___fldiv+2)& (0+255),b
  3709  00143E  0E7F               	movlw	127
  3710  001440  15C2               	andwf	(___fldiv@grs+3)& (0+255),w,b
  3711  001442  6FB7               	movwf	(??___fldiv+3)& (0+255),b
  3712  001444  51B4               	movf	??___fldiv& (0+255),w,b
  3713  001446  11B5               	iorwf	(??___fldiv+1)& (0+255),w,b
  3714  001448  11B6               	iorwf	(??___fldiv+2)& (0+255),w,b
  3715  00144A  11B7               	iorwf	(??___fldiv+3)& (0+255),w,b
  3716  00144C  B4D8               	btfsc	status,2,c
  3717  00144E  EF2B  F00A         	goto	u4371
  3718  001452  EF2D  F00A         	goto	u4370
  3719  001456                     u4371:
  3720  001456  EF31  F00A         	goto	l919
  3721  00145A                     u4370:
  3722  00145A                     l4364:
  3723                           
  3724                           ; BSR set to: 0
  3725  00145A  0E01               	movlw	1
  3726  00145C  6FC4               	movwf	___fldiv@aexp& (0+255),b
  3727  00145E  EF3A  F00A         	goto	l918
  3728  001462                     l919:
  3729                           
  3730                           ; BSR set to: 0
  3731  001462  A1AC               	btfss	___fldiv@b& (0+255),0,b
  3732  001464  EF36  F00A         	goto	u4381
  3733  001468  EF38  F00A         	goto	u4380
  3734  00146C                     u4381:
  3735  00146C  EF3A  F00A         	goto	l918
  3736  001470                     u4380:
  3737  001470  EF2D  F00A         	goto	l4364
  3738  001474                     l918:
  3739                           
  3740                           ; BSR set to: 0
  3741  001474  51C4               	movf	___fldiv@aexp& (0+255),w,b
  3742  001476  B4D8               	btfsc	status,2,c
  3743  001478  EF40  F00A         	goto	u4391
  3744  00147C  EF42  F00A         	goto	u4390
  3745  001480                     u4391:
  3746  001480  EF66  F00A         	goto	l4376
  3747  001484                     u4390:
  3748  001484                     
  3749                           ; BSR set to: 0
  3750  001484  0E01               	movlw	1
  3751  001486  27AC               	addwf	___fldiv@b& (0+255),f,b
  3752  001488  0E00               	movlw	0
  3753  00148A  23AD               	addwfc	(___fldiv@b+1)& (0+255),f,b
  3754  00148C  23AE               	addwfc	(___fldiv@b+2)& (0+255),f,b
  3755  00148E  23AF               	addwfc	(___fldiv@b+3)& (0+255),f,b
  3756  001490                     
  3757                           ; BSR set to: 0
  3758  001490  A1AF               	btfss	(___fldiv@b+3)& (0+255),0,b
  3759  001492  EF4D  F00A         	goto	u4401
  3760  001496  EF4F  F00A         	goto	u4400
  3761  00149A                     u4401:
  3762  00149A  EF66  F00A         	goto	l4376
  3763  00149E                     u4400:
  3764  00149E                     
  3765                           ; BSR set to: 0
  3766  00149E  C0AC  F0B4         	movff	___fldiv@b,??___fldiv
  3767  0014A2  C0AD  F0B5         	movff	___fldiv@b+1,??___fldiv+1
  3768  0014A6  C0AE  F0B6         	movff	___fldiv@b+2,??___fldiv+2
  3769  0014AA  C0AF  F0B7         	movff	___fldiv@b+3,??___fldiv+3
  3770  0014AE  35B7               	rlcf	(??___fldiv+3)& (0+255),w,b
  3771  0014B0  33B7               	rrcf	(??___fldiv+3)& (0+255),f,b
  3772  0014B2  33B6               	rrcf	(??___fldiv+2)& (0+255),f,b
  3773  0014B4  33B5               	rrcf	(??___fldiv+1)& (0+255),f,b
  3774  0014B6  33B4               	rrcf	??___fldiv& (0+255),f,b
  3775  0014B8  C0B4  F0AC         	movff	??___fldiv,___fldiv@b
  3776  0014BC  C0B5  F0AD         	movff	??___fldiv+1,___fldiv@b+1
  3777  0014C0  C0B6  F0AE         	movff	??___fldiv+2,___fldiv@b+2
  3778  0014C4  C0B7  F0AF         	movff	??___fldiv+3,___fldiv@b+3
  3779  0014C8                     
  3780                           ; BSR set to: 0
  3781  0014C8  4BBD               	infsnz	___fldiv@new_exp& (0+255),f,b
  3782  0014CA  2BBE               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  3783  0014CC                     l4376:
  3784                           
  3785                           ; BSR set to: 0
  3786  0014CC  BFBE               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3787  0014CE  EF71  F00A         	goto	u4411
  3788  0014D2  51BE               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3789  0014D4  E108               	bnz	u4410
  3790  0014D6  29BD               	incf	___fldiv@new_exp& (0+255),w,b
  3791  0014D8  A0D8               	btfss	status,0,c
  3792  0014DA  EF71  F00A         	goto	u4411
  3793  0014DE  EF73  F00A         	goto	u4410
  3794  0014E2                     u4411:
  3795  0014E2  EF7E  F00A         	goto	l4380
  3796  0014E6                     u4410:
  3797  0014E6                     
  3798                           ; BSR set to: 0
  3799  0014E6  0E00               	movlw	0
  3800  0014E8  6FBE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3801  0014EA  69BD               	setf	___fldiv@new_exp& (0+255),b
  3802  0014EC  0E00               	movlw	0
  3803  0014EE  6FAC               	movwf	___fldiv@b& (0+255),b
  3804  0014F0  0E00               	movlw	0
  3805  0014F2  6FAD               	movwf	(___fldiv@b+1)& (0+255),b
  3806  0014F4  0E00               	movlw	0
  3807  0014F6  6FAE               	movwf	(___fldiv@b+2)& (0+255),b
  3808  0014F8  0E00               	movlw	0
  3809  0014FA  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3810  0014FC                     l4380:
  3811                           
  3812                           ; BSR set to: 0
  3813  0014FC  BFBE               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3814  0014FE  EF8B  F00A         	goto	u4420
  3815  001502  51BE               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3816  001504  E106               	bnz	u4421
  3817  001506  05BD               	decf	___fldiv@new_exp& (0+255),w,b
  3818  001508  B0D8               	btfsc	status,0,c
  3819  00150A  EF89  F00A         	goto	u4421
  3820  00150E  EF8B  F00A         	goto	u4420
  3821  001512                     u4421:
  3822  001512  EF99  F00A         	goto	l4384
  3823  001516                     u4420:
  3824  001516                     
  3825                           ; BSR set to: 0
  3826  001516  0E00               	movlw	0
  3827  001518  6FBE               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3828  00151A  0E00               	movlw	0
  3829  00151C  6FBD               	movwf	___fldiv@new_exp& (0+255),b
  3830  00151E  0E00               	movlw	0
  3831  001520  6FAC               	movwf	___fldiv@b& (0+255),b
  3832  001522  0E00               	movlw	0
  3833  001524  6FAD               	movwf	(___fldiv@b+1)& (0+255),b
  3834  001526  0E00               	movlw	0
  3835  001528  6FAE               	movwf	(___fldiv@b+2)& (0+255),b
  3836  00152A  0E00               	movlw	0
  3837  00152C  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3838  00152E  0E00               	movlw	0
  3839  001530  6FBC               	movwf	___fldiv@sign& (0+255),b
  3840  001532                     l4384:
  3841                           
  3842                           ; BSR set to: 0
  3843  001532  C0BD  F0C3         	movff	___fldiv@new_exp,___fldiv@bexp
  3844  001536                     
  3845                           ; BSR set to: 0
  3846  001536  A1C3               	btfss	___fldiv@bexp& (0+255),0,b
  3847  001538  EFA0  F00A         	goto	u4431
  3848  00153C  EFA2  F00A         	goto	u4430
  3849  001540                     u4431:
  3850  001540  EFA5  F00A         	goto	l4390
  3851  001544                     u4430:
  3852  001544                     
  3853                           ; BSR set to: 0
  3854  001544  8FAE               	bsf	(___fldiv@b+2)& (0+255),7,b
  3855  001546  EFA6  F00A         	goto	l4392
  3856  00154A                     l4390:
  3857                           
  3858                           ; BSR set to: 0
  3859  00154A  9FAE               	bcf	(___fldiv@b+2)& (0+255),7,b
  3860  00154C                     l4392:
  3861                           
  3862                           ; BSR set to: 0
  3863  00154C  90D8               	bcf	status,0,c
  3864  00154E  31C3               	rrcf	___fldiv@bexp& (0+255),w,b
  3865  001550  6FAF               	movwf	(___fldiv@b+3)& (0+255),b
  3866  001552  EF5C  F009         	goto	l4306
  3867  001556                     l905:
  3868                           
  3869                           ; BSR set to: 0
  3870  001556  0012               	return		;funcret
  3871  001558                     __end_of___fldiv:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _mover_servo *****************
  3875 ;; Defined at:
  3876 ;;		line 385 in file "Main_Robot_I2C_Serial_LCD.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  servo           2   26[BANK0 ] int 
  3879 ;;  angulo          2   28[BANK0 ] int 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         0       4       0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3894 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        6 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    9
  3898 ;; This function calls:
  3899 ;;		_map
  3900 ;;		_sprintf
  3901 ;;		_start
  3902 ;;		_writeI2C
  3903 ;; This function is called by:
  3904 ;;		_settings
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text11
  3909  00231A                     __ptext11:
  3910                           	callstack 0
  3911  00231A                     _mover_servo:
  3912                           	callstack 20
  3913  00231A                     
  3914                           ;Main_Robot_I2C_Serial_LCD.c: 386: pos = map (angulo, 0 , 180 , 110, 510);
  3915  00231A  C0C8  F0BA         	movff	mover_servo@angulo,map@x
  3916  00231E  C0C9  F0BB         	movff	mover_servo@angulo+1,map@x+1
  3917  002322  0E00               	movlw	0
  3918  002324  0100               	movlb	0	; () banked
  3919  002326  6FBD               	movwf	(map@In_Min+1)& (0+255),b
  3920  002328  0E00               	movlw	0
  3921  00232A  6FBC               	movwf	map@In_Min& (0+255),b
  3922  00232C  0E00               	movlw	0
  3923  00232E  6FBF               	movwf	(map@In_Max+1)& (0+255),b
  3924  002330  0EB4               	movlw	180
  3925  002332  6FBE               	movwf	map@In_Max& (0+255),b
  3926  002334  0E00               	movlw	0
  3927  002336  6FC1               	movwf	(map@Out_Min+1)& (0+255),b
  3928  002338  0E6E               	movlw	110
  3929  00233A  6FC0               	movwf	map@Out_Min& (0+255),b
  3930  00233C  0E01               	movlw	1
  3931  00233E  6FC3               	movwf	(map@Out_Max+1)& (0+255),b
  3932  002340  0EFE               	movlw	254
  3933  002342  6FC2               	movwf	map@Out_Max& (0+255),b
  3934  002344  EC59  F015         	call	_map	;wreg free
  3935  002348  C0BA  F06C         	movff	?_map,_pos
  3936  00234C  C0BB  F06D         	movff	?_map+1,_pos+1
  3937  002350                     
  3938                           ;Main_Robot_I2C_Serial_LCD.c: 387: data2[2] = pos;
  3939  002350  C06C  F0A8         	movff	_pos,_data2+2
  3940  002354                     
  3941                           ;Main_Robot_I2C_Serial_LCD.c: 388: data2[3] = pos >> 8;
  3942  002354  0100               	movlb	0	; () banked
  3943  002356  516D               	movf	(_pos+1)& (0+255),w,b
  3944  002358  6FA9               	movwf	(_data2+3)& (0+255),b
  3945  00235A                     
  3946                           ; BSR set to: 0
  3947                           ;Main_Robot_I2C_Serial_LCD.c: 389: writeI2C(0x80, 0x06 + (4 * servo), data2, 4);
  3948  00235A  51C6               	movf	mover_servo@servo& (0+255),w,b
  3949  00235C  0D04               	mullw	4
  3950  00235E  50F3               	movf	243,w,c
  3951  002360  0F06               	addlw	6
  3952  002362  6FAE               	movwf	writeI2C@Register& (0+255),b
  3953  002364  0EA6               	movlw	low _data2
  3954  002366  6FAF               	movwf	writeI2C@Data& (0+255),b
  3955  002368  0E00               	movlw	high _data2
  3956  00236A  6FB0               	movwf	(writeI2C@Data+1)& (0+255),b
  3957  00236C  0E00               	movlw	0
  3958  00236E  6FB2               	movwf	(writeI2C@bytes+1)& (0+255),b
  3959  002370  0E04               	movlw	4
  3960  002372  6FB1               	movwf	writeI2C@bytes& (0+255),b
  3961  002374  0E80               	movlw	128
  3962  002376  EC3D  F013         	call	_writeI2C
  3963  00237A                     
  3964                           ;Main_Robot_I2C_Serial_LCD.c: 390: sprintf(text," Servo: %d \n",servo);
  3965  00237A  0E6E               	movlw	low _text
  3966  00237C  0100               	movlb	0	; () banked
  3967  00237E  6FB8               	movwf	sprintf@sp& (0+255),b
  3968  002380  0E00               	movlw	high _text
  3969  002382  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  3970  002384  0E56               	movlw	low STR_7
  3971  002386  6FBA               	movwf	sprintf@f& (0+255),b
  3972  002388  0E08               	movlw	high STR_7
  3973  00238A  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  3974  00238C  C0C6  F0BC         	movff	mover_servo@servo,?_sprintf+4
  3975  002390  C0C7  F0BD         	movff	mover_servo@servo+1,?_sprintf+5
  3976  002394  EC0C  F00D         	call	_sprintf	;wreg free
  3977  002398                     
  3978                           ;Main_Robot_I2C_Serial_LCD.c: 391: start();
  3979  002398  EC8D  F014         	call	_start	;wreg free
  3980  00239C                     
  3981                           ;Main_Robot_I2C_Serial_LCD.c: 392: sprintf(text," Angulo: %d \n",angulo);
  3982  00239C  0E6E               	movlw	low _text
  3983  00239E  0100               	movlb	0	; () banked
  3984  0023A0  6FB8               	movwf	sprintf@sp& (0+255),b
  3985  0023A2  0E00               	movlw	high _text
  3986  0023A4  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  3987  0023A6  0E48               	movlw	low STR_8
  3988  0023A8  6FBA               	movwf	sprintf@f& (0+255),b
  3989  0023AA  0E08               	movlw	high STR_8
  3990  0023AC  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  3991  0023AE  C0C8  F0BC         	movff	mover_servo@angulo,?_sprintf+4
  3992  0023B2  C0C9  F0BD         	movff	mover_servo@angulo+1,?_sprintf+5
  3993  0023B6  EC0C  F00D         	call	_sprintf	;wreg free
  3994  0023BA                     
  3995                           ;Main_Robot_I2C_Serial_LCD.c: 393: start();
  3996  0023BA  EC8D  F014         	call	_start	;wreg free
  3997  0023BE                     
  3998                           ;Main_Robot_I2C_Serial_LCD.c: 394: _delay((unsigned long)((1000)*(8000000/4000.0)));
  3999  0023BE  0E0B               	movlw	11
  4000  0023C0  0100               	movlb	0	; () banked
  4001  0023C2  6FCB               	movwf	(??_mover_servo+1)& (0+255),b
  4002  0023C4  0E26               	movlw	38
  4003  0023C6  6FCA               	movwf	??_mover_servo& (0+255),b
  4004  0023C8  0E5D               	movlw	93
  4005  0023CA                     u4697:
  4006  0023CA  2EE8               	decfsz	wreg,f,c
  4007  0023CC  D7FE               	bra	u4697
  4008  0023CE  2FCA               	decfsz	??_mover_servo& (0+255),f,b
  4009  0023D0  D7FC               	bra	u4697
  4010  0023D2  2FCB               	decfsz	(??_mover_servo+1)& (0+255),f,b
  4011  0023D4  D7FA               	bra	u4697
  4012  0023D6  D000               	nop2	
  4013  0023D8  0012               	return		;funcret
  4014  0023DA                     __end_of_mover_servo:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function _writeI2C *****************
  4018 ;; Defined at:
  4019 ;;		line 278 in file "Main_Robot_I2C_Serial_LCD.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  Address         1    wreg     unsigned char 
  4022 ;;  Register        1    2[BANK0 ] unsigned char 
  4023 ;;  Data            2    3[BANK0 ] PTR unsigned char 
  4024 ;;		 -> data2(4), d1(1), setPWMFreq@newmode(1), data1(1), 
  4025 ;;		 -> setPWMFreq@prescale(1), RAM(2047), 
  4026 ;;  bytes           2    5[BANK0 ] int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  Address         1    9[BANK0 ] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4038 ;;      Params:         0       5       0       0       0       0       0       0       0
  4039 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4040 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4041 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4042 ;;Total ram usage:        8 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    8
  4045 ;; This function calls:
  4046 ;;		_sendI2C
  4047 ;;		_startI2C
  4048 ;;		_stopI2C
  4049 ;; This function is called by:
  4050 ;;		_settings
  4051 ;;		_setPWMFreq
  4052 ;;		_mover_servo
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text12
  4057  00267A                     __ptext12:
  4058                           	callstack 0
  4059  00267A                     _writeI2C:
  4060                           	callstack 21
  4061                           
  4062                           ;incstack = 0
  4063                           ;writeI2C@Address stored from wreg
  4064  00267A  0100               	movlb	0	; () banked
  4065  00267C  6FB5               	movwf	writeI2C@Address& (0+255),b
  4066  00267E                     
  4067                           ;Main_Robot_I2C_Serial_LCD.c: 279: startI2C();
  4068  00267E  ECC4  F016         	call	_startI2C	;wreg free
  4069                           
  4070                           ;Main_Robot_I2C_Serial_LCD.c: 280: sendI2C(Address);
  4071  002682  0100               	movlb	0	; () banked
  4072  002684  51B5               	movf	writeI2C@Address& (0+255),w,b
  4073  002686  ECA9  F016         	call	_sendI2C
  4074                           
  4075                           ;Main_Robot_I2C_Serial_LCD.c: 281: sendI2C(Register);
  4076  00268A  0100               	movlb	0	; () banked
  4077  00268C  51AE               	movf	writeI2C@Register& (0+255),w,b
  4078  00268E  ECA9  F016         	call	_sendI2C
  4079  002692                     
  4080                           ;Main_Robot_I2C_Serial_LCD.c: 282: for(i=0;i<bytes;i++){
  4081  002692  0E00               	movlw	0
  4082  002694  6E3B               	movwf	(_i+1)^0,c
  4083  002696  0E00               	movlw	0
  4084  002698  6E3A               	movwf	_i^0,c
  4085  00269A  EF5B  F013         	goto	l4146
  4086  00269E                     l4140:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;Main_Robot_I2C_Serial_LCD.c: 283: sendI2C(*Data);
  4090  00269E  C0AF  FFD9         	movff	writeI2C@Data,fsr2l
  4091  0026A2  C0B0  FFDA         	movff	writeI2C@Data+1,fsr2h
  4092  0026A6  50DF               	movf	indf2,w,c
  4093  0026A8  ECA9  F016         	call	_sendI2C
  4094  0026AC                     
  4095                           ;Main_Robot_I2C_Serial_LCD.c: 284: Data++;
  4096  0026AC  0100               	movlb	0	; () banked
  4097  0026AE  4BAF               	infsnz	writeI2C@Data& (0+255),f,b
  4098  0026B0  2BB0               	incf	(writeI2C@Data+1)& (0+255),f,b
  4099  0026B2                     
  4100                           ; BSR set to: 0
  4101  0026B2  4A3A               	infsnz	_i^0,f,c
  4102  0026B4  2A3B               	incf	(_i+1)^0,f,c
  4103  0026B6                     l4146:
  4104  0026B6  0100               	movlb	0	; () banked
  4105  0026B8  51B1               	movf	writeI2C@bytes& (0+255),w,b
  4106  0026BA  5C3A               	subwf	_i^0,w,c
  4107  0026BC  503B               	movf	(_i+1)^0,w,c
  4108  0026BE  0A80               	xorlw	128
  4109  0026C0  6FB3               	movwf	??_writeI2C& (0+255),b
  4110  0026C2  51B2               	movf	(writeI2C@bytes+1)& (0+255),w,b
  4111  0026C4  0A80               	xorlw	128
  4112  0026C6  59B3               	subwfb	??_writeI2C& (0+255),w,b
  4113  0026C8  A0D8               	btfss	status,0,c
  4114  0026CA  EF69  F013         	goto	u4091
  4115  0026CE  EF6B  F013         	goto	u4090
  4116  0026D2                     u4091:
  4117  0026D2  EF4F  F013         	goto	l4140
  4118  0026D6                     u4090:
  4119  0026D6                     
  4120                           ; BSR set to: 0
  4121                           ;Main_Robot_I2C_Serial_LCD.c: 285: };Main_Robot_I2C_Serial_LCD.c: 286: stopI2C();
  4122  0026D6  ECC0  F016         	call	_stopI2C	;wreg free
  4123  0026DA                     
  4124                           ;Main_Robot_I2C_Serial_LCD.c: 287: _delay((unsigned long)((100)*(8000000/4000.0)));
  4125  0026DA  0E02               	movlw	2
  4126  0026DC  0100               	movlb	0	; () banked
  4127  0026DE  6FB4               	movwf	(??_writeI2C+1)& (0+255),b
  4128  0026E0  0E04               	movlw	4
  4129  0026E2  6FB3               	movwf	??_writeI2C& (0+255),b
  4130  0026E4  0EBA               	movlw	186
  4131  0026E6                     u4707:
  4132  0026E6  2EE8               	decfsz	wreg,f,c
  4133  0026E8  D7FE               	bra	u4707
  4134  0026EA  2FB3               	decfsz	??_writeI2C& (0+255),f,b
  4135  0026EC  D7FC               	bra	u4707
  4136  0026EE  2FB4               	decfsz	(??_writeI2C+1)& (0+255),f,b
  4137  0026F0  D7FA               	bra	u4707
  4138  0026F2  F000               	nop	
  4139  0026F4  0012               	return		;funcret
  4140  0026F6                     __end_of_writeI2C:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _stopI2C *****************
  4144 ;; Defined at:
  4145 ;;		line 304 in file "Main_Robot_I2C_Serial_LCD.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4162 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4163 ;;Total ram usage:        0 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    7
  4166 ;; This function calls:
  4167 ;;		_readyI2C
  4168 ;; This function is called by:
  4169 ;;		_writeI2C
  4170 ;;		_readI2C
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text13
  4175  002D80                     __ptext13:
  4176                           	callstack 0
  4177  002D80                     _stopI2C:
  4178                           	callstack 21
  4179  002D80                     
  4180                           ;Main_Robot_I2C_Serial_LCD.c: 306: readyI2C();
  4181  002D80  EC29  F016         	call	_readyI2C	;wreg free
  4182  002D84                     
  4183                           ;Main_Robot_I2C_Serial_LCD.c: 307: PEN = 1;
  4184  002D84  84C5               	bsf	4037,2,c	;volatile
  4185  002D86  0012               	return		;funcret
  4186  002D88                     __end_of_stopI2C:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _startI2C *****************
  4190 ;; Defined at:
  4191 ;;		line 290 in file "Main_Robot_I2C_Serial_LCD.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    7
  4212 ;; This function calls:
  4213 ;;		_readyI2C
  4214 ;; This function is called by:
  4215 ;;		_writeI2C
  4216 ;;		_readI2C
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text14
  4221  002D88                     __ptext14:
  4222                           	callstack 0
  4223  002D88                     _startI2C:
  4224                           	callstack 21
  4225  002D88                     
  4226                           ;Main_Robot_I2C_Serial_LCD.c: 291: readyI2C();
  4227  002D88  EC29  F016         	call	_readyI2C	;wreg free
  4228  002D8C                     
  4229                           ;Main_Robot_I2C_Serial_LCD.c: 292: SEN = 1;
  4230  002D8C  80C5               	bsf	4037,0,c	;volatile
  4231  002D8E  0012               	return		;funcret
  4232  002D90                     __end_of_startI2C:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _sendI2C *****************
  4236 ;; Defined at:
  4237 ;;		line 299 in file "Main_Robot_I2C_Serial_LCD.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  data            1    wreg     unsigned char 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  data            1    1[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0
  4252 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4254 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4255 ;;Total ram usage:        1 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    7
  4258 ;; This function calls:
  4259 ;;		_readyI2C
  4260 ;; This function is called by:
  4261 ;;		_writeI2C
  4262 ;;		_readI2C
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text15
  4267  002D52                     __ptext15:
  4268                           	callstack 0
  4269  002D52                     _sendI2C:
  4270                           	callstack 21
  4271                           
  4272                           ;incstack = 0
  4273                           ;sendI2C@data stored from wreg
  4274  002D52  0100               	movlb	0	; () banked
  4275  002D54  6FAD               	movwf	sendI2C@data& (0+255),b
  4276  002D56                     
  4277                           ;Main_Robot_I2C_Serial_LCD.c: 300: readyI2C();
  4278  002D56  EC29  F016         	call	_readyI2C	;wreg free
  4279  002D5A                     
  4280                           ;Main_Robot_I2C_Serial_LCD.c: 301: SSPBUF = data;
  4281  002D5A  C0AD  FFC9         	movff	sendI2C@data,4041	;volatile
  4282  002D5E  0012               	return		;funcret
  4283  002D60                     __end_of_sendI2C:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _readyI2C *****************
  4287 ;; Defined at:
  4288 ;;		line 295 in file "Main_Robot_I2C_Serial_LCD.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4304 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4305 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4306 ;;Total ram usage:        1 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    6
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_startI2C
  4313 ;;		_sendI2C
  4314 ;;		_stopI2C
  4315 ;;		_repeatedStart
  4316 ;;		_receiveI2C
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text16
  4321  002C52                     __ptext16:
  4322                           	callstack 0
  4323  002C52                     _readyI2C:
  4324                           	callstack 21
  4325  002C52                     l3776:
  4326  002C52  CFC5 F0AC          	movff	4037,??_readyI2C	;volatile
  4327  002C56  0E1F               	movlw	31
  4328  002C58  0100               	movlb	0	; () banked
  4329  002C5A  17AC               	andwf	??_readyI2C& (0+255),f,b
  4330  002C5C  A4D8               	btfss	status,2,c
  4331  002C5E  EF33  F016         	goto	u3531
  4332  002C62  EF35  F016         	goto	u3530
  4333  002C66                     u3531:
  4334  002C66  EF29  F016         	goto	l3776
  4335  002C6A                     u3530:
  4336  002C6A                     
  4337                           ; BSR set to: 0
  4338  002C6A  B4C7               	btfsc	199,2,c	;volatile
  4339  002C6C  EF3A  F016         	goto	u3541
  4340  002C70  EF3C  F016         	goto	u3540
  4341  002C74                     u3541:
  4342  002C74  EF29  F016         	goto	l3776
  4343  002C78                     u3540:
  4344  002C78                     
  4345                           ; BSR set to: 0
  4346  002C78  0012               	return		;funcret
  4347  002C7A                     __end_of_readyI2C:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _start *****************
  4351 ;; Defined at:
  4352 ;;		line 266 in file "Main_Robot_I2C_Serial_LCD.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    7
  4373 ;; This function calls:
  4374 ;;		_strlen
  4375 ;; This function is called by:
  4376 ;;		_settings
  4377 ;;		_mover_servo
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text17
  4382  00291A                     __ptext17:
  4383                           	callstack 0
  4384  00291A                     _start:
  4385                           	callstack 22
  4386  00291A                     
  4387                           ;Main_Robot_I2C_Serial_LCD.c: 267: for(i=0;i<=strlen(text);i++){
  4388  00291A  0E00               	movlw	0
  4389  00291C  6E3B               	movwf	(_i+1)^0,c
  4390  00291E  0E00               	movlw	0
  4391  002920  6E3A               	movwf	_i^0,c
  4392  002922  EFA4  F014         	goto	l4230
  4393  002926                     l223:
  4394  002926  A89E               	btfss	3998,4,c	;volatile
  4395  002928  EF98  F014         	goto	u4171
  4396  00292C  EF9A  F014         	goto	u4170
  4397  002930                     u4171:
  4398  002930  EF93  F014         	goto	l223
  4399  002934                     u4170:
  4400  002934                     
  4401                           ;Main_Robot_I2C_Serial_LCD.c: 269: TXREG = text[i];
  4402  002934  0E6E               	movlw	low _text
  4403  002936  243A               	addwf	_i^0,w,c
  4404  002938  6ED9               	movwf	fsr2l,c
  4405  00293A  0E00               	movlw	high _text
  4406  00293C  203B               	addwfc	(_i+1)^0,w,c
  4407  00293E  6EDA               	movwf	fsr2h,c
  4408  002940  50DF               	movf	indf2,w,c
  4409  002942  6EAD               	movwf	173,c	;volatile
  4410  002944  4A3A               	infsnz	_i^0,f,c
  4411  002946  2A3B               	incf	(_i+1)^0,f,c
  4412  002948                     l4230:
  4413  002948  0E6E               	movlw	low _text
  4414  00294A  0100               	movlb	0	; () banked
  4415  00294C  6FAC               	movwf	strlen@s& (0+255),b
  4416  00294E  0E00               	movlw	high _text
  4417  002950  6FAD               	movwf	(strlen@s+1)& (0+255),b
  4418  002952  ECBC  F015         	call	_strlen	;wreg free
  4419  002956  503A               	movf	_i^0,w,c
  4420  002958  0100               	movlb	0	; () banked
  4421  00295A  5DAC               	subwf	?_strlen& (0+255),w,b
  4422  00295C  503B               	movf	(_i+1)^0,w,c
  4423  00295E  59AD               	subwfb	(?_strlen+1)& (0+255),w,b
  4424  002960  B0D8               	btfsc	status,0,c
  4425  002962  EFB5  F014         	goto	u4181
  4426  002966  EFB7  F014         	goto	u4180
  4427  00296A                     u4181:
  4428  00296A  EF93  F014         	goto	l223
  4429  00296E                     u4180:
  4430  00296E                     
  4431                           ; BSR set to: 0
  4432  00296E  0012               	return		;funcret
  4433  002970                     __end_of_start:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _sprintf *****************
  4437 ;; Defined at:
  4438 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  4441 ;;		 -> texto_LCD(16), text(40), 
  4442 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  4443 ;;		 -> STR_8(14), STR_7(13), STR_6(9), STR_5(30), 
  4444 ;;		 -> STR_4(17), STR_3(14), STR_2(9), STR_1(9), 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  tmpval          4    0        struct .
  4447 ;;  cp              3    0        PTR const unsigned char 
  4448 ;;  val             2   23[BANK0 ] unsigned int 
  4449 ;;  ap              2   21[BANK0 ] PTR void [1]
  4450 ;;		 -> ?_sprintf(2), 
  4451 ;;  len             2    0        unsigned int 
  4452 ;;  c               1   25[BANK0 ] unsigned char 
  4453 ;;  prec            1   20[BANK0 ] char 
  4454 ;;  flag            1   19[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2   12[BANK0 ] int 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4464 ;;      Params:         0       6       0       0       0       0       0       0       0
  4465 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4466 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4467 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4468 ;;Total ram usage:       14 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    7
  4471 ;; This function calls:
  4472 ;;		___lwdiv
  4473 ;;		___lwmod
  4474 ;; This function is called by:
  4475 ;;		_settings
  4476 ;;		_mover_servo
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text18
  4481  001A18                     __ptext18:
  4482                           	callstack 0
  4483  001A18                     _sprintf:
  4484                           	callstack 22
  4485  001A18                     
  4486                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  4487  001A18  0EBC               	movlw	low (?_sprintf+4)
  4488  001A1A  0100               	movlb	0	; () banked
  4489  001A1C  6FC1               	movwf	sprintf@ap& (0+255),b
  4490  001A1E  0E00               	movlw	high (?_sprintf+4)
  4491  001A20  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  4492                           
  4493                           ;doprnt.c: 553: while((c = *f++)) {
  4494  001A22  EFD9  F00D         	goto	l4218
  4495  001A26                     l4158:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;doprnt.c: 555: if(c != '%')
  4499  001A26  0E25               	movlw	37
  4500  001A28  19C5               	xorwf	sprintf@c& (0+255),w,b
  4501  001A2A  B4D8               	btfsc	status,2,c
  4502  001A2C  EF1A  F00D         	goto	u4101
  4503  001A30  EF1C  F00D         	goto	u4100
  4504  001A34                     u4101:
  4505  001A34  EF26  F00D         	goto	l4164
  4506  001A38                     u4100:
  4507  001A38                     l4160:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4511  001A38  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  4512  001A3C  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  4513  001A40  C0C5  FFDF         	movff	sprintf@c,indf2
  4514  001A44                     
  4515                           ; BSR set to: 0
  4516  001A44  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  4517  001A46  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  4518                           
  4519                           ;doprnt.c: 559: continue;
  4520  001A48  EFD9  F00D         	goto	l4218
  4521  001A4C                     l4164:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4525  001A4C  0E00               	movlw	0
  4526  001A4E  6FBF               	movwf	sprintf@flag& (0+255),b
  4527                           
  4528                           ;doprnt.c: 661: switch(c = *f++) {
  4529  001A50  EF36  F00D         	goto	l4176
  4530  001A54                     l4166:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  4534  001A54  C0C1  FFD9         	movff	sprintf@ap,fsr2l
  4535  001A58  C0C2  FFDA         	movff	sprintf@ap+1,fsr2h
  4536  001A5C  50DF               	movf	indf2,w,c
  4537  001A5E  6FC5               	movwf	sprintf@c& (0+255),b
  4538  001A60                     
  4539                           ; BSR set to: 0
  4540  001A60  0E02               	movlw	2
  4541  001A62  27C1               	addwf	sprintf@ap& (0+255),f,b
  4542  001A64  0E00               	movlw	0
  4543  001A66  23C2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4544  001A68  EF1C  F00D         	goto	l4160
  4545  001A6C                     l4176:
  4546                           
  4547                           ; BSR set to: 0
  4548  001A6C  C0BA  FFF6         	movff	sprintf@f,tblptrl
  4549  001A70  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  4550  001A74  4BBA               	infsnz	sprintf@f& (0+255),f,b
  4551  001A76  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  4552  001A78                     	if	0	;tblptru may be non-zero
  4553  001A78                     	endif
  4554  001A78                     	if	0	;tblptru may be non-zero
  4555  001A78                     	endif
  4556  001A78  0008               	tblrd		*
  4557  001A7A  CFF5 F0C5          	movff	tablat,sprintf@c
  4558  001A7E  51C5               	movf	sprintf@c& (0+255),w,b
  4559                           
  4560                           ; Switch size 1, requested type "simple"
  4561                           ; Number of cases is 4, Range of values is 0 to 105
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte           13     7 (average)
  4565                           ;	Chosen strategy is simple_byte
  4566  001A80  0A00               	xorlw	0	; case 0
  4567  001A82  B4D8               	btfsc	status,2,c
  4568  001A84  EFEA  F00D         	goto	l4220
  4569  001A88  0A63               	xorlw	99	; case 99
  4570  001A8A  B4D8               	btfsc	status,2,c
  4571  001A8C  EF2A  F00D         	goto	l4166
  4572  001A90  0A07               	xorlw	7	; case 100
  4573  001A92  B4D8               	btfsc	status,2,c
  4574  001A94  EF52  F00D         	goto	l4178
  4575  001A98  0A0D               	xorlw	13	; case 105
  4576  001A9A  B4D8               	btfsc	status,2,c
  4577  001A9C  EF52  F00D         	goto	l4178
  4578  001AA0  EF1C  F00D         	goto	l4160
  4579  001AA4                     l4178:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  4583  001AA4  C0C1  FFD9         	movff	sprintf@ap,fsr2l
  4584  001AA8  C0C2  FFDA         	movff	sprintf@ap+1,fsr2h
  4585  001AAC  CFDE F0C3          	movff	postinc2,sprintf@val
  4586  001AB0  CFDD F0C4          	movff	postdec2,sprintf@val+1
  4587  001AB4                     
  4588                           ; BSR set to: 0
  4589  001AB4  0E02               	movlw	2
  4590  001AB6  27C1               	addwf	sprintf@ap& (0+255),f,b
  4591  001AB8  0E00               	movlw	0
  4592  001ABA  23C2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4593  001ABC                     
  4594                           ; BSR set to: 0
  4595                           ;doprnt.c: 1287: if((int)val < 0) {
  4596  001ABC  BFC4               	btfsc	(sprintf@val+1)& (0+255),7,b
  4597  001ABE  EF65  F00D         	goto	u4110
  4598  001AC2  EF63  F00D         	goto	u4111
  4599  001AC6                     u4111:
  4600  001AC6  EF6B  F00D         	goto	l4188
  4601  001ACA                     u4110:
  4602  001ACA                     
  4603                           ; BSR set to: 0
  4604                           ;doprnt.c: 1288: flag |= 0x03;
  4605  001ACA  0E03               	movlw	3
  4606  001ACC  13BF               	iorwf	sprintf@flag& (0+255),f,b
  4607  001ACE                     
  4608                           ; BSR set to: 0
  4609                           ;doprnt.c: 1289: val = -val;
  4610  001ACE  6DC3               	negf	sprintf@val& (0+255),b
  4611  001AD0  1FC4               	comf	(sprintf@val+1)& (0+255),f,b
  4612  001AD2  B0D8               	btfsc	status,0,c
  4613  001AD4  2BC4               	incf	(sprintf@val+1)& (0+255),f,b
  4614  001AD6                     l4188:
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  4618  001AD6  0E01               	movlw	1
  4619  001AD8  6FC5               	movwf	sprintf@c& (0+255),b
  4620  001ADA                     l4194:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;doprnt.c: 1332: if(val < dpowers[c])
  4624  001ADA  51C5               	movf	sprintf@c& (0+255),w,b
  4625  001ADC  0D02               	mullw	2
  4626  001ADE  0E01               	movlw	low _dpowers
  4627  001AE0  24F3               	addwf	243,w,c
  4628  001AE2  6EF6               	movwf	tblptrl,c
  4629  001AE4  0E08               	movlw	high _dpowers
  4630  001AE6  20F4               	addwfc	244,w,c
  4631  001AE8  6EF7               	movwf	tblptrh,c
  4632  001AEA                     	if	0	;There are less than 3 active tblptr bytes
  4633  001AEA                     	endif
  4634  001AEA  0009               	tblrd		*+
  4635  001AEC  50F5               	movf	tablat,w,c
  4636  001AEE  5DC3               	subwf	sprintf@val& (0+255),w,b
  4637  001AF0  0009               	tblrd		*+
  4638  001AF2  50F5               	movf	tablat,w,c
  4639  001AF4  59C4               	subwfb	(sprintf@val+1)& (0+255),w,b
  4640  001AF6  B0D8               	btfsc	status,0,c
  4641  001AF8  EF80  F00D         	goto	u4121
  4642  001AFC  EF82  F00D         	goto	u4120
  4643  001B00                     u4121:
  4644  001B00  EF84  F00D         	goto	l4198
  4645  001B04                     u4120:
  4646  001B04  EF8E  F00D         	goto	l4202
  4647  001B08                     l4198:
  4648                           
  4649                           ; BSR set to: 0
  4650  001B08  2BC5               	incf	sprintf@c& (0+255),f,b
  4651  001B0A                     
  4652                           ; BSR set to: 0
  4653  001B0A  0E05               	movlw	5
  4654  001B0C  19C5               	xorwf	sprintf@c& (0+255),w,b
  4655  001B0E  A4D8               	btfss	status,2,c
  4656  001B10  EF8C  F00D         	goto	u4131
  4657  001B14  EF8E  F00D         	goto	u4130
  4658  001B18                     u4131:
  4659  001B18  EF6D  F00D         	goto	l4194
  4660  001B1C                     u4130:
  4661  001B1C                     l4202:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4665  001B1C  C0BF  F0BE         	movff	sprintf@flag,??_sprintf
  4666  001B20  0E03               	movlw	3
  4667  001B22  17BE               	andwf	??_sprintf& (0+255),f,b
  4668  001B24  B4D8               	btfsc	status,2,c
  4669  001B26  EF97  F00D         	goto	u4141
  4670  001B2A  EF99  F00D         	goto	u4140
  4671  001B2E                     u4141:
  4672  001B2E  EFA1  F00D         	goto	l4208
  4673  001B32                     u4140:
  4674  001B32                     
  4675                           ; BSR set to: 0
  4676                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4677  001B32  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  4678  001B36  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  4679  001B3A  0E2D               	movlw	45
  4680  001B3C  6EDF               	movwf	indf2,c
  4681  001B3E                     
  4682                           ; BSR set to: 0
  4683  001B3E  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  4684  001B40  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  4685  001B42                     l4208:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4689  001B42  C0C5  F0C0         	movff	sprintf@c,sprintf@prec
  4690                           
  4691                           ;doprnt.c: 1500: while(prec--) {
  4692  001B46  EFD0  F00D         	goto	l4216
  4693  001B4A                     l4210:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4697  001B4A  51C0               	movf	sprintf@prec& (0+255),w,b
  4698  001B4C  0D02               	mullw	2
  4699  001B4E  0E01               	movlw	low _dpowers
  4700  001B50  24F3               	addwf	243,w,c
  4701  001B52  6EF6               	movwf	tblptrl,c
  4702  001B54  0E08               	movlw	high _dpowers
  4703  001B56  20F4               	addwfc	244,w,c
  4704  001B58  6EF7               	movwf	tblptrh,c
  4705  001B5A                     	if	0	;There are less than 3 active tblptr bytes
  4706  001B5A                     	endif
  4707  001B5A  0009               	tblrd		*+
  4708  001B5C  CFF5 F0AE          	movff	tablat,___lwdiv@divisor
  4709  001B60  000A               	tblrd		*-
  4710  001B62  CFF5 F0AF          	movff	tablat,___lwdiv@divisor+1
  4711  001B66  C0C3  F0AC         	movff	sprintf@val,___lwdiv@dividend
  4712  001B6A  C0C4  F0AD         	movff	sprintf@val+1,___lwdiv@dividend+1
  4713  001B6E  EC7B  F013         	call	___lwdiv	;wreg free
  4714  001B72  C0AC  F0B3         	movff	?___lwdiv,___lwmod@dividend
  4715  001B76  C0AD  F0B4         	movff	?___lwdiv+1,___lwmod@dividend+1
  4716  001B7A  0E00               	movlw	0
  4717  001B7C  0100               	movlb	0	; () banked
  4718  001B7E  6FB6               	movwf	(___lwmod@divisor+1)& (0+255),b
  4719  001B80  0E0A               	movlw	10
  4720  001B82  6FB5               	movwf	___lwmod@divisor& (0+255),b
  4721  001B84  EC28  F014         	call	___lwmod	;wreg free
  4722  001B88  0100               	movlb	0	; () banked
  4723  001B8A  51B3               	movf	?___lwmod& (0+255),w,b
  4724  001B8C  0F30               	addlw	48
  4725  001B8E  6FC5               	movwf	sprintf@c& (0+255),b
  4726  001B90                     
  4727                           ; BSR set to: 0
  4728                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  4729  001B90  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  4730  001B94  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  4731  001B98  C0C5  FFDF         	movff	sprintf@c,indf2
  4732  001B9C                     
  4733                           ; BSR set to: 0
  4734  001B9C  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  4735  001B9E  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  4736  001BA0                     l4216:
  4737                           
  4738                           ; BSR set to: 0
  4739  001BA0  07C0               	decf	sprintf@prec& (0+255),f,b
  4740  001BA2  29C0               	incf	sprintf@prec& (0+255),w,b
  4741  001BA4  A4D8               	btfss	status,2,c
  4742  001BA6  EFD7  F00D         	goto	u4151
  4743  001BAA  EFD9  F00D         	goto	u4150
  4744  001BAE                     u4151:
  4745  001BAE  EFA5  F00D         	goto	l4210
  4746  001BB2                     u4150:
  4747  001BB2                     l4218:
  4748                           
  4749                           ; BSR set to: 0
  4750  001BB2  C0BA  FFF6         	movff	sprintf@f,tblptrl
  4751  001BB6  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  4752  001BBA  4BBA               	infsnz	sprintf@f& (0+255),f,b
  4753  001BBC  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  4754  001BBE                     	if	0	;tblptru may be non-zero
  4755  001BBE                     	endif
  4756  001BBE                     	if	0	;tblptru may be non-zero
  4757  001BBE                     	endif
  4758  001BBE  0008               	tblrd		*
  4759  001BC0  CFF5 F0C5          	movff	tablat,sprintf@c
  4760  001BC4  51C5               	movf	sprintf@c& (0+255),w,b
  4761  001BC6  A4D8               	btfss	status,2,c
  4762  001BC8  EFE8  F00D         	goto	u4161
  4763  001BCC  EFEA  F00D         	goto	u4160
  4764  001BD0                     u4161:
  4765  001BD0  EF13  F00D         	goto	l4158
  4766  001BD4                     u4160:
  4767  001BD4                     l4220:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;doprnt.c: 1564: *sp = 0;
  4771  001BD4  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  4772  001BD8  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  4773  001BDC  0E00               	movlw	0
  4774  001BDE  6EDF               	movwf	indf2,c
  4775  001BE0                     
  4776                           ; BSR set to: 0
  4777  001BE0  0012               	return		;funcret
  4778  001BE2                     __end_of_sprintf:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function ___lwmod *****************
  4782 ;; Defined at:
  4783 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  dividend        2    7[BANK0 ] unsigned int 
  4786 ;;  divisor         2    9[BANK0 ] unsigned int 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  counter         1   11[BANK0 ] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2    7[BANK0 ] unsigned int 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         0       4       0       0       0       0       0       0       0
  4799 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4802 ;;Total ram usage:        5 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    6
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_sprintf
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text19
  4813  002850                     __ptext19:
  4814                           	callstack 0
  4815  002850                     ___lwmod:
  4816                           	callstack 22
  4817  002850  0100               	movlb	0	; () banked
  4818  002852  51B5               	movf	___lwmod@divisor& (0+255),w,b
  4819  002854  11B6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4820  002856  B4D8               	btfsc	status,2,c
  4821  002858  EF30  F014         	goto	u4061
  4822  00285C  EF32  F014         	goto	u4060
  4823  002860                     u4061:
  4824  002860  EF56  F014         	goto	l824
  4825  002864                     u4060:
  4826  002864                     
  4827                           ; BSR set to: 0
  4828  002864  0E01               	movlw	1
  4829  002866  6FB7               	movwf	___lwmod@counter& (0+255),b
  4830  002868  EF3A  F014         	goto	l4126
  4831  00286C                     l4124:
  4832                           
  4833                           ; BSR set to: 0
  4834  00286C  90D8               	bcf	status,0,c
  4835  00286E  37B5               	rlcf	___lwmod@divisor& (0+255),f,b
  4836  002870  37B6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4837  002872  2BB7               	incf	___lwmod@counter& (0+255),f,b
  4838  002874                     l4126:
  4839                           
  4840                           ; BSR set to: 0
  4841  002874  AFB6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4842  002876  EF3F  F014         	goto	u4071
  4843  00287A  EF41  F014         	goto	u4070
  4844  00287E                     u4071:
  4845  00287E  EF36  F014         	goto	l4124
  4846  002882                     u4070:
  4847  002882                     l4128:
  4848                           
  4849                           ; BSR set to: 0
  4850  002882  51B5               	movf	___lwmod@divisor& (0+255),w,b
  4851  002884  5DB3               	subwf	___lwmod@dividend& (0+255),w,b
  4852  002886  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4853  002888  59B4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4854  00288A  A0D8               	btfss	status,0,c
  4855  00288C  EF4A  F014         	goto	u4081
  4856  002890  EF4C  F014         	goto	u4080
  4857  002894                     u4081:
  4858  002894  EF50  F014         	goto	l4132
  4859  002898                     u4080:
  4860  002898                     
  4861                           ; BSR set to: 0
  4862  002898  51B5               	movf	___lwmod@divisor& (0+255),w,b
  4863  00289A  5FB3               	subwf	___lwmod@dividend& (0+255),f,b
  4864  00289C  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4865  00289E  5BB4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4866  0028A0                     l4132:
  4867                           
  4868                           ; BSR set to: 0
  4869  0028A0  90D8               	bcf	status,0,c
  4870  0028A2  33B6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4871  0028A4  33B5               	rrcf	___lwmod@divisor& (0+255),f,b
  4872  0028A6                     
  4873                           ; BSR set to: 0
  4874  0028A6  2FB7               	decfsz	___lwmod@counter& (0+255),f,b
  4875  0028A8  EF41  F014         	goto	l4128
  4876  0028AC                     l824:
  4877                           
  4878                           ; BSR set to: 0
  4879  0028AC  C0B3  F0B3         	movff	___lwmod@dividend,?___lwmod
  4880  0028B0  C0B4  F0B4         	movff	___lwmod@dividend+1,?___lwmod+1
  4881  0028B4                     
  4882                           ; BSR set to: 0
  4883  0028B4  0012               	return		;funcret
  4884  0028B6                     __end_of___lwmod:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function ___lwdiv *****************
  4888 ;; Defined at:
  4889 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  dividend        2    0[BANK0 ] unsigned int 
  4892 ;;  divisor         2    2[BANK0 ] unsigned int 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  quotient        2    5[BANK0 ] unsigned int 
  4895 ;;  counter         1    4[BANK0 ] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2    0[BANK0 ] unsigned int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4905 ;;      Params:         0       4       0       0       0       0       0       0       0
  4906 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4908 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4909 ;;Total ram usage:        7 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    6
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_sprintf
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text20
  4920  0026F6                     __ptext20:
  4921                           	callstack 0
  4922  0026F6                     ___lwdiv:
  4923                           	callstack 22
  4924  0026F6  0E00               	movlw	0
  4925  0026F8  0100               	movlb	0	; () banked
  4926  0026FA  6FB2               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4927  0026FC  0E00               	movlw	0
  4928  0026FE  6FB1               	movwf	___lwdiv@quotient& (0+255),b
  4929  002700                     
  4930                           ; BSR set to: 0
  4931  002700  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  4932  002702  11AF               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4933  002704  B4D8               	btfsc	status,2,c
  4934  002706  EF87  F013         	goto	u4031
  4935  00270A  EF89  F013         	goto	u4030
  4936  00270E                     u4031:
  4937  00270E  EFB1  F013         	goto	l814
  4938  002712                     u4030:
  4939  002712                     
  4940                           ; BSR set to: 0
  4941  002712  0E01               	movlw	1
  4942  002714  6FB0               	movwf	___lwdiv@counter& (0+255),b
  4943  002716  EF91  F013         	goto	l4106
  4944  00271A                     l4104:
  4945                           
  4946                           ; BSR set to: 0
  4947  00271A  90D8               	bcf	status,0,c
  4948  00271C  37AE               	rlcf	___lwdiv@divisor& (0+255),f,b
  4949  00271E  37AF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4950  002720  2BB0               	incf	___lwdiv@counter& (0+255),f,b
  4951  002722                     l4106:
  4952                           
  4953                           ; BSR set to: 0
  4954  002722  AFAF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4955  002724  EF96  F013         	goto	u4041
  4956  002728  EF98  F013         	goto	u4040
  4957  00272C                     u4041:
  4958  00272C  EF8D  F013         	goto	l4104
  4959  002730                     u4040:
  4960  002730                     l4108:
  4961                           
  4962                           ; BSR set to: 0
  4963  002730  90D8               	bcf	status,0,c
  4964  002732  37B1               	rlcf	___lwdiv@quotient& (0+255),f,b
  4965  002734  37B2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4966  002736                     
  4967                           ; BSR set to: 0
  4968  002736  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  4969  002738  5DAC               	subwf	___lwdiv@dividend& (0+255),w,b
  4970  00273A  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4971  00273C  59AD               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4972  00273E  A0D8               	btfss	status,0,c
  4973  002740  EFA4  F013         	goto	u4051
  4974  002744  EFA6  F013         	goto	u4050
  4975  002748                     u4051:
  4976  002748  EFAB  F013         	goto	l4116
  4977  00274C                     u4050:
  4978  00274C                     
  4979                           ; BSR set to: 0
  4980  00274C  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  4981  00274E  5FAC               	subwf	___lwdiv@dividend& (0+255),f,b
  4982  002750  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4983  002752  5BAD               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4984  002754                     
  4985                           ; BSR set to: 0
  4986  002754  81B1               	bsf	___lwdiv@quotient& (0+255),0,b
  4987  002756                     l4116:
  4988                           
  4989                           ; BSR set to: 0
  4990  002756  90D8               	bcf	status,0,c
  4991  002758  33AF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4992  00275A  33AE               	rrcf	___lwdiv@divisor& (0+255),f,b
  4993  00275C                     
  4994                           ; BSR set to: 0
  4995  00275C  2FB0               	decfsz	___lwdiv@counter& (0+255),f,b
  4996  00275E  EF98  F013         	goto	l4108
  4997  002762                     l814:
  4998                           
  4999                           ; BSR set to: 0
  5000  002762  C0B1  F0AC         	movff	___lwdiv@quotient,?___lwdiv
  5001  002766  C0B2  F0AD         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5002  00276A                     
  5003                           ; BSR set to: 0
  5004  00276A  0012               	return		;funcret
  5005  00276C                     __end_of___lwdiv:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function _map *****************
  5009 ;; Defined at:
  5010 ;;		line 381 in file "Main_Robot_I2C_Serial_LCD.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  x               2   14[BANK0 ] int 
  5013 ;;  In_Min          2   16[BANK0 ] int 
  5014 ;;  In_Max          2   18[BANK0 ] int 
  5015 ;;  Out_Min         2   20[BANK0 ] int 
  5016 ;;  Out_Max         2   22[BANK0 ] int 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2   14[BANK0 ] int 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5028 ;;      Params:         0      10       0       0       0       0       0       0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5031 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5032 ;;Total ram usage:       10 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    7
  5035 ;; This function calls:
  5036 ;;		___awdiv
  5037 ;;		___wmul
  5038 ;; This function is called by:
  5039 ;;		_mover_servo
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text21
  5044  002AB2                     __ptext21:
  5045                           	callstack 0
  5046  002AB2                     _map:
  5047                           	callstack 21
  5048  002AB2                     
  5049                           ;Main_Robot_I2C_Serial_LCD.c: 382: return ((x - In_Min) * ((Out_Max - Out_Min) / (In_Max
      +                           - In_Min))) + Out_Min;
  5050  002AB2  0100               	movlb	0	; () banked
  5051  002AB4  51BC               	movf	map@In_Min& (0+255),w,b
  5052  002AB6  5DBA               	subwf	map@x& (0+255),w,b
  5053  002AB8  6FB4               	movwf	___wmul@multiplier& (0+255),b
  5054  002ABA  51BD               	movf	(map@In_Min+1)& (0+255),w,b
  5055  002ABC  59BB               	subwfb	(map@x+1)& (0+255),w,b
  5056  002ABE  6FB5               	movwf	(___wmul@multiplier+1)& (0+255),b
  5057  002AC0  51BC               	movf	map@In_Min& (0+255),w,b
  5058  002AC2  5DBE               	subwf	map@In_Max& (0+255),w,b
  5059  002AC4  6FAE               	movwf	___awdiv@divisor& (0+255),b
  5060  002AC6  51BD               	movf	(map@In_Min+1)& (0+255),w,b
  5061  002AC8  59BF               	subwfb	(map@In_Max+1)& (0+255),w,b
  5062  002ACA  6FAF               	movwf	(___awdiv@divisor+1)& (0+255),b
  5063  002ACC  51C0               	movf	map@Out_Min& (0+255),w,b
  5064  002ACE  5DC2               	subwf	map@Out_Max& (0+255),w,b
  5065  002AD0  6FAC               	movwf	___awdiv@dividend& (0+255),b
  5066  002AD2  51C1               	movf	(map@Out_Min+1)& (0+255),w,b
  5067  002AD4  59C3               	subwfb	(map@Out_Max+1)& (0+255),w,b
  5068  002AD6  6FAD               	movwf	(___awdiv@dividend+1)& (0+255),b
  5069  002AD8  EC66  F010         	call	___awdiv	;wreg free
  5070  002ADC  C0AC  F0B6         	movff	?___awdiv,___wmul@multiplicand
  5071  002AE0  C0AD  F0B7         	movff	?___awdiv+1,___wmul@multiplicand+1
  5072  002AE4  EC3D  F016         	call	___wmul	;wreg free
  5073  002AE8  0100               	movlb	0	; () banked
  5074  002AEA  51C0               	movf	map@Out_Min& (0+255),w,b
  5075  002AEC  25B4               	addwf	?___wmul& (0+255),w,b
  5076  002AEE  6FBA               	movwf	?_map& (0+255),b
  5077  002AF0  51C1               	movf	(map@Out_Min+1)& (0+255),w,b
  5078  002AF2  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  5079  002AF4  6FBB               	movwf	(?_map+1)& (0+255),b
  5080  002AF6                     
  5081                           ; BSR set to: 0
  5082  002AF6  0012               	return		;funcret
  5083  002AF8                     __end_of_map:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function ___wmul *****************
  5087 ;; Defined at:
  5088 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  multiplier      2    8[BANK0 ] unsigned int 
  5091 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  product         2   12[BANK0 ] unsigned int 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  2    8[BANK0 ] unsigned int 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0, prodl, prodh
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5103 ;;      Params:         0       4       0       0       0       0       0       0       0
  5104 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5106 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5107 ;;Total ram usage:        6 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    6
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_map
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text22
  5118  002C7A                     __ptext22:
  5119                           	callstack 0
  5120  002C7A                     ___wmul:
  5121                           	callstack 21
  5122  002C7A  0100               	movlb	0	; () banked
  5123  002C7C  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5124  002C7E  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5125  002C80  CFF3 F0B8          	movff	prodl,___wmul@product
  5126  002C84  CFF4 F0B9          	movff	prodh,___wmul@product+1
  5127  002C88  51B4               	movf	___wmul@multiplier& (0+255),w,b
  5128  002C8A  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5129  002C8C  50F3               	movf	243,w,c
  5130  002C8E  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5131  002C90  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5132  002C92  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  5133  002C94  50F3               	movf	243,w,c
  5134  002C96  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  5135  002C98                     
  5136                           ; BSR set to: 0
  5137  002C98  C0B8  F0B4         	movff	___wmul@product,?___wmul
  5138  002C9C  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  5139  002CA0                     
  5140                           ; BSR set to: 0
  5141  002CA0  0012               	return		;funcret
  5142  002CA2                     __end_of___wmul:
  5143                           	callstack 0
  5144                           
  5145 ;; *************** function ___awdiv *****************
  5146 ;; Defined at:
  5147 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  dividend        2    0[BANK0 ] int 
  5150 ;;  divisor         2    2[BANK0 ] int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  quotient        2    6[BANK0 ] int 
  5153 ;;  sign            1    5[BANK0 ] unsigned char 
  5154 ;;  counter         1    4[BANK0 ] unsigned char 
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2    0[BANK0 ] int 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5164 ;;      Params:         0       4       0       0       0       0       0       0       0
  5165 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5167 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        8 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    6
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_map
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text23
  5179  0020CC                     __ptext23:
  5180                           	callstack 0
  5181  0020CC                     ___awdiv:
  5182                           	callstack 21
  5183  0020CC  0E00               	movlw	0
  5184  0020CE  0100               	movlb	0	; () banked
  5185  0020D0  6FB1               	movwf	___awdiv@sign& (0+255),b
  5186  0020D2                     
  5187                           ; BSR set to: 0
  5188  0020D2  BFAF               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  5189  0020D4  EF70  F010         	goto	u3970
  5190  0020D8  EF6E  F010         	goto	u3971
  5191  0020DC                     u3971:
  5192  0020DC  EF76  F010         	goto	l4062
  5193  0020E0                     u3970:
  5194  0020E0                     
  5195                           ; BSR set to: 0
  5196  0020E0  6DAE               	negf	___awdiv@divisor& (0+255),b
  5197  0020E2  1FAF               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5198  0020E4  B0D8               	btfsc	status,0,c
  5199  0020E6  2BAF               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5200  0020E8                     
  5201                           ; BSR set to: 0
  5202  0020E8  0E01               	movlw	1
  5203  0020EA  6FB1               	movwf	___awdiv@sign& (0+255),b
  5204  0020EC                     l4062:
  5205                           
  5206                           ; BSR set to: 0
  5207  0020EC  BFAD               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  5208  0020EE  EF7D  F010         	goto	u3980
  5209  0020F2  EF7B  F010         	goto	u3981
  5210  0020F6                     u3981:
  5211  0020F6  EF83  F010         	goto	l4068
  5212  0020FA                     u3980:
  5213  0020FA                     
  5214                           ; BSR set to: 0
  5215  0020FA  6DAC               	negf	___awdiv@dividend& (0+255),b
  5216  0020FC  1FAD               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5217  0020FE  B0D8               	btfsc	status,0,c
  5218  002100  2BAD               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5219  002102                     
  5220                           ; BSR set to: 0
  5221  002102  0E01               	movlw	1
  5222  002104  1BB1               	xorwf	___awdiv@sign& (0+255),f,b
  5223  002106                     l4068:
  5224                           
  5225                           ; BSR set to: 0
  5226  002106  0E00               	movlw	0
  5227  002108  6FB3               	movwf	(___awdiv@quotient+1)& (0+255),b
  5228  00210A  0E00               	movlw	0
  5229  00210C  6FB2               	movwf	___awdiv@quotient& (0+255),b
  5230  00210E                     
  5231                           ; BSR set to: 0
  5232  00210E  51AE               	movf	___awdiv@divisor& (0+255),w,b
  5233  002110  11AF               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5234  002112  B4D8               	btfsc	status,2,c
  5235  002114  EF8E  F010         	goto	u3991
  5236  002118  EF90  F010         	goto	u3990
  5237  00211C                     u3991:
  5238  00211C  EFB8  F010         	goto	l4090
  5239  002120                     u3990:
  5240  002120                     
  5241                           ; BSR set to: 0
  5242  002120  0E01               	movlw	1
  5243  002122  6FB0               	movwf	___awdiv@counter& (0+255),b
  5244  002124  EF98  F010         	goto	l4076
  5245  002128                     l4074:
  5246                           
  5247                           ; BSR set to: 0
  5248  002128  90D8               	bcf	status,0,c
  5249  00212A  37AE               	rlcf	___awdiv@divisor& (0+255),f,b
  5250  00212C  37AF               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5251  00212E  2BB0               	incf	___awdiv@counter& (0+255),f,b
  5252  002130                     l4076:
  5253                           
  5254                           ; BSR set to: 0
  5255  002130  AFAF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5256  002132  EF9D  F010         	goto	u4001
  5257  002136  EF9F  F010         	goto	u4000
  5258  00213A                     u4001:
  5259  00213A  EF94  F010         	goto	l4074
  5260  00213E                     u4000:
  5261  00213E                     l4078:
  5262                           
  5263                           ; BSR set to: 0
  5264  00213E  90D8               	bcf	status,0,c
  5265  002140  37B2               	rlcf	___awdiv@quotient& (0+255),f,b
  5266  002142  37B3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5267  002144                     
  5268                           ; BSR set to: 0
  5269  002144  51AE               	movf	___awdiv@divisor& (0+255),w,b
  5270  002146  5DAC               	subwf	___awdiv@dividend& (0+255),w,b
  5271  002148  51AF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5272  00214A  59AD               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5273  00214C  A0D8               	btfss	status,0,c
  5274  00214E  EFAB  F010         	goto	u4011
  5275  002152  EFAD  F010         	goto	u4010
  5276  002156                     u4011:
  5277  002156  EFB2  F010         	goto	l4086
  5278  00215A                     u4010:
  5279  00215A                     
  5280                           ; BSR set to: 0
  5281  00215A  51AE               	movf	___awdiv@divisor& (0+255),w,b
  5282  00215C  5FAC               	subwf	___awdiv@dividend& (0+255),f,b
  5283  00215E  51AF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5284  002160  5BAD               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5285  002162                     
  5286                           ; BSR set to: 0
  5287  002162  81B2               	bsf	___awdiv@quotient& (0+255),0,b
  5288  002164                     l4086:
  5289                           
  5290                           ; BSR set to: 0
  5291  002164  90D8               	bcf	status,0,c
  5292  002166  33AF               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5293  002168  33AE               	rrcf	___awdiv@divisor& (0+255),f,b
  5294  00216A                     
  5295                           ; BSR set to: 0
  5296  00216A  2FB0               	decfsz	___awdiv@counter& (0+255),f,b
  5297  00216C  EF9F  F010         	goto	l4078
  5298  002170                     l4090:
  5299                           
  5300                           ; BSR set to: 0
  5301  002170  51B1               	movf	___awdiv@sign& (0+255),w,b
  5302  002172  B4D8               	btfsc	status,2,c
  5303  002174  EFBE  F010         	goto	u4021
  5304  002178  EFC0  F010         	goto	u4020
  5305  00217C                     u4021:
  5306  00217C  EFC4  F010         	goto	l4094
  5307  002180                     u4020:
  5308  002180                     
  5309                           ; BSR set to: 0
  5310  002180  6DB2               	negf	___awdiv@quotient& (0+255),b
  5311  002182  1FB3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5312  002184  B0D8               	btfsc	status,0,c
  5313  002186  2BB3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5314  002188                     l4094:
  5315                           
  5316                           ; BSR set to: 0
  5317  002188  C0B2  F0AC         	movff	___awdiv@quotient,?___awdiv
  5318  00218C  C0B3  F0AD         	movff	___awdiv@quotient+1,?___awdiv+1
  5319  002190                     
  5320                           ; BSR set to: 0
  5321  002190  0012               	return		;funcret
  5322  002192                     __end_of___awdiv:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function _PrintDataLCD *****************
  5326 ;; Defined at:
  5327 ;;		line 427 in file "Main_Robot_I2C_Serial_LCD.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    8
  5348 ;; This function calls:
  5349 ;;		_SettingsLCD
  5350 ;;		_WriteLCD
  5351 ;;		_strlen
  5352 ;; This function is called by:
  5353 ;;		_settings
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text24
  5358  002970                     __ptext24:
  5359                           	callstack 0
  5360  002970                     _PrintDataLCD:
  5361                           	callstack 21
  5362  002970                     
  5363                           ;Main_Robot_I2C_Serial_LCD.c: 428: SettingsLCD(0x80);
  5364  002970  0E80               	movlw	128
  5365  002972  EC85  F016         	call	_SettingsLCD
  5366                           
  5367                           ;Main_Robot_I2C_Serial_LCD.c: 429: SettingsLCD(0x01);
  5368  002976  0E01               	movlw	1
  5369  002978  EC85  F016         	call	_SettingsLCD
  5370  00297C                     
  5371                           ;Main_Robot_I2C_Serial_LCD.c: 430: for(i=0; i<strlen(texto_LCD); i++){
  5372  00297C  0E00               	movlw	0
  5373  00297E  6E3B               	movwf	(_i+1)^0,c
  5374  002980  0E00               	movlw	0
  5375  002982  6E3A               	movwf	_i^0,c
  5376  002984  EFCF  F014         	goto	l4522
  5377  002988                     l4518:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;Main_Robot_I2C_Serial_LCD.c: 431: WriteLCD(texto_LCD[i]);
  5381  002988  0E96               	movlw	low _texto_LCD
  5382  00298A  243A               	addwf	_i^0,w,c
  5383  00298C  6ED9               	movwf	fsr2l,c
  5384  00298E  0E00               	movlw	high _texto_LCD
  5385  002990  203B               	addwfc	(_i+1)^0,w,c
  5386  002992  6EDA               	movwf	fsr2h,c
  5387  002994  50DF               	movf	indf2,w,c
  5388  002996  EC77  F016         	call	_WriteLCD
  5389  00299A  4A3A               	infsnz	_i^0,f,c
  5390  00299C  2A3B               	incf	(_i+1)^0,f,c
  5391  00299E                     l4522:
  5392  00299E  0E96               	movlw	low _texto_LCD
  5393  0029A0  0100               	movlb	0	; () banked
  5394  0029A2  6FAC               	movwf	strlen@s& (0+255),b
  5395  0029A4  0E00               	movlw	high _texto_LCD
  5396  0029A6  6FAD               	movwf	(strlen@s+1)& (0+255),b
  5397  0029A8  ECBC  F015         	call	_strlen	;wreg free
  5398  0029AC  0100               	movlb	0	; () banked
  5399  0029AE  51AC               	movf	?_strlen& (0+255),w,b
  5400  0029B0  5C3A               	subwf	_i^0,w,c
  5401  0029B2  51AD               	movf	(?_strlen+1)& (0+255),w,b
  5402  0029B4  583B               	subwfb	(_i+1)^0,w,c
  5403  0029B6  A0D8               	btfss	status,0,c
  5404  0029B8  EFE0  F014         	goto	u4601
  5405  0029BC  EFE2  F014         	goto	u4600
  5406  0029C0                     u4601:
  5407  0029C0  EFC4  F014         	goto	l4518
  5408  0029C4                     u4600:
  5409  0029C4                     
  5410                           ; BSR set to: 0
  5411  0029C4  0012               	return		;funcret
  5412  0029C6                     __end_of_PrintDataLCD:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _strlen *****************
  5416 ;; Defined at:
  5417 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5420 ;;		 -> texto_LCD(16), text(40), 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  5423 ;;		 -> texto_LCD(16), text(40), 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  2    0[BANK0 ] unsigned int 
  5426 ;; Registers used:
  5427 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5433 ;;      Params:         0       2       0       0       0       0       0       0       0
  5434 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5436 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5437 ;;Total ram usage:        4 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    6
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_start
  5444 ;;		_PrintDataLCD
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text25
  5449  002B78                     __ptext25:
  5450                           	callstack 0
  5451  002B78                     _strlen:
  5452                           	callstack 22
  5453  002B78  C0AC  F0AE         	movff	strlen@s,strlen@cp
  5454  002B7C  C0AD  F0AF         	movff	strlen@s+1,strlen@cp+1
  5455  002B80  EFC5  F015         	goto	l3784
  5456  002B84                     l3782:
  5457  002B84  0100               	movlb	0	; () banked
  5458  002B86  4BAE               	infsnz	strlen@cp& (0+255),f,b
  5459  002B88  2BAF               	incf	(strlen@cp+1)& (0+255),f,b
  5460  002B8A                     l3784:
  5461  002B8A  C0AE  FFD9         	movff	strlen@cp,fsr2l
  5462  002B8E  C0AF  FFDA         	movff	strlen@cp+1,fsr2h
  5463  002B92  50DF               	movf	indf2,w,c
  5464  002B94  A4D8               	btfss	status,2,c
  5465  002B96  EFCF  F015         	goto	u3551
  5466  002B9A  EFD1  F015         	goto	u3550
  5467  002B9E                     u3551:
  5468  002B9E  EFC2  F015         	goto	l3782
  5469  002BA2                     u3550:
  5470  002BA2  0100               	movlb	0	; () banked
  5471  002BA4  51AC               	movf	strlen@s& (0+255),w,b
  5472  002BA6  5DAE               	subwf	strlen@cp& (0+255),w,b
  5473  002BA8  6FAC               	movwf	?_strlen& (0+255),b
  5474  002BAA  51AD               	movf	(strlen@s+1)& (0+255),w,b
  5475  002BAC  59AF               	subwfb	(strlen@cp+1)& (0+255),w,b
  5476  002BAE  6FAD               	movwf	(?_strlen+1)& (0+255),b
  5477  002BB0                     
  5478                           ; BSR set to: 0
  5479  002BB0  0012               	return		;funcret
  5480  002BB2                     __end_of_strlen:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function _WriteLCD *****************
  5484 ;; Defined at:
  5485 ;;		line 406 in file "Main_Robot_I2C_Serial_LCD.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  word            1    wreg     unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  word            1    2[BANK0 ] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  1    wreg      void 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2, status,0, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5499 ;;      Params:         0       0       0       0       0       0       0       0       0
  5500 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5502 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5503 ;;Total ram usage:        1 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    7
  5506 ;; This function calls:
  5507 ;;		_LCD
  5508 ;; This function is called by:
  5509 ;;		_PrintDataLCD
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text26
  5514  002CEE                     __ptext26:
  5515                           	callstack 0
  5516  002CEE                     _WriteLCD:
  5517                           	callstack 21
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;incstack = 0
  5521                           ;WriteLCD@word stored from wreg
  5522  002CEE  0100               	movlb	0	; () banked
  5523  002CF0  6FAE               	movwf	WriteLCD@word& (0+255),b
  5524  002CF2                     
  5525                           ;Main_Robot_I2C_Serial_LCD.c: 407: LATE1 = 1;
  5526  002CF2  828D               	bsf	3981,1,c	;volatile
  5527  002CF4                     
  5528                           ;Main_Robot_I2C_Serial_LCD.c: 408: LCD(word >> 4);
  5529  002CF4  0100               	movlb	0	; () banked
  5530  002CF6  39AE               	swapf	WriteLCD@word& (0+255),w,b
  5531  002CF8  0B0F               	andlw	15
  5532  002CFA  EC48  F012         	call	_LCD
  5533                           
  5534                           ;Main_Robot_I2C_Serial_LCD.c: 409: LCD(word & 0x0F);
  5535  002CFE  0100               	movlb	0	; () banked
  5536  002D00  51AE               	movf	WriteLCD@word& (0+255),w,b
  5537  002D02  0B0F               	andlw	15
  5538  002D04  EC48  F012         	call	_LCD
  5539  002D08  0012               	return		;funcret
  5540  002D0A                     __end_of_WriteLCD:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function _SettingsLCD *****************
  5544 ;; Defined at:
  5545 ;;		line 400 in file "Main_Robot_I2C_Serial_LCD.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  word            1    wreg     unsigned char 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  word            1    2[BANK0 ] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0
  5560 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5562 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5563 ;;Total ram usage:        1 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    7
  5566 ;; This function calls:
  5567 ;;		_LCD
  5568 ;; This function is called by:
  5569 ;;		_settings
  5570 ;;		_PrintDataLCD
  5571 ;;		_DisplayShiftRight
  5572 ;;		_DisplayShiftLeft
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text27
  5577  002D0A                     __ptext27:
  5578                           	callstack 0
  5579  002D0A                     _SettingsLCD:
  5580                           	callstack 22
  5581                           
  5582                           ;incstack = 0
  5583                           ;SettingsLCD@word stored from wreg
  5584  002D0A  0100               	movlb	0	; () banked
  5585  002D0C  6FAE               	movwf	SettingsLCD@word& (0+255),b
  5586  002D0E                     
  5587                           ;Main_Robot_I2C_Serial_LCD.c: 401: LATE1 = 0;
  5588  002D0E  928D               	bcf	3981,1,c	;volatile
  5589  002D10                     
  5590                           ;Main_Robot_I2C_Serial_LCD.c: 402: LCD(word >> 4);
  5591  002D10  0100               	movlb	0	; () banked
  5592  002D12  39AE               	swapf	SettingsLCD@word& (0+255),w,b
  5593  002D14  0B0F               	andlw	15
  5594  002D16  EC48  F012         	call	_LCD
  5595                           
  5596                           ;Main_Robot_I2C_Serial_LCD.c: 403: LCD(word & 0x0F);
  5597  002D1A  0100               	movlb	0	; () banked
  5598  002D1C  51AE               	movf	SettingsLCD@word& (0+255),w,b
  5599  002D1E  0B0F               	andlw	15
  5600  002D20  EC48  F012         	call	_LCD
  5601  002D24  0012               	return		;funcret
  5602  002D26                     __end_of_SettingsLCD:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function _LCD *****************
  5606 ;; Defined at:
  5607 ;;		line 412 in file "Main_Robot_I2C_Serial_LCD.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  data            1    wreg     unsigned char 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  data            1    1[BANK0 ] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0
  5622 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5623 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5624 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5625 ;;Total ram usage:        2 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    6
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_SettingsLCD
  5632 ;;		_WriteLCD
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text28
  5637  002490                     __ptext28:
  5638                           	callstack 0
  5639  002490                     _LCD:
  5640                           	callstack 22
  5641                           
  5642                           ;incstack = 0
  5643                           ;LCD@data stored from wreg
  5644  002490  0100               	movlb	0	; () banked
  5645  002492  6FAD               	movwf	LCD@data& (0+255),b
  5646  002494                     
  5647                           ;Main_Robot_I2C_Serial_LCD.c: 413: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5648  002494  0EC8               	movlw	200
  5649  002496                     u4717:
  5650  002496  D000               	nop2	
  5651  002498  2EE8               	decfsz	wreg,f,c
  5652  00249A  D7FD               	bra	u4717
  5653  00249C                     
  5654                           ;Main_Robot_I2C_Serial_LCD.c: 414: LATE0 = 1;
  5655  00249C  808D               	bsf	3981,0,c	;volatile
  5656  00249E                     
  5657                           ;Main_Robot_I2C_Serial_LCD.c: 415: LATDbits.LATD0 = (data & 0x01);
  5658  00249E  C0AD  F0AC         	movff	LCD@data,??_LCD
  5659  0024A2  0E01               	movlw	1
  5660  0024A4  0100               	movlb	0	; () banked
  5661  0024A6  17AC               	andwf	??_LCD& (0+255),f,b
  5662  0024A8  508C               	movf	140,w,c	;volatile
  5663  0024AA  19AC               	xorwf	??_LCD& (0+255),w,b
  5664  0024AC  0BFE               	andlw	-2
  5665  0024AE  19AC               	xorwf	??_LCD& (0+255),w,b
  5666  0024B0  6E8C               	movwf	140,c	;volatile
  5667  0024B2                     
  5668                           ; BSR set to: 0
  5669                           ;Main_Robot_I2C_Serial_LCD.c: 416: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5670  0024B2  0EC8               	movlw	200
  5671  0024B4                     u4727:
  5672  0024B4  D000               	nop2	
  5673  0024B6  2EE8               	decfsz	wreg,f,c
  5674  0024B8  D7FD               	bra	u4727
  5675  0024BA                     
  5676                           ;Main_Robot_I2C_Serial_LCD.c: 417: LATDbits.LATD1 = (data & 0x02) >> 1;
  5677  0024BA  C0AD  F0AC         	movff	LCD@data,??_LCD
  5678  0024BE  0100               	movlb	0	; () banked
  5679  0024C0  90D8               	bcf	status,0,c
  5680  0024C2  33AC               	rrcf	??_LCD& (0+255),f,b
  5681  0024C4  0E01               	movlw	1
  5682  0024C6  17AC               	andwf	??_LCD& (0+255),f,b
  5683  0024C8  47AC               	rlncf	??_LCD& (0+255),f,b
  5684  0024CA  508C               	movf	140,w,c	;volatile
  5685  0024CC  19AC               	xorwf	??_LCD& (0+255),w,b
  5686  0024CE  0BFD               	andlw	-3
  5687  0024D0  19AC               	xorwf	??_LCD& (0+255),w,b
  5688  0024D2  6E8C               	movwf	140,c	;volatile
  5689  0024D4                     
  5690                           ; BSR set to: 0
  5691                           ;Main_Robot_I2C_Serial_LCD.c: 418: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5692  0024D4  0EC8               	movlw	200
  5693  0024D6                     u4737:
  5694  0024D6  D000               	nop2	
  5695  0024D8  2EE8               	decfsz	wreg,f,c
  5696  0024DA  D7FD               	bra	u4737
  5697  0024DC                     
  5698                           ;Main_Robot_I2C_Serial_LCD.c: 419: LATDbits.LATD2 = (data & 0x04) >> 2;
  5699  0024DC  C0AD  F0AC         	movff	LCD@data,??_LCD
  5700  0024E0  0100               	movlb	0	; () banked
  5701  0024E2  90D8               	bcf	status,0,c
  5702  0024E4  33AC               	rrcf	??_LCD& (0+255),f,b
  5703  0024E6  90D8               	bcf	status,0,c
  5704  0024E8  33AC               	rrcf	??_LCD& (0+255),f,b
  5705  0024EA  0E01               	movlw	1
  5706  0024EC  17AC               	andwf	??_LCD& (0+255),f,b
  5707  0024EE  47AC               	rlncf	??_LCD& (0+255),f,b
  5708  0024F0  47AC               	rlncf	??_LCD& (0+255),f,b
  5709  0024F2  508C               	movf	140,w,c	;volatile
  5710  0024F4  19AC               	xorwf	??_LCD& (0+255),w,b
  5711  0024F6  0BFB               	andlw	-5
  5712  0024F8  19AC               	xorwf	??_LCD& (0+255),w,b
  5713  0024FA  6E8C               	movwf	140,c	;volatile
  5714  0024FC                     
  5715                           ; BSR set to: 0
  5716                           ;Main_Robot_I2C_Serial_LCD.c: 420: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5717  0024FC  0EC8               	movlw	200
  5718  0024FE                     u4747:
  5719  0024FE  D000               	nop2	
  5720  002500  2EE8               	decfsz	wreg,f,c
  5721  002502  D7FD               	bra	u4747
  5722  002504                     
  5723                           ;Main_Robot_I2C_Serial_LCD.c: 421: LATDbits.LATD3 = (data & 0x08) >> 3;
  5724  002504  C0AD  F0AC         	movff	LCD@data,??_LCD
  5725  002508  0100               	movlb	0	; () banked
  5726  00250A  90D8               	bcf	status,0,c
  5727  00250C  33AC               	rrcf	??_LCD& (0+255),f,b
  5728  00250E  90D8               	bcf	status,0,c
  5729  002510  33AC               	rrcf	??_LCD& (0+255),f,b
  5730  002512  90D8               	bcf	status,0,c
  5731  002514  33AC               	rrcf	??_LCD& (0+255),f,b
  5732  002516  0E01               	movlw	1
  5733  002518  17AC               	andwf	??_LCD& (0+255),f,b
  5734  00251A  47AC               	rlncf	??_LCD& (0+255),f,b
  5735  00251C  47AC               	rlncf	??_LCD& (0+255),f,b
  5736  00251E  47AC               	rlncf	??_LCD& (0+255),f,b
  5737  002520  508C               	movf	140,w,c	;volatile
  5738  002522  19AC               	xorwf	??_LCD& (0+255),w,b
  5739  002524  0BF7               	andlw	-9
  5740  002526  19AC               	xorwf	??_LCD& (0+255),w,b
  5741  002528  6E8C               	movwf	140,c	;volatile
  5742  00252A                     
  5743                           ; BSR set to: 0
  5744                           ;Main_Robot_I2C_Serial_LCD.c: 422: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5745  00252A  0EC8               	movlw	200
  5746  00252C                     u4757:
  5747  00252C  D000               	nop2	
  5748  00252E  2EE8               	decfsz	wreg,f,c
  5749  002530  D7FD               	bra	u4757
  5750  002532                     
  5751                           ;Main_Robot_I2C_Serial_LCD.c: 423: LATE0 = 0;
  5752  002532  908D               	bcf	3981,0,c	;volatile
  5753  002534                     
  5754                           ;Main_Robot_I2C_Serial_LCD.c: 424: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5755  002534  0EC8               	movlw	200
  5756  002536                     u4767:
  5757  002536  D000               	nop2	
  5758  002538  2EE8               	decfsz	wreg,f,c
  5759  00253A  D7FD               	bra	u4767
  5760  00253C  0012               	return		;funcret
  5761  00253E                     __end_of_LCD:
  5762                           	callstack 0
  5763                           
  5764 ;; *************** function _receive *****************
  5765 ;; Defined at:
  5766 ;;		line 255 in file "Main_Robot_I2C_Serial_LCD.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5780 ;;      Params:         0       0       0       0       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5782 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5783 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5784 ;;Total ram usage:        8 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    5
  5787 ;; This function calls:
  5788 ;;		_algoritm
  5789 ;;		i2_PrintDataLCD
  5790 ;;		i2_sprintf
  5791 ;;		i2_start
  5792 ;; This function is called by:
  5793 ;;		Interrupt level 2
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	intcode
  5798  000008                     __pintcode:
  5799                           	callstack 0
  5800  000008                     _receive:
  5801                           	callstack 20
  5802                           
  5803                           ;incstack = 0
  5804  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5805  00000A  EDF1  F012         	call	int_func,f	;refresh shadow registers
  5806                           
  5807                           	psect	intcode_body
  5808  0025E2                     __pintcode_body:
  5809                           	callstack 20
  5810  0025E2                     int_func:
  5811                           	callstack 20
  5812  0025E2  0006               	pop		; remove dummy address from shadow register refresh
  5813  0025E4  CFD9 F022          	movff	fsr2l,??_receive
  5814  0025E8  CFDA F023          	movff	fsr2h,??_receive+1
  5815  0025EC  CFF3 F024          	movff	prodl,??_receive+2
  5816  0025F0  CFF4 F025          	movff	prodh,??_receive+3
  5817  0025F4  CFF6 F026          	movff	tblptrl,??_receive+4
  5818  0025F8  CFF7 F027          	movff	tblptrh,??_receive+5
  5819  0025FC  CFF8 F028          	movff	tblptru,??_receive+6
  5820  002600  CFF5 F029          	movff	tablat,??_receive+7
  5821  002604                     
  5822                           ;Main_Robot_I2C_Serial_LCD.c: 256: if(RCIF == 1){
  5823  002604  AA9E               	btfss	3998,5,c	;volatile
  5824  002606  EF07  F013         	goto	i2u350_41
  5825  00260A  EF09  F013         	goto	i2u350_40
  5826  00260E                     i2u350_41:
  5827  00260E  EF2B  F013         	goto	i2l218
  5828  002612                     i2u350_40:
  5829  002612                     
  5830                           ;Main_Robot_I2C_Serial_LCD.c: 257: d = RCREG;
  5831  002612  CFAE F03C          	movff	4014,_d	;volatile
  5832  002616                     
  5833                           ;Main_Robot_I2C_Serial_LCD.c: 258: sprintf(text," El caracter recibido fue: %c",d);
  5834  002616  0E6E               	movlw	low _text
  5835  002618  6E0D               	movwf	i2sprintf@sp^0,c
  5836  00261A  0E00               	movlw	high _text
  5837  00261C  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  5838  00261E  0E0B               	movlw	low STR_5
  5839  002620  6E0F               	movwf	i2sprintf@f^0,c
  5840  002622  0E08               	movlw	high STR_5
  5841  002624  6E10               	movwf	(i2sprintf@f+1)^0,c
  5842  002626  C03C  F011         	movff	_d,?i2_sprintf+4
  5843  00262A  6A12               	clrf	(?i2_sprintf+5)^0,c
  5844  00262C  ECF1  F00D         	call	i2_sprintf	;wreg free
  5845                           
  5846                           ;Main_Robot_I2C_Serial_LCD.c: 259: sprintf(texto_LCD,"Dato: %c",d);
  5847  002630  0E96               	movlw	low _texto_LCD
  5848  002632  6E0D               	movwf	i2sprintf@sp^0,c
  5849  002634  0E00               	movlw	high _texto_LCD
  5850  002636  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  5851  002638  0E63               	movlw	low STR_6
  5852  00263A  6E0F               	movwf	i2sprintf@f^0,c
  5853  00263C  0E08               	movlw	high STR_6
  5854  00263E  6E10               	movwf	(i2sprintf@f+1)^0,c
  5855  002640  C03C  F011         	movff	_d,?i2_sprintf+4
  5856  002644  6A12               	clrf	(?i2_sprintf+5)^0,c
  5857  002646  ECF1  F00D         	call	i2_sprintf	;wreg free
  5858  00264A                     
  5859                           ;Main_Robot_I2C_Serial_LCD.c: 260: start();
  5860  00264A  EC0C  F015         	call	i2_start	;wreg free
  5861  00264E                     
  5862                           ;Main_Robot_I2C_Serial_LCD.c: 261: PrintDataLCD();
  5863  00264E  ECE3  F014         	call	i2_PrintDataLCD	;wreg free
  5864                           
  5865                           ;Main_Robot_I2C_Serial_LCD.c: 262: algoritm();
  5866  002652  EC9C  F006         	call	_algoritm	;wreg free
  5867  002656                     i2l218:
  5868  002656  C029  FFF5         	movff	??_receive+7,tablat
  5869  00265A  C028  FFF8         	movff	??_receive+6,tblptru
  5870  00265E  C027  FFF7         	movff	??_receive+5,tblptrh
  5871  002662  C026  FFF6         	movff	??_receive+4,tblptrl
  5872  002666  C025  FFF4         	movff	??_receive+3,prodh
  5873  00266A  C024  FFF3         	movff	??_receive+2,prodl
  5874  00266E  C023  FFDA         	movff	??_receive+1,fsr2h
  5875  002672  C022  FFD9         	movff	??_receive,fsr2l
  5876  002676  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5877  002678  0011               	retfie		f
  5878  00267A                     __end_of_receive:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function i2_PrintDataLCD *****************
  5882 ;; Defined at:
  5883 ;;		line 427 in file "Main_Robot_I2C_Serial_LCD.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5900 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    2
  5904 ;; This function calls:
  5905 ;;		i2_SettingsLCD
  5906 ;;		i2_WriteLCD
  5907 ;;		i2_strlen
  5908 ;; This function is called by:
  5909 ;;		_receive
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text30
  5914  0029C6                     __ptext30:
  5915                           	callstack 0
  5916  0029C6                     i2_PrintDataLCD:
  5917                           	callstack 22
  5918  0029C6                     
  5919                           ;Main_Robot_I2C_Serial_LCD.c: 428: SettingsLCD(0x80);
  5920  0029C6  0E80               	movlw	128
  5921  0029C8  EC9E  F016         	call	i2_SettingsLCD
  5922                           
  5923                           ;Main_Robot_I2C_Serial_LCD.c: 429: SettingsLCD(0x01);
  5924  0029CC  0E01               	movlw	1
  5925  0029CE  EC9E  F016         	call	i2_SettingsLCD
  5926  0029D2                     
  5927                           ;Main_Robot_I2C_Serial_LCD.c: 430: for(i=0; i<strlen(texto_LCD); i++){
  5928  0029D2  0E00               	movlw	0
  5929  0029D4  6E3B               	movwf	(_i+1)^0,c
  5930  0029D6  0E00               	movlw	0
  5931  0029D8  6E3A               	movwf	_i^0,c
  5932  0029DA  EFFA  F014         	goto	i2l3732
  5933  0029DE                     i2l3728:
  5934                           
  5935                           ;Main_Robot_I2C_Serial_LCD.c: 431: WriteLCD(texto_LCD[i]);
  5936  0029DE  0E96               	movlw	low _texto_LCD
  5937  0029E0  243A               	addwf	_i^0,w,c
  5938  0029E2  6ED9               	movwf	fsr2l,c
  5939  0029E4  0E00               	movlw	high _texto_LCD
  5940  0029E6  203B               	addwfc	(_i+1)^0,w,c
  5941  0029E8  6EDA               	movwf	fsr2h,c
  5942  0029EA  50DF               	movf	indf2,w,c
  5943  0029EC  EC93  F016         	call	i2_WriteLCD
  5944  0029F0  4A3A               	infsnz	_i^0,f,c
  5945  0029F2  2A3B               	incf	(_i+1)^0,f,c
  5946  0029F4                     i2l3732:
  5947  0029F4  0E96               	movlw	low _texto_LCD
  5948  0029F6  6E01               	movwf	i2strlen@s^0,c
  5949  0029F8  0E00               	movlw	high _texto_LCD
  5950  0029FA  6E02               	movwf	(i2strlen@s+1)^0,c
  5951  0029FC  ECF5  F015         	call	i2_strlen	;wreg free
  5952  002A00  5001               	movf	?i2_strlen^0,w,c
  5953  002A02  5C3A               	subwf	_i^0,w,c
  5954  002A04  5002               	movf	(?i2_strlen+1)^0,w,c
  5955  002A06  583B               	subwfb	(_i+1)^0,w,c
  5956  002A08  A0D8               	btfss	status,0,c
  5957  002A0A  EF09  F015         	goto	i2u349_41
  5958  002A0E  EF0B  F015         	goto	i2u349_40
  5959  002A12                     i2u349_41:
  5960  002A12  EFEF  F014         	goto	i2l3728
  5961  002A16                     i2u349_40:
  5962  002A16  0012               	return		;funcret
  5963  002A18                     __end_ofi2_PrintDataLCD:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function i2_WriteLCD *****************
  5967 ;; Defined at:
  5968 ;;		line 406 in file "Main_Robot_I2C_Serial_LCD.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  word            1    wreg     unsigned char 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  word            1    2[COMRAM] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0
  5983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5985 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5986 ;;Total ram usage:        1 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    1
  5989 ;; This function calls:
  5990 ;;		i2_LCD
  5991 ;; This function is called by:
  5992 ;;		i2_PrintDataLCD
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text31
  5997  002D26                     __ptext31:
  5998                           	callstack 0
  5999  002D26                     i2_WriteLCD:
  6000                           	callstack 22
  6001                           
  6002                           ;incstack = 0
  6003                           ;i2WriteLCD@word stored from wreg
  6004  002D26  6E03               	movwf	i2WriteLCD@word^0,c
  6005  002D28                     
  6006                           ;Main_Robot_I2C_Serial_LCD.c: 407: LATE1 = 1;
  6007  002D28  828D               	bsf	3981,1,c	;volatile
  6008  002D2A                     
  6009                           ;Main_Robot_I2C_Serial_LCD.c: 408: LCD(word >> 4);
  6010  002D2A  3803               	swapf	i2WriteLCD@word^0,w,c
  6011  002D2C  0B0F               	andlw	15
  6012  002D2E  EC9F  F012         	call	i2_LCD
  6013                           
  6014                           ;Main_Robot_I2C_Serial_LCD.c: 409: LCD(word & 0x0F);
  6015  002D32  5003               	movf	i2WriteLCD@word^0,w,c
  6016  002D34  0B0F               	andlw	15
  6017  002D36  EC9F  F012         	call	i2_LCD
  6018  002D3A  0012               	return		;funcret
  6019  002D3C                     __end_ofi2_WriteLCD:
  6020                           	callstack 0
  6021                           
  6022 ;; *************** function i2_SettingsLCD *****************
  6023 ;; Defined at:
  6024 ;;		line 400 in file "Main_Robot_I2C_Serial_LCD.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  word            1    wreg     unsigned char 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  word            1    2[COMRAM] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6038 ;;      Params:         0       0       0       0       0       0       0       0       0
  6039 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6041 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6042 ;;Total ram usage:        1 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    1
  6045 ;; This function calls:
  6046 ;;		i2_LCD
  6047 ;; This function is called by:
  6048 ;;		i2_PrintDataLCD
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text32
  6053  002D3C                     __ptext32:
  6054                           	callstack 0
  6055  002D3C                     i2_SettingsLCD:
  6056                           	callstack 22
  6057                           
  6058                           ;incstack = 0
  6059                           ;i2SettingsLCD@word stored from wreg
  6060  002D3C  6E03               	movwf	i2SettingsLCD@word^0,c
  6061  002D3E                     
  6062                           ;Main_Robot_I2C_Serial_LCD.c: 401: LATE1 = 0;
  6063  002D3E  928D               	bcf	3981,1,c	;volatile
  6064  002D40                     
  6065                           ;Main_Robot_I2C_Serial_LCD.c: 402: LCD(word >> 4);
  6066  002D40  3803               	swapf	i2SettingsLCD@word^0,w,c
  6067  002D42  0B0F               	andlw	15
  6068  002D44  EC9F  F012         	call	i2_LCD
  6069                           
  6070                           ;Main_Robot_I2C_Serial_LCD.c: 403: LCD(word & 0x0F);
  6071  002D48  5003               	movf	i2SettingsLCD@word^0,w,c
  6072  002D4A  0B0F               	andlw	15
  6073  002D4C  EC9F  F012         	call	i2_LCD
  6074  002D50  0012               	return		;funcret
  6075  002D52                     __end_ofi2_SettingsLCD:
  6076                           	callstack 0
  6077                           
  6078 ;; *************** function i2_LCD *****************
  6079 ;; Defined at:
  6080 ;;		line 412 in file "Main_Robot_I2C_Serial_LCD.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  data            1    wreg     unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  data            1    1[COMRAM] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6094 ;;      Params:         0       0       0       0       0       0       0       0       0
  6095 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:        2 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		i2_SettingsLCD
  6104 ;;		i2_WriteLCD
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text33
  6109  00253E                     __ptext33:
  6110                           	callstack 0
  6111  00253E                     i2_LCD:
  6112                           	callstack 22
  6113                           
  6114                           ;incstack = 0
  6115                           ;i2LCD@data stored from wreg
  6116  00253E  6E02               	movwf	i2LCD@data^0,c
  6117  002540                     
  6118                           ;Main_Robot_I2C_Serial_LCD.c: 413: _delay((unsigned long)((500)*(8000000/4000000.0)));
  6119  002540  0EC8               	movlw	200
  6120  002542                     i2u477_47:
  6121  002542  D000               	nop2	
  6122  002544  2EE8               	decfsz	wreg,f,c
  6123  002546  D7FD               	bra	i2u477_47
  6124  002548                     
  6125                           ;Main_Robot_I2C_Serial_LCD.c: 414: LATE0 = 1;
  6126  002548  808D               	bsf	3981,0,c	;volatile
  6127  00254A                     
  6128                           ;Main_Robot_I2C_Serial_LCD.c: 415: LATDbits.LATD0 = (data & 0x01);
  6129  00254A  C002  F001         	movff	i2LCD@data,??i2_LCD
  6130  00254E  0E01               	movlw	1
  6131  002550  1601               	andwf	??i2_LCD^0,f,c
  6132  002552  508C               	movf	140,w,c	;volatile
  6133  002554  1801               	xorwf	??i2_LCD^0,w,c
  6134  002556  0BFE               	andlw	-2
  6135  002558  1801               	xorwf	??i2_LCD^0,w,c
  6136  00255A  6E8C               	movwf	140,c	;volatile
  6137  00255C                     
  6138                           ;Main_Robot_I2C_Serial_LCD.c: 416: _delay((unsigned long)((500)*(8000000/4000000.0)));
  6139  00255C  0EC8               	movlw	200
  6140  00255E                     i2u478_47:
  6141  00255E  D000               	nop2	
  6142  002560  2EE8               	decfsz	wreg,f,c
  6143  002562  D7FD               	bra	i2u478_47
  6144  002564                     
  6145                           ;Main_Robot_I2C_Serial_LCD.c: 417: LATDbits.LATD1 = (data & 0x02) >> 1;
  6146  002564  C002  F001         	movff	i2LCD@data,??i2_LCD
  6147  002568  90D8               	bcf	status,0,c
  6148  00256A  3201               	rrcf	??i2_LCD^0,f,c
  6149  00256C  0E01               	movlw	1
  6150  00256E  1601               	andwf	??i2_LCD^0,f,c
  6151  002570  4601               	rlncf	??i2_LCD^0,f,c
  6152  002572  508C               	movf	140,w,c	;volatile
  6153  002574  1801               	xorwf	??i2_LCD^0,w,c
  6154  002576  0BFD               	andlw	-3
  6155  002578  1801               	xorwf	??i2_LCD^0,w,c
  6156  00257A  6E8C               	movwf	140,c	;volatile
  6157  00257C                     
  6158                           ;Main_Robot_I2C_Serial_LCD.c: 418: _delay((unsigned long)((500)*(8000000/4000000.0)));
  6159  00257C  0EC8               	movlw	200
  6160  00257E                     i2u479_47:
  6161  00257E  D000               	nop2	
  6162  002580  2EE8               	decfsz	wreg,f,c
  6163  002582  D7FD               	bra	i2u479_47
  6164  002584                     
  6165                           ;Main_Robot_I2C_Serial_LCD.c: 419: LATDbits.LATD2 = (data & 0x04) >> 2;
  6166  002584  C002  F001         	movff	i2LCD@data,??i2_LCD
  6167  002588  90D8               	bcf	status,0,c
  6168  00258A  3201               	rrcf	??i2_LCD^0,f,c
  6169  00258C  90D8               	bcf	status,0,c
  6170  00258E  3201               	rrcf	??i2_LCD^0,f,c
  6171  002590  0E01               	movlw	1
  6172  002592  1601               	andwf	??i2_LCD^0,f,c
  6173  002594  4601               	rlncf	??i2_LCD^0,f,c
  6174  002596  4601               	rlncf	??i2_LCD^0,f,c
  6175  002598  508C               	movf	140,w,c	;volatile
  6176  00259A  1801               	xorwf	??i2_LCD^0,w,c
  6177  00259C  0BFB               	andlw	-5
  6178  00259E  1801               	xorwf	??i2_LCD^0,w,c
  6179  0025A0  6E8C               	movwf	140,c	;volatile
  6180  0025A2                     
  6181                           ;Main_Robot_I2C_Serial_LCD.c: 420: _delay((unsigned long)((500)*(8000000/4000000.0)));
  6182  0025A2  0EC8               	movlw	200
  6183  0025A4                     i2u480_47:
  6184  0025A4  D000               	nop2	
  6185  0025A6  2EE8               	decfsz	wreg,f,c
  6186  0025A8  D7FD               	bra	i2u480_47
  6187  0025AA                     
  6188                           ;Main_Robot_I2C_Serial_LCD.c: 421: LATDbits.LATD3 = (data & 0x08) >> 3;
  6189  0025AA  C002  F001         	movff	i2LCD@data,??i2_LCD
  6190  0025AE  90D8               	bcf	status,0,c
  6191  0025B0  3201               	rrcf	??i2_LCD^0,f,c
  6192  0025B2  90D8               	bcf	status,0,c
  6193  0025B4  3201               	rrcf	??i2_LCD^0,f,c
  6194  0025B6  90D8               	bcf	status,0,c
  6195  0025B8  3201               	rrcf	??i2_LCD^0,f,c
  6196  0025BA  0E01               	movlw	1
  6197  0025BC  1601               	andwf	??i2_LCD^0,f,c
  6198  0025BE  4601               	rlncf	??i2_LCD^0,f,c
  6199  0025C0  4601               	rlncf	??i2_LCD^0,f,c
  6200  0025C2  4601               	rlncf	??i2_LCD^0,f,c
  6201  0025C4  508C               	movf	140,w,c	;volatile
  6202  0025C6  1801               	xorwf	??i2_LCD^0,w,c
  6203  0025C8  0BF7               	andlw	-9
  6204  0025CA  1801               	xorwf	??i2_LCD^0,w,c
  6205  0025CC  6E8C               	movwf	140,c	;volatile
  6206  0025CE                     
  6207                           ;Main_Robot_I2C_Serial_LCD.c: 422: _delay((unsigned long)((500)*(8000000/4000000.0)));
  6208  0025CE  0EC8               	movlw	200
  6209  0025D0                     i2u481_47:
  6210  0025D0  D000               	nop2	
  6211  0025D2  2EE8               	decfsz	wreg,f,c
  6212  0025D4  D7FD               	bra	i2u481_47
  6213  0025D6                     
  6214                           ;Main_Robot_I2C_Serial_LCD.c: 423: LATE0 = 0;
  6215  0025D6  908D               	bcf	3981,0,c	;volatile
  6216  0025D8                     
  6217                           ;Main_Robot_I2C_Serial_LCD.c: 424: _delay((unsigned long)((500)*(8000000/4000000.0)));
  6218  0025D8  0EC8               	movlw	200
  6219  0025DA                     i2u482_47:
  6220  0025DA  D000               	nop2	
  6221  0025DC  2EE8               	decfsz	wreg,f,c
  6222  0025DE  D7FD               	bra	i2u482_47
  6223  0025E0  0012               	return		;funcret
  6224  0025E2                     __end_ofi2_LCD:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function _algoritm *****************
  6228 ;; Defined at:
  6229 ;;		line 154 in file "Main_Robot_I2C_Serial_LCD.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;		None
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6243 ;;      Params:         0       0       0       0       0       0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6245 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6247 ;;Total ram usage:        1 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    4
  6250 ;; This function calls:
  6251 ;;		_atoi
  6252 ;;		i2_mover_servo
  6253 ;;		i2_sprintf
  6254 ;;		i2_start
  6255 ;; This function is called by:
  6256 ;;		_receive
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text34
  6261  000D38                     __ptext34:
  6262                           	callstack 0
  6263  000D38                     _algoritm:
  6264                           	callstack 20
  6265  000D38                     
  6266                           ;Main_Robot_I2C_Serial_LCD.c: 155: if(d == 's'){
  6267  000D38  0E73               	movlw	115
  6268  000D3A  183C               	xorwf	_d^0,w,c
  6269  000D3C  A4D8               	btfss	status,2,c
  6270  000D3E  EFA3  F006         	goto	i2u318_41
  6271  000D42  EFA5  F006         	goto	i2u318_40
  6272  000D46                     i2u318_41:
  6273  000D46  EFA9  F006         	goto	i2l3594
  6274  000D4A                     i2u318_40:
  6275  000D4A                     
  6276                           ;Main_Robot_I2C_Serial_LCD.c: 156: flag = 0;
  6277  000D4A  0E00               	movlw	0
  6278  000D4C  6E3D               	movwf	_flag^0,c
  6279                           
  6280                           ;Main_Robot_I2C_Serial_LCD.c: 157: }
  6281  000D4E  EFC1  F006         	goto	i2l163
  6282  000D52                     i2l3594:
  6283                           
  6284                           ;Main_Robot_I2C_Serial_LCD.c: 158: else if(d == 'a'){
  6285  000D52  0E61               	movlw	97
  6286  000D54  183C               	xorwf	_d^0,w,c
  6287  000D56  A4D8               	btfss	status,2,c
  6288  000D58  EFB0  F006         	goto	i2u319_41
  6289  000D5C  EFB2  F006         	goto	i2u319_40
  6290  000D60                     i2u319_41:
  6291  000D60  EFB6  F006         	goto	i2l3598
  6292  000D64                     i2u319_40:
  6293  000D64                     
  6294                           ;Main_Robot_I2C_Serial_LCD.c: 159: flag = 1;
  6295  000D64  0E01               	movlw	1
  6296  000D66  6E3D               	movwf	_flag^0,c
  6297                           
  6298                           ;Main_Robot_I2C_Serial_LCD.c: 160: }
  6299  000D68  EFC1  F006         	goto	i2l163
  6300  000D6C                     i2l3598:
  6301                           
  6302                           ;Main_Robot_I2C_Serial_LCD.c: 161: else if(d == 'p'){
  6303  000D6C  0E70               	movlw	112
  6304  000D6E  183C               	xorwf	_d^0,w,c
  6305  000D70  A4D8               	btfss	status,2,c
  6306  000D72  EFBD  F006         	goto	i2u320_41
  6307  000D76  EFBF  F006         	goto	i2u320_40
  6308  000D7A                     i2u320_41:
  6309  000D7A  EFC1  F006         	goto	i2l163
  6310  000D7E                     i2u320_40:
  6311  000D7E                     
  6312                           ;Main_Robot_I2C_Serial_LCD.c: 162: flag = 3;
  6313  000D7E  0E03               	movlw	3
  6314  000D80  6E3D               	movwf	_flag^0,c
  6315  000D82                     i2l163:
  6316                           
  6317                           ;Main_Robot_I2C_Serial_LCD.c: 163: };Main_Robot_I2C_Serial_LCD.c: 165: if(flag == 0){
  6318  000D82  503D               	movf	_flag^0,w,c
  6319  000D84  A4D8               	btfss	status,2,c
  6320  000D86  EFC7  F006         	goto	i2u321_41
  6321  000D8A  EFC9  F006         	goto	i2u321_40
  6322  000D8E                     i2u321_41:
  6323  000D8E  EF57  F007         	goto	i2l3632
  6324  000D92                     i2u321_40:
  6325  000D92                     
  6326                           ;Main_Robot_I2C_Serial_LCD.c: 166: if(d == '0'){
  6327  000D92  0E30               	movlw	48
  6328  000D94  183C               	xorwf	_d^0,w,c
  6329  000D96  A4D8               	btfss	status,2,c
  6330  000D98  EFD0  F006         	goto	i2u322_41
  6331  000D9C  EFD2  F006         	goto	i2u322_40
  6332  000DA0                     i2u322_41:
  6333  000DA0  EFD8  F006         	goto	i2l3606
  6334  000DA4                     i2u322_40:
  6335  000DA4                     
  6336                           ;Main_Robot_I2C_Serial_LCD.c: 167: servos = 0;
  6337  000DA4  0E00               	movlw	0
  6338  000DA6  6E4B               	movwf	(_servos+1)^0,c
  6339  000DA8  0E00               	movlw	0
  6340  000DAA  6E4A               	movwf	_servos^0,c
  6341                           
  6342                           ;Main_Robot_I2C_Serial_LCD.c: 168: }
  6343  000DAC  EFDD  F008         	goto	i2l212
  6344  000DB0                     i2l3606:
  6345                           
  6346                           ;Main_Robot_I2C_Serial_LCD.c: 169: else if(d == '1'){
  6347  000DB0  0E31               	movlw	49
  6348  000DB2  183C               	xorwf	_d^0,w,c
  6349  000DB4  A4D8               	btfss	status,2,c
  6350  000DB6  EFDF  F006         	goto	i2u323_41
  6351  000DBA  EFE1  F006         	goto	i2u323_40
  6352  000DBE                     i2u323_41:
  6353  000DBE  EFE7  F006         	goto	i2l3610
  6354  000DC2                     i2u323_40:
  6355  000DC2                     
  6356                           ;Main_Robot_I2C_Serial_LCD.c: 170: servos = 1;
  6357  000DC2  0E00               	movlw	0
  6358  000DC4  6E4B               	movwf	(_servos+1)^0,c
  6359  000DC6  0E01               	movlw	1
  6360  000DC8  6E4A               	movwf	_servos^0,c
  6361                           
  6362                           ;Main_Robot_I2C_Serial_LCD.c: 171: }
  6363  000DCA  EFDD  F008         	goto	i2l212
  6364  000DCE                     i2l3610:
  6365                           
  6366                           ;Main_Robot_I2C_Serial_LCD.c: 172: else if(d == '2'){
  6367  000DCE  0E32               	movlw	50
  6368  000DD0  183C               	xorwf	_d^0,w,c
  6369  000DD2  A4D8               	btfss	status,2,c
  6370  000DD4  EFEE  F006         	goto	i2u324_41
  6371  000DD8  EFF0  F006         	goto	i2u324_40
  6372  000DDC                     i2u324_41:
  6373  000DDC  EFF6  F006         	goto	i2l3614
  6374  000DE0                     i2u324_40:
  6375  000DE0                     
  6376                           ;Main_Robot_I2C_Serial_LCD.c: 173: servos = 2;
  6377  000DE0  0E00               	movlw	0
  6378  000DE2  6E4B               	movwf	(_servos+1)^0,c
  6379  000DE4  0E02               	movlw	2
  6380  000DE6  6E4A               	movwf	_servos^0,c
  6381                           
  6382                           ;Main_Robot_I2C_Serial_LCD.c: 174: }
  6383  000DE8  EFDD  F008         	goto	i2l212
  6384  000DEC                     i2l3614:
  6385                           
  6386                           ;Main_Robot_I2C_Serial_LCD.c: 175: else if(d == '3'){
  6387  000DEC  0E33               	movlw	51
  6388  000DEE  183C               	xorwf	_d^0,w,c
  6389  000DF0  A4D8               	btfss	status,2,c
  6390  000DF2  EFFD  F006         	goto	i2u325_41
  6391  000DF6  EFFF  F006         	goto	i2u325_40
  6392  000DFA                     i2u325_41:
  6393  000DFA  EF05  F007         	goto	i2l3618
  6394  000DFE                     i2u325_40:
  6395  000DFE                     
  6396                           ;Main_Robot_I2C_Serial_LCD.c: 176: servos = 3;
  6397  000DFE  0E00               	movlw	0
  6398  000E00  6E4B               	movwf	(_servos+1)^0,c
  6399  000E02  0E03               	movlw	3
  6400  000E04  6E4A               	movwf	_servos^0,c
  6401                           
  6402                           ;Main_Robot_I2C_Serial_LCD.c: 177: }
  6403  000E06  EFDD  F008         	goto	i2l212
  6404  000E0A                     i2l3618:
  6405                           
  6406                           ;Main_Robot_I2C_Serial_LCD.c: 178: else if(d == '4'){
  6407  000E0A  0E34               	movlw	52
  6408  000E0C  183C               	xorwf	_d^0,w,c
  6409  000E0E  A4D8               	btfss	status,2,c
  6410  000E10  EF0C  F007         	goto	i2u326_41
  6411  000E14  EF0E  F007         	goto	i2u326_40
  6412  000E18                     i2u326_41:
  6413  000E18  EF14  F007         	goto	i2l3622
  6414  000E1C                     i2u326_40:
  6415  000E1C                     
  6416                           ;Main_Robot_I2C_Serial_LCD.c: 179: servos = 4;
  6417  000E1C  0E00               	movlw	0
  6418  000E1E  6E4B               	movwf	(_servos+1)^0,c
  6419  000E20  0E04               	movlw	4
  6420  000E22  6E4A               	movwf	_servos^0,c
  6421                           
  6422                           ;Main_Robot_I2C_Serial_LCD.c: 180: }
  6423  000E24  EFDD  F008         	goto	i2l212
  6424  000E28                     i2l3622:
  6425                           
  6426                           ;Main_Robot_I2C_Serial_LCD.c: 181: else if(d == '5'){
  6427  000E28  0E35               	movlw	53
  6428  000E2A  183C               	xorwf	_d^0,w,c
  6429  000E2C  A4D8               	btfss	status,2,c
  6430  000E2E  EF1B  F007         	goto	i2u327_41
  6431  000E32  EF1D  F007         	goto	i2u327_40
  6432  000E36                     i2u327_41:
  6433  000E36  EF23  F007         	goto	i2l3626
  6434  000E3A                     i2u327_40:
  6435  000E3A                     
  6436                           ;Main_Robot_I2C_Serial_LCD.c: 182: servos = 5;
  6437  000E3A  0E00               	movlw	0
  6438  000E3C  6E4B               	movwf	(_servos+1)^0,c
  6439  000E3E  0E05               	movlw	5
  6440  000E40  6E4A               	movwf	_servos^0,c
  6441                           
  6442                           ;Main_Robot_I2C_Serial_LCD.c: 183: }
  6443  000E42  EFDD  F008         	goto	i2l212
  6444  000E46                     i2l3626:
  6445                           
  6446                           ;Main_Robot_I2C_Serial_LCD.c: 184: else if(d == 0x0D || d == 0x0A){
  6447  000E46  0E0D               	movlw	13
  6448  000E48  183C               	xorwf	_d^0,w,c
  6449  000E4A  B4D8               	btfsc	status,2,c
  6450  000E4C  EF2A  F007         	goto	i2u328_41
  6451  000E50  EF2C  F007         	goto	i2u328_40
  6452  000E54                     i2u328_41:
  6453  000E54  EF35  F007         	goto	i2l3630
  6454  000E58                     i2u328_40:
  6455  000E58  0E0A               	movlw	10
  6456  000E5A  183C               	xorwf	_d^0,w,c
  6457  000E5C  A4D8               	btfss	status,2,c
  6458  000E5E  EF33  F007         	goto	i2u329_41
  6459  000E62  EF35  F007         	goto	i2u329_40
  6460  000E66                     i2u329_41:
  6461  000E66  EF55  F007         	goto	i2l175
  6462  000E6A                     i2u329_40:
  6463  000E6A                     i2l3630:
  6464                           
  6465                           ;Main_Robot_I2C_Serial_LCD.c: 185: mover_servo(0,0);
  6466  000E6A  0E00               	movlw	0
  6467  000E6C  6E1C               	movwf	(i2mover_servo@servo+1)^0,c
  6468  000E6E  0E00               	movlw	0
  6469  000E70  6E1B               	movwf	i2mover_servo@servo^0,c
  6470  000E72  0E00               	movlw	0
  6471  000E74  6E1E               	movwf	(i2mover_servo@angulo+1)^0,c
  6472  000E76  0E00               	movlw	0
  6473  000E78  6E1D               	movwf	i2mover_servo@angulo^0,c
  6474  000E7A  ECED  F011         	call	i2_mover_servo	;wreg free
  6475                           
  6476                           ;Main_Robot_I2C_Serial_LCD.c: 186: mover_servo(0,90);
  6477  000E7E  0E00               	movlw	0
  6478  000E80  6E1C               	movwf	(i2mover_servo@servo+1)^0,c
  6479  000E82  0E00               	movlw	0
  6480  000E84  6E1B               	movwf	i2mover_servo@servo^0,c
  6481  000E86  0E00               	movlw	0
  6482  000E88  6E1E               	movwf	(i2mover_servo@angulo+1)^0,c
  6483  000E8A  0E5A               	movlw	90
  6484  000E8C  6E1D               	movwf	i2mover_servo@angulo^0,c
  6485  000E8E  ECED  F011         	call	i2_mover_servo	;wreg free
  6486                           
  6487                           ;Main_Robot_I2C_Serial_LCD.c: 187: mover_servo(0,180);
  6488  000E92  0E00               	movlw	0
  6489  000E94  6E1C               	movwf	(i2mover_servo@servo+1)^0,c
  6490  000E96  0E00               	movlw	0
  6491  000E98  6E1B               	movwf	i2mover_servo@servo^0,c
  6492  000E9A  0E00               	movlw	0
  6493  000E9C  6E1E               	movwf	(i2mover_servo@angulo+1)^0,c
  6494  000E9E  0EB4               	movlw	180
  6495  000EA0  6E1D               	movwf	i2mover_servo@angulo^0,c
  6496  000EA2  ECED  F011         	call	i2_mover_servo	;wreg free
  6497  000EA6  EFDD  F008         	goto	i2l212
  6498  000EAA                     i2l175:
  6499  000EAA  EFDD  F008         	goto	i2l212
  6500  000EAE                     i2l3632:
  6501                           
  6502                           ;Main_Robot_I2C_Serial_LCD.c: 190: else if(flag == 1){
  6503  000EAE  043D               	decf	_flag^0,w,c
  6504  000EB0  A4D8               	btfss	status,2,c
  6505  000EB2  EF5D  F007         	goto	i2u330_41
  6506  000EB6  EF5F  F007         	goto	i2u330_40
  6507  000EBA                     i2u330_41:
  6508  000EBA  EF63  F007         	goto	i2l3636
  6509  000EBE                     i2u330_40:
  6510  000EBE                     
  6511                           ;Main_Robot_I2C_Serial_LCD.c: 191: flag = 2;
  6512  000EBE  0E02               	movlw	2
  6513  000EC0  6E3D               	movwf	_flag^0,c
  6514                           
  6515                           ;Main_Robot_I2C_Serial_LCD.c: 192: }
  6516  000EC2  EFDD  F008         	goto	i2l212
  6517  000EC6                     i2l3636:
  6518                           
  6519                           ;Main_Robot_I2C_Serial_LCD.c: 193: else if(flag==2){
  6520  000EC6  0E02               	movlw	2
  6521  000EC8  183D               	xorwf	_flag^0,w,c
  6522  000ECA  A4D8               	btfss	status,2,c
  6523  000ECC  EF6A  F007         	goto	i2u331_41
  6524  000ED0  EF6C  F007         	goto	i2u331_40
  6525  000ED4                     i2u331_41:
  6526  000ED4  EF1F  F008         	goto	i2l3682
  6527  000ED8                     i2u331_40:
  6528  000ED8                     
  6529                           ;Main_Robot_I2C_Serial_LCD.c: 194: angle[z] = d;
  6530  000ED8  0E47               	movlw	low _angle
  6531  000EDA  2434               	addwf	_z^0,w,c
  6532  000EDC  6ED9               	movwf	fsr2l,c
  6533  000EDE  0E00               	movlw	high _angle
  6534  000EE0  2035               	addwfc	(_z+1)^0,w,c
  6535  000EE2  6EDA               	movwf	fsr2h,c
  6536  000EE4  C03C  FFDF         	movff	_d,indf2
  6537  000EE8                     
  6538                           ;Main_Robot_I2C_Serial_LCD.c: 195: sprintf(text,"angulo z %c \n",angle[z]);
  6539  000EE8  0E6E               	movlw	low _text
  6540  000EEA  6E0D               	movwf	i2sprintf@sp^0,c
  6541  000EEC  0E00               	movlw	high _text
  6542  000EEE  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  6543  000EF0  0E3A               	movlw	low STR_3
  6544  000EF2  6E0F               	movwf	i2sprintf@f^0,c
  6545  000EF4  0E08               	movlw	high STR_3
  6546  000EF6  6E10               	movwf	(i2sprintf@f+1)^0,c
  6547  000EF8  0E47               	movlw	low _angle
  6548  000EFA  2434               	addwf	_z^0,w,c
  6549  000EFC  6ED9               	movwf	fsr2l,c
  6550  000EFE  0E00               	movlw	high _angle
  6551  000F00  2035               	addwfc	(_z+1)^0,w,c
  6552  000F02  6EDA               	movwf	fsr2h,c
  6553  000F04  50DF               	movf	indf2,w,c
  6554  000F06  6E21               	movwf	??_algoritm^0,c
  6555  000F08  5021               	movf	??_algoritm^0,w,c
  6556  000F0A  6E11               	movwf	(?i2_sprintf+4)^0,c
  6557  000F0C  6A12               	clrf	(?i2_sprintf+5)^0,c
  6558  000F0E  ECF1  F00D         	call	i2_sprintf	;wreg free
  6559  000F12                     
  6560                           ;Main_Robot_I2C_Serial_LCD.c: 196: start();
  6561  000F12  EC0C  F015         	call	i2_start	;wreg free
  6562  000F16                     
  6563                           ;Main_Robot_I2C_Serial_LCD.c: 197: z++;
  6564  000F16  4A34               	infsnz	_z^0,f,c
  6565  000F18  2A35               	incf	(_z+1)^0,f,c
  6566  000F1A                     
  6567                           ;Main_Robot_I2C_Serial_LCD.c: 198: if(z==3){
  6568  000F1A  0E03               	movlw	3
  6569  000F1C  1834               	xorwf	_z^0,w,c
  6570  000F1E  1035               	iorwf	(_z+1)^0,w,c
  6571  000F20  A4D8               	btfss	status,2,c
  6572  000F22  EF95  F007         	goto	i2u332_41
  6573  000F26  EF97  F007         	goto	i2u332_40
  6574  000F2A                     i2u332_41:
  6575  000F2A  EFDD  F008         	goto	i2l212
  6576  000F2E                     i2u332_40:
  6577  000F2E                     
  6578                           ;Main_Robot_I2C_Serial_LCD.c: 199: z = 0;
  6579  000F2E  0E00               	movlw	0
  6580  000F30  6E35               	movwf	(_z+1)^0,c
  6581  000F32  0E00               	movlw	0
  6582  000F34  6E34               	movwf	_z^0,c
  6583  000F36                     
  6584                           ;Main_Robot_I2C_Serial_LCD.c: 200: Angle = atoi(angle);
  6585  000F36  0E47               	movlw	low _angle
  6586  000F38  6E0F               	movwf	atoi@s^0,c
  6587  000F3A  0E00               	movlw	high _angle
  6588  000F3C  6E10               	movwf	(atoi@s+1)^0,c
  6589  000F3E  ECD3  F00E         	call	_atoi	;wreg free
  6590  000F42  C00F  F032         	movff	?_atoi,_Angle
  6591  000F46  C010  F033         	movff	?_atoi+1,_Angle+1
  6592  000F4A                     
  6593                           ;Main_Robot_I2C_Serial_LCD.c: 201: sprintf(text,"angulo atoi %d \n",Angle);
  6594  000F4A  0E6E               	movlw	low _text
  6595  000F4C  6E0D               	movwf	i2sprintf@sp^0,c
  6596  000F4E  0E00               	movlw	high _text
  6597  000F50  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  6598  000F52  0E29               	movlw	low STR_4
  6599  000F54  6E0F               	movwf	i2sprintf@f^0,c
  6600  000F56  0E08               	movlw	high STR_4
  6601  000F58  6E10               	movwf	(i2sprintf@f+1)^0,c
  6602  000F5A  C032  F011         	movff	_Angle,?i2_sprintf+4
  6603  000F5E  C033  F012         	movff	_Angle+1,?i2_sprintf+5
  6604  000F62  ECF1  F00D         	call	i2_sprintf	;wreg free
  6605  000F66                     
  6606                           ;Main_Robot_I2C_Serial_LCD.c: 202: start();
  6607  000F66  EC0C  F015         	call	i2_start	;wreg free
  6608  000F6A                     
  6609                           ;Main_Robot_I2C_Serial_LCD.c: 203: if(servos == 0){
  6610  000F6A  504A               	movf	_servos^0,w,c
  6611  000F6C  104B               	iorwf	(_servos+1)^0,w,c
  6612  000F6E  A4D8               	btfss	status,2,c
  6613  000F70  EFBC  F007         	goto	i2u333_41
  6614  000F74  EFBE  F007         	goto	i2u333_40
  6615  000F78                     i2u333_41:
  6616  000F78  EFC4  F007         	goto	i2l3660
  6617  000F7C                     i2u333_40:
  6618  000F7C                     
  6619                           ;Main_Robot_I2C_Serial_LCD.c: 204: angle_servos[0] = Angle;
  6620  000F7C  C032  F060         	movff	_Angle,_angle_servos
  6621  000F80  C033  F061         	movff	_Angle+1,_angle_servos+1
  6622                           
  6623                           ;Main_Robot_I2C_Serial_LCD.c: 205: }
  6624  000F84  EF13  F008         	goto	i2l3680
  6625  000F88                     i2l3660:
  6626                           
  6627                           ;Main_Robot_I2C_Serial_LCD.c: 206: else if(servos == 1){
  6628  000F88  044A               	decf	_servos^0,w,c
  6629  000F8A  104B               	iorwf	(_servos+1)^0,w,c
  6630  000F8C  A4D8               	btfss	status,2,c
  6631  000F8E  EFCB  F007         	goto	i2u334_41
  6632  000F92  EFCD  F007         	goto	i2u334_40
  6633  000F96                     i2u334_41:
  6634  000F96  EFD3  F007         	goto	i2l3664
  6635  000F9A                     i2u334_40:
  6636  000F9A                     
  6637                           ;Main_Robot_I2C_Serial_LCD.c: 207: angle_servos[1] = Angle;
  6638  000F9A  C032  F062         	movff	_Angle,_angle_servos+2
  6639  000F9E  C033  F063         	movff	_Angle+1,_angle_servos+3
  6640                           
  6641                           ;Main_Robot_I2C_Serial_LCD.c: 208: }
  6642  000FA2  EF13  F008         	goto	i2l3680
  6643  000FA6                     i2l3664:
  6644                           
  6645                           ;Main_Robot_I2C_Serial_LCD.c: 209: else if(servos == 2){
  6646  000FA6  0E02               	movlw	2
  6647  000FA8  184A               	xorwf	_servos^0,w,c
  6648  000FAA  104B               	iorwf	(_servos+1)^0,w,c
  6649  000FAC  A4D8               	btfss	status,2,c
  6650  000FAE  EFDB  F007         	goto	i2u335_41
  6651  000FB2  EFDD  F007         	goto	i2u335_40
  6652  000FB6                     i2u335_41:
  6653  000FB6  EFE3  F007         	goto	i2l3668
  6654  000FBA                     i2u335_40:
  6655  000FBA                     
  6656                           ;Main_Robot_I2C_Serial_LCD.c: 210: angle_servos[2] = Angle;
  6657  000FBA  C032  F064         	movff	_Angle,_angle_servos+4
  6658  000FBE  C033  F065         	movff	_Angle+1,_angle_servos+5
  6659                           
  6660                           ;Main_Robot_I2C_Serial_LCD.c: 211: }
  6661  000FC2  EF13  F008         	goto	i2l3680
  6662  000FC6                     i2l3668:
  6663                           
  6664                           ;Main_Robot_I2C_Serial_LCD.c: 212: else if(servos == 3){
  6665  000FC6  0E03               	movlw	3
  6666  000FC8  184A               	xorwf	_servos^0,w,c
  6667  000FCA  104B               	iorwf	(_servos+1)^0,w,c
  6668  000FCC  A4D8               	btfss	status,2,c
  6669  000FCE  EFEB  F007         	goto	i2u336_41
  6670  000FD2  EFED  F007         	goto	i2u336_40
  6671  000FD6                     i2u336_41:
  6672  000FD6  EFF3  F007         	goto	i2l3672
  6673  000FDA                     i2u336_40:
  6674  000FDA                     
  6675                           ;Main_Robot_I2C_Serial_LCD.c: 213: angle_servos[3] = Angle;
  6676  000FDA  C032  F066         	movff	_Angle,_angle_servos+6
  6677  000FDE  C033  F067         	movff	_Angle+1,_angle_servos+7
  6678                           
  6679                           ;Main_Robot_I2C_Serial_LCD.c: 214: }
  6680  000FE2  EF13  F008         	goto	i2l3680
  6681  000FE6                     i2l3672:
  6682                           
  6683                           ;Main_Robot_I2C_Serial_LCD.c: 215: else if(servos == 4){
  6684  000FE6  0E04               	movlw	4
  6685  000FE8  184A               	xorwf	_servos^0,w,c
  6686  000FEA  104B               	iorwf	(_servos+1)^0,w,c
  6687  000FEC  A4D8               	btfss	status,2,c
  6688  000FEE  EFFB  F007         	goto	i2u337_41
  6689  000FF2  EFFD  F007         	goto	i2u337_40
  6690  000FF6                     i2u337_41:
  6691  000FF6  EF03  F008         	goto	i2l3676
  6692  000FFA                     i2u337_40:
  6693  000FFA                     
  6694                           ;Main_Robot_I2C_Serial_LCD.c: 216: angle_servos[4] = Angle;
  6695  000FFA  C032  F068         	movff	_Angle,_angle_servos+8
  6696  000FFE  C033  F069         	movff	_Angle+1,_angle_servos+9
  6697                           
  6698                           ;Main_Robot_I2C_Serial_LCD.c: 217: }
  6699  001002  EF13  F008         	goto	i2l3680
  6700  001006                     i2l3676:
  6701                           
  6702                           ;Main_Robot_I2C_Serial_LCD.c: 218: else if(servos == 5){
  6703  001006  0E05               	movlw	5
  6704  001008  184A               	xorwf	_servos^0,w,c
  6705  00100A  104B               	iorwf	(_servos+1)^0,w,c
  6706  00100C  A4D8               	btfss	status,2,c
  6707  00100E  EF0B  F008         	goto	i2u338_41
  6708  001012  EF0D  F008         	goto	i2u338_40
  6709  001016                     i2u338_41:
  6710  001016  EF13  F008         	goto	i2l195
  6711  00101A                     i2u338_40:
  6712  00101A                     
  6713                           ;Main_Robot_I2C_Serial_LCD.c: 219: angle_servos[5] = Angle;
  6714  00101A  C032  F06A         	movff	_Angle,_angle_servos+10
  6715  00101E  C033  F06B         	movff	_Angle+1,_angle_servos+11
  6716                           
  6717                           ;Main_Robot_I2C_Serial_LCD.c: 220: }
  6718  001022  EF13  F008         	goto	i2l3680
  6719  001026                     i2l195:
  6720  001026                     i2l3680:
  6721                           
  6722                           ;Main_Robot_I2C_Serial_LCD.c: 222: mover_servo(servos,Angle);
  6723  001026  C04A  F01B         	movff	_servos,i2mover_servo@servo
  6724  00102A  C04B  F01C         	movff	_servos+1,i2mover_servo@servo+1
  6725  00102E  C032  F01D         	movff	_Angle,i2mover_servo@angulo
  6726  001032  C033  F01E         	movff	_Angle+1,i2mover_servo@angulo+1
  6727  001036  ECED  F011         	call	i2_mover_servo	;wreg free
  6728  00103A  EFDD  F008         	goto	i2l212
  6729  00103E                     i2l3682:
  6730                           
  6731                           ;Main_Robot_I2C_Serial_LCD.c: 225: else if(flag == 3){
  6732  00103E  0E03               	movlw	3
  6733  001040  183D               	xorwf	_flag^0,w,c
  6734  001042  A4D8               	btfss	status,2,c
  6735  001044  EF26  F008         	goto	i2u339_41
  6736  001048  EF28  F008         	goto	i2u339_40
  6737  00104C                     i2u339_41:
  6738  00104C  EF2C  F008         	goto	i2l3686
  6739  001050                     i2u339_40:
  6740  001050                     
  6741                           ;Main_Robot_I2C_Serial_LCD.c: 226: flag = 4;
  6742  001050  0E04               	movlw	4
  6743  001052  6E3D               	movwf	_flag^0,c
  6744                           
  6745                           ;Main_Robot_I2C_Serial_LCD.c: 227: }
  6746  001054  EFDD  F008         	goto	i2l212
  6747  001058                     i2l3686:
  6748                           
  6749                           ;Main_Robot_I2C_Serial_LCD.c: 228: else if(flag == 4){
  6750  001058  0E04               	movlw	4
  6751  00105A  183D               	xorwf	_flag^0,w,c
  6752  00105C  A4D8               	btfss	status,2,c
  6753  00105E  EF33  F008         	goto	i2u340_41
  6754  001062  EF35  F008         	goto	i2u340_40
  6755  001066                     i2u340_41:
  6756  001066  EFDD  F008         	goto	i2l212
  6757  00106A                     i2u340_40:
  6758  00106A                     
  6759                           ;Main_Robot_I2C_Serial_LCD.c: 229: if(coor <= 2){
  6760  00106A  BE31               	btfsc	(_coor+1)^0,7,c
  6761  00106C  EF43  F008         	goto	i2u341_40
  6762  001070  5031               	movf	(_coor+1)^0,w,c
  6763  001072  E107               	bnz	i2u341_41
  6764  001074  0E03               	movlw	3
  6765  001076  5C30               	subwf	_coor^0,w,c
  6766  001078  B0D8               	btfsc	status,0,c
  6767  00107A  EF41  F008         	goto	i2u341_41
  6768  00107E  EF43  F008         	goto	i2u341_40
  6769  001082                     i2u341_41:
  6770  001082  EF63  F008         	goto	i2l3698
  6771  001086                     i2u341_40:
  6772  001086                     
  6773                           ;Main_Robot_I2C_Serial_LCD.c: 230: coor++;
  6774  001086  4A30               	infsnz	_coor^0,f,c
  6775  001088  2A31               	incf	(_coor+1)^0,f,c
  6776  00108A                     
  6777                           ;Main_Robot_I2C_Serial_LCD.c: 231: coordinate_x[coor] = d;
  6778  00108A  0E44               	movlw	low _coordinate_x
  6779  00108C  2430               	addwf	_coor^0,w,c
  6780  00108E  6ED9               	movwf	fsr2l,c
  6781  001090  0E00               	movlw	high _coordinate_x
  6782  001092  2031               	addwfc	(_coor+1)^0,w,c
  6783  001094  6EDA               	movwf	fsr2h,c
  6784  001096  C03C  FFDF         	movff	_d,indf2
  6785  00109A                     
  6786                           ;Main_Robot_I2C_Serial_LCD.c: 232: if(coor == 2){
  6787  00109A  0E02               	movlw	2
  6788  00109C  1830               	xorwf	_coor^0,w,c
  6789  00109E  1031               	iorwf	(_coor+1)^0,w,c
  6790  0010A0  A4D8               	btfss	status,2,c
  6791  0010A2  EF55  F008         	goto	i2u342_41
  6792  0010A6  EF57  F008         	goto	i2u342_40
  6793  0010AA                     i2u342_41:
  6794  0010AA  EFDD  F008         	goto	i2l212
  6795  0010AE                     i2u342_40:
  6796  0010AE                     
  6797                           ;Main_Robot_I2C_Serial_LCD.c: 233: Coordinate_x = atoi(coordinate_x);
  6798  0010AE  0E44               	movlw	low _coordinate_x
  6799  0010B0  6E0F               	movwf	atoi@s^0,c
  6800  0010B2  0E00               	movlw	high _coordinate_x
  6801  0010B4  6E10               	movwf	(atoi@s+1)^0,c
  6802  0010B6  ECD3  F00E         	call	_atoi	;wreg free
  6803  0010BA  C00F  F02C         	movff	?_atoi,_Coordinate_x
  6804  0010BE  C010  F02D         	movff	?_atoi+1,_Coordinate_x+1
  6805  0010C2  EFDD  F008         	goto	i2l212
  6806  0010C6                     i2l3698:
  6807                           
  6808                           ;Main_Robot_I2C_Serial_LCD.c: 236: else if(coor >= 3 && coor <= 5){
  6809  0010C6  BE31               	btfsc	(_coor+1)^0,7,c
  6810  0010C8  EF6F  F008         	goto	i2u343_41
  6811  0010CC  5031               	movf	(_coor+1)^0,w,c
  6812  0010CE  E109               	bnz	i2u343_40
  6813  0010D0  0E03               	movlw	3
  6814  0010D2  5C30               	subwf	_coor^0,w,c
  6815  0010D4  A0D8               	btfss	status,0,c
  6816  0010D6  EF6F  F008         	goto	i2u343_41
  6817  0010DA  EF71  F008         	goto	i2u343_40
  6818  0010DE                     i2u343_41:
  6819  0010DE  EF9F  F008         	goto	i2l3710
  6820  0010E2                     i2u343_40:
  6821  0010E2  BE31               	btfsc	(_coor+1)^0,7,c
  6822  0010E4  EF7F  F008         	goto	i2u344_40
  6823  0010E8  5031               	movf	(_coor+1)^0,w,c
  6824  0010EA  E107               	bnz	i2u344_41
  6825  0010EC  0E06               	movlw	6
  6826  0010EE  5C30               	subwf	_coor^0,w,c
  6827  0010F0  B0D8               	btfsc	status,0,c
  6828  0010F2  EF7D  F008         	goto	i2u344_41
  6829  0010F6  EF7F  F008         	goto	i2u344_40
  6830  0010FA                     i2u344_41:
  6831  0010FA  EF9F  F008         	goto	i2l3710
  6832  0010FE                     i2u344_40:
  6833  0010FE                     
  6834                           ;Main_Robot_I2C_Serial_LCD.c: 237: coor++;
  6835  0010FE  4A30               	infsnz	_coor^0,f,c
  6836  001100  2A31               	incf	(_coor+1)^0,f,c
  6837  001102                     
  6838                           ;Main_Robot_I2C_Serial_LCD.c: 238: coordinate_y[coor] = d;
  6839  001102  0E41               	movlw	low _coordinate_y
  6840  001104  2430               	addwf	_coor^0,w,c
  6841  001106  6ED9               	movwf	fsr2l,c
  6842  001108  0E00               	movlw	high _coordinate_y
  6843  00110A  2031               	addwfc	(_coor+1)^0,w,c
  6844  00110C  6EDA               	movwf	fsr2h,c
  6845  00110E  C03C  FFDF         	movff	_d,indf2
  6846  001112                     
  6847                           ;Main_Robot_I2C_Serial_LCD.c: 239: if(coor == 2){
  6848  001112  0E02               	movlw	2
  6849  001114  1830               	xorwf	_coor^0,w,c
  6850  001116  1031               	iorwf	(_coor+1)^0,w,c
  6851  001118  A4D8               	btfss	status,2,c
  6852  00111A  EF91  F008         	goto	i2u345_41
  6853  00111E  EF93  F008         	goto	i2u345_40
  6854  001122                     i2u345_41:
  6855  001122  EF55  F007         	goto	i2l175
  6856  001126                     i2u345_40:
  6857  001126                     
  6858                           ;Main_Robot_I2C_Serial_LCD.c: 240: Coordinate_y = atoi(coordinate_y);
  6859  001126  0E41               	movlw	low _coordinate_y
  6860  001128  6E0F               	movwf	atoi@s^0,c
  6861  00112A  0E00               	movlw	high _coordinate_y
  6862  00112C  6E10               	movwf	(atoi@s+1)^0,c
  6863  00112E  ECD3  F00E         	call	_atoi	;wreg free
  6864  001132  C00F  F02E         	movff	?_atoi,_Coordinate_y
  6865  001136  C010  F02F         	movff	?_atoi+1,_Coordinate_y+1
  6866  00113A  EFDD  F008         	goto	i2l212
  6867  00113E                     i2l3710:
  6868                           
  6869                           ;Main_Robot_I2C_Serial_LCD.c: 243: else if(coor >= 6 && coor <= 8){
  6870  00113E  BE31               	btfsc	(_coor+1)^0,7,c
  6871  001140  EFAB  F008         	goto	i2u346_41
  6872  001144  5031               	movf	(_coor+1)^0,w,c
  6873  001146  E109               	bnz	i2u346_40
  6874  001148  0E06               	movlw	6
  6875  00114A  5C30               	subwf	_coor^0,w,c
  6876  00114C  A0D8               	btfss	status,0,c
  6877  00114E  EFAB  F008         	goto	i2u346_41
  6878  001152  EFAD  F008         	goto	i2u346_40
  6879  001156                     i2u346_41:
  6880  001156  EF55  F007         	goto	i2l175
  6881  00115A                     i2u346_40:
  6882  00115A  BE31               	btfsc	(_coor+1)^0,7,c
  6883  00115C  EFBB  F008         	goto	i2u347_40
  6884  001160  5031               	movf	(_coor+1)^0,w,c
  6885  001162  E107               	bnz	i2u347_41
  6886  001164  0E09               	movlw	9
  6887  001166  5C30               	subwf	_coor^0,w,c
  6888  001168  B0D8               	btfsc	status,0,c
  6889  00116A  EFB9  F008         	goto	i2u347_41
  6890  00116E  EFBB  F008         	goto	i2u347_40
  6891  001172                     i2u347_41:
  6892  001172  EF55  F007         	goto	i2l175
  6893  001176                     i2u347_40:
  6894  001176                     
  6895                           ;Main_Robot_I2C_Serial_LCD.c: 244: coor++;
  6896  001176  4A30               	infsnz	_coor^0,f,c
  6897  001178  2A31               	incf	(_coor+1)^0,f,c
  6898  00117A                     
  6899                           ;Main_Robot_I2C_Serial_LCD.c: 245: coordinate_z[coor] = d;
  6900  00117A  0E3E               	movlw	low _coordinate_z
  6901  00117C  2430               	addwf	_coor^0,w,c
  6902  00117E  6ED9               	movwf	fsr2l,c
  6903  001180  0E00               	movlw	high _coordinate_z
  6904  001182  2031               	addwfc	(_coor+1)^0,w,c
  6905  001184  6EDA               	movwf	fsr2h,c
  6906  001186  C03C  FFDF         	movff	_d,indf2
  6907  00118A                     
  6908                           ;Main_Robot_I2C_Serial_LCD.c: 246: if(coor == 2){
  6909  00118A  0E02               	movlw	2
  6910  00118C  1830               	xorwf	_coor^0,w,c
  6911  00118E  1031               	iorwf	(_coor+1)^0,w,c
  6912  001190  A4D8               	btfss	status,2,c
  6913  001192  EFCD  F008         	goto	i2u348_41
  6914  001196  EFCF  F008         	goto	i2u348_40
  6915  00119A                     i2u348_41:
  6916  00119A  EFD9  F008         	goto	i2l3722
  6917  00119E                     i2u348_40:
  6918  00119E                     
  6919                           ;Main_Robot_I2C_Serial_LCD.c: 247: Coordinate_z = atoi(coordinate_z);
  6920  00119E  0E3E               	movlw	low _coordinate_z
  6921  0011A0  6E0F               	movwf	atoi@s^0,c
  6922  0011A2  0E00               	movlw	high _coordinate_z
  6923  0011A4  6E10               	movwf	(atoi@s+1)^0,c
  6924  0011A6  ECD3  F00E         	call	_atoi	;wreg free
  6925  0011AA  C00F  F02A         	movff	?_atoi,_Coordinate_z
  6926  0011AE  C010  F02B         	movff	?_atoi+1,_Coordinate_z+1
  6927  0011B2                     i2l3722:
  6928                           
  6929                           ;Main_Robot_I2C_Serial_LCD.c: 248: };Main_Robot_I2C_Serial_LCD.c: 249: coor = 0;
  6930  0011B2  0E00               	movlw	0
  6931  0011B4  6E31               	movwf	(_coor+1)^0,c
  6932  0011B6  0E00               	movlw	0
  6933  0011B8  6E30               	movwf	_coor^0,c
  6934  0011BA                     i2l212:
  6935  0011BA  0012               	return		;funcret
  6936  0011BC                     __end_of_algoritm:
  6937                           	callstack 0
  6938                           
  6939 ;; *************** function i2_mover_servo *****************
  6940 ;; Defined at:
  6941 ;;		line 385 in file "Main_Robot_I2C_Serial_LCD.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  servo           2   26[COMRAM] int 
  6944 ;;  angulo          2   28[COMRAM] int 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6956 ;;      Params:         4       0       0       0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6958 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6959 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6960 ;;Total ram usage:        6 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    3
  6963 ;; This function calls:
  6964 ;;		i2_map
  6965 ;;		i2_sprintf
  6966 ;;		i2_start
  6967 ;;		i2_writeI2C
  6968 ;; This function is called by:
  6969 ;;		_algoritm
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text35
  6974  0023DA                     __ptext35:
  6975                           	callstack 0
  6976  0023DA                     i2_mover_servo:
  6977                           	callstack 20
  6978  0023DA                     
  6979                           ;Main_Robot_I2C_Serial_LCD.c: 386: pos = map (angulo, 0 , 180 , 110, 510);
  6980  0023DA  C01D  F00F         	movff	i2mover_servo@angulo,i2map@x
  6981  0023DE  C01E  F010         	movff	i2mover_servo@angulo+1,i2map@x+1
  6982  0023E2  0E00               	movlw	0
  6983  0023E4  6E12               	movwf	(i2map@In_Min+1)^0,c
  6984  0023E6  0E00               	movlw	0
  6985  0023E8  6E11               	movwf	i2map@In_Min^0,c
  6986  0023EA  0E00               	movlw	0
  6987  0023EC  6E14               	movwf	(i2map@In_Max+1)^0,c
  6988  0023EE  0EB4               	movlw	180
  6989  0023F0  6E13               	movwf	i2map@In_Max^0,c
  6990  0023F2  0E00               	movlw	0
  6991  0023F4  6E16               	movwf	(i2map@Out_Min+1)^0,c
  6992  0023F6  0E6E               	movlw	110
  6993  0023F8  6E15               	movwf	i2map@Out_Min^0,c
  6994  0023FA  0E01               	movlw	1
  6995  0023FC  6E18               	movwf	(i2map@Out_Max+1)^0,c
  6996  0023FE  0EFE               	movlw	254
  6997  002400  6E17               	movwf	i2map@Out_Max^0,c
  6998  002402  EC7C  F015         	call	i2_map	;wreg free
  6999  002406  C00F  F06C         	movff	?i2_map,_pos
  7000  00240A  C010  F06D         	movff	?i2_map+1,_pos+1
  7001  00240E                     
  7002                           ;Main_Robot_I2C_Serial_LCD.c: 387: data2[2] = pos;
  7003  00240E  C06C  F0A8         	movff	_pos,_data2+2
  7004  002412                     
  7005                           ;Main_Robot_I2C_Serial_LCD.c: 388: data2[3] = pos >> 8;
  7006  002412  0100               	movlb	0	; () banked
  7007  002414  516D               	movf	(_pos+1)& (0+255),w,b
  7008  002416  6FA9               	movwf	(_data2+3)& (0+255),b
  7009  002418                     
  7010                           ; BSR set to: 0
  7011                           ;Main_Robot_I2C_Serial_LCD.c: 389: writeI2C(0x80, 0x06 + (4 * servo), data2, 4);
  7012  002418  501B               	movf	i2mover_servo@servo^0,w,c
  7013  00241A  0D04               	mullw	4
  7014  00241C  50F3               	movf	243,w,c
  7015  00241E  0F06               	addlw	6
  7016  002420  6E03               	movwf	i2writeI2C@Register^0,c
  7017  002422  0EA6               	movlw	low _data2
  7018  002424  6E04               	movwf	i2writeI2C@Data^0,c
  7019  002426  0E00               	movlw	high _data2
  7020  002428  6E05               	movwf	(i2writeI2C@Data+1)^0,c
  7021  00242A  0E00               	movlw	0
  7022  00242C  6E07               	movwf	(i2writeI2C@bytes+1)^0,c
  7023  00242E  0E04               	movlw	4
  7024  002430  6E06               	movwf	i2writeI2C@bytes^0,c
  7025  002432  0E80               	movlw	128
  7026  002434  ECF0  F013         	call	i2_writeI2C
  7027  002438                     
  7028                           ;Main_Robot_I2C_Serial_LCD.c: 390: sprintf(text," Servo: %d \n",servo);
  7029  002438  0E6E               	movlw	low _text
  7030  00243A  6E0D               	movwf	i2sprintf@sp^0,c
  7031  00243C  0E00               	movlw	high _text
  7032  00243E  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  7033  002440  0E56               	movlw	low STR_7
  7034  002442  6E0F               	movwf	i2sprintf@f^0,c
  7035  002444  0E08               	movlw	high STR_7
  7036  002446  6E10               	movwf	(i2sprintf@f+1)^0,c
  7037  002448  C01B  F011         	movff	i2mover_servo@servo,?i2_sprintf+4
  7038  00244C  C01C  F012         	movff	i2mover_servo@servo+1,?i2_sprintf+5
  7039  002450  ECF1  F00D         	call	i2_sprintf	;wreg free
  7040  002454                     
  7041                           ;Main_Robot_I2C_Serial_LCD.c: 391: start();
  7042  002454  EC0C  F015         	call	i2_start	;wreg free
  7043  002458                     
  7044                           ;Main_Robot_I2C_Serial_LCD.c: 392: sprintf(text," Angulo: %d \n",angulo);
  7045  002458  0E6E               	movlw	low _text
  7046  00245A  6E0D               	movwf	i2sprintf@sp^0,c
  7047  00245C  0E00               	movlw	high _text
  7048  00245E  6E0E               	movwf	(i2sprintf@sp+1)^0,c
  7049  002460  0E48               	movlw	low STR_8
  7050  002462  6E0F               	movwf	i2sprintf@f^0,c
  7051  002464  0E08               	movlw	high STR_8
  7052  002466  6E10               	movwf	(i2sprintf@f+1)^0,c
  7053  002468  C01D  F011         	movff	i2mover_servo@angulo,?i2_sprintf+4
  7054  00246C  C01E  F012         	movff	i2mover_servo@angulo+1,?i2_sprintf+5
  7055  002470  ECF1  F00D         	call	i2_sprintf	;wreg free
  7056  002474                     
  7057                           ;Main_Robot_I2C_Serial_LCD.c: 393: start();
  7058  002474  EC0C  F015         	call	i2_start	;wreg free
  7059  002478                     
  7060                           ;Main_Robot_I2C_Serial_LCD.c: 394: _delay((unsigned long)((1000)*(8000000/4000.0)));
  7061  002478  0E0B               	movlw	11
  7062  00247A  6E20               	movwf	(??i2_mover_servo+1)^0,c
  7063  00247C  0E26               	movlw	38
  7064  00247E  6E1F               	movwf	??i2_mover_servo^0,c
  7065  002480  0E5E               	movlw	94
  7066  002482                     i2u483_47:
  7067  002482  2EE8               	decfsz	wreg,f,c
  7068  002484  D7FE               	bra	i2u483_47
  7069  002486  2E1F               	decfsz	??i2_mover_servo^0,f,c
  7070  002488  D7FC               	bra	i2u483_47
  7071  00248A  2E20               	decfsz	(??i2_mover_servo+1)^0,f,c
  7072  00248C  D7FA               	bra	i2u483_47
  7073  00248E  0012               	return		;funcret
  7074  002490                     __end_ofi2_mover_servo:
  7075                           	callstack 0
  7076                           
  7077 ;; *************** function i2_writeI2C *****************
  7078 ;; Defined at:
  7079 ;;		line 278 in file "Main_Robot_I2C_Serial_LCD.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  Address         1    wreg     unsigned char 
  7082 ;;  Register        1    2[COMRAM] unsigned char 
  7083 ;;  Data            2    3[COMRAM] PTR unsigned char 
  7084 ;;		 -> data2(4), d1(1), setPWMFreq@newmode(1), data1(1), 
  7085 ;;		 -> setPWMFreq@prescale(1), RAM(2047), 
  7086 ;;  bytes           2    5[COMRAM] int 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  Address         1    9[COMRAM] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7098 ;;      Params:         5       0       0       0       0       0       0       0       0
  7099 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7100 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7101 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7102 ;;Total ram usage:        8 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    2
  7105 ;; This function calls:
  7106 ;;		i2_sendI2C
  7107 ;;		i2_startI2C
  7108 ;;		i2_stopI2C
  7109 ;; This function is called by:
  7110 ;;		i2_mover_servo
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text36
  7115  0027E0                     __ptext36:
  7116                           	callstack 0
  7117  0027E0                     i2_writeI2C:
  7118                           	callstack 20
  7119                           
  7120                           ;incstack = 0
  7121                           ;i2writeI2C@Address stored from wreg
  7122  0027E0  6E0A               	movwf	i2writeI2C@Address^0,c
  7123  0027E2                     
  7124                           ;Main_Robot_I2C_Serial_LCD.c: 279: startI2C();
  7125  0027E2  ECCC  F016         	call	i2_startI2C	;wreg free
  7126                           
  7127                           ;Main_Robot_I2C_Serial_LCD.c: 280: sendI2C(Address);
  7128  0027E6  500A               	movf	i2writeI2C@Address^0,w,c
  7129  0027E8  ECB6  F016         	call	i2_sendI2C
  7130                           
  7131                           ;Main_Robot_I2C_Serial_LCD.c: 281: sendI2C(Register);
  7132  0027EC  5003               	movf	i2writeI2C@Register^0,w,c
  7133  0027EE  ECB6  F016         	call	i2_sendI2C
  7134  0027F2                     
  7135                           ;Main_Robot_I2C_Serial_LCD.c: 282: for(i=0;i<bytes;i++){
  7136  0027F2  0E00               	movlw	0
  7137  0027F4  6E3B               	movwf	(_i+1)^0,c
  7138  0027F6  0E00               	movlw	0
  7139  0027F8  6E3A               	movwf	_i^0,c
  7140  0027FA  EF0A  F014         	goto	i2l3290
  7141  0027FE                     i2l3284:
  7142                           
  7143                           ;Main_Robot_I2C_Serial_LCD.c: 283: sendI2C(*Data);
  7144  0027FE  C004  FFD9         	movff	i2writeI2C@Data,fsr2l
  7145  002802  C005  FFDA         	movff	i2writeI2C@Data+1,fsr2h
  7146  002806  50DF               	movf	indf2,w,c
  7147  002808  ECB6  F016         	call	i2_sendI2C
  7148  00280C                     
  7149                           ;Main_Robot_I2C_Serial_LCD.c: 284: Data++;
  7150  00280C  4A04               	infsnz	i2writeI2C@Data^0,f,c
  7151  00280E  2A05               	incf	(i2writeI2C@Data+1)^0,f,c
  7152  002810  4A3A               	infsnz	_i^0,f,c
  7153  002812  2A3B               	incf	(_i+1)^0,f,c
  7154  002814                     i2l3290:
  7155  002814  5006               	movf	i2writeI2C@bytes^0,w,c
  7156  002816  5C3A               	subwf	_i^0,w,c
  7157  002818  503B               	movf	(_i+1)^0,w,c
  7158  00281A  0A80               	xorlw	128
  7159  00281C  6E08               	movwf	??i2_writeI2C^0,c
  7160  00281E  5007               	movf	(i2writeI2C@bytes+1)^0,w,c
  7161  002820  0A80               	xorlw	128
  7162  002822  5808               	subwfb	??i2_writeI2C^0,w,c
  7163  002824  A0D8               	btfss	status,0,c
  7164  002826  EF17  F014         	goto	i2u299_41
  7165  00282A  EF19  F014         	goto	i2u299_40
  7166  00282E                     i2u299_41:
  7167  00282E  EFFF  F013         	goto	i2l3284
  7168  002832                     i2u299_40:
  7169  002832                     
  7170                           ;Main_Robot_I2C_Serial_LCD.c: 285: };Main_Robot_I2C_Serial_LCD.c: 286: stopI2C();
  7171  002832  ECC8  F016         	call	i2_stopI2C	;wreg free
  7172  002836                     
  7173                           ;Main_Robot_I2C_Serial_LCD.c: 287: _delay((unsigned long)((100)*(8000000/4000.0)));
  7174  002836  0E02               	movlw	2
  7175  002838  6E09               	movwf	(??i2_writeI2C+1)^0,c
  7176  00283A  0E04               	movlw	4
  7177  00283C  6E08               	movwf	??i2_writeI2C^0,c
  7178  00283E  0EBA               	movlw	186
  7179  002840                     i2u484_47:
  7180  002840  2EE8               	decfsz	wreg,f,c
  7181  002842  D7FE               	bra	i2u484_47
  7182  002844  2E08               	decfsz	??i2_writeI2C^0,f,c
  7183  002846  D7FC               	bra	i2u484_47
  7184  002848  2E09               	decfsz	(??i2_writeI2C+1)^0,f,c
  7185  00284A  D7FA               	bra	i2u484_47
  7186  00284C  D000               	nop2	
  7187  00284E  0012               	return		;funcret
  7188  002850                     __end_ofi2_writeI2C:
  7189                           	callstack 0
  7190                           
  7191 ;; *************** function i2_stopI2C *****************
  7192 ;; Defined at:
  7193 ;;		line 304 in file "Main_Robot_I2C_Serial_LCD.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, status,2, status,0, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    1
  7214 ;; This function calls:
  7215 ;;		i2_readyI2C
  7216 ;; This function is called by:
  7217 ;;		i2_writeI2C
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text37
  7222  002D90                     __ptext37:
  7223                           	callstack 0
  7224  002D90                     i2_stopI2C:
  7225                           	callstack 20
  7226  002D90                     
  7227                           ;Main_Robot_I2C_Serial_LCD.c: 306: readyI2C();
  7228  002D90  EC51  F016         	call	i2_readyI2C	;wreg free
  7229  002D94                     
  7230                           ;Main_Robot_I2C_Serial_LCD.c: 307: PEN = 1;
  7231  002D94  84C5               	bsf	4037,2,c	;volatile
  7232  002D96  0012               	return		;funcret
  7233  002D98                     __end_ofi2_stopI2C:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function i2_startI2C *****************
  7237 ;; Defined at:
  7238 ;;		line 290 in file "Main_Robot_I2C_Serial_LCD.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;		None
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;		None
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2, status,0, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7252 ;;      Params:         0       0       0       0       0       0       0       0       0
  7253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7255 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7256 ;;Total ram usage:        0 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:    1
  7259 ;; This function calls:
  7260 ;;		i2_readyI2C
  7261 ;; This function is called by:
  7262 ;;		i2_writeI2C
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text38
  7267  002D98                     __ptext38:
  7268                           	callstack 0
  7269  002D98                     i2_startI2C:
  7270                           	callstack 20
  7271  002D98                     
  7272                           ;Main_Robot_I2C_Serial_LCD.c: 291: readyI2C();
  7273  002D98  EC51  F016         	call	i2_readyI2C	;wreg free
  7274  002D9C                     
  7275                           ;Main_Robot_I2C_Serial_LCD.c: 292: SEN = 1;
  7276  002D9C  80C5               	bsf	4037,0,c	;volatile
  7277  002D9E  0012               	return		;funcret
  7278  002DA0                     __end_ofi2_startI2C:
  7279                           	callstack 0
  7280                           
  7281 ;; *************** function i2_sendI2C *****************
  7282 ;; Defined at:
  7283 ;;		line 299 in file "Main_Robot_I2C_Serial_LCD.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  data            1    wreg     unsigned char 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  data            1    1[COMRAM] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0
  7298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7300 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:        1 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    1
  7304 ;; This function calls:
  7305 ;;		i2_readyI2C
  7306 ;; This function is called by:
  7307 ;;		i2_writeI2C
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text39
  7312  002D6C                     __ptext39:
  7313                           	callstack 0
  7314  002D6C                     i2_sendI2C:
  7315                           	callstack 20
  7316                           
  7317                           ;incstack = 0
  7318                           ;i2sendI2C@data stored from wreg
  7319  002D6C  6E02               	movwf	i2sendI2C@data^0,c
  7320  002D6E                     
  7321                           ;Main_Robot_I2C_Serial_LCD.c: 300: readyI2C();
  7322  002D6E  EC51  F016         	call	i2_readyI2C	;wreg free
  7323  002D72                     
  7324                           ;Main_Robot_I2C_Serial_LCD.c: 301: SSPBUF = data;
  7325  002D72  C002  FFC9         	movff	i2sendI2C@data,4041	;volatile
  7326  002D76  0012               	return		;funcret
  7327  002D78                     __end_ofi2_sendI2C:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function i2_readyI2C *****************
  7331 ;; Defined at:
  7332 ;;		line 295 in file "Main_Robot_I2C_Serial_LCD.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7348 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7349 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7350 ;;Total ram usage:        1 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		i2_startI2C
  7356 ;;		i2_sendI2C
  7357 ;;		i2_stopI2C
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text40
  7362  002CA2                     __ptext40:
  7363                           	callstack 0
  7364  002CA2                     i2_readyI2C:
  7365                           	callstack 20
  7366  002CA2                     i2l2454:
  7367  002CA2  CFC5 F001          	movff	4037,??i2_readyI2C	;volatile
  7368  002CA6  0E1F               	movlw	31
  7369  002CA8  1601               	andwf	??i2_readyI2C^0,f,c
  7370  002CAA  A4D8               	btfss	status,2,c
  7371  002CAC  EF5A  F016         	goto	i2u179_41
  7372  002CB0  EF5C  F016         	goto	i2u179_40
  7373  002CB4                     i2u179_41:
  7374  002CB4  EF51  F016         	goto	i2l2454
  7375  002CB8                     i2u179_40:
  7376  002CB8  B4C7               	btfsc	199,2,c	;volatile
  7377  002CBA  EF61  F016         	goto	i2u180_41
  7378  002CBE  EF63  F016         	goto	i2u180_40
  7379  002CC2                     i2u180_41:
  7380  002CC2  EF51  F016         	goto	i2l2454
  7381  002CC6                     i2u180_40:
  7382  002CC6  0012               	return		;funcret
  7383  002CC8                     __end_ofi2_readyI2C:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function i2_start *****************
  7387 ;; Defined at:
  7388 ;;		line 266 in file "Main_Robot_I2C_Serial_LCD.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    1
  7409 ;; This function calls:
  7410 ;;		i2_strlen
  7411 ;; This function is called by:
  7412 ;;		_algoritm
  7413 ;;		_receive
  7414 ;;		i2_mover_servo
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text41
  7419  002A18                     __ptext41:
  7420                           	callstack 0
  7421  002A18                     i2_start:
  7422                           	callstack 23
  7423  002A18                     
  7424                           ;Main_Robot_I2C_Serial_LCD.c: 267: for(i=0;i<=strlen(text);i++){
  7425  002A18  0E00               	movlw	0
  7426  002A1A  6E3B               	movwf	(_i+1)^0,c
  7427  002A1C  0E00               	movlw	0
  7428  002A1E  6E3A               	movwf	_i^0,c
  7429  002A20  EF23  F015         	goto	i2l3278
  7430  002A24                     i2l223:
  7431  002A24  A89E               	btfss	3998,4,c	;volatile
  7432  002A26  EF17  F015         	goto	i2u297_41
  7433  002A2A  EF19  F015         	goto	i2u297_40
  7434  002A2E                     i2u297_41:
  7435  002A2E  EF12  F015         	goto	i2l223
  7436  002A32                     i2u297_40:
  7437  002A32                     
  7438                           ;Main_Robot_I2C_Serial_LCD.c: 269: TXREG = text[i];
  7439  002A32  0E6E               	movlw	low _text
  7440  002A34  243A               	addwf	_i^0,w,c
  7441  002A36  6ED9               	movwf	fsr2l,c
  7442  002A38  0E00               	movlw	high _text
  7443  002A3A  203B               	addwfc	(_i+1)^0,w,c
  7444  002A3C  6EDA               	movwf	fsr2h,c
  7445  002A3E  50DF               	movf	indf2,w,c
  7446  002A40  6EAD               	movwf	173,c	;volatile
  7447  002A42  4A3A               	infsnz	_i^0,f,c
  7448  002A44  2A3B               	incf	(_i+1)^0,f,c
  7449  002A46                     i2l3278:
  7450  002A46  0E6E               	movlw	low _text
  7451  002A48  6E01               	movwf	i2strlen@s^0,c
  7452  002A4A  0E00               	movlw	high _text
  7453  002A4C  6E02               	movwf	(i2strlen@s+1)^0,c
  7454  002A4E  ECF5  F015         	call	i2_strlen	;wreg free
  7455  002A52  503A               	movf	_i^0,w,c
  7456  002A54  5C01               	subwf	?i2_strlen^0,w,c
  7457  002A56  503B               	movf	(_i+1)^0,w,c
  7458  002A58  5802               	subwfb	(?i2_strlen+1)^0,w,c
  7459  002A5A  B0D8               	btfsc	status,0,c
  7460  002A5C  EF32  F015         	goto	i2u298_41
  7461  002A60  EF34  F015         	goto	i2u298_40
  7462  002A64                     i2u298_41:
  7463  002A64  EF12  F015         	goto	i2l223
  7464  002A68                     i2u298_40:
  7465  002A68  0012               	return		;funcret
  7466  002A6A                     __end_ofi2_start:
  7467                           	callstack 0
  7468                           
  7469 ;; *************** function i2_strlen *****************
  7470 ;; Defined at:
  7471 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7474 ;;		 -> texto_LCD(16), text(40), 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  7477 ;;		 -> texto_LCD(16), text(40), 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  2    0[COMRAM] unsigned int 
  7480 ;; Registers used:
  7481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7487 ;;      Params:         2       0       0       0       0       0       0       0       0
  7488 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7490 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7491 ;;Total ram usage:        4 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		i2_start
  7497 ;;		i2_PrintDataLCD
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text42
  7502  002BEA                     __ptext42:
  7503                           	callstack 0
  7504  002BEA                     i2_strlen:
  7505                           	callstack 23
  7506  002BEA  C001  F003         	movff	i2strlen@s,i2strlen@cp
  7507  002BEE  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
  7508  002BF2  EFFD  F015         	goto	i2l2918
  7509  002BF6                     i2l2916:
  7510  002BF6  4A03               	infsnz	i2strlen@cp^0,f,c
  7511  002BF8  2A04               	incf	(i2strlen@cp+1)^0,f,c
  7512  002BFA                     i2l2918:
  7513  002BFA  C003  FFD9         	movff	i2strlen@cp,fsr2l
  7514  002BFE  C004  FFDA         	movff	i2strlen@cp+1,fsr2h
  7515  002C02  50DF               	movf	indf2,w,c
  7516  002C04  A4D8               	btfss	status,2,c
  7517  002C06  EF07  F016         	goto	i2u247_41
  7518  002C0A  EF09  F016         	goto	i2u247_40
  7519  002C0E                     i2u247_41:
  7520  002C0E  EFFB  F015         	goto	i2l2916
  7521  002C12                     i2u247_40:
  7522  002C12  5001               	movf	i2strlen@s^0,w,c
  7523  002C14  5C03               	subwf	i2strlen@cp^0,w,c
  7524  002C16  6E01               	movwf	?i2_strlen^0,c
  7525  002C18  5002               	movf	(i2strlen@s+1)^0,w,c
  7526  002C1A  5804               	subwfb	(i2strlen@cp+1)^0,w,c
  7527  002C1C  6E02               	movwf	(?i2_strlen+1)^0,c
  7528  002C1E  0012               	return		;funcret
  7529  002C20                     __end_ofi2_strlen:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function i2_sprintf *****************
  7533 ;; Defined at:
  7534 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  sp              2   12[COMRAM] PTR unsigned char 
  7537 ;;		 -> texto_LCD(16), text(40), 
  7538 ;;  f               2   14[COMRAM] PTR const unsigned char 
  7539 ;;		 -> STR_8(14), STR_7(13), STR_6(9), STR_5(30), 
  7540 ;;		 -> STR_4(17), STR_3(14), STR_2(9), STR_1(9), 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  tmpval          4    0        struct .
  7543 ;;  cp              3    0        PTR const unsigned char 
  7544 ;;  val             2   23[COMRAM] unsigned int 
  7545 ;;  ap              2   21[COMRAM] PTR void [1]
  7546 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  7547 ;;  len             2    0        unsigned int 
  7548 ;;  c               1   25[COMRAM] unsigned char 
  7549 ;;  prec            1   20[COMRAM] char 
  7550 ;;  flag            1   19[COMRAM] unsigned char 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  2   12[COMRAM] int 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7560 ;;      Params:         6       0       0       0       0       0       0       0       0
  7561 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7562 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7563 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7564 ;;Total ram usage:       14 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    1
  7567 ;; This function calls:
  7568 ;;		i2___lwdiv
  7569 ;;		i2___lwmod
  7570 ;; This function is called by:
  7571 ;;		_algoritm
  7572 ;;		_receive
  7573 ;;		i2_mover_servo
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text43
  7578  001BE2                     __ptext43:
  7579                           	callstack 0
  7580  001BE2                     i2_sprintf:
  7581                           	callstack 23
  7582  001BE2                     
  7583                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  7584  001BE2  0E11               	movlw	low (?i2_sprintf+4)
  7585  001BE4  6E16               	movwf	i2sprintf@ap^0,c
  7586  001BE6  0E00               	movlw	high (?i2_sprintf+4)
  7587  001BE8  6E17               	movwf	(i2sprintf@ap+1)^0,c
  7588                           
  7589                           ;doprnt.c: 553: while((c = *f++)) {
  7590  001BEA  EFBB  F00E         	goto	i2l3386
  7591  001BEE                     i2l3326:
  7592                           
  7593                           ;doprnt.c: 555: if(c != '%')
  7594  001BEE  0E25               	movlw	37
  7595  001BF0  181A               	xorwf	i2sprintf@c^0,w,c
  7596  001BF2  B4D8               	btfsc	status,2,c
  7597  001BF4  EFFE  F00D         	goto	i2u300_41
  7598  001BF8  EF00  F00E         	goto	i2u300_40
  7599  001BFC                     i2u300_41:
  7600  001BFC  EF0A  F00E         	goto	i2l3332
  7601  001C00                     i2u300_40:
  7602  001C00                     i2l3328:
  7603                           
  7604                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7605  001C00  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7606  001C04  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7607  001C08  C01A  FFDF         	movff	i2sprintf@c,indf2
  7608  001C0C  4A0D               	infsnz	i2sprintf@sp^0,f,c
  7609  001C0E  2A0E               	incf	(i2sprintf@sp+1)^0,f,c
  7610                           
  7611                           ;doprnt.c: 559: continue;
  7612  001C10  EFBB  F00E         	goto	i2l3386
  7613  001C14                     i2l3332:
  7614                           
  7615                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  7616  001C14  0E00               	movlw	0
  7617  001C16  6E14               	movwf	i2sprintf@flag^0,c
  7618                           
  7619                           ;doprnt.c: 661: switch(c = *f++) {
  7620  001C18  EF1A  F00E         	goto	i2l3344
  7621  001C1C                     i2l3334:
  7622                           
  7623                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  7624  001C1C  C016  FFD9         	movff	i2sprintf@ap,fsr2l
  7625  001C20  C017  FFDA         	movff	i2sprintf@ap+1,fsr2h
  7626  001C24  50DF               	movf	indf2,w,c
  7627  001C26  6E1A               	movwf	i2sprintf@c^0,c
  7628  001C28  0E02               	movlw	2
  7629  001C2A  2616               	addwf	i2sprintf@ap^0,f,c
  7630  001C2C  0E00               	movlw	0
  7631  001C2E  2217               	addwfc	(i2sprintf@ap+1)^0,f,c
  7632  001C30  EF00  F00E         	goto	i2l3328
  7633  001C34                     i2l3344:
  7634  001C34  C00F  FFF6         	movff	i2sprintf@f,tblptrl
  7635  001C38  C010  FFF7         	movff	i2sprintf@f+1,tblptrh
  7636  001C3C  4A0F               	infsnz	i2sprintf@f^0,f,c
  7637  001C3E  2A10               	incf	(i2sprintf@f+1)^0,f,c
  7638  001C40                     	if	0	;tblptru may be non-zero
  7639  001C40                     	endif
  7640  001C40                     	if	0	;tblptru may be non-zero
  7641  001C40                     	endif
  7642  001C40  0008               	tblrd		*
  7643  001C42  CFF5 F01A          	movff	tablat,i2sprintf@c
  7644  001C46  501A               	movf	i2sprintf@c^0,w,c
  7645                           
  7646                           ; Switch size 1, requested type "simple"
  7647                           ; Number of cases is 4, Range of values is 0 to 105
  7648                           ; switch strategies available:
  7649                           ; Name         Instructions Cycles
  7650                           ; simple_byte           13     7 (average)
  7651                           ;	Chosen strategy is simple_byte
  7652  001C48  0A00               	xorlw	0	; case 0
  7653  001C4A  B4D8               	btfsc	status,2,c
  7654  001C4C  EFCC  F00E         	goto	i2l3388
  7655  001C50  0A63               	xorlw	99	; case 99
  7656  001C52  B4D8               	btfsc	status,2,c
  7657  001C54  EF0E  F00E         	goto	i2l3334
  7658  001C58  0A07               	xorlw	7	; case 100
  7659  001C5A  B4D8               	btfsc	status,2,c
  7660  001C5C  EF36  F00E         	goto	i2l3346
  7661  001C60  0A0D               	xorlw	13	; case 105
  7662  001C62  B4D8               	btfsc	status,2,c
  7663  001C64  EF36  F00E         	goto	i2l3346
  7664  001C68  EF00  F00E         	goto	i2l3328
  7665  001C6C                     i2l3346:
  7666                           
  7667                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  7668  001C6C  C016  FFD9         	movff	i2sprintf@ap,fsr2l
  7669  001C70  C017  FFDA         	movff	i2sprintf@ap+1,fsr2h
  7670  001C74  CFDE F018          	movff	postinc2,i2sprintf@val
  7671  001C78  CFDD F019          	movff	postdec2,i2sprintf@val+1
  7672  001C7C  0E02               	movlw	2
  7673  001C7E  2616               	addwf	i2sprintf@ap^0,f,c
  7674  001C80  0E00               	movlw	0
  7675  001C82  2217               	addwfc	(i2sprintf@ap+1)^0,f,c
  7676  001C84                     
  7677                           ;doprnt.c: 1287: if((int)val < 0) {
  7678  001C84  BE19               	btfsc	(i2sprintf@val+1)^0,7,c
  7679  001C86  EF49  F00E         	goto	i2u301_40
  7680  001C8A  EF47  F00E         	goto	i2u301_41
  7681  001C8E                     i2u301_41:
  7682  001C8E  EF4F  F00E         	goto	i2l3356
  7683  001C92                     i2u301_40:
  7684  001C92                     
  7685                           ;doprnt.c: 1288: flag |= 0x03;
  7686  001C92  0E03               	movlw	3
  7687  001C94  1214               	iorwf	i2sprintf@flag^0,f,c
  7688  001C96                     
  7689                           ;doprnt.c: 1289: val = -val;
  7690  001C96  6C18               	negf	i2sprintf@val^0,c
  7691  001C98  1E19               	comf	(i2sprintf@val+1)^0,f,c
  7692  001C9A  B0D8               	btfsc	status,0,c
  7693  001C9C  2A19               	incf	(i2sprintf@val+1)^0,f,c
  7694  001C9E                     i2l3356:
  7695                           
  7696                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  7697  001C9E  0E01               	movlw	1
  7698  001CA0  6E1A               	movwf	i2sprintf@c^0,c
  7699  001CA2                     i2l3362:
  7700                           
  7701                           ;doprnt.c: 1332: if(val < dpowers[c])
  7702  001CA2  501A               	movf	i2sprintf@c^0,w,c
  7703  001CA4  0D02               	mullw	2
  7704  001CA6  0E01               	movlw	low _dpowers
  7705  001CA8  24F3               	addwf	243,w,c
  7706  001CAA  6EF6               	movwf	tblptrl,c
  7707  001CAC  0E08               	movlw	high _dpowers
  7708  001CAE  20F4               	addwfc	244,w,c
  7709  001CB0  6EF7               	movwf	tblptrh,c
  7710  001CB2                     	if	0	;There are less than 3 active tblptr bytes
  7711  001CB2                     	endif
  7712  001CB2  0009               	tblrd		*+
  7713  001CB4  50F5               	movf	tablat,w,c
  7714  001CB6  5C18               	subwf	i2sprintf@val^0,w,c
  7715  001CB8  0009               	tblrd		*+
  7716  001CBA  50F5               	movf	tablat,w,c
  7717  001CBC  5819               	subwfb	(i2sprintf@val+1)^0,w,c
  7718  001CBE  B0D8               	btfsc	status,0,c
  7719  001CC0  EF64  F00E         	goto	i2u302_41
  7720  001CC4  EF66  F00E         	goto	i2u302_40
  7721  001CC8                     i2u302_41:
  7722  001CC8  EF68  F00E         	goto	i2l3366
  7723  001CCC                     i2u302_40:
  7724  001CCC  EF72  F00E         	goto	i2l3370
  7725  001CD0                     i2l3366:
  7726  001CD0  2A1A               	incf	i2sprintf@c^0,f,c
  7727  001CD2  0E05               	movlw	5
  7728  001CD4  181A               	xorwf	i2sprintf@c^0,w,c
  7729  001CD6  A4D8               	btfss	status,2,c
  7730  001CD8  EF70  F00E         	goto	i2u303_41
  7731  001CDC  EF72  F00E         	goto	i2u303_40
  7732  001CE0                     i2u303_41:
  7733  001CE0  EF51  F00E         	goto	i2l3362
  7734  001CE4                     i2u303_40:
  7735  001CE4                     i2l3370:
  7736                           
  7737                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  7738  001CE4  C014  F013         	movff	i2sprintf@flag,??i2_sprintf
  7739  001CE8  0E03               	movlw	3
  7740  001CEA  1613               	andwf	??i2_sprintf^0,f,c
  7741  001CEC  B4D8               	btfsc	status,2,c
  7742  001CEE  EF7B  F00E         	goto	i2u304_41
  7743  001CF2  EF7D  F00E         	goto	i2u304_40
  7744  001CF6                     i2u304_41:
  7745  001CF6  EF85  F00E         	goto	i2l3376
  7746  001CFA                     i2u304_40:
  7747  001CFA                     
  7748                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  7749  001CFA  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7750  001CFE  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7751  001D02  0E2D               	movlw	45
  7752  001D04  6EDF               	movwf	indf2,c
  7753  001D06  4A0D               	infsnz	i2sprintf@sp^0,f,c
  7754  001D08  2A0E               	incf	(i2sprintf@sp+1)^0,f,c
  7755  001D0A                     i2l3376:
  7756                           
  7757                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  7758  001D0A  C01A  F015         	movff	i2sprintf@c,i2sprintf@prec
  7759                           
  7760                           ;doprnt.c: 1500: while(prec--) {
  7761  001D0E  EFB2  F00E         	goto	i2l3384
  7762  001D12                     i2l3378:
  7763                           
  7764                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7765  001D12  5015               	movf	i2sprintf@prec^0,w,c
  7766  001D14  0D02               	mullw	2
  7767  001D16  0E01               	movlw	low _dpowers
  7768  001D18  24F3               	addwf	243,w,c
  7769  001D1A  6EF6               	movwf	tblptrl,c
  7770  001D1C  0E08               	movlw	high _dpowers
  7771  001D1E  20F4               	addwfc	244,w,c
  7772  001D20  6EF7               	movwf	tblptrh,c
  7773  001D22                     	if	0	;There are less than 3 active tblptr bytes
  7774  001D22                     	endif
  7775  001D22  0009               	tblrd		*+
  7776  001D24  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  7777  001D28  000A               	tblrd		*-
  7778  001D2A  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  7779  001D2E  C018  F001         	movff	i2sprintf@val,i2___lwdiv@dividend
  7780  001D32  C019  F002         	movff	i2sprintf@val+1,i2___lwdiv@dividend+1
  7781  001D36  ECB6  F013         	call	i2___lwdiv	;wreg free
  7782  001D3A  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  7783  001D3E  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  7784  001D42  0E00               	movlw	0
  7785  001D44  6E0B               	movwf	(i2___lwmod@divisor+1)^0,c
  7786  001D46  0E0A               	movlw	10
  7787  001D48  6E0A               	movwf	i2___lwmod@divisor^0,c
  7788  001D4A  EC5B  F014         	call	i2___lwmod	;wreg free
  7789  001D4E  5008               	movf	?i2___lwmod^0,w,c
  7790  001D50  0F30               	addlw	48
  7791  001D52  6E1A               	movwf	i2sprintf@c^0,c
  7792  001D54                     
  7793                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  7794  001D54  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7795  001D58  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7796  001D5C  C01A  FFDF         	movff	i2sprintf@c,indf2
  7797  001D60  4A0D               	infsnz	i2sprintf@sp^0,f,c
  7798  001D62  2A0E               	incf	(i2sprintf@sp+1)^0,f,c
  7799  001D64                     i2l3384:
  7800  001D64  0615               	decf	i2sprintf@prec^0,f,c
  7801  001D66  2815               	incf	i2sprintf@prec^0,w,c
  7802  001D68  A4D8               	btfss	status,2,c
  7803  001D6A  EFB9  F00E         	goto	i2u305_41
  7804  001D6E  EFBB  F00E         	goto	i2u305_40
  7805  001D72                     i2u305_41:
  7806  001D72  EF89  F00E         	goto	i2l3378
  7807  001D76                     i2u305_40:
  7808  001D76                     i2l3386:
  7809  001D76  C00F  FFF6         	movff	i2sprintf@f,tblptrl
  7810  001D7A  C010  FFF7         	movff	i2sprintf@f+1,tblptrh
  7811  001D7E  4A0F               	infsnz	i2sprintf@f^0,f,c
  7812  001D80  2A10               	incf	(i2sprintf@f+1)^0,f,c
  7813  001D82                     	if	0	;tblptru may be non-zero
  7814  001D82                     	endif
  7815  001D82                     	if	0	;tblptru may be non-zero
  7816  001D82                     	endif
  7817  001D82  0008               	tblrd		*
  7818  001D84  CFF5 F01A          	movff	tablat,i2sprintf@c
  7819  001D88  501A               	movf	i2sprintf@c^0,w,c
  7820  001D8A  A4D8               	btfss	status,2,c
  7821  001D8C  EFCA  F00E         	goto	i2u306_41
  7822  001D90  EFCC  F00E         	goto	i2u306_40
  7823  001D94                     i2u306_41:
  7824  001D94  EFF7  F00D         	goto	i2l3326
  7825  001D98                     i2u306_40:
  7826  001D98                     i2l3388:
  7827                           
  7828                           ;doprnt.c: 1564: *sp = 0;
  7829  001D98  C00D  FFD9         	movff	i2sprintf@sp,fsr2l
  7830  001D9C  C00E  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7831  001DA0  0E00               	movlw	0
  7832  001DA2  6EDF               	movwf	indf2,c
  7833  001DA4  0012               	return		;funcret
  7834  001DA6                     __end_ofi2_sprintf:
  7835                           	callstack 0
  7836                           
  7837 ;; *************** function i2___lwmod *****************
  7838 ;; Defined at:
  7839 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  dividend        2    7[COMRAM] unsigned int 
  7842 ;;  divisor         2    9[COMRAM] unsigned int 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  counter         1   11[COMRAM] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  2    7[COMRAM] unsigned int 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2, status,0
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7854 ;;      Params:         4       0       0       0       0       0       0       0       0
  7855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7857 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7858 ;;Total ram usage:        5 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		i2_sprintf
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text44
  7868  0028B6                     __ptext44:
  7869                           	callstack 0
  7870  0028B6                     i2___lwmod:
  7871                           	callstack 23
  7872  0028B6  500A               	movf	i2___lwmod@divisor^0,w,c
  7873  0028B8  100B               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  7874  0028BA  B4D8               	btfsc	status,2,c
  7875  0028BC  EF62  F014         	goto	i2u244_41
  7876  0028C0  EF64  F014         	goto	i2u244_40
  7877  0028C4                     i2u244_41:
  7878  0028C4  EF88  F014         	goto	i2l824
  7879  0028C8                     i2u244_40:
  7880  0028C8  0E01               	movlw	1
  7881  0028CA  6E0C               	movwf	i2___lwmod@counter^0,c
  7882  0028CC  EF6C  F014         	goto	i2l2904
  7883  0028D0                     i2l2902:
  7884  0028D0  90D8               	bcf	status,0,c
  7885  0028D2  360A               	rlcf	i2___lwmod@divisor^0,f,c
  7886  0028D4  360B               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  7887  0028D6  2A0C               	incf	i2___lwmod@counter^0,f,c
  7888  0028D8                     i2l2904:
  7889  0028D8  AE0B               	btfss	(i2___lwmod@divisor+1)^0,7,c
  7890  0028DA  EF71  F014         	goto	i2u245_41
  7891  0028DE  EF73  F014         	goto	i2u245_40
  7892  0028E2                     i2u245_41:
  7893  0028E2  EF68  F014         	goto	i2l2902
  7894  0028E6                     i2u245_40:
  7895  0028E6                     i2l2906:
  7896  0028E6  500A               	movf	i2___lwmod@divisor^0,w,c
  7897  0028E8  5C08               	subwf	i2___lwmod@dividend^0,w,c
  7898  0028EA  500B               	movf	(i2___lwmod@divisor+1)^0,w,c
  7899  0028EC  5809               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  7900  0028EE  A0D8               	btfss	status,0,c
  7901  0028F0  EF7C  F014         	goto	i2u246_41
  7902  0028F4  EF7E  F014         	goto	i2u246_40
  7903  0028F8                     i2u246_41:
  7904  0028F8  EF82  F014         	goto	i2l2910
  7905  0028FC                     i2u246_40:
  7906  0028FC  500A               	movf	i2___lwmod@divisor^0,w,c
  7907  0028FE  5E08               	subwf	i2___lwmod@dividend^0,f,c
  7908  002900  500B               	movf	(i2___lwmod@divisor+1)^0,w,c
  7909  002902  5A09               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  7910  002904                     i2l2910:
  7911  002904  90D8               	bcf	status,0,c
  7912  002906  320B               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  7913  002908  320A               	rrcf	i2___lwmod@divisor^0,f,c
  7914  00290A  2E0C               	decfsz	i2___lwmod@counter^0,f,c
  7915  00290C  EF73  F014         	goto	i2l2906
  7916  002910                     i2l824:
  7917  002910  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  7918  002914  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  7919  002918  0012               	return		;funcret
  7920  00291A                     __end_ofi2___lwmod:
  7921                           	callstack 0
  7922                           
  7923 ;; *************** function i2___lwdiv *****************
  7924 ;; Defined at:
  7925 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  dividend        2    0[COMRAM] unsigned int 
  7928 ;;  divisor         2    2[COMRAM] unsigned int 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  quotient        2    4[COMRAM] unsigned int 
  7931 ;;  counter         1    6[COMRAM] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  2    0[COMRAM] unsigned int 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7941 ;;      Params:         4       0       0       0       0       0       0       0       0
  7942 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7944 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7945 ;;Total ram usage:        7 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		i2_sprintf
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           	psect	text45
  7955  00276C                     __ptext45:
  7956                           	callstack 0
  7957  00276C                     i2___lwdiv:
  7958                           	callstack 23
  7959  00276C  0E00               	movlw	0
  7960  00276E  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
  7961  002770  0E00               	movlw	0
  7962  002772  6E05               	movwf	i2___lwdiv@quotient^0,c
  7963  002774  5003               	movf	i2___lwdiv@divisor^0,w,c
  7964  002776  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
  7965  002778  B4D8               	btfsc	status,2,c
  7966  00277A  EFC1  F013         	goto	i2u241_41
  7967  00277E  EFC3  F013         	goto	i2u241_40
  7968  002782                     i2u241_41:
  7969  002782  EFEB  F013         	goto	i2l814
  7970  002786                     i2u241_40:
  7971  002786  0E01               	movlw	1
  7972  002788  6E07               	movwf	i2___lwdiv@counter^0,c
  7973  00278A  EFCB  F013         	goto	i2l2884
  7974  00278E                     i2l2882:
  7975  00278E  90D8               	bcf	status,0,c
  7976  002790  3603               	rlcf	i2___lwdiv@divisor^0,f,c
  7977  002792  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
  7978  002794  2A07               	incf	i2___lwdiv@counter^0,f,c
  7979  002796                     i2l2884:
  7980  002796  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
  7981  002798  EFD0  F013         	goto	i2u242_41
  7982  00279C  EFD2  F013         	goto	i2u242_40
  7983  0027A0                     i2u242_41:
  7984  0027A0  EFC7  F013         	goto	i2l2882
  7985  0027A4                     i2u242_40:
  7986  0027A4                     i2l2886:
  7987  0027A4  90D8               	bcf	status,0,c
  7988  0027A6  3605               	rlcf	i2___lwdiv@quotient^0,f,c
  7989  0027A8  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
  7990  0027AA  5003               	movf	i2___lwdiv@divisor^0,w,c
  7991  0027AC  5C01               	subwf	i2___lwdiv@dividend^0,w,c
  7992  0027AE  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  7993  0027B0  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
  7994  0027B2  A0D8               	btfss	status,0,c
  7995  0027B4  EFDE  F013         	goto	i2u243_41
  7996  0027B8  EFE0  F013         	goto	i2u243_40
  7997  0027BC                     i2u243_41:
  7998  0027BC  EFE5  F013         	goto	i2l2894
  7999  0027C0                     i2u243_40:
  8000  0027C0  5003               	movf	i2___lwdiv@divisor^0,w,c
  8001  0027C2  5E01               	subwf	i2___lwdiv@dividend^0,f,c
  8002  0027C4  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
  8003  0027C6  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
  8004  0027C8  8005               	bsf	i2___lwdiv@quotient^0,0,c
  8005  0027CA                     i2l2894:
  8006  0027CA  90D8               	bcf	status,0,c
  8007  0027CC  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
  8008  0027CE  3203               	rrcf	i2___lwdiv@divisor^0,f,c
  8009  0027D0  2E07               	decfsz	i2___lwdiv@counter^0,f,c
  8010  0027D2  EFD2  F013         	goto	i2l2886
  8011  0027D6                     i2l814:
  8012  0027D6  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  8013  0027DA  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  8014  0027DE  0012               	return		;funcret
  8015  0027E0                     __end_ofi2___lwdiv:
  8016                           	callstack 0
  8017                           
  8018 ;; *************** function i2_map *****************
  8019 ;; Defined at:
  8020 ;;		line 381 in file "Main_Robot_I2C_Serial_LCD.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  x               2   14[COMRAM] int 
  8023 ;;  In_Min          2   16[COMRAM] int 
  8024 ;;  In_Max          2   18[COMRAM] int 
  8025 ;;  Out_Min         2   20[COMRAM] int 
  8026 ;;  Out_Max         2   22[COMRAM] int 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  2   14[COMRAM] int 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8038 ;;      Params:        10       0       0       0       0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8041 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8042 ;;Total ram usage:       10 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    1
  8045 ;; This function calls:
  8046 ;;		i2___awdiv
  8047 ;;		i2___wmul
  8048 ;; This function is called by:
  8049 ;;		i2_mover_servo
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text46
  8054  002AF8                     __ptext46:
  8055                           	callstack 0
  8056  002AF8                     i2_map:
  8057                           	callstack 21
  8058  002AF8                     
  8059                           ;Main_Robot_I2C_Serial_LCD.c: 382: return ((x - In_Min) * ((Out_Max - Out_Min) / (In_Max
      +                           - In_Min))) + Out_Min;
  8060  002AF8  5011               	movf	i2map@In_Min^0,w,c
  8061  002AFA  5C0F               	subwf	i2map@x^0,w,c
  8062  002AFC  6E09               	movwf	i2___wmul@multiplier^0,c
  8063  002AFE  5012               	movf	(i2map@In_Min+1)^0,w,c
  8064  002B00  5810               	subwfb	(i2map@x+1)^0,w,c
  8065  002B02  6E0A               	movwf	(i2___wmul@multiplier+1)^0,c
  8066  002B04  5011               	movf	i2map@In_Min^0,w,c
  8067  002B06  5C13               	subwf	i2map@In_Max^0,w,c
  8068  002B08  6E03               	movwf	i2___awdiv@divisor^0,c
  8069  002B0A  5012               	movf	(i2map@In_Min+1)^0,w,c
  8070  002B0C  5814               	subwfb	(i2map@In_Max+1)^0,w,c
  8071  002B0E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  8072  002B10  5015               	movf	i2map@Out_Min^0,w,c
  8073  002B12  5C17               	subwf	i2map@Out_Max^0,w,c
  8074  002B14  6E01               	movwf	i2___awdiv@dividend^0,c
  8075  002B16  5016               	movf	(i2map@Out_Min+1)^0,w,c
  8076  002B18  5818               	subwfb	(i2map@Out_Max+1)^0,w,c
  8077  002B1A  6E02               	movwf	(i2___awdiv@dividend+1)^0,c
  8078  002B1C  EC2B  F011         	call	i2___awdiv	;wreg free
  8079  002B20  C001  F00B         	movff	?i2___awdiv,i2___wmul@multiplicand
  8080  002B24  C002  F00C         	movff	?i2___awdiv+1,i2___wmul@multiplicand+1
  8081  002B28  EC64  F016         	call	i2___wmul	;wreg free
  8082  002B2C  5015               	movf	i2map@Out_Min^0,w,c
  8083  002B2E  2409               	addwf	?i2___wmul^0,w,c
  8084  002B30  6E0F               	movwf	?i2_map^0,c
  8085  002B32  5016               	movf	(i2map@Out_Min+1)^0,w,c
  8086  002B34  200A               	addwfc	(?i2___wmul+1)^0,w,c
  8087  002B36  6E10               	movwf	(?i2_map+1)^0,c
  8088  002B38  0012               	return		;funcret
  8089  002B3A                     __end_ofi2_map:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function i2___awdiv *****************
  8093 ;; Defined at:
  8094 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  dividend        2    0[COMRAM] int 
  8097 ;;  divisor         2    2[COMRAM] int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  quotient        2    6[COMRAM] int 
  8100 ;;  sign            1    5[COMRAM] unsigned char 
  8101 ;;  counter         1    4[COMRAM] unsigned char 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  2    0[COMRAM] int 
  8104 ;; Registers used:
  8105 ;;		wreg, status,2, status,0
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8111 ;;      Params:         4       0       0       0       0       0       0       0       0
  8112 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8114 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8115 ;;Total ram usage:        8 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		i2_map
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text47
  8125  002256                     __ptext47:
  8126                           	callstack 0
  8127  002256                     i2___awdiv:
  8128                           	callstack 21
  8129  002256  0E00               	movlw	0
  8130  002258  6E06               	movwf	i2___awdiv@sign^0,c
  8131  00225A  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  8132  00225C  EF34  F011         	goto	i2u235_40
  8133  002260  EF32  F011         	goto	i2u235_41
  8134  002264                     i2u235_41:
  8135  002264  EF3A  F011         	goto	i2l2840
  8136  002268                     i2u235_40:
  8137  002268  6C03               	negf	i2___awdiv@divisor^0,c
  8138  00226A  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  8139  00226C  B0D8               	btfsc	status,0,c
  8140  00226E  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  8141  002270  0E01               	movlw	1
  8142  002272  6E06               	movwf	i2___awdiv@sign^0,c
  8143  002274                     i2l2840:
  8144  002274  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  8145  002276  EF41  F011         	goto	i2u236_40
  8146  00227A  EF3F  F011         	goto	i2u236_41
  8147  00227E                     i2u236_41:
  8148  00227E  EF47  F011         	goto	i2l2846
  8149  002282                     i2u236_40:
  8150  002282  6C01               	negf	i2___awdiv@dividend^0,c
  8151  002284  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  8152  002286  B0D8               	btfsc	status,0,c
  8153  002288  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  8154  00228A  0E01               	movlw	1
  8155  00228C  1A06               	xorwf	i2___awdiv@sign^0,f,c
  8156  00228E                     i2l2846:
  8157  00228E  0E00               	movlw	0
  8158  002290  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  8159  002292  0E00               	movlw	0
  8160  002294  6E07               	movwf	i2___awdiv@quotient^0,c
  8161  002296  5003               	movf	i2___awdiv@divisor^0,w,c
  8162  002298  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  8163  00229A  B4D8               	btfsc	status,2,c
  8164  00229C  EF52  F011         	goto	i2u237_41
  8165  0022A0  EF54  F011         	goto	i2u237_40
  8166  0022A4                     i2u237_41:
  8167  0022A4  EF7C  F011         	goto	i2l2868
  8168  0022A8                     i2u237_40:
  8169  0022A8  0E01               	movlw	1
  8170  0022AA  6E05               	movwf	i2___awdiv@counter^0,c
  8171  0022AC  EF5C  F011         	goto	i2l2854
  8172  0022B0                     i2l2852:
  8173  0022B0  90D8               	bcf	status,0,c
  8174  0022B2  3603               	rlcf	i2___awdiv@divisor^0,f,c
  8175  0022B4  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  8176  0022B6  2A05               	incf	i2___awdiv@counter^0,f,c
  8177  0022B8                     i2l2854:
  8178  0022B8  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  8179  0022BA  EF61  F011         	goto	i2u238_41
  8180  0022BE  EF63  F011         	goto	i2u238_40
  8181  0022C2                     i2u238_41:
  8182  0022C2  EF58  F011         	goto	i2l2852
  8183  0022C6                     i2u238_40:
  8184  0022C6                     i2l2856:
  8185  0022C6  90D8               	bcf	status,0,c
  8186  0022C8  3607               	rlcf	i2___awdiv@quotient^0,f,c
  8187  0022CA  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  8188  0022CC  5003               	movf	i2___awdiv@divisor^0,w,c
  8189  0022CE  5C01               	subwf	i2___awdiv@dividend^0,w,c
  8190  0022D0  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  8191  0022D2  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  8192  0022D4  A0D8               	btfss	status,0,c
  8193  0022D6  EF6F  F011         	goto	i2u239_41
  8194  0022DA  EF71  F011         	goto	i2u239_40
  8195  0022DE                     i2u239_41:
  8196  0022DE  EF76  F011         	goto	i2l2864
  8197  0022E2                     i2u239_40:
  8198  0022E2  5003               	movf	i2___awdiv@divisor^0,w,c
  8199  0022E4  5E01               	subwf	i2___awdiv@dividend^0,f,c
  8200  0022E6  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  8201  0022E8  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  8202  0022EA  8007               	bsf	i2___awdiv@quotient^0,0,c
  8203  0022EC                     i2l2864:
  8204  0022EC  90D8               	bcf	status,0,c
  8205  0022EE  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  8206  0022F0  3203               	rrcf	i2___awdiv@divisor^0,f,c
  8207  0022F2  2E05               	decfsz	i2___awdiv@counter^0,f,c
  8208  0022F4  EF63  F011         	goto	i2l2856
  8209  0022F8                     i2l2868:
  8210  0022F8  5006               	movf	i2___awdiv@sign^0,w,c
  8211  0022FA  B4D8               	btfsc	status,2,c
  8212  0022FC  EF82  F011         	goto	i2u240_41
  8213  002300  EF84  F011         	goto	i2u240_40
  8214  002304                     i2u240_41:
  8215  002304  EF88  F011         	goto	i2l2872
  8216  002308                     i2u240_40:
  8217  002308  6C07               	negf	i2___awdiv@quotient^0,c
  8218  00230A  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  8219  00230C  B0D8               	btfsc	status,0,c
  8220  00230E  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  8221  002310                     i2l2872:
  8222  002310  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  8223  002314  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8224  002318  0012               	return		;funcret
  8225  00231A                     __end_ofi2___awdiv:
  8226                           	callstack 0
  8227                           
  8228 ;; *************** function _atoi *****************
  8229 ;; Defined at:
  8230 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8233 ;;		 -> coordinate_z(3), coordinate_y(3), coordinate_x(3), angle(3), 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  a               2   19[COMRAM] int 
  8236 ;;  sign            1   18[COMRAM] unsigned char 
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  2   14[COMRAM] int 
  8239 ;; Registers used:
  8240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8246 ;;      Params:         2       0       0       0       0       0       0       0       0
  8247 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8248 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8249 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8250 ;;Total ram usage:        7 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; Hardware stack levels required when called:    1
  8253 ;; This function calls:
  8254 ;;		_isdigit
  8255 ;;		i2___wmul
  8256 ;; This function is called by:
  8257 ;;		_algoritm
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text48
  8262  001DA6                     __ptext48:
  8263                           	callstack 0
  8264  001DA6                     _atoi:
  8265                           	callstack 22
  8266  001DA6  EFD7  F00E         	goto	i2l3466
  8267  001DAA                     i2l3464:
  8268  001DAA  4A0F               	infsnz	atoi@s^0,f,c
  8269  001DAC  2A10               	incf	(atoi@s+1)^0,f,c
  8270  001DAE                     i2l3466:
  8271  001DAE  C00F  FFD9         	movff	atoi@s,fsr2l
  8272  001DB2  C010  FFDA         	movff	atoi@s+1,fsr2h
  8273  001DB6  0E20               	movlw	32
  8274  001DB8  18DE               	xorwf	postinc2,w,c
  8275  001DBA  B4D8               	btfsc	status,2,c
  8276  001DBC  EFE2  F00E         	goto	i2u312_41
  8277  001DC0  EFE4  F00E         	goto	i2u312_40
  8278  001DC4                     i2u312_41:
  8279  001DC4  EFD5  F00E         	goto	i2l3464
  8280  001DC8                     i2u312_40:
  8281  001DC8  C00F  FFD9         	movff	atoi@s,fsr2l
  8282  001DCC  C010  FFDA         	movff	atoi@s+1,fsr2h
  8283  001DD0  0E09               	movlw	9
  8284  001DD2  18DE               	xorwf	postinc2,w,c
  8285  001DD4  B4D8               	btfsc	status,2,c
  8286  001DD6  EFEF  F00E         	goto	i2u313_41
  8287  001DDA  EFF1  F00E         	goto	i2u313_40
  8288  001DDE                     i2u313_41:
  8289  001DDE  EFD5  F00E         	goto	i2l3464
  8290  001DE2                     i2u313_40:
  8291  001DE2  0E00               	movlw	0
  8292  001DE4  6E15               	movwf	(atoi@a+1)^0,c
  8293  001DE6  0E00               	movlw	0
  8294  001DE8  6E14               	movwf	atoi@a^0,c
  8295  001DEA  0E00               	movlw	0
  8296  001DEC  6E13               	movwf	atoi@sign^0,c
  8297  001DEE  C00F  FFD9         	movff	atoi@s,fsr2l
  8298  001DF2  C010  FFDA         	movff	atoi@s+1,fsr2h
  8299  001DF6  0E2D               	movlw	45
  8300  001DF8  18DE               	xorwf	postinc2,w,c
  8301  001DFA  A4D8               	btfss	status,2,c
  8302  001DFC  EF02  F00F         	goto	i2u314_41
  8303  001E00  EF04  F00F         	goto	i2u314_40
  8304  001E04                     i2u314_41:
  8305  001E04  EF09  F00F         	goto	i2l3476
  8306  001E08                     i2u314_40:
  8307  001E08  2A13               	incf	atoi@sign^0,f,c
  8308  001E0A  4A0F               	infsnz	atoi@s^0,f,c
  8309  001E0C  2A10               	incf	(atoi@s+1)^0,f,c
  8310  001E0E  EF36  F00F         	goto	i2l3484
  8311  001E12                     i2l3476:
  8312  001E12  C00F  FFD9         	movff	atoi@s,fsr2l
  8313  001E16  C010  FFDA         	movff	atoi@s+1,fsr2h
  8314  001E1A  0E2B               	movlw	43
  8315  001E1C  18DE               	xorwf	postinc2,w,c
  8316  001E1E  A4D8               	btfss	status,2,c
  8317  001E20  EF14  F00F         	goto	i2u315_41
  8318  001E24  EF16  F00F         	goto	i2u315_40
  8319  001E28                     i2u315_41:
  8320  001E28  EF36  F00F         	goto	i2l3484
  8321  001E2C                     i2u315_40:
  8322  001E2C                     i2l3478:
  8323  001E2C  4A0F               	infsnz	atoi@s^0,f,c
  8324  001E2E  2A10               	incf	(atoi@s+1)^0,f,c
  8325  001E30  EF36  F00F         	goto	i2l3484
  8326  001E34                     i2l3480:
  8327  001E34  C014  F009         	movff	atoi@a,i2___wmul@multiplier
  8328  001E38  C015  F00A         	movff	atoi@a+1,i2___wmul@multiplier+1
  8329  001E3C  0E00               	movlw	0
  8330  001E3E  6E0C               	movwf	(i2___wmul@multiplicand+1)^0,c
  8331  001E40  0E0A               	movlw	10
  8332  001E42  6E0B               	movwf	i2___wmul@multiplicand^0,c
  8333  001E44  EC64  F016         	call	i2___wmul	;wreg free
  8334  001E48  C00F  FFD9         	movff	atoi@s,fsr2l
  8335  001E4C  C010  FFDA         	movff	atoi@s+1,fsr2h
  8336  001E50  50DF               	movf	indf2,w,c
  8337  001E52  6E11               	movwf	??_atoi^0,c
  8338  001E54  5011               	movf	??_atoi^0,w,c
  8339  001E56  2609               	addwf	?i2___wmul^0,f,c
  8340  001E58  0E00               	movlw	0
  8341  001E5A  220A               	addwfc	(?i2___wmul+1)^0,f,c
  8342  001E5C  0ED0               	movlw	208
  8343  001E5E  2409               	addwf	?i2___wmul^0,w,c
  8344  001E60  6E14               	movwf	atoi@a^0,c
  8345  001E62  0EFF               	movlw	255
  8346  001E64  200A               	addwfc	(?i2___wmul+1)^0,w,c
  8347  001E66  6E15               	movwf	(atoi@a+1)^0,c
  8348  001E68  EF16  F00F         	goto	i2l3478
  8349  001E6C                     i2l3484:
  8350  001E6C  C00F  FFD9         	movff	atoi@s,fsr2l
  8351  001E70  C010  FFDA         	movff	atoi@s+1,fsr2h
  8352  001E74  50DF               	movf	indf2,w,c
  8353  001E76  EC10  F016         	call	_isdigit
  8354  001E7A  B0D8               	btfsc	status,0,c
  8355  001E7C  EF42  F00F         	goto	i2u316_41
  8356  001E80  EF44  F00F         	goto	i2u316_40
  8357  001E84                     i2u316_41:
  8358  001E84  EF1A  F00F         	goto	i2l3480
  8359  001E88                     i2u316_40:
  8360  001E88  5013               	movf	atoi@sign^0,w,c
  8361  001E8A  B4D8               	btfsc	status,2,c
  8362  001E8C  EF4A  F00F         	goto	i2u317_41
  8363  001E90  EF4C  F00F         	goto	i2u317_40
  8364  001E94                     i2u317_41:
  8365  001E94  EF5A  F00F         	goto	i2l1008
  8366  001E98                     i2u317_40:
  8367  001E98  C014  F011         	movff	atoi@a,??_atoi
  8368  001E9C  C015  F012         	movff	atoi@a+1,??_atoi+1
  8369  001EA0  1E11               	comf	??_atoi^0,f,c
  8370  001EA2  1E12               	comf	(??_atoi+1)^0,f,c
  8371  001EA4  4A11               	infsnz	??_atoi^0,f,c
  8372  001EA6  2A12               	incf	(??_atoi+1)^0,f,c
  8373  001EA8  C011  F00F         	movff	??_atoi,?_atoi
  8374  001EAC  C012  F010         	movff	??_atoi+1,?_atoi+1
  8375  001EB0  EF5E  F00F         	goto	i2l1009
  8376  001EB4                     i2l1008:
  8377  001EB4  C014  F00F         	movff	atoi@a,?_atoi
  8378  001EB8  C015  F010         	movff	atoi@a+1,?_atoi+1
  8379  001EBC                     i2l1009:
  8380  001EBC  0012               	return		;funcret
  8381  001EBE                     __end_of_atoi:
  8382                           	callstack 0
  8383                           
  8384 ;; *************** function i2___wmul *****************
  8385 ;; Defined at:
  8386 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  multiplier      2    8[COMRAM] unsigned int 
  8389 ;;  multiplicand    2   10[COMRAM] unsigned int 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  product         2   12[COMRAM] unsigned int 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  2    8[COMRAM] unsigned int 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2, status,0, prodl, prodh
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8401 ;;      Params:         4       0       0       0       0       0       0       0       0
  8402 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8404 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8405 ;;Total ram usage:        6 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_atoi
  8411 ;;		i2_map
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text49
  8416  002CC8                     __ptext49:
  8417                           	callstack 0
  8418  002CC8                     i2___wmul:
  8419                           	callstack 21
  8420  002CC8  5009               	movf	i2___wmul@multiplier^0,w,c
  8421  002CCA  020B               	mulwf	i2___wmul@multiplicand^0,c
  8422  002CCC  CFF3 F00D          	movff	prodl,i2___wmul@product
  8423  002CD0  CFF4 F00E          	movff	prodh,i2___wmul@product+1
  8424  002CD4  5009               	movf	i2___wmul@multiplier^0,w,c
  8425  002CD6  020C               	mulwf	(i2___wmul@multiplicand+1)^0,c
  8426  002CD8  50F3               	movf	243,w,c
  8427  002CDA  260E               	addwf	(i2___wmul@product+1)^0,f,c
  8428  002CDC  500A               	movf	(i2___wmul@multiplier+1)^0,w,c
  8429  002CDE  020B               	mulwf	i2___wmul@multiplicand^0,c
  8430  002CE0  50F3               	movf	243,w,c
  8431  002CE2  260E               	addwf	(i2___wmul@product+1)^0,f,c
  8432  002CE4  C00D  F009         	movff	i2___wmul@product,?i2___wmul
  8433  002CE8  C00E  F00A         	movff	i2___wmul@product+1,?i2___wmul+1
  8434  002CEC  0012               	return		;funcret
  8435  002CEE                     __end_ofi2___wmul:
  8436                           	callstack 0
  8437                           
  8438 ;; *************** function _isdigit *****************
  8439 ;; Defined at:
  8440 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  c               1    wreg     unsigned char 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  c               1    2[COMRAM] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;		None               void
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0
  8455 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8456 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8457 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8458 ;;Total ram usage:        3 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_atoi
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text50
  8468  002C20                     __ptext50:
  8469                           	callstack 0
  8470  002C20                     _isdigit:
  8471                           	callstack 22
  8472                           
  8473                           ;incstack = 0
  8474                           ;isdigit@c stored from wreg
  8475  002C20  6E03               	movwf	isdigit@c^0,c
  8476  002C22  0E00               	movlw	0
  8477  002C24  6E02               	movwf	_isdigit$894^0,c
  8478  002C26  0E3A               	movlw	58
  8479  002C28  6003               	cpfslt	isdigit@c^0,c
  8480  002C2A  EF19  F016         	goto	i2u295_41
  8481  002C2E  EF1B  F016         	goto	i2u295_40
  8482  002C32                     i2u295_41:
  8483  002C32  EF25  F016         	goto	i2l3268
  8484  002C36                     i2u295_40:
  8485  002C36  0E2F               	movlw	47
  8486  002C38  6403               	cpfsgt	isdigit@c^0,c
  8487  002C3A  EF21  F016         	goto	i2u296_41
  8488  002C3E  EF23  F016         	goto	i2u296_40
  8489  002C42                     i2u296_41:
  8490  002C42  EF25  F016         	goto	i2l3268
  8491  002C46                     i2u296_40:
  8492  002C46  0E01               	movlw	1
  8493  002C48  6E02               	movwf	_isdigit$894^0,c
  8494  002C4A                     i2l3268:
  8495  002C4A  C002  F001         	movff	_isdigit$894,??_isdigit
  8496  002C4E  3001               	rrcf	??_isdigit^0,w,c
  8497  002C50  0012               	return		;funcret
  8498  002C52                     __end_of_isdigit:
  8499                           	callstack 0
  8500                           
  8501                           	psect	rparam
  8502  0000                     
  8503                           	psect	temp
  8504  00004C                     btemp:
  8505                           	callstack 0
  8506  00004C                     	ds	1
  8507  0000                     int$flags	set	btemp
  8508  0000                     wtemp8	set	btemp+1
  8509  0000                     ttemp5	set	btemp+1
  8510  0000                     ttemp6	set	btemp+4
  8511  0000                     ttemp7	set	btemp+8
  8512                           
  8513                           	psect	idloc
  8514                           
  8515                           ;Config register IDLOC0 @ 0x200000
  8516                           ;	unspecified, using default values
  8517  200000                     	org	2097152
  8518  200000  FF                 	db	255
  8519                           
  8520                           ;Config register IDLOC1 @ 0x200001
  8521                           ;	unspecified, using default values
  8522  200001                     	org	2097153
  8523  200001  FF                 	db	255
  8524                           
  8525                           ;Config register IDLOC2 @ 0x200002
  8526                           ;	unspecified, using default values
  8527  200002                     	org	2097154
  8528  200002  FF                 	db	255
  8529                           
  8530                           ;Config register IDLOC3 @ 0x200003
  8531                           ;	unspecified, using default values
  8532  200003                     	org	2097155
  8533  200003  FF                 	db	255
  8534                           
  8535                           ;Config register IDLOC4 @ 0x200004
  8536                           ;	unspecified, using default values
  8537  200004                     	org	2097156
  8538  200004  FF                 	db	255
  8539                           
  8540                           ;Config register IDLOC5 @ 0x200005
  8541                           ;	unspecified, using default values
  8542  200005                     	org	2097157
  8543  200005  FF                 	db	255
  8544                           
  8545                           ;Config register IDLOC6 @ 0x200006
  8546                           ;	unspecified, using default values
  8547  200006                     	org	2097158
  8548  200006  FF                 	db	255
  8549                           
  8550                           ;Config register IDLOC7 @ 0x200007
  8551                           ;	unspecified, using default values
  8552  200007                     	org	2097159
  8553  200007  FF                 	db	255
  8554                           
  8555                           	psect	config
  8556                           
  8557                           ;Config register CONFIG1L @ 0x300000
  8558                           ;	unspecified, using default values
  8559                           ;	PLL Prescaler Selection bits
  8560                           ;	PLLDIV = 0x0, unprogrammed default
  8561                           ;	System Clock Postscaler Selection bits
  8562                           ;	CPUDIV = 0x0, unprogrammed default
  8563                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8564                           ;	USBDIV = 0x0, unprogrammed default
  8565  300000                     	org	3145728
  8566  300000  00                 	db	0
  8567                           
  8568                           ;Config register CONFIG1H @ 0x300001
  8569                           ;	Oscillator Selection bits
  8570                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  8571                           ;	Fail-Safe Clock Monitor Enable bit
  8572                           ;	FCMEN = 0x0, unprogrammed default
  8573                           ;	Internal/External Oscillator Switchover bit
  8574                           ;	IESO = 0x0, unprogrammed default
  8575  300001                     	org	3145729
  8576  300001  0B                 	db	11
  8577                           
  8578                           ;Config register CONFIG2L @ 0x300002
  8579                           ;	unspecified, using default values
  8580                           ;	Power-up Timer Enable bit
  8581                           ;	PWRT = 0x1, unprogrammed default
  8582                           ;	Brown-out Reset Enable bits
  8583                           ;	BOR = 0x3, unprogrammed default
  8584                           ;	Brown-out Reset Voltage bits
  8585                           ;	BORV = 0x3, unprogrammed default
  8586                           ;	USB Voltage Regulator Enable bit
  8587                           ;	VREGEN = 0x0, unprogrammed default
  8588  300002                     	org	3145730
  8589  300002  1F                 	db	31
  8590                           
  8591                           ;Config register CONFIG2H @ 0x300003
  8592                           ;	Watchdog Timer Enable bit
  8593                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8594                           ;	Watchdog Timer Postscale Select bits
  8595                           ;	WDTPS = 0xF, unprogrammed default
  8596  300003                     	org	3145731
  8597  300003  1E                 	db	30
  8598                           
  8599                           ; Padding undefined space
  8600  300004                     	org	3145732
  8601  300004  FF                 	db	255
  8602                           
  8603                           ;Config register CONFIG3H @ 0x300005
  8604                           ;	unspecified, using default values
  8605                           ;	CCP2 MUX bit
  8606                           ;	CCP2MX = 0x1, unprogrammed default
  8607                           ;	PORTB A/D Enable bit
  8608                           ;	PBADEN = 0x1, unprogrammed default
  8609                           ;	Low-Power Timer 1 Oscillator Enable bit
  8610                           ;	LPT1OSC = 0x0, unprogrammed default
  8611                           ;	MCLR Pin Enable bit
  8612                           ;	MCLRE = 0x1, unprogrammed default
  8613  300005                     	org	3145733
  8614  300005  83                 	db	131
  8615                           
  8616                           ;Config register CONFIG4L @ 0x300006
  8617                           ;	Stack Full/Underflow Reset Enable bit
  8618                           ;	STVREN = 0x1, unprogrammed default
  8619                           ;	Single-Supply ICSP Enable bit
  8620                           ;	LVP = OFF, Single-Supply ICSP disabled
  8621                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8622                           ;	ICPRT = 0x0, unprogrammed default
  8623                           ;	Extended Instruction Set Enable bit
  8624                           ;	XINST = 0x0, unprogrammed default
  8625                           ;	Background Debugger Enable bit
  8626                           ;	DEBUG = 0x1, unprogrammed default
  8627  300006                     	org	3145734
  8628  300006  81                 	db	129
  8629                           
  8630                           ; Padding undefined space
  8631  300007                     	org	3145735
  8632  300007  FF                 	db	255
  8633                           
  8634                           ;Config register CONFIG5L @ 0x300008
  8635                           ;	unspecified, using default values
  8636                           ;	Code Protection bit
  8637                           ;	CP0 = 0x1, unprogrammed default
  8638                           ;	Code Protection bit
  8639                           ;	CP1 = 0x1, unprogrammed default
  8640                           ;	Code Protection bit
  8641                           ;	CP2 = 0x1, unprogrammed default
  8642                           ;	Code Protection bit
  8643                           ;	CP3 = 0x1, unprogrammed default
  8644  300008                     	org	3145736
  8645  300008  0F                 	db	15
  8646                           
  8647                           ;Config register CONFIG5H @ 0x300009
  8648                           ;	unspecified, using default values
  8649                           ;	Boot Block Code Protection bit
  8650                           ;	CPB = 0x1, unprogrammed default
  8651                           ;	Data EEPROM Code Protection bit
  8652                           ;	CPD = 0x1, unprogrammed default
  8653  300009                     	org	3145737
  8654  300009  C0                 	db	192
  8655                           
  8656                           ;Config register CONFIG6L @ 0x30000A
  8657                           ;	unspecified, using default values
  8658                           ;	Write Protection bit
  8659                           ;	WRT0 = 0x1, unprogrammed default
  8660                           ;	Write Protection bit
  8661                           ;	WRT1 = 0x1, unprogrammed default
  8662                           ;	Write Protection bit
  8663                           ;	WRT2 = 0x1, unprogrammed default
  8664                           ;	Write Protection bit
  8665                           ;	WRT3 = 0x1, unprogrammed default
  8666  30000A                     	org	3145738
  8667  30000A  0F                 	db	15
  8668                           
  8669                           ;Config register CONFIG6H @ 0x30000B
  8670                           ;	unspecified, using default values
  8671                           ;	Configuration Register Write Protection bit
  8672                           ;	WRTC = 0x1, unprogrammed default
  8673                           ;	Boot Block Write Protection bit
  8674                           ;	WRTB = 0x1, unprogrammed default
  8675                           ;	Data EEPROM Write Protection bit
  8676                           ;	WRTD = 0x1, unprogrammed default
  8677  30000B                     	org	3145739
  8678  30000B  E0                 	db	224
  8679                           
  8680                           ;Config register CONFIG7L @ 0x30000C
  8681                           ;	unspecified, using default values
  8682                           ;	Table Read Protection bit
  8683                           ;	EBTR0 = 0x1, unprogrammed default
  8684                           ;	Table Read Protection bit
  8685                           ;	EBTR1 = 0x1, unprogrammed default
  8686                           ;	Table Read Protection bit
  8687                           ;	EBTR2 = 0x1, unprogrammed default
  8688                           ;	Table Read Protection bit
  8689                           ;	EBTR3 = 0x1, unprogrammed default
  8690  30000C                     	org	3145740
  8691  30000C  0F                 	db	15
  8692                           
  8693                           ;Config register CONFIG7H @ 0x30000D
  8694                           ;	unspecified, using default values
  8695                           ;	Boot Block Table Read Protection bit
  8696                           ;	EBTRB = 0x1, unprogrammed default
  8697  30000D                     	org	3145741
  8698  30000D  40                 	db	64
  8699                           tosu	equ	0xFFF
  8700                           tosh	equ	0xFFE
  8701                           tosl	equ	0xFFD
  8702                           stkptr	equ	0xFFC
  8703                           pclatu	equ	0xFFB
  8704                           pclath	equ	0xFFA
  8705                           pcl	equ	0xFF9
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           indf0	equ	0xFEF
  8713                           postinc0	equ	0xFEE
  8714                           postdec0	equ	0xFED
  8715                           preinc0	equ	0xFEC
  8716                           plusw0	equ	0xFEB
  8717                           fsr0h	equ	0xFEA
  8718                           fsr0l	equ	0xFE9
  8719                           wreg	equ	0xFE8
  8720                           indf1	equ	0xFE7
  8721                           postinc1	equ	0xFE6
  8722                           postdec1	equ	0xFE5
  8723                           preinc1	equ	0xFE4
  8724                           plusw1	equ	0xFE3
  8725                           fsr1h	equ	0xFE2
  8726                           fsr1l	equ	0xFE1
  8727                           bsr	equ	0xFE0
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           preinc2	equ	0xFDC
  8732                           plusw2	equ	0xFDB
  8733                           fsr2h	equ	0xFDA
  8734                           fsr2l	equ	0xFD9
  8735                           status	equ	0xFD8

Data Sizes:
    Strings     106
    Constant    10
    Data        2
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      75
    BANK0           160     38     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> texto_LCD(BANK0[16]), text(BANK0[40]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> texto_LCD(BANK0[16]), text(BANK0[40]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> coordinate_z(COMRAM[3]), coordinate_y(COMRAM[3]), coordinate_x(COMRAM[3]), angle(COMRAM[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[9]), STR_5(CODE[30]), 
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> texto_LCD(BANK0[16]), text(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    readI2C@Data	PTR unsigned char  size(2) Largest target is 1
		 -> data1(BANK0[1]), 

    writeI2C@Data	PTR unsigned char  size(2) Largest target is 2047
		 -> data2(BANK0[4]), d1(BANK0[1]), setPWMFreq@newmode(BANK0[1]), data1(BANK0[1]), 
		 -> setPWMFreq@prescale(BANK0[1]), RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _receive in COMRAM

    _receive->_algoritm
    i2_PrintDataLCD->i2_strlen
    i2_WriteLCD->i2_LCD
    i2_SettingsLCD->i2_LCD
    _algoritm->i2_mover_servo
    i2_mover_servo->i2_sprintf
    i2_writeI2C->i2_sendI2C
    i2_stopI2C->i2_readyI2C
    i2_startI2C->i2_readyI2C
    i2_sendI2C->i2_readyI2C
    i2_start->i2_strlen
    i2_sprintf->i2___lwmod
    i2___lwmod->i2___lwdiv
    i2_map->i2___wmul
    _atoi->i2___wmul
    i2___wmul->i2___awdiv

Critical Paths under _main in BANK0

    _main->_settings
    _settings->_setPWMFreq
    _setPWMFreq->___fldiv
    _readI2C->_receiveI2C
    _repeatedStart->_readyI2C
    _receiveI2C->_readyI2C
    ___flsub->___fladd
    _mover_servo->_sprintf
    _writeI2C->_sendI2C
    _stopI2C->_readyI2C
    _startI2C->_readyI2C
    _sendI2C->_readyI2C
    _start->_strlen
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___wmul
    ___wmul->___awdiv
    _PrintDataLCD->_strlen
    _WriteLCD->_LCD
    _SettingsLCD->_LCD

Critical Paths under _receive in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _receive in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _receive in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _receive in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _receive in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _receive in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receive in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receive in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   28332
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             2     2      0   28332
                                             36 BANK0      2     2      0
                       _PrintDataLCD
                        _SettingsLCD
                        _mover_servo
                         _setPWMFreq
                            _sprintf
                              _start
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _setPWMFreq                                          11     7      4   13888
                                             25 BANK0     11     7      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                            ___fltol
                            _readI2C
                           _writeI2C
 ---------------------------------------------------------------------------------
 (3) _readI2C                                              8     3      5     648
                                              3 BANK0      8     3      5
                         _receiveI2C
                      _repeatedStart
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (4) _repeatedStart                                        0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _receiveI2C                                           2     2      0      65
                                              1 BANK0      2     2      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3827
                                             16 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2183
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _mover_servo                                          6     2      4    8697
                                             26 BANK0      6     2      4
                                _map
                            _sprintf
                              _start
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _writeI2C                                             8     3      5    1778
                                              2 BANK0      8     3      5
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      31
                                              1 BANK0      1     1      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _readyI2C                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _start                                                0     0      0     310
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    2791
                                             12 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _map                                                 10     0     10    1814
                                             14 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     522
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _PrintDataLCD                                         0     0      0     682
                        _SettingsLCD
                           _WriteLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _WriteLCD                                             1     1      0     186
                                              2 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     186
                                              2 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0     124
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _receive                                              8     8      0    6928
                                             33 COMRAM     8     8      0
                           _algoritm
                     i2_PrintDataLCD
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (7) i2_PrintDataLCD                                       0     0      0     406
                      i2_SettingsLCD
                         i2_WriteLCD
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_WriteLCD                                           1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (8) i2_SettingsLCD                                        1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LCD                                                2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _algoritm                                             1     1      0    5097
                                             32 COMRAM     1     1      0
                               _atoi
                      i2_mover_servo
                          i2_sprintf
                            i2_start
 ---------------------------------------------------------------------------------
 (8) i2_mover_servo                                        6     2      4    2809
                                             26 COMRAM     6     2      4
                              i2_map
                          i2_sprintf
                            i2_start
                         i2_writeI2C
 ---------------------------------------------------------------------------------
 (9) i2_writeI2C                                           8     3      5     189
                                              2 COMRAM     8     3      5
                          i2_sendI2C
                         i2_startI2C
                          i2_stopI2C
 ---------------------------------------------------------------------------------
 (10) i2_stopI2C                                           0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (10) i2_startI2C                                          0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (10) i2_sendI2C                                           1     1      0      22
                                              1 COMRAM     1     1      0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (11) i2_readyI2C                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_start                                              0     0      0     142
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_sprintf                                           23    17      6    1283
                                             12 COMRAM    14     8      6
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (9) i2_map                                               10     0     10     899
                                             14 COMRAM    10     0     10
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _atoi                                                 7     5      2     863
                                             14 COMRAM     7     5      2
                            _isdigit
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4     263
                                              8 COMRAM     6     2      4
                          i2___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _settings
     _PrintDataLCD
       _SettingsLCD
         _LCD
       _WriteLCD
         _LCD
       _strlen
     _SettingsLCD
       _LCD
     _mover_servo
       _map
         ___awdiv
         ___wmul
           ___awdiv (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _start
         _strlen
       _writeI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
     _setPWMFreq
       ___fladd
       ___fldiv
       ___flge
       ___flsub
         ___fladd
       ___fltol
       _readI2C
         _receiveI2C
           _readyI2C
         _repeatedStart
           _readyI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
       _writeI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _start
       _strlen
     _writeI2C
       _sendI2C
         _readyI2C
       _startI2C
         _readyI2C
       _stopI2C
         _readyI2C

 _receive (ROOT)
   _algoritm
     _atoi
       _isdigit
       i2___wmul
         i2___awdiv (ARG)
     i2_mover_servo
       i2_map
         i2___awdiv
         i2___wmul
           i2___awdiv (ARG)
       i2_sprintf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
       i2_start
         i2_strlen
       i2_writeI2C
         i2_sendI2C
           i2_readyI2C
         i2_startI2C
           i2_readyI2C
         i2_stopI2C
           i2_readyI2C
     i2_sprintf
       i2___lwdiv
       i2___lwmod
         i2___lwdiv (ARG)
     i2_start
       i2_strlen
   i2_PrintDataLCD
     i2_SettingsLCD
       i2_LCD
     i2_WriteLCD
       i2_LCD
     i2_strlen
   i2_sprintf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
   i2_start
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      72       5       71.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      20        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 12 17:55:32 2021

           ___fldiv@aexp 00C4             ___fldiv@bexp 00C3                        _d 003C  
                      _i 003A                        _z 0034             ___fldiv@sign 00BC  
                     _d1 00AA             ___awdiv@sign 00B1      ___wmul@multiplicand 00B6  
     i2___lwdiv@dividend 0001               i2_WriteLCD 2D26                      l223 2926  
                    l233 26F4                      l153 2D64                      l242 2C78  
                    l154 2D64                      l227 296E                      l332 1BE0  
                    l236 2D8E                      l245 2D5E                      l262 2D7E  
                    l335 2CA0                      l159 1A16                      l248 2D86  
                    l272 1816                      l281 2D24                      l265 2BE8  
                    l275 2AF6                      l259 2254                      l284 2D08  
                    l293 29C4                      l269 15E2                      l278 23D8  
                    l287 253C                      l624 1FC4                      l821 276A  
                    l566 2190                      l814 2762                      l910 137A  
                    l831 28B4                      l824 28AC                      l905 1556  
                    l907 13B6                      l851 0A66                      l916 13FC  
                    l596 2084                      l860 0D36                      l852 0A54  
                    l597 20CA                      l853 0A1A                      l918 1474  
                    l919 1462                      l868 0B80                      l877 0C50  
                    l893 2AB0                      l878 0C3E                      _GIE 007F97  
                    _LCD 2490                      _PEN 007E2A                      _SEN 007E28  
                    _map 2AB2                      _pos 006C                      wreg 000FE8  
          i2_SettingsLCD 2D3C                     ?_LCD 0001             ___fltol@exp1 00B5  
                   l1020 2BB0                     l4000 0BD4                     l4002 0BE2  
                   l4010 0C00                     l4100 2700                     l4004 0BEA  
                   l4012 0C0E                     l4110 2736                     l4102 2712  
                   l4022 0C60                     l4030 0CB6                     l4014 0C12  
                   l4006 0BEE                     l4112 274C                     l4104 271A  
                   l4120 2850                     l4200 1B0A                     l4040 0D08  
                   l4032 0CC6                     l4024 0C6C                     l4016 0C20  
                   l4008 0BFE                     l4114 2754                     l4106 2722  
                   l4130 2898                     l4122 2864                     l4210 1B4A  
                   l4202 1B1C                     l4050 0D26                     l4042 0D0E  
                   l4034 0CD6                     l4026 0C7A                     l4018 0C36  
                   l4060 20E8                     l4116 2756                     l4108 2730  
                   l4132 28A0                     l4124 286C                     l4212 1B90  
                   l4204 1B32                     l4220 1BD4                     l4140 269E  
                   l4300 128A                     l4044 0D10                     l4036 0CF6  
                   l4028 0CB4                     l4070 210E                     l4062 20EC  
                   l4054 20CC                     l4118 275C                     l4134 28A6  
                   l4126 2874                     l4214 1B9C                     l4206 1B3E  
                   l4230 2948                     l4150 26DA                     l4142 26AC  
                   l4302 12A0                     l4046 0D16                     l4038 0CFA  
                   l4152 2D0E                     l4080 2144                     l4072 2120  
                   l4064 20FA                     l4056 20D2                     l4128 2882  
                   l4216 1BA0                     l4208 1B42                     l4160 1A38  
                   l4224 291A                     l4144 26B2                     l4136 267E  
                   l4320 12F4                     l4304 12B0                     l4312 12D0  
                   l4048 0D24                     l4400 2A6A                     l4240 21FC  
                   l4232 2196                     l4154 2D10                     l4082 215A  
                   l4074 2128                     l4090 2170                     l4066 2102  
                   l4058 20E0                     l4162 1A44                     l4218 1BB2  
                   l4226 2934                     l4146 26B6                     l4138 2692  
                   l4330 1346                     l4322 130E                     l4314 12E0  
                   l4306 12B8                     l4410 2006                     l4402 2A7C  
                   l4250 2236                     l4234 21B8                     l4260 2CF4  
                   l4092 2180                     l4084 2162                     l4076 2130  
                   l4068 2106                     l4180 1AB4                     l4164 1A4C  
                   l4156 1A18                     l4228 2944                     l4148 26D6  
                   l4340 13A2                     l4332 1356                     l4324 131E  
                   l4316 12E0                     l4308 12BC                     l4420 2072  
                   l4412 2034                     l4252 223A                     l4236 21C4  
                   l4500 1786                     l4094 2188                     l4086 2164  
                   l4078 213E                     l4254 2AB2                     l4182 1ABC  
                   l4166 1A54                     l4158 1A26                     l4350 13E2  
                   l4342 13A4                     l4334 136A                     l4326 132E  
                   l4270 11EA                     l4262 11BC                     l4422 20C2  
                   l4414 2044                     l4406 1FC6                     l4430 1ED6  
                   l4246 220C                     l4238 21E8                     l4510 17F4  
                   l4502 1790                     l4520 299A                     l4088 216A  
                   l4184 1ACA                     l4168 1A60                     l4176 1A6C  
                   l3800 2D84                     l4360 141E                     l4352 13EC  
                   l4344 13B4                     l4336 1378                     l4328 133E  
                   l4280 1224                     l4272 11FA                     l4264 11CA  
                   l4424 20C8                     l4416 2052                     l4408 1FF6  
                   l4440 1F26                     l4248 2216                     l4512 17FC  
                   l4504 17AA                     l4600 1962                     l4258 2CF2  
                   l4522 299E                     l4514 2970                     l4098 26F6  
                   l4194 1ADA                     l4186 1ACE                     l4178 1AA4  
                   l4530 235A                     l4370 1490                     l4362 142C  
                   l4354 13FA                     l4346 13C6                     l4338 1384  
                   l4290 1250                     l4282 122A                     l4274 120A  
                   l4266 11D8                     l4418 2064                     l4450 1F50  
                   l4442 1F2A                     l4434 1EEA                     l3810 2BC0  
                   l3802 2D78                     l4506 17C6                     l4610 19D4  
                   l4602 1978                     l4516 297C                     l4188 1AD6  
                   l4540 23BE                     l4532 237A                     l4524 231A  
                   l4380 14FC                     l4372 149E                     l4364 145A  
                   l4348 13DC                     l4356 140C                     l4292 1260  
                   l4284 1230                     l4276 120C                     l4268 11DA  
                   l3900 097C                     l4460 1F78                     l4452 1F5A  
                   l4444 1F38                     l4436 1F14                     l4428 1EBE  
                   l3812 2BC8                     l3804 2D7C                     l4508 17E2  
                   l4612 19EA                     l4604 198E                     l3830 24BA  
                   l3822 2494                     l4518 2988                     l4198 1B08  
                   l4534 2398                     l4526 2350                     l4390 154A  
                   l4382 1516                     l4374 14C8                     l4358 141A  
                   l4294 1270                     l4286 123E                     l4278 1214  
                   l3910 0990                     l3902 0980                     l4462 1F84  
                   l4454 1F64                     l4438 1F16                     l3814 2BDE  
                   l3806 2BB6                     l4614 1A00                     l4606 19A4  
                   l4550 183E                     l4542 1818                     ?_map 00BA  
                   l3840 252A                     l3832 24D4                     l3824 249C  
                   l4536 239C                     l4528 2354                     l4392 154C  
                   l4384 1532                     l4368 1484                     l4376 14CC  
                   l4296 1272                     l4288 1240                     l3920 09A4  
                   l3912 0994                     l3904 0984                     l4464 1F94  
                   l3816 2BE0                     l3808 2BBA                     l4480 15F2  
                   l4472 1558                     l4608 19BE                     l4560 188E  
                   l4552 1850                     l4544 1820                     l4616 2D60  
                   l3842 2532                     l3834 24DC                     l3826 249E  
                   l4538 23BA                     l4386 1536                     l4378 14E6  
                   l4298 127A                     l3922 09A8                     l3914 0998  
                   l3906 0988                     l3930 09B8                     l4466 1FA4  
                   l3818 2BE4                     l4490 16FE                     l4482 1626  
                   l4474 158E                     l4570 18E0                     l4562 18A4  
                   l4554 1852                     l4546 1822                     l3844 2534  
                   l3836 24FC                     l3828 24B2                     l3780 2B78  
                   l4388 1544                     l3940 0A28                     l3932 09BC  
                   l3924 09AC                     l3916 099C                     l3908 098C  
                   l3860 08A4                     l3852 0876                     l4468 1FB4  
                   l4492 170E                     l4484 165C                     l4476 159E  
                   l4580 18F6                     l4572 18E6                     l4564 18BA  
                   l4556 1860                     l4548 183C                     l3838 2504  
                   l3782 2B84                     l3846 2C7A                     l3774 2C52  
                   l3790 2D88                     l3950 0A52                     l3942 0A34  
                   l3934 09E6                     l3926 09B0                     l3918 09A0  
                   l3870 08DE                     l3862 08B4                     l3854 0884  
                   l4494 1742                     l4486 1692                     l4478 15D2  
                   l4590 192A                     l4582 18F8                     l4574 18EC  
                   l4566 18D4                     l4558 187C                     l3784 2B8A  
                   l3848 2C98                     l3776 2C52                     l3792 2D8C  
                   l3960 0AA8                     l3952 0A74                     l3944 0A38  
                   l3936 0A02                     l3928 09B4                     l3880 090C  
                   l3872 08E4                     l3864 08C4                     l3856 0892  
                   l4496 1752                     l4488 16C8                     l4592 192E  
                   l4584 18FA                     l4576 18F2                     l4568 18DA  
                   l3786 2BA2                     l3778 2C6A                     l3794 2D56  
                   l3970 0AE2                     l3962 0AB6                     l3954 0A84  
                   l3946 0A46                     l3938 0A12                     l3890 0940  
                   l3882 090E                     l3874 08F6                     l3866 08C6  
                   l3858 0894                     l4498 176C                     l4594 1930  
                   l4586 1910                     l4578 18F4                     l3796 2D5A  
                   l3980 0B4E                     l3972 0AE4                     l3964 0AC4  
                   l3948 0A48                     l3884 091E                     l3892 0948  
                   l3876 08F8                     l3868 08CE                     l4596 194A  
                   l4588 1926                     l3798 2D80                     l3990 0BA6  
                   l3982 0B50                     l3974 0AEE                     l3966 0AD0  
                   l3958 0A98                     l3894 0958                     l3886 092E  
                   l3878 08FE                     l4598 194C                     l3984 0B60  
                   l3968 0AD4                     l3976 0AF4                     l3896 096A  
                   l3888 093E                     l3994 0BBA                     l3978 0B1A  
                   l3986 0B70                     l3898 0978                     l3996 0BC4  
                   l3988 0B96                     l3998 0BD2                     STR_1 086C  
                   STR_2 086C                     STR_3 083A                     STR_4 0829  
                   STR_5 080B                     STR_6 0863                     STR_7 0856  
                   STR_8 0848                     u4000 213E                     _LATD 000F8C  
                   u4001 213A                     _LATE 000F8D                     u4010 215A  
                   u4011 2156                     u4020 2180                     u4100 1A38  
                   u4021 217C                     u4101 1A34                     u4030 2712  
                   u4110 1ACA                     u4031 270E                     u4111 1AC6  
                   u4040 2730                     u4120 1B04                     u4200 2236  
                   u4041 272C                     u4121 1B00                     u4201 2232  
                   u4050 274C                     u4130 1B1C                     u4210 11D8  
                   u4051 2748                     u4131 1B18                     u4211 11D4  
                   u4060 2864                     u4140 1B32                     u4300 1378  
                   u4220 11EA                     u4061 2860                     u4141 1B2E  
                   u4301 1374                     u4221 11E6                     u4070 2882  
                   u4150 1BB2                     u4310 13A2                     u4230 11FA  
                   u4071 287E                     u4151 1BAE                     u4311 139E  
                   u4231 11F6                     u4080 2898                     u4160 1BD4  
                   u4400 149E                     u4320 13C6                     u4240 123E  
                   u3600 08B4                     u4081 2894                     u4161 1BD0  
                   u4401 149A                     u4321 13C2                     u4241 123A  
                   u3601 08B0                     u4170 2934                     u3530 2C6A  
                   u4090 26D6                     u4410 14E6                     u4330 13DC  
                   u4250 1250                     u3610 08F6                     u4171 2930  
                   u3531 2C66                     u4091 26D2                     u4411 14E2  
                   u4331 13D8                     u4251 124C                     u3611 08F2  
                   u4180 296E                     u3540 2C78                     u4420 1516  
                   u4340 13FA                     u4260 1260                     u3700 0A28  
                   u3620 090C                     u4500 1F0A                     u4181 296A  
                   u3541 2C74                     u4421 1512                     u4341 13F6  
                   u4261 125C                     u3701 0A24                     u3621 0908  
                   u3550 2BA2                     u4430 1544                     u4350 141A  
                   u4270 12A0                     u3710 0A46                     u3630 091E  
                   u4510 1F38                     u4190 21E8                     u3551 2B9E  
                   u4431 1540                     u4351 1416                     u4271 129C  
                   u3711 0A42                     u3631 091A                     u4511 1F34  
                   u4191 21E4                     u4600 29C4                     u4360 142C  
                   u4280 12E0                     u4440 1FF6                     u3800 0B96  
                   u3720 0A66                     u3640 092E                     u4520 1F4C  
                   u3560 2BDC                     u4601 29C0                     u4361 1428  
                   u4281 12DC                     u4441 1FF2                     u3801 0B92  
                   u3721 0A62                     u3641 092A                     u4521 1F48  
                   u4505 1F00                     u3561 2BD6                     u4370 145A  
                   u4290 1356                     u4450 2034                     u3810 0BA6  
                   u3730 0A74                     u3650 096A                     u4530 1F74  
                   u4371 1456                     u4291 1352                     u4451 2030  
                   u3811 0BA2                     u3731 0A70                     u3651 0966  
                   u4531 1F70                     _PEIE 007F96                     u4380 1470  
                   u4460 2052                     u3900 0C7A                     u3820 0BD2  
                   u3740 0A84                     u3660 0978                     u3580 0892  
                   u4540 1F94                     u4381 146C                     u4461 204E  
                   u3901 0C76                     u3821 0BCE                     u3741 0A80  
                   u3661 0974                     u3581 088E                     u4541 1F90  
                   u4390 1484                     u4470 2072                     u3910 0CB4  
                   u3830 0BE2                     u3750 0AB6                     u3670 09E6  
                   u3590 08A4                     u4550 1FA4                     u4391 1480  
                   u4471 206E                     u3911 0CB0                     u3831 0BDE  
                   u3751 0AB2                     u3671 09E2                     u3591 08A0  
                   u4551 1FA0                     u3575 2BDE                     u4480 20C2  
                   u3920 0CC6                     u3840 0BFE                     u3760 0AC4  
                   u3680 09FE                     u4560 158E                     u4481 20BE  
                   u3921 0CC2                     u3841 0BFA                     u3761 0AC0  
                   u3681 09F8                     u4561 158A                     u3930 0CD6  
                   u3850 0C0E                     u3770 0AE2                     u3690 0A00  
                   u4490 1ED6                     u4570 15D2                     u4707 26E6  
                   u3931 0CD2                     u3851 0C0A                     u3771 0ADE  
                   u4491 1ED2                     u4571 15CE                     _RCIE 007CED  
                   u3940 0CF6                     u3860 0C20                     u3780 0B1A  
                   u4580 16FE                     _RCIF 007CF5                     _RCEN 007E2B  
                   u4717 2496                     u3941 0CF2                     u3861 0C1C  
                   u3781 0B16                     u4581 16FA                     u4637 1884  
                   u3950 0D08                     u3870 0C36                     u3790 0B60  
                   u4590 1742                     u4727 24B4                     u3951 0D04  
                   u3871 0C32                     u3791 0B5C                     u4591 173E  
                   u4647 18C6                     u3960 0D24                     u3880 0C4C  
                   u4737 24D6                     u3961 0D20                     u3881 0C48  
                   u4657 193C                     u3970 20E0                     u3890 0C60  
                   u4747 24FE                     u3971 20DC                     u3891 0C5C  
                   u4667 19B0                     u3980 20FA                     u4757 252C  
                   u3981 20F6                     u4677 17EA                     u3990 2120  
                   u4767 2536                     u3991 211C                     u4687 2246  
                   u4697 23CA                     _RSEN 007E29                     _TXIF 007CF4  
      mover_servo@angulo 00C8                     _dato 0038                     _flag 003D  
                   _atoi 1DA6                     _coor 0030                     _main 2D60  
             i2_readyI2C 2CA2                     _text 006E       i2___lwdiv@quotient 0005  
                   fsr2h 000FDA                     indf2 000FDF                     map@x 00BA  
                   fsr2l 000FD9                     btemp 004C           i2_PrintDataLCD 29C6  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
        ___fldiv@new_exp 00BD          __end_ofi2_start 2A6A             ___param_bank 000000  
                  ??_LCD 00AC               i2_startI2C 2D98                    ??_map 00C4  
  __end_ofi2_mover_servo 2490               i2_writeI2C 27E0          writeI2C@Address 00B5  
          ___fltol@sign1 00B4                    ?_atoi 000F          __end_of___fladd 0D38  
                  ?_main 0001                    _ACKEN 007E2C                    _ACKDT 007E2D  
        __end_of___fldiv 1558          __end_of___awdiv 2192          __end_of___flsub 2AB2  
        __end_of___fltol 1FC6          ___awdiv@divisor 00AE                    _LATE0 007C68  
                  _LATE1 007C69        setPWMFreq@newmode 00CB          __end_of___lwdiv 276C  
        __end_of___lwmod 28B6                    i2l212 11BA                    i2l223 2A24  
                  i2l233 284E                    i2l242 2CC6                    i2l218 2656  
                  i2l227 2A68                    i2l163 0D82                    i2l332 1DA4  
                  i2l236 2D9E                    i2l245 2D76                    i2l335 2CEC  
                  i2l175 0EAA                    i2l248 2D96                    i2l281 2D50  
                  i2l275 2B38                    i2l195 1026                    i2l284 2D3A  
                  i2l293 2A16                    i2l278 248E                    i2l287 25E0  
                  i2l821 27DE                    i2l566 2318                    i2l814 27D6  
                  i2l831 2918                    i2l824 2910          ___awdiv@counter 00B0  
                  _RCREG 000FAE                    i2_LCD 253E                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC                    i2_map 2AF8  
            readI2C@Data 00B0                    _Angle 0032           ?i2_SettingsLCD 0001  
                  _data1 00AB                    _data2 00A6          __end_of_readI2C 2256  
                  _angle 0047          __end_of_dpowers 080B          __end_of_isdigit 2C52  
        __end_of_sendI2C 2D60          __end_of_receive 267A                    atoi@a 0014  
                  atoi@s 000F                    _start 291A                    tablat 000FF5  
 __end_ofi2_PrintDataLCD 2A18         __end_ofi2___wmul 2CEE          __end_of_stopI2C 2D88  
                  ttemp5 004D                    ttemp6 0050                    ttemp7 0054  
                  status 000FD8                    wtemp8 004D          __end_of_sprintf 1BE2  
     __size_ofi2___awdiv 00C4       __size_ofi2___lwdiv 0074       __size_ofi2___lwmod 0064  
            i2map@In_Max 0013              i2map@In_Min 0011         __end_ofi2_strlen 2C20  
        __initialization 2B3A             __end_of_atoi 1EBE             __end_of_main 2D6C  
     __size_ofi2_sendI2C 000C              ?i2_WriteLCD 0001    __end_of_repeatedStart 2D80  
                 ??_atoi 0011                   ??_main 00D2            __activetblptr 000002  
     __size_ofi2_stopI2C 0008               i2sprintf@c 001A               i2sprintf@f 000F  
                 ?i2_LCD 0001       __size_ofi2_sprintf 01C4                   ?i2_map 000F  
             i2strlen@cp 0003           receiveI2C@flag 00AD                   _ADCON1 000FC1  
       ___awdiv@dividend 00AC                   ?_start 0001         __end_of_WriteLCD 2D0A  
                 i2l1020 2C1E                   i2l1014 2C50                   i2l1008 1EB4  
                 i2l1009 1EBC                   i2l3300 2540                   i2l3310 257C  
                 i2l3302 2548                   i2l3320 25D6                   i2l3312 2584  
                 i2l3304 254A                   i2l3330 1C0C                   i2l3322 25D8  
                 i2l3314 25A2                   i2l3306 255C                   i2l3260 2C22  
                 i2l3332 1C14                   i2l3324 1BE2                   i2l2452 2CA2  
                 i2l3500 2454                   i2l3316 25AA                   i2l3308 2564  
                 i2l3262 2C26                   i2l3350 1C84                   i2l3334 1C1C  
                 i2l3326 1BEE                   i2l2454 2CA2                   i2l3502 2458  
                 i2l3318 25CE                   i2l3510 2D40                   i2l3264 2C36  
                 i2l3352 1C92                   i2l3336 1C28                   i2l3344 1C34  
                 i2l3328 1C00                   i2l3272 2A18                   i2l2456 2CB8  
                 i2l3280 27E2                   i2l3504 2474                   i2l3600 0D7E  
                 i2l3512 2D28                   i2l3266 2C46                   i2l3370 1CE4  
                 i2l3362 1CA2                   i2l3354 1C96                   i2l3346 1C6C  
                 i2l3274 2A32                   i2l3290 2814                   i2l3282 27F2  
                 i2l3506 2478                   i2l3610 0DCE                   i2l3602 0D92  
                 i2l3514 2D2A                   i2l3268 2C4A                   i2l2900 28C8  
                 i2l3380 1D54                   i2l3372 1CFA                   i2l3356 1C9E  
                 i2l3348 1C7C                   i2l3276 2A42                   i2l2820 2D72  
                 i2l3292 2832                   i2l3284 27FE                   i2l3700 10E2  
                 i2l3620 0E1C                   i2l3612 0DE0                   i2l3604 0DA4  
                 i2l3508 2D3E                   i2l3470 1DE2                   i2l3462 1DA6  
                 i2l2910 2904                   i2l2902 28D0                   i2l3382 1D60  
                 i2l3374 1D06                   i2l3366 1CD0                   i2l3278 2A46  
                 i2l2814 2D98                   i2l2822 2D90                   i2l3294 2836  
                 i2l3286 280C                   i2l3702 10FE                   i2l3710 113E  
                 i2l3630 0E6A                   i2l3622 0E28                   i2l3614 0DEC  
                 i2l3606 0DB0                   i2l3480 1E34                   i2l3472 1DEE  
                 i2l3464 1DAA                   i2l2840 2274                   i2l2832 2256  
                 i2l3296 2AF8                   i2l2912 290A                   i2l2904 28D8  
                 i2l3384 1D64                   i2l3376 1D0A                   i2l3368 1CD2  
                 i2l2920 2C12                   i2l2816 2D9C                   i2l2824 2D94  
                 i2l3288 2810                   i2l3720 119E                   i2l3712 115A  
                 i2l3704 1102                   i2l3640 0EE8                   i2l3624 0E3A  
                 i2l3616 0DFE                   i2l3608 0DC2                   i2l3632 0EAE  
                 i2l2826 2CC8                   i2l3474 1E08                   i2l3466 1DAE  
                 i2l2850 22A8                   i2l2842 2282                   i2l2834 225A  
                 i2l2906 28E6                   i2l3378 1D12                   i2l3386 1D76  
                 i2l2914 2BEA                   i2l2818 2D6E                   i2l3490 23DA  
                 i2l3722 11B2                   i2l3714 1176                   i2l3706 1112  
                 i2l3650 0F36                   i2l3642 0F12                   i2l3634 0EBE  
                 i2l3626 0E46                   i2l3618 0E0A                   i2l3730 29F0  
                 i2l2828 2CE4                   i2l3484 1E6C                   i2l3476 1E12  
                 i2l3468 1DC8                   i2l2860 22E2                   i2l2852 22B0  
                 i2l2844 228A                   i2l2836 2268                   i2l2908 28FC  
                 i2l3388 1D98                   i2l2916 2BF6                   i2l3492 240E  
                 i2l3716 117A                   i2l3708 1126                   i2l3660 0F88  
                 i2l3652 0F4A                   i2l3644 0F16                   i2l3636 0EC6  
                 i2l3628 0E58                   i2l3732 29F4                   i2l3724 29C6  
                 i2l3740 2616                   i2l3486 1E88                   i2l3478 1E2C  
                 i2l2870 2308                   i2l2862 22EA                   i2l2854 22B8  
                 i2l2846 228E                   i2l2838 2270                   i2l2918 2BFA  
                 i2l3494 2412                   i2l3718 118A                   i2l3670 0FDA  
                 i2l3662 0F9A                   i2l3654 0F66                   i2l3646 0F1A  
                 i2l3638 0ED8                   i2l3590 0D38                   i2l3726 29D2  
                 i2l3742 264A                   i2l3488 1E98                   i2l2872 2310  
                 i2l2864 22EC                   i2l2856 22C6                   i2l2848 2296  
                 i2l2880 2786                   i2l3496 2418                   i2l3672 0FE6  
                 i2l3664 0FA6                   i2l3680 1026                   i2l3656 0F6A  
                 i2l3648 0F2E                   i2l3592 0D4A                   i2l3728 29DE  
                 i2l3744 264E                   i2l3736 2604                   i2l2866 22F2  
                 i2l2858 22CC                   i2l2890 27C0                   i2l2882 278E  
                 i2l3498 2438                   i2l3690 1086                   i2l3674 0FFA  
                 i2l3666 0FBA                   i2l3658 0F7C                   i2l3682 103E  
                 i2l3594 0D52                   i2l3738 2612                   i2l2868 22F8  
                 i2l2892 27C8                   i2l2884 2796                   i2l2876 276C  
                 i2l3692 108A                   i2l3684 1050                   i2l3676 1006  
                 i2l3668 0FC6                   i2l3596 0D64                   i2l2894 27CA  
                 i2l2886 27A4                   i2l2878 2774                   i2l3694 109A  
                 i2l3686 1058                   i2l3678 101A                   i2l3598 0D6C  
                 i2l2896 27D0                   i2l2888 27AA                   i2l3696 10AE  
                 i2l3688 106A                   i2l2898 28B6                   i2l3698 10C6  
        ?i2_PrintDataLCD 0001                   _OSCCON 000FD3                ??i2_start 0005  
                 _SSPADD 000FC8              ?i2_readyI2C 0001                   _SSPBUF 000FC9  
     setPWMFreq@prescale 00CA                   i2map@x 000F         __end_of_algoritm 11BC  
        i2writeI2C@bytes 0006             readI2C@bytes 00B2                   ___flge 1FC6  
              ??___fladd 00B4                   ___wmul 2C7A         writeI2C@Register 00AE  
              ??___fldiv 00B4                ??___awdiv 00B0              ?i2_startI2C 0001  
              ??___flsub 00C4                ??___fltol 00B0             ?_mover_servo 00C6  
              ??___lwdiv 00B0                ??___lwmod 00B7         __end_of_readyI2C 2C7A  
                 clear_0 2B58                   clear_1 2B64         ___awdiv@quotient 00B2  
            ?i2_writeI2C 0003                   _servos 004A                   _strlen 2B78  
         i2___awdiv@sign 0006                ??_readI2C 00B4             __pdataCOMRAM 004A  
              ??_isdigit 0001                ??_sendI2C 00AD        __end_ofi2___awdiv 231A  
        ??i2_SettingsLCD 0003                ??_receive 0022        __end_ofi2___lwdiv 27E0  
           __mediumconst 0000        __end_ofi2___lwmod 291A            ??_SettingsLCD 00AE  
       __end_of_settings 1A18                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         __end_of_startI2C 2D90                ??_stopI2C 00AD  
              ??_sprintf 00BE         __end_of_writeI2C 26F6              sendI2C@data 00AD  
             ___flge@ff1 00AC               ___flge@ff2 00B0        __end_ofi2_sendI2C 2D78  
             __accesstop 0060  __end_of__initialization 2B6A             WriteLCD@word 00AE  
    __size_ofi2_WriteLCD 0016            i2sprintf@flag 0014            ___rparam_used 000001  
      __end_ofi2_stopI2C 2D98            i2sprintf@prec 0015               ___fltol@f1 00AC  
         setPWMFreq@freq 00C5        __end_ofi2_sprintf 1DA6            __end_ofi2_LCD 25E2  
          __end_ofi2_map 2B3A       i2___lwmod@dividend 0008           __pcstackCOMRAM 0001  
           i2map@Out_Max 0017             i2map@Out_Min 0015            __end_of_start 2970  
              ?i2___wmul 0009                  ??i2_LCD 0001      __size_ofi2_readyI2C 0026  
                ??i2_map 0019                ?i2_strlen 0001                  ??_start 00B0  
                LCD@data 00AD               __pbssBANK0 0060      __size_ofi2_startI2C 0008  
            i2sprintf@ap 0016              i2sprintf@sp 000D      __end_of_SettingsLCD 2D26  
    __size_ofi2_writeI2C 0070                  ?___flge 00AC             _angle_servos 0060  
                ?___wmul 00B4                ?_WriteLCD 0001                  ?_strlen 00AC  
             ??i2___wmul 000D                ?_algoritm 0001               ??i2_strlen 0003  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
          ?_PrintDataLCD 0001                  i2_start 2A18             writeI2C@Data 00AF  
              ?_readyI2C 0001                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0106                ?_settings 0001                  ___fladd 0876  
                ___fldiv 11BC                  ___awdiv 20CC                ?_startI2C 0001  
                ___flsub 2A6A                  ___fltol 1EBE          __size_of___wmul 0028  
                ___lwdiv 26F6                  ___lwmod 2850             __psmallconst 0800  
              i2LCD@data 0002                  __pcinit 2B3A             ??i2_WriteLCD 0003  
             ??_WriteLCD 00AE                ?_writeI2C 00AE                  __ramtop 0800  
   __size_of_mover_servo 00C0                  __ptext0 2D60                  __ptext1 1818  
                __ptext2 1558                  __ptext3 2192                  __ptext4 2D78  
                __ptext5 2BB2                  __ptext6 1EBE                  __ptext7 2A6A  
                __ptext8 0876                  __ptext9 1FC6             __size_of_LCD 00AE  
                _readI2C 2192          __size_of_strlen 003A                  _dpowers 0801  
             _receiveI2C 2BB2             __size_of_map 0046                  _isdigit 2C20  
                _sendI2C 2D52                  _receive 0008               _setPWMFreq 1558  
            _SettingsLCD 2D0A               ??_algoritm 0021         ??i2_PrintDataLCD 0005  
           _Coordinate_x 002C             _Coordinate_y 002E             _Coordinate_z 002A  
                _stopI2C 2D80                  _sprintf 1A18           ??_PrintDataLCD 00B0  
         __pintcode_body 25E2     end_of_initialization 2B6A   __size_ofi2_mover_servo 00B6  
           ??i2_readyI2C 0001            __Lmediumconst 0000               ??_readyI2C 00AC  
                int_func 25E2      i2___wmul@multiplier 0009       __end_ofi2_WriteLCD 2D3C  
         i2WriteLCD@word 0003                  postdec2 000FDD               ??_settings 00D0  
                postinc0 000FEE                  postinc2 000FDE             ??i2_startI2C 0002  
             ??_startI2C 00AD               map@Out_Max 00C2               map@Out_Min 00C0  
                strlen@s 00AC             ??i2_writeI2C 0008               ??_writeI2C 00B3  
              _PORTBbits 000F81              ___fladd@grs 00BB       __end_ofi2_readyI2C 2CC8  
  setPWMFreq@prescaleval 00CC                _TRISBbits 000F93                _TRISCbits 000F94  
            ___fldiv@grs 00BF              ___fldiv@rem 00B8                i2___awdiv 2256  
      i2___lwdiv@divisor 0003                i2___lwdiv 276C                i2___lwmod 28B6  
      i2___lwdiv@counter 0007       __end_ofi2_startI2C 2DA0             _coordinate_x 0044  
           _coordinate_y 0041             _coordinate_z 003E   __size_of_repeatedStart 0008  
     i2___awdiv@dividend 0001       __end_ofi2_writeI2C 2850                i2_sendI2C 2D6C  
       mover_servo@servo 00C6                i2_stopI2C 2D90                i2_sprintf 1BE2  
         __end_of___flge 20CC           __end_of___wmul 2CA2            i2_mover_servo 23DA  
          __pidataCOMRAM 2DA0       i2writeI2C@Register 0003         i2___wmul@product 000D  
            ?_receiveI2C 0001                _DriverPin 0036           __end_of_strlen 2BB2  
        readI2C@Register 00AF              ?_setPWMFreq 00C5      start_initialization 2B3A  
            __end_of_LCD 253E       i2___awdiv@quotient 0007        __size_ofi2___wmul 0026  
  __end_ofi2_SettingsLCD 2D52              __end_of_map 2AF8               ?i2___awdiv 0001  
             ?i2___lwdiv 0001               ?i2___lwmod 0008        __size_ofi2_strlen 0036  
              i2strlen@s 0001               ?i2_sendI2C 0001           i2writeI2C@Data 0004  
               ??___flge 00B4               ?i2_stopI2C 0001                 ??___wmul 00B8  
             ?i2_sprintf 000D           ?i2_mover_servo 001B     __end_of_PrintDataLCD 29C6  
          _repeatedStart 2D78                 ??_strlen 00AE                ___fladd@a 00B0  
              ___fladd@b 00AC                ___fldiv@a 00B0                ___fldiv@b 00AC  
      __size_of_WriteLCD 001C              __pbssCOMRAM 002A             i2sprintf@val 0018  
              ___flsub@a 00C0                ___flsub@b 00BC            __pcstackBANK0 00AC  
      i2___lwmod@divisor 000A        i2___lwmod@counter 000C        i2SettingsLCD@word 0003  
      __size_of_algoritm 0484                 ?i2_start 0001              sprintf@flag 00BF  
            sprintf@prec 00C0        __size_of_readyI2C 0028      __size_of_receiveI2C 0038  
       ___lwdiv@dividend 00AC      __size_of_setPWMFreq 02C0         receiveI2C@buffer 00AE  
              __pintcode 0008                 ?___fladd 00AC                 ?___fldiv 00AC  
               ?___awdiv 00AC                 ?___flsub 00BC                 ?___fltol 00AC  
               ?___lwdiv 00AC                 ?___lwmod 00B3        __size_of_settings 0200  
      __size_of_startI2C 0008           ?_repeatedStart 0001                 ?_readI2C 00AF  
            __smallconst 0800           __size_ofi2_LCD 00A4        __size_of_writeI2C 007C  
               ?_isdigit 0001                 ?_sendI2C 0001                 ?_receive 0001  
         __size_ofi2_map 0042             ?_SettingsLCD 0001                 ?_stopI2C 0001  
       ___lwdiv@quotient 00B1              ??i2___awdiv 0005                 ?_sprintf 00B8  
            ??i2___lwdiv 0005              ??i2___lwmod 000C           __size_of_start 0056  
         ___wmul@product 00B8                 _LATDbits 000F8C              ??i2_sendI2C 0002  
              map@In_Max 00BE                map@In_Min 00BC                 i2u300_40 1C00  
               i2u300_41 1BFC                 i2u301_40 1C92                 i2u301_41 1C8E  
               i2u302_40 1CCC                 i2u302_41 1CC8                 i2u303_40 1CE4  
               i2u303_41 1CE0                 i2u312_40 1DC8                 i2u240_40 2308  
               i2u304_40 1CFA                 i2u320_40 0D7E                 i2u312_41 1DC4  
               i2u240_41 2304                 i2u304_41 1CF6                 i2u320_41 0D7A  
               i2u313_40 1DE2                 i2u241_40 2786                 i2u305_40 1D76  
               i2u321_40 0D92                 i2u313_41 1DDE                 i2u241_41 2782  
               i2u305_41 1D72                 i2u321_41 0D8E                 i2u314_40 1E08  
               i2u242_40 27A4                 i2u306_40 1D98                 i2u330_40 0EBE  
               i2u322_40 0DA4                 i2u314_41 1E04                 i2u242_41 27A0  
               i2u306_41 1D94                 i2u330_41 0EBA                 i2u322_41 0DA0  
               i2u315_40 1E2C                 i2u235_40 2268                 i2u243_40 27C0  
               i2u331_40 0ED8                 i2u323_40 0DC2                 i2u315_41 1E28  
               i2u235_41 2264                 i2u243_41 27BC                 i2u331_41 0ED4  
               i2u323_41 0DBE                 i2u316_40 1E88                 i2u236_40 2282  
               i2u244_40 28C8                 i2u180_40 2CC6                 i2u340_40 106A  
               i2u332_40 0F2E                 i2u324_40 0DE0                 i2u316_41 1E84  
               i2u236_41 227E                 i2u244_41 28C4                 i2u180_41 2CC2  
               i2u340_41 1066                 i2u332_41 0F2A                 i2u324_41 0DDC  
               i2u317_40 1E98                 i2u237_40 22A8                 i2u245_40 28E6  
               i2u341_40 1086                 i2u333_40 0F7C                 i2u325_40 0DFE  
               i2u317_41 1E94                 i2u237_41 22A4                 i2u245_41 28E2  
               i2u341_41 1082                 i2u333_41 0F78                 i2u325_41 0DFA  
               i2u238_40 22C6                 i2u246_40 28FC                 i2u342_40 10AE  
               i2u334_40 0F9A                 i2u326_40 0E1C                 i2u318_40 0D4A  
               i2u350_40 2612                 i2u238_41 22C2                 i2u246_41 28F8  
               i2u342_41 10AA                 i2u334_41 0F96                 i2u326_41 0E18  
               i2u318_41 0D46                 i2u350_41 260E                 i2u239_40 22E2  
               i2u247_40 2C12                 i2u343_40 10E2                 i2u335_40 0FBA  
               i2u327_40 0E3A                 i2u319_40 0D64                 i2u239_41 22DE  
               i2u247_41 2C0E                 i2u343_41 10DE                 i2u335_41 0FB6  
               i2u327_41 0E36                 i2u319_41 0D60                 i2u344_40 10FE  
               i2u336_40 0FDA                 i2u328_40 0E58                 i2u344_41 10FA  
               i2u336_41 0FD6                 i2u328_41 0E54                 i2u345_40 1126  
               i2u337_40 0FFA                 i2u329_40 0E6A                 i2u345_41 1122  
               i2u337_41 0FF6                 i2u329_41 0E66                 i2u346_40 115A  
               i2u338_40 101A                 i2u346_41 1156                 i2u338_41 1016  
               i2u179_40 2CB8                 i2u347_40 1176                 i2u339_40 1050  
               i2u179_41 2CB4                 i2u347_41 1172                 i2u339_41 104C  
               i2u348_40 119E                 i2u348_41 119A                 i2u349_40 2A16  
               i2u349_41 2A12                 i2u295_40 2C36                 i2u295_41 2C32  
               i2u296_40 2C46                 i2u296_41 2C42                 i2u480_47 25A4  
               i2u297_40 2A32                 i2u297_41 2A2E                 i2u481_47 25D0  
               i2u298_40 2A68                 i2u298_41 2A64                 i2u482_47 25DA  
               i2u299_40 2832                 i2u299_41 282E                 i2u483_47 2482  
               i2u484_47 2840                 i2u477_47 2542                 i2u478_47 255E  
               i2u479_47 257E              ??i2_stopI2C 0002          ??i2_mover_servo 001F  
            ??i2_sprintf 0013            ??_mover_servo 00CA                _texto_LCD 0096  
    i2mover_servo@angulo 001D        ___wmul@multiplier 00B4                 i2___wmul 2CC8  
      i2writeI2C@Address 000A           readI2C@Address 00B6        i2___awdiv@divisor 0003  
      i2___awdiv@counter 0005                 i2_strlen 2BEA            writeI2C@bytes 00B1  
       __size_ofi2_start 0052                 __Hrparam 0000    __size_of_PrintDataLCD 0056  
               __Lrparam 0000          ??_repeatedStart 00AD         __size_of___fladd 04C2  
       __size_of___fldiv 039C         __size_of___awdiv 00C6         __size_of___flsub 0048  
       __size_of___fltol 0108    i2___wmul@multiplicand 000B         __size_of___lwdiv 0076  
       __size_of___lwmod 0066                 _WriteLCD 2CEE              _isdigit$894 0002  
           ??_receiveI2C 00AD      __end_of_mover_servo 23DA               sprintf@val 00C3  
           ??_setPWMFreq 00C9         __size_of_readI2C 00C4         __size_of_isdigit 0032  
       __size_of_sendI2C 000E         __size_of_receive 2672          ___lwdiv@divisor 00AE  
               _algoritm 0D38          ___lwdiv@counter 00B0                 __ptext10 11BC  
               __ptext11 231A                 __ptext20 26F6                 __ptext12 267A  
               __ptext21 2AB2                 __ptext13 2D80                 __ptext30 29C6  
               __ptext22 2C7A                 __ptext14 2D88                 __ptext31 2D26  
               __ptext23 20CC                 __ptext15 2D52                 __ptext40 2CA2  
               __ptext32 2D3C                 __ptext24 2970                 __ptext16 2C52  
               __ptext41 2A18                 __ptext33 253E                 __ptext25 2B78  
               __ptext17 291A                 __ptext50 2C20                 __ptext42 2BEA  
               __ptext34 0D38                 __ptext26 2CEE                 __ptext18 1A18  
               __ptext43 1BE2                 __ptext35 23DA                 __ptext27 2D0A  
               __ptext19 2850                 __ptext44 28B6                 __ptext36 27E0  
               __ptext28 2490                 __ptext45 276C                 __ptext37 2D90  
               __ptext46 2AF8                 __ptext38 2D98                 __ptext47 2256  
               __ptext39 2D6C                 __ptext48 1DA6                 __ptext49 2CC8  
       __size_of_stopI2C 0008         __size_of_sprintf 01CA             _PrintDataLCD 2970  
          i2sendI2C@data 0002                 _readyI2C 2C52            __size_of_atoi 0118  
          __size_of_main 000C  __size_ofi2_PrintDataLCD 0052       __end_of_receiveI2C 2BEA  
     __end_of_setPWMFreq 1818                 _settings 1818                 int$flags 004C  
               _startI2C 2D88                 atoi@sign 0013       i2mover_servo@servo 001B  
               _writeI2C 267A                 isdigit@c 0003     __size_of_SettingsLCD 001C  
               intlevel2 0000                sprintf@ap 00C1                sprintf@sp 00B8  
       ___lwmod@dividend 00B3   __size_ofi2_SettingsLCD 0016              _mover_servo 231A  
               sprintf@c 00C5                 sprintf@f 00BA          ___lwmod@divisor 00B5  
               strlen@cp 00AE          ___lwmod@counter 00B7          SettingsLCD@word 00AE  
          ___fladd@signs 00B8             ___fladd@aexp 00B9             ___fladd@bexp 00BA  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 23 17:17:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 05/05/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F45K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataBANK0
    80  001434                     __pidataBANK0:
    81                           	callstack 0
    82                           
    83                           ;initializer for _days
    84  001434  53                 	db	83
    85  001435  4D                 	db	77
    86  001436  54                 	db	84
    87  001437  57                 	db	87
    88  001438  74                 	db	116
    89  001439  46                 	db	70
    90  00143A  73                 	db	115
    91                           
    92                           ;initializer for _name
    93  00143B  44                 	db	68
    94  00143C  61                 	db	97
    95  00143D  6E                 	db	110
    96  00143E  69                 	db	105
    97  00143F  65                 	db	101
    98  001440  6C                 	db	108
    99                           
   100                           ;initializer for _AM_PM
   101  001441  05                 	db	5
   102                           
   103                           ;initializer for _Clock_type
   104  001442  06                 	db	6
   105                           
   106                           ;initializer for _text9
   107  001443  53                 	db	83
   108  001444  61                 	db	97
   109  001445  74                 	db	116
   110  001446  00                 	db	0
   111  001447  00                 	db	0
   112                           
   113                           ;initializer for _text8
   114  001448  46                 	db	70
   115  001449  72                 	db	114
   116  00144A  69                 	db	105
   117  00144B  00                 	db	0
   118  00144C  00                 	db	0
   119                           
   120                           ;initializer for _text7
   121  00144D  54                 	db	84
   122  00144E  68                 	db	104
   123  00144F  75                 	db	117
   124  001450  00                 	db	0
   125  001451  00                 	db	0
   126                           
   127                           ;initializer for _text6
   128  001452  57                 	db	87
   129  001453  65                 	db	101
   130  001454  64                 	db	100
   131  001455  00                 	db	0
   132  001456  00                 	db	0
   133                           
   134                           ;initializer for _text5
   135  001457  54                 	db	84
   136  001458  75                 	db	117
   137  001459  65                 	db	101
   138  00145A  00                 	db	0
   139  00145B  00                 	db	0
   140                           
   141                           ;initializer for _text4
   142  00145C  4D                 	db	77
   143  00145D  6F                 	db	111
   144  00145E  6E                 	db	110
   145  00145F  00                 	db	0
   146  001460  00                 	db	0
   147                           
   148                           ;initializer for _text3
   149  001461  53                 	db	83
   150  001462  75                 	db	117
   151  001463  6E                 	db	110
   152  001464  00                 	db	0
   153  001465  00                 	db	0
   154                           
   155                           ;initializer for _text2
   156  001466  41                 	db	65
   157  001467  4D                 	db	77
   158  001468  00                 	db	0
   159  001469  00                 	db	0
   160  00146A  00                 	db	0
   161                           
   162                           ;initializer for _text1
   163  00146B  50                 	db	80
   164  00146C  4D                 	db	77
   165  00146D  00                 	db	0
   166  00146E  00                 	db	0
   167  00146F  00                 	db	0
   168                           
   169                           ;initializer for _calendario
   170  001470  01                 	db	1
   171  001471  20                 	db	32
   172  001472  02                 	db	2
   173  001473  17                 	db	23
   174                           
   175                           ;initializer for _hora
   176  001474  50                 	db	80
   177  001475  59                 	db	89
   178  001476  71                 	db	113
   179  0000                     _LATEbits	set	3981
   180  0000                     _SSPBUF	set	4041
   181  0000                     _SSP1BUF	set	4041
   182  0000                     _LATE	set	3981
   183  0000                     _TRISE	set	3990
   184  0000                     _LATD	set	3980
   185  0000                     _TRISD	set	3989
   186  0000                     _SSP1ADD	set	4040
   187  0000                     _SSP1CON2	set	4037
   188  0000                     _SSP1CON1	set	4038
   189  0000                     _SSP1STAT	set	4039
   190  0000                     _TRISCbits	set	3988
   191  0000                     _ADCON1	set	4033
   192  0000                     _OSCCON	set	4051
   193  0000                     _ACKEN1	set	32300
   194  0000                     _ACKDT1	set	32301
   195  0000                     _RCEN1	set	32299
   196  0000                     _RSEN1	set	32297
   197  0000                     _PEN1	set	32298
   198  0000                     _SEN1	set	32296
   199                           
   200                           	psect	smallconst
   201  000600                     __psmallconst:
   202                           	callstack 0
   203  000600  00                 	db	0
   204  000601                     STR_3:
   205  000601  43                 	db	67	;'C'
   206  000602  61                 	db	97	;'a'
   207  000603  6C                 	db	108	;'l'
   208  000604  3A                 	db	58	;':'
   209  000605  25                 	db	37
   210  000606  78                 	db	120	;'x'
   211  000607  2F                 	db	47
   212  000608  25                 	db	37
   213  000609  78                 	db	120	;'x'
   214  00060A  2F                 	db	47
   215  00060B  25                 	db	37
   216  00060C  78                 	db	120	;'x'
   217  00060D  00                 	db	0
   218  00060E                     STR_1:
   219  00060E  48                 	db	72	;'H'
   220  00060F  6F                 	db	111	;'o'
   221  000610  72                 	db	114	;'r'
   222  000611  3A                 	db	58	;':'
   223  000612  25                 	db	37
   224  000613  78                 	db	120	;'x'
   225  000614  3A                 	db	58	;':'
   226  000615  25                 	db	37
   227  000616  78                 	db	120	;'x'
   228  000617  3A                 	db	58	;':'
   229  000618  25                 	db	37
   230  000619  78                 	db	120	;'x'
   231  00061A  00                 	db	0
   232  00061B  00                 	db	0	; dummy byte at the end
   233  0000                     
   234                           ; #config settings
   235                           
   236                           	psect	cinit
   237  001478                     __pcinit:
   238                           	callstack 0
   239  001478                     start_initialization:
   240                           	callstack 0
   241  001478                     __initialization:
   242                           	callstack 0
   243                           
   244                           ; Initialize objects allocated to BANK0 (67 bytes)
   245                           ; load TBLPTR registers with __pidataBANK0
   246  001478  0E34               	movlw	low __pidataBANK0
   247  00147A  6EF6               	movwf	tblptrl,c
   248  00147C  0E14               	movlw	high __pidataBANK0
   249  00147E  6EF7               	movwf	tblptrh,c
   250  001480  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   251  001482  6EF8               	movwf	tblptru,c
   252  001484  EE00  F060         	lfsr	0,__pdataBANK0
   253  001488  EE10 F043          	lfsr	1,67
   254  00148C                     copy_data0:
   255  00148C  0009               	tblrd		*+
   256  00148E  CFF5 FFEE          	movff	tablat,postinc0
   257  001492  50E5               	movf	postdec1,w,c
   258  001494  50E1               	movf	fsr1l,w,c
   259  001496  E1FA               	bnz	copy_data0
   260                           
   261                           ; Clear objects allocated to BANK1 (52 bytes)
   262  001498  EE01  F000         	lfsr	0,__pbssBANK1
   263  00149C  0E34               	movlw	52
   264  00149E                     clear_0:
   265  00149E  6AEE               	clrf	postinc0,c
   266  0014A0  06E8               	decf	wreg,f,c
   267  0014A2  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (61 bytes)
   270  0014A4  EE00  F0A3         	lfsr	0,__pbssBANK0
   271  0014A8  0E3D               	movlw	61
   272  0014AA                     clear_1:
   273  0014AA  6AEE               	clrf	postinc0,c
   274  0014AC  06E8               	decf	wreg,f,c
   275  0014AE  E1FD               	bnz	clear_1
   276  0014B0                     end_of_initialization:
   277                           	callstack 0
   278  0014B0                     __end_of__initialization:
   279                           	callstack 0
   280  0014B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   281  0014B2  6EF8               	movwf	tblptru,c
   282  0014B4  0100               	movlb	0
   283  0014B6  EF0E  F003         	goto	_main	;jump to C main() function
   284                           
   285                           	psect	bssBANK0
   286  0000A3                     __pbssBANK0:
   287                           	callstack 0
   288  0000A3                     _nout:
   289                           	callstack 0
   290  0000A3                     	ds	2
   291  0000A5                     _width:
   292                           	callstack 0
   293  0000A5                     	ds	2
   294  0000A7                     _prec:
   295                           	callstack 0
   296  0000A7                     	ds	2
   297  0000A9                     _flags:
   298                           	callstack 0
   299  0000A9                     	ds	2
   300  0000AB                     _k:
   301                           	callstack 0
   302  0000AB                     	ds	2
   303  0000AD                     _z:
   304                           	callstack 0
   305  0000AD                     	ds	2
   306  0000AF                     _i:
   307                           	callstack 0
   308  0000AF                     	ds	2
   309  0000B1                     _dma:
   310                           	callstack 0
   311  0000B1                     	ds	20
   312  0000C5                     _smh:
   313                           	callstack 0
   314  0000C5                     	ds	20
   315  0000D9                     _DatosCalendario:
   316                           	callstack 0
   317  0000D9                     	ds	4
   318  0000DD                     _DatosHora:
   319                           	callstack 0
   320  0000DD                     	ds	3
   321                           
   322                           	psect	dataBANK0
   323  000060                     __pdataBANK0:
   324                           	callstack 0
   325  000060                     _days:
   326                           	callstack 0
   327  000060                     	ds	7
   328  000067                     _name:
   329                           	callstack 0
   330  000067                     	ds	6
   331  00006D                     _AM_PM:
   332                           	callstack 0
   333  00006D                     	ds	1
   334  00006E                     _Clock_type:
   335                           	callstack 0
   336  00006E                     	ds	1
   337  00006F                     _text9:
   338                           	callstack 0
   339  00006F                     	ds	5
   340  000074                     _text8:
   341                           	callstack 0
   342  000074                     	ds	5
   343  000079                     _text7:
   344                           	callstack 0
   345  000079                     	ds	5
   346  00007E                     _text6:
   347                           	callstack 0
   348  00007E                     	ds	5
   349  000083                     _text5:
   350                           	callstack 0
   351  000083                     	ds	5
   352  000088                     _text4:
   353                           	callstack 0
   354  000088                     	ds	5
   355  00008D                     _text3:
   356                           	callstack 0
   357  00008D                     	ds	5
   358  000092                     _text2:
   359                           	callstack 0
   360  000092                     	ds	5
   361  000097                     _text1:
   362                           	callstack 0
   363  000097                     	ds	5
   364  00009C                     _calendario:
   365                           	callstack 0
   366  00009C                     	ds	4
   367  0000A0                     _hora:
   368                           	callstack 0
   369  0000A0                     	ds	3
   370                           
   371                           	psect	bssBANK1
   372  000100                     __pbssBANK1:
   373                           	callstack 0
   374  000100                     _buffer:
   375                           	callstack 0
   376  000100                     	ds	20
   377  000114                     _dbuf:
   378                           	callstack 0
   379  000114                     	ds	32
   380                           
   381                           	psect	cstackBANK0
   382  0000E0                     __pcstackBANK0:
   383                           	callstack 0
   384  0000E0                     ?_sprintf:
   385                           	callstack 0
   386  0000E0                     sprintf@s:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x0
   390  0000E0                     	ds	2
   391  0000E2                     sprintf@fmt:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395  0000E2                     	ds	10
   396  0000EC                     sprintf@ap:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xC
   400  0000EC                     	ds	2
   401  0000EE                     sprintf@f:
   402                           	callstack 0
   403                           
   404                           ; 6 bytes @ 0xE
   405  0000EE                     	ds	6
   406                           
   407                           	psect	cstackCOMRAM
   408  000001                     __pcstackCOMRAM:
   409                           	callstack 0
   410  000001                     ??_ReadyI2C:
   411  000001                     ?_strlen:
   412                           	callstack 0
   413  000001                     ?_isupper:
   414                           	callstack 0
   415  000001                     ?_isalpha:
   416                           	callstack 0
   417  000001                     ?_islower:
   418                           	callstack 0
   419  000001                     LCD@data:
   420                           	callstack 0
   421  000001                     isalpha@c:
   422                           	callstack 0
   423  000001                     isupper@c:
   424                           	callstack 0
   425  000001                     fputc@c:
   426                           	callstack 0
   427  000001                     strlen@s:
   428                           	callstack 0
   429  000001                     islower@c:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x0
   433  000001                     	ds	1
   434  000002                     SendI2C@data:
   435                           	callstack 0
   436  000002                     ReceiveI2C@flag:
   437                           	callstack 0
   438  000002                     SettingsLCD@word:
   439                           	callstack 0
   440  000002                     WriteLCD@word:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444  000002                     	ds	1
   445  000003                     ??_isupper:
   446  000003                     ??_isalpha:
   447  000003                     ??_islower:
   448  000003                     WriteI2C@Register:
   449                           	callstack 0
   450  000003                     ReceiveI2C@buffer:
   451                           	callstack 0
   452  000003                     fputc@fp:
   453                           	callstack 0
   454  000003                     strlen@a:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2
   458  000003                     	ds	1
   459  000004                     ReadI2C@Register:
   460                           	callstack 0
   461  000004                     WriteI2C@Data:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x3
   465  000004                     	ds	1
   466  000005                     ??_fputc:
   467  000005                     ReadI2C@Data:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x4
   471  000005                     	ds	1
   472  000006                     WriteI2C@bytes:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x5
   476  000006                     	ds	1
   477  000007                     ?_toupper:
   478                           	callstack 0
   479  000007                     ReadI2C@bytes:
   480                           	callstack 0
   481  000007                     toupper@c:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x6
   485  000007                     	ds	1
   486  000008                     ??_WriteI2C:
   487                           
   488                           ; 1 bytes @ 0x7
   489  000008                     	ds	1
   490  000009                     ??_ReadI2C:
   491  000009                     ??_toupper:
   492                           
   493                           ; 1 bytes @ 0x8
   494  000009                     	ds	1
   495  00000A                     WriteI2C@Address:
   496                           	callstack 0
   497  00000A                     fputs@s:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x9
   501  00000A                     	ds	1
   502  00000B                     ReadI2C@Address:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xA
   506  00000B                     	ds	1
   507  00000C                     fputs@fp:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xB
   511  00000C                     	ds	1
   512  00000D                     _toupper$848:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xC
   516  00000D                     	ds	1
   517  00000E                     fputs@c:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0xD
   521  00000E                     	ds	1
   522  00000F                     fputs@i:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xE
   526  00000F                     	ds	2
   527  000011                     ?_pad:
   528                           	callstack 0
   529  000011                     pad@fp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x10
   533  000011                     	ds	2
   534  000013                     pad@buf:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x12
   538  000013                     	ds	2
   539  000015                     pad@p:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x14
   543  000015                     	ds	2
   544  000017                     ??_pad:
   545                           
   546                           ; 1 bytes @ 0x16
   547  000017                     	ds	1
   548  000018                     pad@i:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x17
   552  000018                     	ds	2
   553  00001A                     pad@w:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x19
   557  00001A                     	ds	2
   558  00001C                     ?_xtoa:
   559                           	callstack 0
   560  00001C                     xtoa@fp:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1B
   564  00001C                     	ds	2
   565  00001E                     xtoa@d:
   566                           	callstack 0
   567                           
   568                           ; 8 bytes @ 0x1D
   569  00001E                     	ds	8
   570  000026                     xtoa@x:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x25
   574  000026                     	ds	1
   575  000027                     ??_xtoa:
   576                           
   577                           ; 1 bytes @ 0x26
   578  000027                     	ds	8
   579  00002F                     _xtoa$765:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2E
   583  00002F                     	ds	2
   584  000031                     _xtoa$766:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x30
   588  000031                     	ds	2
   589  000033                     xtoa@p:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x32
   593  000033                     	ds	2
   594  000035                     xtoa@w:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x34
   598  000035                     	ds	2
   599  000037                     xtoa@n:
   600                           	callstack 0
   601                           
   602                           ; 8 bytes @ 0x36
   603  000037                     	ds	8
   604  00003F                     xtoa@i:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x3E
   608  00003F                     	ds	2
   609  000041                     xtoa@c:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x40
   613  000041                     	ds	2
   614  000043                     ?_vfpfcnvrt:
   615                           	callstack 0
   616  000043                     vfpfcnvrt@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x42
   620  000043                     	ds	2
   621  000045                     vfpfcnvrt@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x44
   625  000045                     	ds	2
   626  000047                     vfpfcnvrt@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x46
   630  000047                     	ds	2
   631  000049                     ??_vfpfcnvrt:
   632                           
   633                           ; 1 bytes @ 0x48
   634  000049                     	ds	4
   635  00004D                     vfpfcnvrt@llu:
   636                           	callstack 0
   637                           
   638                           ; 8 bytes @ 0x4C
   639  00004D                     	ds	8
   640  000055                     vfpfcnvrt@c:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x54
   644  000055                     	ds	1
   645  000056                     ?_vfprintf:
   646                           	callstack 0
   647  000056                     vfprintf@fp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x55
   651  000056                     	ds	2
   652  000058                     vfprintf@fmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x57
   656  000058                     	ds	2
   657  00005A                     vfprintf@ap:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x59
   661  00005A                     	ds	2
   662  00005C                     vfprintf@cfmt:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x5B
   666  00005C                     	ds	2
   667  00005E                     ??_main:
   668                           
   669                           ; 1 bytes @ 0x5D
   670  00005E                     	ds	2
   671                           
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 50 in file "newmain.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         0       0       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0
   693 ;;      Temps:          2       0       0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels required when called:    8
   697 ;; This function calls:
   698 ;;		_ReadI2C
   699 ;;		_SettingsLCD
   700 ;;		_WriteI2C
   701 ;;		_WriteLCD
   702 ;;		_settings
   703 ;;		_sprintf
   704 ;;		_strlen
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text0
   711  00061C                     __ptext0:
   712                           	callstack 0
   713  00061C                     _main:
   714                           	callstack 23
   715  00061C                     
   716                           ;newmain.c: 51:     settings();
   717  00061C  ECD5  F009         	call	_settings	;wreg free
   718  000620                     
   719                           ;newmain.c: 52:     WriteI2C(0xD0,0x00,hora,3);
   720  000620  0E00               	movlw	0
   721  000622  6E03               	movwf	WriteI2C@Register^0,c
   722  000624  0EA0               	movlw	low _hora
   723  000626  6E04               	movwf	WriteI2C@Data^0,c
   724  000628  0E00               	movlw	high _hora
   725  00062A  6E05               	movwf	(WriteI2C@Data+1)^0,c
   726  00062C  0E00               	movlw	0
   727  00062E  6E07               	movwf	(WriteI2C@bytes+1)^0,c
   728  000630  0E03               	movlw	3
   729  000632  6E06               	movwf	WriteI2C@bytes^0,c
   730  000634  0ED0               	movlw	208
   731  000636  EC13  F009         	call	_WriteI2C
   732  00063A                     
   733                           ;newmain.c: 53:     WriteI2C(0xD0,0x03,calendario,4);
   734  00063A  0E03               	movlw	3
   735  00063C  6E03               	movwf	WriteI2C@Register^0,c
   736  00063E  0E9C               	movlw	low _calendario
   737  000640  6E04               	movwf	WriteI2C@Data^0,c
   738  000642  0E00               	movlw	high _calendario
   739  000644  6E05               	movwf	(WriteI2C@Data+1)^0,c
   740  000646  0E00               	movlw	0
   741  000648  6E07               	movwf	(WriteI2C@bytes+1)^0,c
   742  00064A  0E04               	movlw	4
   743  00064C  6E06               	movwf	WriteI2C@bytes^0,c
   744  00064E  0ED0               	movlw	208
   745  000650  EC13  F009         	call	_WriteI2C
   746  000654                     l1820:
   747                           
   748                           ;newmain.c: 55:         ReadI2C(0xD0,0x00,DatosHora,3);
   749  000654  0E00               	movlw	0
   750  000656  6E04               	movwf	ReadI2C@Register^0,c
   751  000658  0EDD               	movlw	low _DatosHora
   752  00065A  6E05               	movwf	ReadI2C@Data^0,c
   753  00065C  0E00               	movlw	high _DatosHora
   754  00065E  6E06               	movwf	(ReadI2C@Data+1)^0,c
   755  000660  0E00               	movlw	0
   756  000662  6E08               	movwf	(ReadI2C@bytes+1)^0,c
   757  000664  0E03               	movlw	3
   758  000666  6E07               	movwf	ReadI2C@bytes^0,c
   759  000668  0ED0               	movlw	208
   760  00066A  ECB7  F008         	call	_ReadI2C
   761  00066E                     
   762                           ;newmain.c: 56:         if(DatosHora[2] & (1<<Clock_type)){
   763  00066E  0100               	movlb	0	; () banked
   764  000670  ADDF               	btfss	(_DatosHora+2)& (0+255),6,b
   765  000672  EF3D  F003         	goto	u1111
   766  000676  EF3F  F003         	goto	u1110
   767  00067A                     u1111:
   768  00067A  EFD5  F003         	goto	l1858
   769  00067E                     u1110:
   770  00067E                     
   771                           ; BSR set to: 0
   772                           ;newmain.c: 57:             SettingsLCD(0x80 +14);
   773  00067E  0E8E               	movlw	142
   774  000680  EC0A  F00B         	call	_SettingsLCD
   775  000684                     
   776                           ;newmain.c: 58:             if(DatosHora[2] & (1<<AM_PM)){
   777  000684  0100               	movlb	0	; () banked
   778  000686  ABDF               	btfss	(_DatosHora+2)& (0+255),5,b
   779  000688  EF48  F003         	goto	u1121
   780  00068C  EF4A  F003         	goto	u1120
   781  000690                     u1121:
   782  000690  EF70  F003         	goto	l1836
   783  000694                     u1120:
   784  000694                     
   785                           ; BSR set to: 0
   786                           ;newmain.c: 59:                 for(i=0; i<=strlen(text1); i++){
   787  000694  0E00               	movlw	0
   788  000696  6FB0               	movwf	(_i+1)& (0+255),b
   789  000698  0E00               	movlw	0
   790  00069A  6FAF               	movwf	_i& (0+255),b
   791  00069C  EF5C  F003         	goto	l1834
   792  0006A0                     l1830:
   793                           
   794                           ; BSR set to: 0
   795                           ;newmain.c: 60:                     WriteLCD(text1[i]);
   796  0006A0  0E97               	movlw	low _text1
   797  0006A2  25AF               	addwf	_i& (0+255),w,b
   798  0006A4  6ED9               	movwf	fsr2l,c
   799  0006A6  0E00               	movlw	high _text1
   800  0006A8  21B0               	addwfc	(_i+1)& (0+255),w,b
   801  0006AA  6EDA               	movwf	fsr2h,c
   802  0006AC  50DF               	movf	indf2,w,c
   803  0006AE  EC10  F00B         	call	_WriteLCD
   804  0006B2                     
   805                           ;newmain.c: 61:                 }
   806  0006B2  0100               	movlb	0	; () banked
   807  0006B4  4BAF               	infsnz	_i& (0+255),f,b
   808  0006B6  2BB0               	incf	(_i+1)& (0+255),f,b
   809  0006B8                     l1834:
   810                           
   811                           ; BSR set to: 0
   812  0006B8  0E97               	movlw	low _text1
   813  0006BA  6E01               	movwf	strlen@s^0,c
   814  0006BC  0E00               	movlw	high _text1
   815  0006BE  6E02               	movwf	(strlen@s+1)^0,c
   816  0006C0  ECB3  F00A         	call	_strlen	;wreg free
   817  0006C4  0100               	movlb	0	; () banked
   818  0006C6  51AF               	movf	_i& (0+255),w,b
   819  0006C8  5C01               	subwf	?_strlen^0,w,c
   820  0006CA  51B0               	movf	(_i+1)& (0+255),w,b
   821  0006CC  5802               	subwfb	(?_strlen+1)^0,w,c
   822  0006CE  B0D8               	btfsc	status,0,c
   823  0006D0  EF6C  F003         	goto	u1131
   824  0006D4  EF6E  F003         	goto	u1130
   825  0006D8                     u1131:
   826  0006D8  EF50  F003         	goto	l1830
   827  0006DC                     u1130:
   828  0006DC  EF94  F003         	goto	l1844
   829  0006E0                     l1836:
   830                           
   831                           ; BSR set to: 0
   832                           ;newmain.c: 64:                 for(i=0; i<=strlen(text2); i++){
   833  0006E0  0E00               	movlw	0
   834  0006E2  6FB0               	movwf	(_i+1)& (0+255),b
   835  0006E4  0E00               	movlw	0
   836  0006E6  6FAF               	movwf	_i& (0+255),b
   837  0006E8  EF82  F003         	goto	l1842
   838  0006EC                     l1838:
   839                           
   840                           ; BSR set to: 0
   841                           ;newmain.c: 65:                     WriteLCD(text2[i]);
   842  0006EC  0E92               	movlw	low _text2
   843  0006EE  25AF               	addwf	_i& (0+255),w,b
   844  0006F0  6ED9               	movwf	fsr2l,c
   845  0006F2  0E00               	movlw	high _text2
   846  0006F4  21B0               	addwfc	(_i+1)& (0+255),w,b
   847  0006F6  6EDA               	movwf	fsr2h,c
   848  0006F8  50DF               	movf	indf2,w,c
   849  0006FA  EC10  F00B         	call	_WriteLCD
   850  0006FE                     
   851                           ;newmain.c: 66:                 }
   852  0006FE  0100               	movlb	0	; () banked
   853  000700  4BAF               	infsnz	_i& (0+255),f,b
   854  000702  2BB0               	incf	(_i+1)& (0+255),f,b
   855  000704                     l1842:
   856                           
   857                           ; BSR set to: 0
   858  000704  0E92               	movlw	low _text2
   859  000706  6E01               	movwf	strlen@s^0,c
   860  000708  0E00               	movlw	high _text2
   861  00070A  6E02               	movwf	(strlen@s+1)^0,c
   862  00070C  ECB3  F00A         	call	_strlen	;wreg free
   863  000710  0100               	movlb	0	; () banked
   864  000712  51AF               	movf	_i& (0+255),w,b
   865  000714  5C01               	subwf	?_strlen^0,w,c
   866  000716  51B0               	movf	(_i+1)& (0+255),w,b
   867  000718  5802               	subwfb	(?_strlen+1)^0,w,c
   868  00071A  B0D8               	btfsc	status,0,c
   869  00071C  EF92  F003         	goto	u1141
   870  000720  EF94  F003         	goto	u1140
   871  000724                     u1141:
   872  000724  EF76  F003         	goto	l1838
   873  000728                     u1140:
   874  000728                     l1844:
   875                           
   876                           ; BSR set to: 0
   877                           ;newmain.c: 68:             SettingsLCD(0x80);
   878  000728  0E80               	movlw	128
   879  00072A  EC0A  F00B         	call	_SettingsLCD
   880  00072E                     
   881                           ;newmain.c: 69:             DatosHora[2] = DatosHora[2] & (0x1f);
   882  00072E  0100               	movlb	0	; () banked
   883  000730  51DF               	movf	(_DatosHora+2)& (0+255),w,b
   884  000732  0B1F               	andlw	31
   885  000734  6FDF               	movwf	(_DatosHora+2)& (0+255),b
   886  000736                     
   887                           ; BSR set to: 0
   888                           ;newmain.c: 70:             sprintf(smh,"Hor:%x:%x:%x",DatosHora[2],DatosHora[1],DatosHo
      +                          ra[0]);
   889  000736  0EC5               	movlw	low _smh
   890  000738  6FE0               	movwf	sprintf@s& (0+255),b
   891  00073A  0E00               	movlw	high _smh
   892  00073C  6FE1               	movwf	(sprintf@s+1)& (0+255),b
   893  00073E  0E0E               	movlw	low STR_1
   894  000740  6FE2               	movwf	sprintf@fmt& (0+255),b
   895  000742  0E06               	movlw	high STR_1
   896  000744  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
   897  000746  C0DF  F0E4         	movff	_DatosHora+2,?_sprintf+4
   898  00074A  6BE5               	clrf	(?_sprintf+5)& (0+255),b
   899  00074C  C0DE  F0E6         	movff	_DatosHora+1,?_sprintf+6
   900  000750  6BE7               	clrf	(?_sprintf+7)& (0+255),b
   901  000752  C0DD  F0E8         	movff	_DatosHora,?_sprintf+8
   902  000756  6BE9               	clrf	(?_sprintf+9)& (0+255),b
   903  000758  ECAC  F009         	call	_sprintf	;wreg free
   904  00075C                     
   905                           ;newmain.c: 71:             for(i=0; i<=strlen(smh); i++){
   906  00075C  0E00               	movlw	0
   907  00075E  0100               	movlb	0	; () banked
   908  000760  6FB0               	movwf	(_i+1)& (0+255),b
   909  000762  0E00               	movlw	0
   910  000764  6FAF               	movwf	_i& (0+255),b
   911  000766  EFC1  F003         	goto	l1856
   912  00076A                     l1852:
   913                           
   914                           ; BSR set to: 0
   915                           ;newmain.c: 72:                 WriteLCD(smh[i]);
   916  00076A  0EC5               	movlw	low _smh
   917  00076C  25AF               	addwf	_i& (0+255),w,b
   918  00076E  6ED9               	movwf	fsr2l,c
   919  000770  0E00               	movlw	high _smh
   920  000772  21B0               	addwfc	(_i+1)& (0+255),w,b
   921  000774  6EDA               	movwf	fsr2h,c
   922  000776  50DF               	movf	indf2,w,c
   923  000778  EC10  F00B         	call	_WriteLCD
   924  00077C                     
   925                           ;newmain.c: 73:             }
   926  00077C  0100               	movlb	0	; () banked
   927  00077E  4BAF               	infsnz	_i& (0+255),f,b
   928  000780  2BB0               	incf	(_i+1)& (0+255),f,b
   929  000782                     l1856:
   930                           
   931                           ; BSR set to: 0
   932  000782  0EC5               	movlw	low _smh
   933  000784  6E01               	movwf	strlen@s^0,c
   934  000786  0E00               	movlw	high _smh
   935  000788  6E02               	movwf	(strlen@s+1)^0,c
   936  00078A  ECB3  F00A         	call	_strlen	;wreg free
   937  00078E  0100               	movlb	0	; () banked
   938  000790  51AF               	movf	_i& (0+255),w,b
   939  000792  5C01               	subwf	?_strlen^0,w,c
   940  000794  51B0               	movf	(_i+1)& (0+255),w,b
   941  000796  5802               	subwfb	(?_strlen+1)^0,w,c
   942  000798  B0D8               	btfsc	status,0,c
   943  00079A  EFD1  F003         	goto	u1151
   944  00079E  EFD3  F003         	goto	u1150
   945  0007A2                     u1151:
   946  0007A2  EFB5  F003         	goto	l1852
   947  0007A6                     u1150:
   948  0007A6  EF14  F004         	goto	l1872
   949  0007AA                     l1858:
   950                           
   951                           ; BSR set to: 0
   952                           ;newmain.c: 76:             SettingsLCD(0x80);
   953  0007AA  0E80               	movlw	128
   954  0007AC  EC0A  F00B         	call	_SettingsLCD
   955  0007B0                     
   956                           ;newmain.c: 77:             DatosHora[2] = DatosHora[2] & (0x3f);
   957  0007B0  0100               	movlb	0	; () banked
   958  0007B2  51DF               	movf	(_DatosHora+2)& (0+255),w,b
   959  0007B4  0B3F               	andlw	63
   960  0007B6  6FDF               	movwf	(_DatosHora+2)& (0+255),b
   961  0007B8                     
   962                           ; BSR set to: 0
   963                           ;newmain.c: 78:             sprintf(smh,"Hor:%x:%x:%x",DatosHora[2],DatosHora[1],DatosHo
      +                          ra[0]);
   964  0007B8  0EC5               	movlw	low _smh
   965  0007BA  6FE0               	movwf	sprintf@s& (0+255),b
   966  0007BC  0E00               	movlw	high _smh
   967  0007BE  6FE1               	movwf	(sprintf@s+1)& (0+255),b
   968  0007C0  0E0E               	movlw	low STR_1
   969  0007C2  6FE2               	movwf	sprintf@fmt& (0+255),b
   970  0007C4  0E06               	movlw	high STR_1
   971  0007C6  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
   972  0007C8  C0DF  F0E4         	movff	_DatosHora+2,?_sprintf+4
   973  0007CC  6BE5               	clrf	(?_sprintf+5)& (0+255),b
   974  0007CE  C0DE  F0E6         	movff	_DatosHora+1,?_sprintf+6
   975  0007D2  6BE7               	clrf	(?_sprintf+7)& (0+255),b
   976  0007D4  C0DD  F0E8         	movff	_DatosHora,?_sprintf+8
   977  0007D8  6BE9               	clrf	(?_sprintf+9)& (0+255),b
   978  0007DA  ECAC  F009         	call	_sprintf	;wreg free
   979  0007DE                     
   980                           ;newmain.c: 79:             for(i=0; i<=strlen(smh); i++){
   981  0007DE  0E00               	movlw	0
   982  0007E0  0100               	movlb	0	; () banked
   983  0007E2  6FB0               	movwf	(_i+1)& (0+255),b
   984  0007E4  0E00               	movlw	0
   985  0007E6  6FAF               	movwf	_i& (0+255),b
   986  0007E8  EF02  F004         	goto	l1870
   987  0007EC                     l1866:
   988                           
   989                           ; BSR set to: 0
   990                           ;newmain.c: 80:                 WriteLCD(smh[i]);
   991  0007EC  0EC5               	movlw	low _smh
   992  0007EE  25AF               	addwf	_i& (0+255),w,b
   993  0007F0  6ED9               	movwf	fsr2l,c
   994  0007F2  0E00               	movlw	high _smh
   995  0007F4  21B0               	addwfc	(_i+1)& (0+255),w,b
   996  0007F6  6EDA               	movwf	fsr2h,c
   997  0007F8  50DF               	movf	indf2,w,c
   998  0007FA  EC10  F00B         	call	_WriteLCD
   999  0007FE                     
  1000                           ;newmain.c: 81:             }
  1001  0007FE  0100               	movlb	0	; () banked
  1002  000800  4BAF               	infsnz	_i& (0+255),f,b
  1003  000802  2BB0               	incf	(_i+1)& (0+255),f,b
  1004  000804                     l1870:
  1005                           
  1006                           ; BSR set to: 0
  1007  000804  0EC5               	movlw	low _smh
  1008  000806  6E01               	movwf	strlen@s^0,c
  1009  000808  0E00               	movlw	high _smh
  1010  00080A  6E02               	movwf	(strlen@s+1)^0,c
  1011  00080C  ECB3  F00A         	call	_strlen	;wreg free
  1012  000810  0100               	movlb	0	; () banked
  1013  000812  51AF               	movf	_i& (0+255),w,b
  1014  000814  5C01               	subwf	?_strlen^0,w,c
  1015  000816  51B0               	movf	(_i+1)& (0+255),w,b
  1016  000818  5802               	subwfb	(?_strlen+1)^0,w,c
  1017  00081A  B0D8               	btfsc	status,0,c
  1018  00081C  EF12  F004         	goto	u1161
  1019  000820  EF14  F004         	goto	u1160
  1020  000824                     u1161:
  1021  000824  EFF6  F003         	goto	l1866
  1022  000828                     u1160:
  1023  000828                     l1872:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;newmain.c: 83:         ReadI2C(0xD0,0x03,DatosCalendario,4);
  1027  000828  0E03               	movlw	3
  1028  00082A  6E04               	movwf	ReadI2C@Register^0,c
  1029  00082C  0ED9               	movlw	low _DatosCalendario
  1030  00082E  6E05               	movwf	ReadI2C@Data^0,c
  1031  000830  0E00               	movlw	high _DatosCalendario
  1032  000832  6E06               	movwf	(ReadI2C@Data+1)^0,c
  1033  000834  0E00               	movlw	0
  1034  000836  6E08               	movwf	(ReadI2C@bytes+1)^0,c
  1035  000838  0E04               	movlw	4
  1036  00083A  6E07               	movwf	ReadI2C@bytes^0,c
  1037  00083C  0ED0               	movlw	208
  1038  00083E  ECB7  F008         	call	_ReadI2C
  1039  000842                     
  1040                           ;newmain.c: 84:         SettingsLCD(0xC0);
  1041  000842  0EC0               	movlw	192
  1042  000844  EC0A  F00B         	call	_SettingsLCD
  1043  000848                     
  1044                           ;newmain.c: 85:         sprintf(dma,"Cal:%x/%x/%x",DatosCalendario[1],DatosCalendario[2]
      +                          ,DatosCalendario[3]);
  1045  000848  0EB1               	movlw	low _dma
  1046  00084A  0100               	movlb	0	; () banked
  1047  00084C  6FE0               	movwf	sprintf@s& (0+255),b
  1048  00084E  0E00               	movlw	high _dma
  1049  000850  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  1050  000852  0E01               	movlw	low STR_3
  1051  000854  6FE2               	movwf	sprintf@fmt& (0+255),b
  1052  000856  0E06               	movlw	high STR_3
  1053  000858  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  1054  00085A  C0DA  F0E4         	movff	_DatosCalendario+1,?_sprintf+4
  1055  00085E  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  1056  000860  C0DB  F0E6         	movff	_DatosCalendario+2,?_sprintf+6
  1057  000864  6BE7               	clrf	(?_sprintf+7)& (0+255),b
  1058  000866  C0DC  F0E8         	movff	_DatosCalendario+3,?_sprintf+8
  1059  00086A  6BE9               	clrf	(?_sprintf+9)& (0+255),b
  1060  00086C  ECAC  F009         	call	_sprintf	;wreg free
  1061  000870                     
  1062                           ;newmain.c: 86:         for(i=0; i<=strlen(dma); i++){
  1063  000870  0E00               	movlw	0
  1064  000872  0100               	movlb	0	; () banked
  1065  000874  6FB0               	movwf	(_i+1)& (0+255),b
  1066  000876  0E00               	movlw	0
  1067  000878  6FAF               	movwf	_i& (0+255),b
  1068  00087A  EF4B  F004         	goto	l1884
  1069  00087E                     l1880:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;newmain.c: 87:             WriteLCD(dma[i]);
  1073  00087E  0EB1               	movlw	low _dma
  1074  000880  25AF               	addwf	_i& (0+255),w,b
  1075  000882  6ED9               	movwf	fsr2l,c
  1076  000884  0E00               	movlw	high _dma
  1077  000886  21B0               	addwfc	(_i+1)& (0+255),w,b
  1078  000888  6EDA               	movwf	fsr2h,c
  1079  00088A  50DF               	movf	indf2,w,c
  1080  00088C  EC10  F00B         	call	_WriteLCD
  1081  000890                     
  1082                           ;newmain.c: 88:         }
  1083  000890  0100               	movlb	0	; () banked
  1084  000892  4BAF               	infsnz	_i& (0+255),f,b
  1085  000894  2BB0               	incf	(_i+1)& (0+255),f,b
  1086  000896                     l1884:
  1087                           
  1088                           ; BSR set to: 0
  1089  000896  0EB1               	movlw	low _dma
  1090  000898  6E01               	movwf	strlen@s^0,c
  1091  00089A  0E00               	movlw	high _dma
  1092  00089C  6E02               	movwf	(strlen@s+1)^0,c
  1093  00089E  ECB3  F00A         	call	_strlen	;wreg free
  1094  0008A2  0100               	movlb	0	; () banked
  1095  0008A4  51AF               	movf	_i& (0+255),w,b
  1096  0008A6  5C01               	subwf	?_strlen^0,w,c
  1097  0008A8  51B0               	movf	(_i+1)& (0+255),w,b
  1098  0008AA  5802               	subwfb	(?_strlen+1)^0,w,c
  1099  0008AC  B0D8               	btfsc	status,0,c
  1100  0008AE  EF5B  F004         	goto	u1171
  1101  0008B2  EF5D  F004         	goto	u1170
  1102  0008B6                     u1171:
  1103  0008B6  EF3F  F004         	goto	l1880
  1104  0008BA                     u1170:
  1105  0008BA  EF69  F005         	goto	l1946
  1106  0008BE                     l1888:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;newmain.c: 94:                 for(i=0; i<=strlen(text3); i++){
  1110  0008BE  0E00               	movlw	0
  1111  0008C0  6FB0               	movwf	(_i+1)& (0+255),b
  1112  0008C2  0E00               	movlw	0
  1113  0008C4  6FAF               	movwf	_i& (0+255),b
  1114  0008C6  EF71  F004         	goto	l1894
  1115  0008CA                     l1890:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;newmain.c: 95:                     WriteLCD(text3[i]);
  1119  0008CA  0E8D               	movlw	low _text3
  1120  0008CC  25AF               	addwf	_i& (0+255),w,b
  1121  0008CE  6ED9               	movwf	fsr2l,c
  1122  0008D0  0E00               	movlw	high _text3
  1123  0008D2  21B0               	addwfc	(_i+1)& (0+255),w,b
  1124  0008D4  6EDA               	movwf	fsr2h,c
  1125  0008D6  50DF               	movf	indf2,w,c
  1126  0008D8  EC10  F00B         	call	_WriteLCD
  1127  0008DC                     
  1128                           ;newmain.c: 96:                 }
  1129  0008DC  0100               	movlb	0	; () banked
  1130  0008DE  4BAF               	infsnz	_i& (0+255),f,b
  1131  0008E0  2BB0               	incf	(_i+1)& (0+255),f,b
  1132  0008E2                     l1894:
  1133                           
  1134                           ; BSR set to: 0
  1135  0008E2  0E8D               	movlw	low _text3
  1136  0008E4  6E01               	movwf	strlen@s^0,c
  1137  0008E6  0E00               	movlw	high _text3
  1138  0008E8  6E02               	movwf	(strlen@s+1)^0,c
  1139  0008EA  ECB3  F00A         	call	_strlen	;wreg free
  1140  0008EE  0100               	movlb	0	; () banked
  1141  0008F0  51AF               	movf	_i& (0+255),w,b
  1142  0008F2  5C01               	subwf	?_strlen^0,w,c
  1143  0008F4  51B0               	movf	(_i+1)& (0+255),w,b
  1144  0008F6  5802               	subwfb	(?_strlen+1)^0,w,c
  1145  0008F8  B0D8               	btfsc	status,0,c
  1146  0008FA  EF81  F004         	goto	u1181
  1147  0008FE  EF83  F004         	goto	u1180
  1148  000902                     u1181:
  1149  000902  EF65  F004         	goto	l1890
  1150  000906                     u1180:
  1151  000906  EF2A  F003         	goto	l1820
  1152  00090A                     l1896:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;newmain.c: 99:                 for(i=0; i<=strlen(text4); i++){
  1156  00090A  0E00               	movlw	0
  1157  00090C  6FB0               	movwf	(_i+1)& (0+255),b
  1158  00090E  0E00               	movlw	0
  1159  000910  6FAF               	movwf	_i& (0+255),b
  1160  000912  EF97  F004         	goto	l1902
  1161  000916                     l1898:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;newmain.c: 100:                     WriteLCD(text4[i]);
  1165  000916  0E88               	movlw	low _text4
  1166  000918  25AF               	addwf	_i& (0+255),w,b
  1167  00091A  6ED9               	movwf	fsr2l,c
  1168  00091C  0E00               	movlw	high _text4
  1169  00091E  21B0               	addwfc	(_i+1)& (0+255),w,b
  1170  000920  6EDA               	movwf	fsr2h,c
  1171  000922  50DF               	movf	indf2,w,c
  1172  000924  EC10  F00B         	call	_WriteLCD
  1173  000928                     
  1174                           ;newmain.c: 101:                 }
  1175  000928  0100               	movlb	0	; () banked
  1176  00092A  4BAF               	infsnz	_i& (0+255),f,b
  1177  00092C  2BB0               	incf	(_i+1)& (0+255),f,b
  1178  00092E                     l1902:
  1179                           
  1180                           ; BSR set to: 0
  1181  00092E  0E88               	movlw	low _text4
  1182  000930  6E01               	movwf	strlen@s^0,c
  1183  000932  0E00               	movlw	high _text4
  1184  000934  6E02               	movwf	(strlen@s+1)^0,c
  1185  000936  ECB3  F00A         	call	_strlen	;wreg free
  1186  00093A  0100               	movlb	0	; () banked
  1187  00093C  51AF               	movf	_i& (0+255),w,b
  1188  00093E  5C01               	subwf	?_strlen^0,w,c
  1189  000940  51B0               	movf	(_i+1)& (0+255),w,b
  1190  000942  5802               	subwfb	(?_strlen+1)^0,w,c
  1191  000944  B0D8               	btfsc	status,0,c
  1192  000946  EFA7  F004         	goto	u1191
  1193  00094A  EFA9  F004         	goto	u1190
  1194  00094E                     u1191:
  1195  00094E  EF8B  F004         	goto	l1898
  1196  000952                     u1190:
  1197  000952  EF2A  F003         	goto	l1820
  1198  000956                     l1904:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;newmain.c: 104:                 for(i=0; i<=strlen(text5); i++){
  1202  000956  0E00               	movlw	0
  1203  000958  6FB0               	movwf	(_i+1)& (0+255),b
  1204  00095A  0E00               	movlw	0
  1205  00095C  6FAF               	movwf	_i& (0+255),b
  1206  00095E  EFBD  F004         	goto	l1910
  1207  000962                     l1906:
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;newmain.c: 105:                     WriteLCD(text5[i]);
  1211  000962  0E83               	movlw	low _text5
  1212  000964  25AF               	addwf	_i& (0+255),w,b
  1213  000966  6ED9               	movwf	fsr2l,c
  1214  000968  0E00               	movlw	high _text5
  1215  00096A  21B0               	addwfc	(_i+1)& (0+255),w,b
  1216  00096C  6EDA               	movwf	fsr2h,c
  1217  00096E  50DF               	movf	indf2,w,c
  1218  000970  EC10  F00B         	call	_WriteLCD
  1219  000974                     
  1220                           ;newmain.c: 106:                 }
  1221  000974  0100               	movlb	0	; () banked
  1222  000976  4BAF               	infsnz	_i& (0+255),f,b
  1223  000978  2BB0               	incf	(_i+1)& (0+255),f,b
  1224  00097A                     l1910:
  1225                           
  1226                           ; BSR set to: 0
  1227  00097A  0E83               	movlw	low _text5
  1228  00097C  6E01               	movwf	strlen@s^0,c
  1229  00097E  0E00               	movlw	high _text5
  1230  000980  6E02               	movwf	(strlen@s+1)^0,c
  1231  000982  ECB3  F00A         	call	_strlen	;wreg free
  1232  000986  0100               	movlb	0	; () banked
  1233  000988  51AF               	movf	_i& (0+255),w,b
  1234  00098A  5C01               	subwf	?_strlen^0,w,c
  1235  00098C  51B0               	movf	(_i+1)& (0+255),w,b
  1236  00098E  5802               	subwfb	(?_strlen+1)^0,w,c
  1237  000990  B0D8               	btfsc	status,0,c
  1238  000992  EFCD  F004         	goto	u1201
  1239  000996  EFCF  F004         	goto	u1200
  1240  00099A                     u1201:
  1241  00099A  EFB1  F004         	goto	l1906
  1242  00099E                     u1200:
  1243  00099E  EF2A  F003         	goto	l1820
  1244  0009A2                     l1912:
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;newmain.c: 109:                 for(i=0; i<=strlen(text6); i++){
  1248  0009A2  0E00               	movlw	0
  1249  0009A4  6FB0               	movwf	(_i+1)& (0+255),b
  1250  0009A6  0E00               	movlw	0
  1251  0009A8  6FAF               	movwf	_i& (0+255),b
  1252  0009AA  EFE3  F004         	goto	l1918
  1253  0009AE                     l1914:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;newmain.c: 110:                     WriteLCD(text6[i]);
  1257  0009AE  0E7E               	movlw	low _text6
  1258  0009B0  25AF               	addwf	_i& (0+255),w,b
  1259  0009B2  6ED9               	movwf	fsr2l,c
  1260  0009B4  0E00               	movlw	high _text6
  1261  0009B6  21B0               	addwfc	(_i+1)& (0+255),w,b
  1262  0009B8  6EDA               	movwf	fsr2h,c
  1263  0009BA  50DF               	movf	indf2,w,c
  1264  0009BC  EC10  F00B         	call	_WriteLCD
  1265  0009C0                     
  1266                           ;newmain.c: 111:                 }
  1267  0009C0  0100               	movlb	0	; () banked
  1268  0009C2  4BAF               	infsnz	_i& (0+255),f,b
  1269  0009C4  2BB0               	incf	(_i+1)& (0+255),f,b
  1270  0009C6                     l1918:
  1271                           
  1272                           ; BSR set to: 0
  1273  0009C6  0E7E               	movlw	low _text6
  1274  0009C8  6E01               	movwf	strlen@s^0,c
  1275  0009CA  0E00               	movlw	high _text6
  1276  0009CC  6E02               	movwf	(strlen@s+1)^0,c
  1277  0009CE  ECB3  F00A         	call	_strlen	;wreg free
  1278  0009D2  0100               	movlb	0	; () banked
  1279  0009D4  51AF               	movf	_i& (0+255),w,b
  1280  0009D6  5C01               	subwf	?_strlen^0,w,c
  1281  0009D8  51B0               	movf	(_i+1)& (0+255),w,b
  1282  0009DA  5802               	subwfb	(?_strlen+1)^0,w,c
  1283  0009DC  B0D8               	btfsc	status,0,c
  1284  0009DE  EFF3  F004         	goto	u1211
  1285  0009E2  EFF5  F004         	goto	u1210
  1286  0009E6                     u1211:
  1287  0009E6  EFD7  F004         	goto	l1914
  1288  0009EA                     u1210:
  1289  0009EA  EF2A  F003         	goto	l1820
  1290  0009EE                     l1920:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;newmain.c: 114:                 for(i=0; i<=strlen(text7); i++){
  1294  0009EE  0E00               	movlw	0
  1295  0009F0  6FB0               	movwf	(_i+1)& (0+255),b
  1296  0009F2  0E00               	movlw	0
  1297  0009F4  6FAF               	movwf	_i& (0+255),b
  1298  0009F6  EF09  F005         	goto	l1926
  1299  0009FA                     l1922:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;newmain.c: 115:                     WriteLCD(text7[i]);
  1303  0009FA  0E79               	movlw	low _text7
  1304  0009FC  25AF               	addwf	_i& (0+255),w,b
  1305  0009FE  6ED9               	movwf	fsr2l,c
  1306  000A00  0E00               	movlw	high _text7
  1307  000A02  21B0               	addwfc	(_i+1)& (0+255),w,b
  1308  000A04  6EDA               	movwf	fsr2h,c
  1309  000A06  50DF               	movf	indf2,w,c
  1310  000A08  EC10  F00B         	call	_WriteLCD
  1311  000A0C                     
  1312                           ;newmain.c: 116:                 }
  1313  000A0C  0100               	movlb	0	; () banked
  1314  000A0E  4BAF               	infsnz	_i& (0+255),f,b
  1315  000A10  2BB0               	incf	(_i+1)& (0+255),f,b
  1316  000A12                     l1926:
  1317                           
  1318                           ; BSR set to: 0
  1319  000A12  0E79               	movlw	low _text7
  1320  000A14  6E01               	movwf	strlen@s^0,c
  1321  000A16  0E00               	movlw	high _text7
  1322  000A18  6E02               	movwf	(strlen@s+1)^0,c
  1323  000A1A  ECB3  F00A         	call	_strlen	;wreg free
  1324  000A1E  0100               	movlb	0	; () banked
  1325  000A20  51AF               	movf	_i& (0+255),w,b
  1326  000A22  5C01               	subwf	?_strlen^0,w,c
  1327  000A24  51B0               	movf	(_i+1)& (0+255),w,b
  1328  000A26  5802               	subwfb	(?_strlen+1)^0,w,c
  1329  000A28  B0D8               	btfsc	status,0,c
  1330  000A2A  EF19  F005         	goto	u1221
  1331  000A2E  EF1B  F005         	goto	u1220
  1332  000A32                     u1221:
  1333  000A32  EFFD  F004         	goto	l1922
  1334  000A36                     u1220:
  1335  000A36  EF2A  F003         	goto	l1820
  1336  000A3A                     l1928:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;newmain.c: 119:                 for(i=0; i<=strlen(text8); i++){
  1340  000A3A  0E00               	movlw	0
  1341  000A3C  6FB0               	movwf	(_i+1)& (0+255),b
  1342  000A3E  0E00               	movlw	0
  1343  000A40  6FAF               	movwf	_i& (0+255),b
  1344  000A42  EF2F  F005         	goto	l1934
  1345  000A46                     l1930:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;newmain.c: 120:                     WriteLCD(text8[i]);
  1349  000A46  0E74               	movlw	low _text8
  1350  000A48  25AF               	addwf	_i& (0+255),w,b
  1351  000A4A  6ED9               	movwf	fsr2l,c
  1352  000A4C  0E00               	movlw	high _text8
  1353  000A4E  21B0               	addwfc	(_i+1)& (0+255),w,b
  1354  000A50  6EDA               	movwf	fsr2h,c
  1355  000A52  50DF               	movf	indf2,w,c
  1356  000A54  EC10  F00B         	call	_WriteLCD
  1357  000A58                     
  1358                           ;newmain.c: 121:                 }
  1359  000A58  0100               	movlb	0	; () banked
  1360  000A5A  4BAF               	infsnz	_i& (0+255),f,b
  1361  000A5C  2BB0               	incf	(_i+1)& (0+255),f,b
  1362  000A5E                     l1934:
  1363                           
  1364                           ; BSR set to: 0
  1365  000A5E  0E74               	movlw	low _text8
  1366  000A60  6E01               	movwf	strlen@s^0,c
  1367  000A62  0E00               	movlw	high _text8
  1368  000A64  6E02               	movwf	(strlen@s+1)^0,c
  1369  000A66  ECB3  F00A         	call	_strlen	;wreg free
  1370  000A6A  0100               	movlb	0	; () banked
  1371  000A6C  51AF               	movf	_i& (0+255),w,b
  1372  000A6E  5C01               	subwf	?_strlen^0,w,c
  1373  000A70  51B0               	movf	(_i+1)& (0+255),w,b
  1374  000A72  5802               	subwfb	(?_strlen+1)^0,w,c
  1375  000A74  B0D8               	btfsc	status,0,c
  1376  000A76  EF3F  F005         	goto	u1231
  1377  000A7A  EF41  F005         	goto	u1230
  1378  000A7E                     u1231:
  1379  000A7E  EF23  F005         	goto	l1930
  1380  000A82                     u1230:
  1381  000A82  EF2A  F003         	goto	l1820
  1382  000A86                     l1936:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;newmain.c: 124:                 for(i=0; i<=strlen(text9); i++){
  1386  000A86  0E00               	movlw	0
  1387  000A88  6FB0               	movwf	(_i+1)& (0+255),b
  1388  000A8A  0E00               	movlw	0
  1389  000A8C  6FAF               	movwf	_i& (0+255),b
  1390  000A8E  EF55  F005         	goto	l1942
  1391  000A92                     l1938:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;newmain.c: 125:                     WriteLCD(text9[i]);
  1395  000A92  0E6F               	movlw	low _text9
  1396  000A94  25AF               	addwf	_i& (0+255),w,b
  1397  000A96  6ED9               	movwf	fsr2l,c
  1398  000A98  0E00               	movlw	high _text9
  1399  000A9A  21B0               	addwfc	(_i+1)& (0+255),w,b
  1400  000A9C  6EDA               	movwf	fsr2h,c
  1401  000A9E  50DF               	movf	indf2,w,c
  1402  000AA0  EC10  F00B         	call	_WriteLCD
  1403  000AA4                     
  1404                           ;newmain.c: 126:                 }
  1405  000AA4  0100               	movlb	0	; () banked
  1406  000AA6  4BAF               	infsnz	_i& (0+255),f,b
  1407  000AA8  2BB0               	incf	(_i+1)& (0+255),f,b
  1408  000AAA                     l1942:
  1409                           
  1410                           ; BSR set to: 0
  1411  000AAA  0E6F               	movlw	low _text9
  1412  000AAC  6E01               	movwf	strlen@s^0,c
  1413  000AAE  0E00               	movlw	high _text9
  1414  000AB0  6E02               	movwf	(strlen@s+1)^0,c
  1415  000AB2  ECB3  F00A         	call	_strlen	;wreg free
  1416  000AB6  0100               	movlb	0	; () banked
  1417  000AB8  51AF               	movf	_i& (0+255),w,b
  1418  000ABA  5C01               	subwf	?_strlen^0,w,c
  1419  000ABC  51B0               	movf	(_i+1)& (0+255),w,b
  1420  000ABE  5802               	subwfb	(?_strlen+1)^0,w,c
  1421  000AC0  B0D8               	btfsc	status,0,c
  1422  000AC2  EF65  F005         	goto	u1241
  1423  000AC6  EF67  F005         	goto	u1240
  1424  000ACA                     u1241:
  1425  000ACA  EF49  F005         	goto	l1938
  1426  000ACE                     u1240:
  1427  000ACE  EF2A  F003         	goto	l1820
  1428  000AD2                     l1946:
  1429                           
  1430                           ; BSR set to: 0
  1431  000AD2  0E60               	movlw	low _days
  1432  000AD4  25D9               	addwf	_DatosCalendario& (0+255),w,b
  1433  000AD6  6ED9               	movwf	fsr2l,c
  1434  000AD8  6ADA               	clrf	fsr2h,c
  1435  000ADA  0E00               	movlw	high _days
  1436  000ADC  22DA               	addwfc	fsr2h,f,c
  1437  000ADE  50DF               	movf	indf2,w,c
  1438  000AE0  6E5E               	movwf	??_main^0,c
  1439  000AE2  6A5F               	clrf	(??_main+1)^0,c
  1440                           
  1441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1442                           ; Switch size 1, requested type "simple"
  1443                           ; Number of cases is 1, Range of values is 0 to 0
  1444                           ; switch strategies available:
  1445                           ; Name         Instructions Cycles
  1446                           ; simple_byte            4     3 (average)
  1447                           ;	Chosen strategy is simple_byte
  1448  000AE4  505F               	movf	(??_main+1)^0,w,c
  1449  000AE6  0A00               	xorlw	0	; case 0
  1450  000AE8  B4D8               	btfsc	status,2,c
  1451  000AEA  EF79  F005         	goto	l1972
  1452  000AEE  EF2A  F003         	goto	l1820
  1453  000AF2                     l1972:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ; Switch size 1, requested type "simple"
  1457                           ; Number of cases is 7, Range of values is 70 to 116
  1458                           ; switch strategies available:
  1459                           ; Name         Instructions Cycles
  1460                           ; simple_byte           22    12 (average)
  1461                           ;	Chosen strategy is simple_byte
  1462  000AF2  505E               	movf	??_main^0,w,c
  1463  000AF4  0A46               	xorlw	70	; case 70
  1464  000AF6  B4D8               	btfsc	status,2,c
  1465  000AF8  EF1D  F005         	goto	l1928
  1466  000AFC  0A0B               	xorlw	11	; case 77
  1467  000AFE  B4D8               	btfsc	status,2,c
  1468  000B00  EF85  F004         	goto	l1896
  1469  000B04  0A1E               	xorlw	30	; case 83
  1470  000B06  B4D8               	btfsc	status,2,c
  1471  000B08  EF5F  F004         	goto	l1888
  1472  000B0C  0A07               	xorlw	7	; case 84
  1473  000B0E  B4D8               	btfsc	status,2,c
  1474  000B10  EFAB  F004         	goto	l1904
  1475  000B14  0A03               	xorlw	3	; case 87
  1476  000B16  B4D8               	btfsc	status,2,c
  1477  000B18  EFD1  F004         	goto	l1912
  1478  000B1C  0A24               	xorlw	36	; case 115
  1479  000B1E  B4D8               	btfsc	status,2,c
  1480  000B20  EF43  F005         	goto	l1936
  1481  000B24  0A07               	xorlw	7	; case 116
  1482  000B26  B4D8               	btfsc	status,2,c
  1483  000B28  EFF7  F004         	goto	l1920
  1484  000B2C  EF2A  F003         	goto	l1820
  1485  000B30  EF00  F000         	goto	start
  1486  000B34                     __end_of_main:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _sprintf *****************
  1490 ;; Defined at:
  1491 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1494 ;;		 -> dma(20), smh(20), 
  1495 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1496 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  f               6   14[BANK0 ] struct _IO_FILE
  1499 ;;  ap              2   12[BANK0 ] PTR void [1]
  1500 ;;		 -> ?_sprintf(2), 
  1501 ;;  ret             2    0        int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2    0[BANK0 ] int 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1511 ;;      Params:         0      10       0       0       0       0       0
  1512 ;;      Locals:         0      10       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0
  1514 ;;      Totals:         0      20       0       0       0       0       0
  1515 ;;Total ram usage:       20 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    7
  1518 ;; This function calls:
  1519 ;;		_vfprintf
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text1
  1526  001358                     __ptext1:
  1527                           	callstack 0
  1528  001358                     _sprintf:
  1529                           	callstack 23
  1530  001358  0EE4               	movlw	low (?_sprintf+4)
  1531  00135A  0100               	movlb	0	; () banked
  1532  00135C  6FEC               	movwf	sprintf@ap& (0+255),b
  1533  00135E  0E00               	movlw	high (?_sprintf+4)
  1534  001360  6FED               	movwf	(sprintf@ap+1)& (0+255),b
  1535  001362  C0E0  F0EE         	movff	sprintf@s,sprintf@f
  1536  001366  C0E1  F0EF         	movff	sprintf@s+1,sprintf@f+1
  1537  00136A                     
  1538                           ; BSR set to: 0
  1539  00136A  0E00               	movlw	0
  1540  00136C  6FF1               	movwf	(sprintf@f+3)& (0+255),b
  1541  00136E  0E00               	movlw	0
  1542  001370  6FF0               	movwf	(sprintf@f+2)& (0+255),b
  1543  001372                     
  1544                           ; BSR set to: 0
  1545  001372  0E00               	movlw	0
  1546  001374  6FF3               	movwf	(sprintf@f+5)& (0+255),b
  1547  001376  0E00               	movlw	0
  1548  001378  6FF2               	movwf	(sprintf@f+4)& (0+255),b
  1549  00137A                     
  1550                           ; BSR set to: 0
  1551  00137A  0EEE               	movlw	low sprintf@f
  1552  00137C  6E56               	movwf	vfprintf@fp^0,c
  1553  00137E  0E00               	movlw	high sprintf@f
  1554  001380  6E57               	movwf	(vfprintf@fp+1)^0,c
  1555  001382  C0E2  F058         	movff	sprintf@fmt,vfprintf@fmt
  1556  001386  C0E3  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1557  00138A  0EEC               	movlw	low sprintf@ap
  1558  00138C  6E5A               	movwf	vfprintf@ap^0,c
  1559  00138E  0E00               	movlw	high sprintf@ap
  1560  001390  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1561  001392  EC4C  F009         	call	_vfprintf	;wreg free
  1562  001396  0100               	movlb	0	; () banked
  1563  001398  51F0               	movf	(sprintf@f+2)& (0+255),w,b
  1564  00139A  25E0               	addwf	sprintf@s& (0+255),w,b
  1565  00139C  6ED9               	movwf	fsr2l,c
  1566  00139E  51F1               	movf	(sprintf@f+3)& (0+255),w,b
  1567  0013A0  21E1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1568  0013A2  6EDA               	movwf	fsr2h,c
  1569  0013A4  0E00               	movlw	0
  1570  0013A6  6EDF               	movwf	indf2,c
  1571  0013A8                     
  1572                           ; BSR set to: 0
  1573  0013A8  0012               	return		;funcret
  1574  0013AA                     __end_of_sprintf:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _vfprintf *****************
  1578 ;; Defined at:
  1579 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1582 ;;		 -> sprintf@f(6), 
  1583 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1584 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  1585 ;;  ap              2   89[COMRAM] PTR PTR void 
  1586 ;;		 -> sprintf@ap(2), 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1589 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2   85[COMRAM] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1599 ;;      Params:         6       0       0       0       0       0       0
  1600 ;;      Locals:         2       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0
  1602 ;;      Totals:         8       0       0       0       0       0       0
  1603 ;;Total ram usage:        8 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    6
  1606 ;; This function calls:
  1607 ;;		_vfpfcnvrt
  1608 ;; This function is called by:
  1609 ;;		_sprintf
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text2
  1614  001298                     __ptext2:
  1615                           	callstack 0
  1616  001298                     _vfprintf:
  1617                           	callstack 23
  1618  001298                     
  1619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1620  001298  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1621  00129C  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1622  0012A0                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1624  0012A0  0E00               	movlw	0
  1625  0012A2  0100               	movlb	0	; () banked
  1626  0012A4  6FA4               	movwf	(_nout+1)& (0+255),b
  1627  0012A6  0E00               	movlw	0
  1628  0012A8  6FA3               	movwf	_nout& (0+255),b
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1631  0012AA  EF6A  F009         	goto	l1746
  1632  0012AE                     l1744:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1636  0012AE  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1637  0012B2  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1638  0012B6  0E5C               	movlw	low vfprintf@cfmt
  1639  0012B8  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1640  0012BA  0E00               	movlw	high vfprintf@cfmt
  1641  0012BC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1642  0012BE  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1643  0012C2  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1644  0012C6  EC07  F007         	call	_vfpfcnvrt	;wreg free
  1645  0012CA  5043               	movf	?_vfpfcnvrt^0,w,c
  1646  0012CC  0100               	movlb	0	; () banked
  1647  0012CE  27A3               	addwf	_nout& (0+255),f,b
  1648  0012D0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1649  0012D2  23A4               	addwfc	(_nout+1)& (0+255),f,b
  1650  0012D4                     l1746:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1654  0012D4  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1655  0012D8  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1656  0012DC                     	if	0	;tblptru may be non-zero
  1657  0012DC                     	endif
  1658  0012DC                     	if	0	;tblptru may be non-zero
  1659  0012DC                     	endif
  1660  0012DC  0008               	tblrd		*
  1661  0012DE  50F5               	movf	tablat,w,c
  1662  0012E0  0900               	iorlw	0
  1663  0012E2  A4D8               	btfss	status,2,c
  1664  0012E4  EF76  F009         	goto	u1071
  1665  0012E8  EF78  F009         	goto	u1070
  1666  0012EC                     u1071:
  1667  0012EC  EF57  F009         	goto	l1744
  1668  0012F0                     u1070:
  1669  0012F0                     
  1670                           ; BSR set to: 0
  1671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1672  0012F0  C0A3  F056         	movff	_nout,?_vfprintf
  1673  0012F4  C0A4  F057         	movff	_nout+1,?_vfprintf+1
  1674  0012F8                     
  1675                           ; BSR set to: 0
  1676  0012F8  0012               	return		;funcret
  1677  0012FA                     __end_of_vfprintf:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _vfpfcnvrt *****************
  1681 ;; Defined at:
  1682 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1685 ;;		 -> sprintf@f(6), 
  1686 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1687 ;;		 -> vfprintf@cfmt(2), 
  1688 ;;  ap              2   70[COMRAM] PTR PTR void 
  1689 ;;		 -> sprintf@ap(2), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  llu             8   76[COMRAM] unsigned long long 
  1692 ;;  ll              8    0        long long 
  1693 ;;  f               4    0        long long 
  1694 ;;  vp              3    0        PTR void 
  1695 ;;  ct              3    0        unsigned char [3]
  1696 ;;  cp              3    0        PTR unsigned char 
  1697 ;;  i               2    0        int 
  1698 ;;  done            2    0        int 
  1699 ;;  c               1   84[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2   66[COMRAM] int 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1709 ;;      Params:         6       0       0       0       0       0       0
  1710 ;;      Locals:         9       0       0       0       0       0       0
  1711 ;;      Temps:          4       0       0       0       0       0       0
  1712 ;;      Totals:        19       0       0       0       0       0       0
  1713 ;;Total ram usage:       19 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    5
  1716 ;; This function calls:
  1717 ;;		_fputc
  1718 ;;		_xtoa
  1719 ;; This function is called by:
  1720 ;;		_vfprintf
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text3
  1725  000E0E                     __ptext3:
  1726                           	callstack 0
  1727  000E0E                     _vfpfcnvrt:
  1728                           	callstack 23
  1729  000E0E                     
  1730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1731  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1732  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1733  000E16  CFDE FFF6          	movff	postinc2,tblptrl
  1734  000E1A  CFDD FFF7          	movff	postdec2,tblptrh
  1735  000E1E                     	if	0	;tblptru may be non-zero
  1736  000E1E                     	endif
  1737  000E1E                     	if	0	;tblptru may be non-zero
  1738  000E1E                     	endif
  1739  000E1E  0008               	tblrd		*
  1740  000E20  50F5               	movf	tablat,w,c
  1741  000E22  0A25               	xorlw	37
  1742  000E24  A4D8               	btfss	status,2,c
  1743  000E26  EF17  F007         	goto	u1011
  1744  000E2A  EF19  F007         	goto	u1010
  1745  000E2E                     u1011:
  1746  000E2E  EFD3  F007         	goto	l1698
  1747  000E32                     u1010:
  1748  000E32                     
  1749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1750  000E32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1751  000E36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1752  000E3A  2ADE               	incf	postinc2,f,c
  1753  000E3C  0E00               	movlw	0
  1754  000E3E  22DD               	addwfc	postdec2,f,c
  1755  000E40                     
  1756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1757  000E40  0E00               	movlw	0
  1758  000E42  0100               	movlb	0	; () banked
  1759  000E44  6FA6               	movwf	(_width+1)& (0+255),b
  1760  000E46  0E00               	movlw	0
  1761  000E48  6FA5               	movwf	_width& (0+255),b
  1762  000E4A  C0A5  F0A9         	movff	_width,_flags
  1763  000E4E  C0A6  F0AA         	movff	_width+1,_flags+1
  1764  000E52                     
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1767  000E52  69A7               	setf	_prec& (0+255),b
  1768  000E54  69A8               	setf	(_prec+1)& (0+255),b
  1769  000E56                     
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1772  000E56  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1773  000E5A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1774  000E5E  CFDE FFF6          	movff	postinc2,tblptrl
  1775  000E62  CFDD FFF7          	movff	postdec2,tblptrh
  1776  000E66                     	if	0	;tblptru may be non-zero
  1777  000E66                     	endif
  1778  000E66                     	if	0	;tblptru may be non-zero
  1779  000E66                     	endif
  1780  000E66  0008               	tblrd		*
  1781  000E68  50F5               	movf	tablat,w,c
  1782  000E6A  0A78               	xorlw	120
  1783  000E6C  B4D8               	btfsc	status,2,c
  1784  000E6E  EF3B  F007         	goto	u1021
  1785  000E72  EF3D  F007         	goto	u1020
  1786  000E76                     u1021:
  1787  000E76  EF4F  F007         	goto	l1672
  1788  000E7A                     u1020:
  1789  000E7A                     
  1790                           ; BSR set to: 0
  1791  000E7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1792  000E7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1793  000E82  CFDE FFF6          	movff	postinc2,tblptrl
  1794  000E86  CFDD FFF7          	movff	postdec2,tblptrh
  1795  000E8A                     	if	0	;tblptru may be non-zero
  1796  000E8A                     	endif
  1797  000E8A                     	if	0	;tblptru may be non-zero
  1798  000E8A                     	endif
  1799  000E8A  0008               	tblrd		*
  1800  000E8C  50F5               	movf	tablat,w,c
  1801  000E8E  0A58               	xorlw	88
  1802  000E90  A4D8               	btfss	status,2,c
  1803  000E92  EF4D  F007         	goto	u1031
  1804  000E96  EF4F  F007         	goto	u1030
  1805  000E9A                     u1031:
  1806  000E9A  EF9D  F007         	goto	l1682
  1807  000E9E                     u1030:
  1808  000E9E                     l1672:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1812  000E9E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1813  000EA2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1814  000EA6  CFDE FFF6          	movff	postinc2,tblptrl
  1815  000EAA  CFDD FFF7          	movff	postdec2,tblptrh
  1816  000EAE                     	if	0	;tblptru may be non-zero
  1817  000EAE                     	endif
  1818  000EAE                     	if	0	;tblptru may be non-zero
  1819  000EAE                     	endif
  1820  000EAE  0008               	tblrd		*
  1821  000EB0  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1822  000EB4                     
  1823                           ; BSR set to: 0
  1824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1825  000EB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1826  000EB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1827  000EBC  2ADE               	incf	postinc2,f,c
  1828  000EBE  0E00               	movlw	0
  1829  000EC0  22DD               	addwfc	postdec2,f,c
  1830  000EC2                     
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1833  000EC2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1834  000EC6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1835  000ECA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1836  000ECE  0E02               	movlw	2
  1837  000ED0  26DE               	addwf	postinc2,f,c
  1838  000ED2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1839  000ED6  0E00               	movlw	0
  1840  000ED8  22DD               	addwfc	postdec2,f,c
  1841  000EDA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1842  000EDE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1843  000EE2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1844  000EE6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1845  000EEA  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1846  000EEE  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1847  000EF2  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1848  000EF4  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1849  000EF6  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1850  000EF8  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1851  000EFA  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1852  000EFC  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1853  000EFE                     
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1856  000EFE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1857  000F02  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1858  000F06  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1859  000F0A  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1860  000F0E  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1861  000F12  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1862  000F16  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1863  000F1A  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1864  000F1E  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1865  000F22  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1866  000F26  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1867  000F2A  EC9A  F005         	call	_xtoa	;wreg free
  1868  000F2E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1869  000F32  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1870  000F36  EFEE  F007         	goto	l975
  1871  000F3A                     l1682:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1875  000F3A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1876  000F3E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1877  000F42  CFDE FFF6          	movff	postinc2,tblptrl
  1878  000F46  CFDD FFF7          	movff	postdec2,tblptrh
  1879  000F4A                     	if	0	;tblptru may be non-zero
  1880  000F4A                     	endif
  1881  000F4A                     	if	0	;tblptru may be non-zero
  1882  000F4A                     	endif
  1883  000F4A  0008               	tblrd		*
  1884  000F4C  50F5               	movf	tablat,w,c
  1885  000F4E  0A25               	xorlw	37
  1886  000F50  A4D8               	btfss	status,2,c
  1887  000F52  EFAD  F007         	goto	u1041
  1888  000F56  EFAF  F007         	goto	u1040
  1889  000F5A                     u1041:
  1890  000F5A  EFC6  F007         	goto	l1692
  1891  000F5E                     u1040:
  1892  000F5E                     
  1893                           ; BSR set to: 0
  1894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1895  000F5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1896  000F62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1897  000F66  2ADE               	incf	postinc2,f,c
  1898  000F68  0E00               	movlw	0
  1899  000F6A  22DD               	addwfc	postdec2,f,c
  1900  000F6C                     
  1901                           ; BSR set to: 0
  1902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1903  000F6C  0E00               	movlw	0
  1904  000F6E  6E02               	movwf	(fputc@c+1)^0,c
  1905  000F70  0E25               	movlw	37
  1906  000F72  6E01               	movwf	fputc@c^0,c
  1907  000F74  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1908  000F78  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1909  000F7C  ECEF  F007         	call	_fputc	;wreg free
  1910  000F80                     l1688:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1913  000F80  0E00               	movlw	0
  1914  000F82  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1915  000F84  0E01               	movlw	1
  1916  000F86  6E43               	movwf	?_vfpfcnvrt^0,c
  1917  000F88  EFEE  F007         	goto	l975
  1918  000F8C                     l1692:
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1922  000F8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923  000F90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924  000F94  2ADE               	incf	postinc2,f,c
  1925  000F96  0E00               	movlw	0
  1926  000F98  22DD               	addwfc	postdec2,f,c
  1927  000F9A                     
  1928                           ; BSR set to: 0
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1930  000F9A  0E00               	movlw	0
  1931  000F9C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1932  000F9E  0E00               	movlw	0
  1933  000FA0  6E43               	movwf	?_vfpfcnvrt^0,c
  1934  000FA2  EFEE  F007         	goto	l975
  1935  000FA6                     l1698:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1938  000FA6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1939  000FAA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1940  000FAE  CFDE FFF6          	movff	postinc2,tblptrl
  1941  000FB2  CFDD FFF7          	movff	postdec2,tblptrh
  1942  000FB6                     	if	0	;tblptru may be non-zero
  1943  000FB6                     	endif
  1944  000FB6                     	if	0	;tblptru may be non-zero
  1945  000FB6                     	endif
  1946  000FB6  0008               	tblrd		*
  1947  000FB8  50F5               	movf	tablat,w,c
  1948  000FBA  6E01               	movwf	fputc@c^0,c
  1949  000FBC  6A02               	clrf	(fputc@c+1)^0,c
  1950  000FBE  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1951  000FC2  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1952  000FC6  ECEF  F007         	call	_fputc	;wreg free
  1953  000FCA                     
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1955  000FCA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1956  000FCE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1957  000FD2  2ADE               	incf	postinc2,f,c
  1958  000FD4  0E00               	movlw	0
  1959  000FD6  22DD               	addwfc	postdec2,f,c
  1960  000FD8  EFC0  F007         	goto	l1688
  1961  000FDC                     l975:
  1962  000FDC  0012               	return		;funcret
  1963  000FDE                     __end_of_vfpfcnvrt:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _xtoa *****************
  1967 ;; Defined at:
  1968 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1971 ;;		 -> sprintf@f(6), 
  1972 ;;  d               8   29[COMRAM] unsigned long long 
  1973 ;;  x               1   37[COMRAM] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  n               8   54[COMRAM] unsigned long long 
  1976 ;;  c               2   64[COMRAM] int 
  1977 ;;  i               2   62[COMRAM] int 
  1978 ;;  w               2   52[COMRAM] int 
  1979 ;;  p               2   50[COMRAM] int 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2   27[COMRAM] int 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:        11       0       0       0       0       0       0
  1990 ;;      Locals:        20       0       0       0       0       0       0
  1991 ;;      Temps:          8       0       0       0       0       0       0
  1992 ;;      Totals:        39       0       0       0       0       0       0
  1993 ;;Total ram usage:       39 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    4
  1996 ;; This function calls:
  1997 ;;		_isalpha
  1998 ;;		_isupper
  1999 ;;		_pad
  2000 ;;		_toupper
  2001 ;; This function is called by:
  2002 ;;		_vfpfcnvrt
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text4
  2007  000B34                     __ptext4:
  2008                           	callstack 0
  2009  000B34                     _xtoa:
  2010                           	callstack 23
  2011  000B34                     
  2012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2013  000B34  0100               	movlb	0	; () banked
  2014  000B36  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  2015  000B38  EFA0  F005         	goto	u821
  2016  000B3C  EFA2  F005         	goto	u820
  2017  000B40                     u821:
  2018  000B40  EFA3  F005         	goto	l1580
  2019  000B44                     u820:
  2020  000B44                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2023  000B44  93A9               	bcf	_flags& (0+255),1,b
  2024  000B46                     l1580:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2028  000B46  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  2029  000B48  EFB0  F005         	goto	u830
  2030  000B4C  51A8               	movf	(_prec+1)& (0+255),w,b
  2031  000B4E  E106               	bnz	u831
  2032  000B50  05A7               	decf	_prec& (0+255),w,b
  2033  000B52  B0D8               	btfsc	status,0,c
  2034  000B54  EFAE  F005         	goto	u831
  2035  000B58  EFB0  F005         	goto	u830
  2036  000B5C                     u831:
  2037  000B5C  EFB6  F005         	goto	l943
  2038  000B60                     u830:
  2039  000B60                     
  2040                           ; BSR set to: 0
  2041  000B60  0E00               	movlw	0
  2042  000B62  6E34               	movwf	(xtoa@p+1)^0,c
  2043  000B64  0E01               	movlw	1
  2044  000B66  6E33               	movwf	xtoa@p^0,c
  2045  000B68  EFBA  F005         	goto	l945
  2046  000B6C                     l943:
  2047                           
  2048                           ; BSR set to: 0
  2049  000B6C  C0A7  F033         	movff	_prec,xtoa@p
  2050  000B70  C0A8  F034         	movff	_prec+1,xtoa@p+1
  2051  000B74                     l945:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2055  000B74  C0A5  F035         	movff	_width,xtoa@w
  2056  000B78  C0A6  F036         	movff	_width+1,xtoa@w+1
  2057                           
  2058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2059  000B7C  A9A9               	btfss	_flags& (0+255),4,b
  2060  000B7E  EFC3  F005         	goto	u841
  2061  000B82  EFC5  F005         	goto	u840
  2062  000B86                     u841:
  2063  000B86  EFC9  F005         	goto	l1586
  2064  000B8A                     u840:
  2065  000B8A                     
  2066                           ; BSR set to: 0
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2068  000B8A  0EFE               	movlw	254
  2069  000B8C  2635               	addwf	xtoa@w^0,f,c
  2070  000B8E  0EFF               	movlw	255
  2071  000B90  2236               	addwfc	(xtoa@w+1)^0,f,c
  2072  000B92                     l1586:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2076  000B92  C01E  F037         	movff	xtoa@d,xtoa@n
  2077  000B96  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  2078  000B9A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  2079  000B9E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  2080  000BA2  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  2081  000BA6  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  2082  000BAA  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  2083  000BAE  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  2084  000BB2                     
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2087  000BB2  0E00               	movlw	0
  2088  000BB4  6E40               	movwf	(xtoa@i+1)^0,c
  2089  000BB6  0E1F               	movlw	31
  2090  000BB8  6E3F               	movwf	xtoa@i^0,c
  2091  000BBA                     
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2094  000BBA  0E00               	movlw	0
  2095  000BBC  0101               	movlb	1	; () banked
  2096  000BBE  6F33               	movwf	(_dbuf+31)& (0+255),b
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2099  000BC0  EF95  F006         	goto	l1622
  2100  000BC4                     l1592:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  2103  000BC4  063F               	decf	xtoa@i^0,f,c
  2104  000BC6  A0D8               	btfss	status,0,c
  2105  000BC8  0640               	decf	(xtoa@i+1)^0,f,c
  2106  000BCA                     
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2108  000BCA  0E0F               	movlw	15
  2109  000BCC  1437               	andwf	xtoa@n^0,w,c
  2110  000BCE  6E41               	movwf	xtoa@c^0,c
  2111  000BD0  6A42               	clrf	(xtoa@c+1)^0,c
  2112  000BD2                     
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2114  000BD2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  2115  000BD4  EFF5  F005         	goto	u851
  2116  000BD8  5042               	movf	(xtoa@c+1)^0,w,c
  2117  000BDA  E109               	bnz	u850
  2118  000BDC  0E0A               	movlw	10
  2119  000BDE  5C41               	subwf	xtoa@c^0,w,c
  2120  000BE0  A0D8               	btfss	status,0,c
  2121  000BE2  EFF5  F005         	goto	u851
  2122  000BE6  EFF7  F005         	goto	u850
  2123  000BEA                     u851:
  2124  000BEA  EFFF  F005         	goto	l1600
  2125  000BEE                     u850:
  2126  000BEE  0E57               	movlw	87
  2127  000BF0  2441               	addwf	xtoa@c^0,w,c
  2128  000BF2  6E41               	movwf	xtoa@c^0,c
  2129  000BF4  0E00               	movlw	0
  2130  000BF6  2042               	addwfc	(xtoa@c+1)^0,w,c
  2131  000BF8  6E42               	movwf	(xtoa@c+1)^0,c
  2132  000BFA  EF05  F006         	goto	l952
  2133  000BFE                     l1600:
  2134  000BFE  0E30               	movlw	48
  2135  000C00  2441               	addwf	xtoa@c^0,w,c
  2136  000C02  6E41               	movwf	xtoa@c^0,c
  2137  000C04  0E00               	movlw	0
  2138  000C06  2042               	addwfc	(xtoa@c+1)^0,w,c
  2139  000C08  6E42               	movwf	(xtoa@c+1)^0,c
  2140  000C0A                     l952:
  2141  000C0A  0EBF               	movlw	191
  2142  000C0C  6E27               	movwf	??_xtoa^0,c
  2143  000C0E  0EFF               	movlw	255
  2144  000C10  6E28               	movwf	(??_xtoa+1)^0,c
  2145  000C12  5026               	movf	xtoa@x^0,w,c
  2146  000C14  6E29               	movwf	(??_xtoa+2)^0,c
  2147  000C16  6A2A               	clrf	(??_xtoa+3)^0,c
  2148  000C18  5027               	movf	??_xtoa^0,w,c
  2149  000C1A  2629               	addwf	(??_xtoa+2)^0,f,c
  2150  000C1C  5028               	movf	(??_xtoa+1)^0,w,c
  2151  000C1E  222A               	addwfc	(??_xtoa+3)^0,f,c
  2152  000C20  502A               	movf	(??_xtoa+3)^0,w,c
  2153  000C22  E10A               	bnz	u860
  2154  000C24  0E1A               	movlw	26
  2155  000C26  5C29               	subwf	(??_xtoa+2)^0,w,c
  2156  000C28  A0D8               	btfss	status,0,c
  2157  000C2A  EF19  F006         	goto	u861
  2158  000C2E  EF1C  F006         	goto	u860
  2159  000C32                     u861:
  2160  000C32  0E01               	movlw	1
  2161  000C34  EF1D  F006         	goto	u870
  2162  000C38                     u860:
  2163  000C38  0E00               	movlw	0
  2164  000C3A                     u870:
  2165  000C3A  6E2F               	movwf	_xtoa$765^0,c
  2166  000C3C  6A30               	clrf	(_xtoa$765+1)^0,c
  2167  000C3E  502F               	movf	_xtoa$765^0,w,c
  2168  000C40  1030               	iorwf	(_xtoa$765+1)^0,w,c
  2169  000C42  B4D8               	btfsc	status,2,c
  2170  000C44  EF26  F006         	goto	u881
  2171  000C48  EF28  F006         	goto	u880
  2172  000C4C                     u881:
  2173  000C4C  EF58  F006         	goto	l1614
  2174  000C50                     u880:
  2175  000C50  0E9F               	movlw	159
  2176  000C52  6E27               	movwf	??_xtoa^0,c
  2177  000C54  0EFF               	movlw	255
  2178  000C56  6E28               	movwf	(??_xtoa+1)^0,c
  2179  000C58  0E20               	movlw	32
  2180  000C5A  1041               	iorwf	xtoa@c^0,w,c
  2181  000C5C  6E29               	movwf	(??_xtoa+2)^0,c
  2182  000C5E  0E00               	movlw	0
  2183  000C60  1042               	iorwf	(xtoa@c+1)^0,w,c
  2184  000C62  6E2A               	movwf	(??_xtoa+3)^0,c
  2185  000C64  5027               	movf	??_xtoa^0,w,c
  2186  000C66  2629               	addwf	(??_xtoa+2)^0,f,c
  2187  000C68  5028               	movf	(??_xtoa+1)^0,w,c
  2188  000C6A  222A               	addwfc	(??_xtoa+3)^0,f,c
  2189  000C6C  502A               	movf	(??_xtoa+3)^0,w,c
  2190  000C6E  E10A               	bnz	u890
  2191  000C70  0E1A               	movlw	26
  2192  000C72  5C29               	subwf	(??_xtoa+2)^0,w,c
  2193  000C74  A0D8               	btfss	status,0,c
  2194  000C76  EF3F  F006         	goto	u891
  2195  000C7A  EF42  F006         	goto	u890
  2196  000C7E                     u891:
  2197  000C7E  0E01               	movlw	1
  2198  000C80  EF43  F006         	goto	u900
  2199  000C84                     u890:
  2200  000C84  0E00               	movlw	0
  2201  000C86                     u900:
  2202  000C86  6E31               	movwf	_xtoa$766^0,c
  2203  000C88  6A32               	clrf	(_xtoa$766+1)^0,c
  2204  000C8A  5031               	movf	_xtoa$766^0,w,c
  2205  000C8C  1032               	iorwf	(_xtoa$766+1)^0,w,c
  2206  000C8E  B4D8               	btfsc	status,2,c
  2207  000C90  EF4C  F006         	goto	u911
  2208  000C94  EF4E  F006         	goto	u910
  2209  000C98                     u911:
  2210  000C98  EF58  F006         	goto	l1614
  2211  000C9C                     u910:
  2212  000C9C                     
  2213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2214  000C9C  C041  F007         	movff	xtoa@c,toupper@c
  2215  000CA0  C042  F008         	movff	xtoa@c+1,toupper@c+1
  2216  000CA4  EC7D  F009         	call	_toupper	;wreg free
  2217  000CA8  C007  F041         	movff	?_toupper,xtoa@c
  2218  000CAC  C008  F042         	movff	?_toupper+1,xtoa@c+1
  2219  000CB0                     l1614:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2222  000CB0  0E14               	movlw	low _dbuf
  2223  000CB2  243F               	addwf	xtoa@i^0,w,c
  2224  000CB4  6ED9               	movwf	fsr2l,c
  2225  000CB6  0E01               	movlw	high _dbuf
  2226  000CB8  2040               	addwfc	(xtoa@i+1)^0,w,c
  2227  000CBA  6EDA               	movwf	fsr2h,c
  2228  000CBC  C041  FFDF         	movff	xtoa@c,indf2
  2229  000CC0                     
  2230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  2231  000CC0  0633               	decf	xtoa@p^0,f,c
  2232  000CC2  A0D8               	btfss	status,0,c
  2233  000CC4  0634               	decf	(xtoa@p+1)^0,f,c
  2234  000CC6                     
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  2236  000CC6  0635               	decf	xtoa@w^0,f,c
  2237  000CC8  A0D8               	btfss	status,0,c
  2238  000CCA  0636               	decf	(xtoa@w+1)^0,f,c
  2239  000CCC                     
  2240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2241  000CCC  C037  F027         	movff	xtoa@n,??_xtoa
  2242  000CD0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  2243  000CD4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  2244  000CD8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  2245  000CDC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  2246  000CE0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  2247  000CE4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  2248  000CE8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  2249  000CEC  0E05               	movlw	5
  2250  000CEE  EF82  F006         	goto	u920
  2251  000CF2                     u925:
  2252  000CF2  90D8               	bcf	status,0,c
  2253  000CF4  322E               	rrcf	(??_xtoa+7)^0,f,c
  2254  000CF6  322D               	rrcf	(??_xtoa+6)^0,f,c
  2255  000CF8  322C               	rrcf	(??_xtoa+5)^0,f,c
  2256  000CFA  322B               	rrcf	(??_xtoa+4)^0,f,c
  2257  000CFC  322A               	rrcf	(??_xtoa+3)^0,f,c
  2258  000CFE  3229               	rrcf	(??_xtoa+2)^0,f,c
  2259  000D00  3228               	rrcf	(??_xtoa+1)^0,f,c
  2260  000D02  3227               	rrcf	??_xtoa^0,f,c
  2261  000D04                     u920:
  2262  000D04  2EE8               	decfsz	wreg,f,c
  2263  000D06  EF79  F006         	goto	u925
  2264  000D0A  C027  F037         	movff	??_xtoa,xtoa@n
  2265  000D0E  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  2266  000D12  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  2267  000D16  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  2268  000D1A  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  2269  000D1E  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  2270  000D22  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  2271  000D26  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  2272  000D2A                     l1622:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2275  000D2A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  2276  000D2C  EFA1  F006         	goto	u931
  2277  000D30  5040               	movf	(xtoa@i+1)^0,w,c
  2278  000D32  E109               	bnz	u930
  2279  000D34  0E02               	movlw	2
  2280  000D36  5C3F               	subwf	xtoa@i^0,w,c
  2281  000D38  A0D8               	btfss	status,0,c
  2282  000D3A  EFA1  F006         	goto	u931
  2283  000D3E  EFA3  F006         	goto	u930
  2284  000D42                     u931:
  2285  000D42  EFD4  F006         	goto	l966
  2286  000D46                     u930:
  2287  000D46  5037               	movf	xtoa@n^0,w,c
  2288  000D48  1038               	iorwf	(xtoa@n+1)^0,w,c
  2289  000D4A  1039               	iorwf	(xtoa@n+2)^0,w,c
  2290  000D4C  103A               	iorwf	(xtoa@n+3)^0,w,c
  2291  000D4E  103B               	iorwf	(xtoa@n+4)^0,w,c
  2292  000D50  103C               	iorwf	(xtoa@n+5)^0,w,c
  2293  000D52  103D               	iorwf	(xtoa@n+6)^0,w,c
  2294  000D54  103E               	iorwf	(xtoa@n+7)^0,w,c
  2295  000D56  A4D8               	btfss	status,2,c
  2296  000D58  EFB0  F006         	goto	u941
  2297  000D5C  EFB2  F006         	goto	u940
  2298  000D60                     u941:
  2299  000D60  EFE2  F005         	goto	l1592
  2300  000D64                     u940:
  2301  000D64  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2302  000D66  EFBF  F006         	goto	u950
  2303  000D6A  5034               	movf	(xtoa@p+1)^0,w,c
  2304  000D6C  E106               	bnz	u951
  2305  000D6E  0433               	decf	xtoa@p^0,w,c
  2306  000D70  B0D8               	btfsc	status,0,c
  2307  000D72  EFBD  F006         	goto	u951
  2308  000D76  EFBF  F006         	goto	u950
  2309  000D7A                     u951:
  2310  000D7A  EFE2  F005         	goto	l1592
  2311  000D7E                     u950:
  2312  000D7E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2313  000D80  EFCA  F006         	goto	u961
  2314  000D84  5036               	movf	(xtoa@w+1)^0,w,c
  2315  000D86  E108               	bnz	u960
  2316  000D88  0435               	decf	xtoa@w^0,w,c
  2317  000D8A  A0D8               	btfss	status,0,c
  2318  000D8C  EFCA  F006         	goto	u961
  2319  000D90  EFCC  F006         	goto	u960
  2320  000D94                     u961:
  2321  000D94  EFD4  F006         	goto	l966
  2322  000D98                     u960:
  2323  000D98  0100               	movlb	0	; () banked
  2324  000D9A  B3A9               	btfsc	_flags& (0+255),1,b
  2325  000D9C  EFD2  F006         	goto	u971
  2326  000DA0  EFD4  F006         	goto	u970
  2327  000DA4                     u971:
  2328  000DA4  EFE2  F005         	goto	l1592
  2329  000DA8                     u970:
  2330  000DA8                     l966:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2333  000DA8  0100               	movlb	0	; () banked
  2334  000DAA  A9A9               	btfss	_flags& (0+255),4,b
  2335  000DAC  EFDA  F006         	goto	u981
  2336  000DB0  EFDC  F006         	goto	u980
  2337  000DB4                     u981:
  2338  000DB4  EFF2  F006         	goto	l1638
  2339  000DB8                     u980:
  2340  000DB8                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2343  000DB8  063F               	decf	xtoa@i^0,f,c
  2344  000DBA  A0D8               	btfss	status,0,c
  2345  000DBC  0640               	decf	(xtoa@i+1)^0,f,c
  2346  000DBE                     
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2349  000DBE  0E14               	movlw	low _dbuf
  2350  000DC0  243F               	addwf	xtoa@i^0,w,c
  2351  000DC2  6ED9               	movwf	fsr2l,c
  2352  000DC4  0E01               	movlw	high _dbuf
  2353  000DC6  2040               	addwfc	(xtoa@i+1)^0,w,c
  2354  000DC8  6EDA               	movwf	fsr2h,c
  2355  000DCA  C026  FFDF         	movff	xtoa@x,indf2
  2356  000DCE                     
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2359  000DCE  063F               	decf	xtoa@i^0,f,c
  2360  000DD0  A0D8               	btfss	status,0,c
  2361  000DD2  0640               	decf	(xtoa@i+1)^0,f,c
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2364  000DD4  0E14               	movlw	low _dbuf
  2365  000DD6  243F               	addwf	xtoa@i^0,w,c
  2366  000DD8  6ED9               	movwf	fsr2l,c
  2367  000DDA  0E01               	movlw	high _dbuf
  2368  000DDC  2040               	addwfc	(xtoa@i+1)^0,w,c
  2369  000DDE  6EDA               	movwf	fsr2h,c
  2370  000DE0  0E30               	movlw	48
  2371  000DE2  6EDF               	movwf	indf2,c
  2372  000DE4                     l1638:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2376  000DE4  C01C  F011         	movff	xtoa@fp,pad@fp
  2377  000DE8  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2378  000DEC  0E14               	movlw	low _dbuf
  2379  000DEE  243F               	addwf	xtoa@i^0,w,c
  2380  000DF0  6E13               	movwf	pad@buf^0,c
  2381  000DF2  0E01               	movlw	high _dbuf
  2382  000DF4  2040               	addwfc	(xtoa@i+1)^0,w,c
  2383  000DF6  6E14               	movwf	(pad@buf+1)^0,c
  2384  000DF8  C035  F015         	movff	xtoa@w,pad@p
  2385  000DFC  C036  F016         	movff	xtoa@w+1,pad@p+1
  2386  000E00  EC54  F008         	call	_pad	;wreg free
  2387  000E04  C011  F01C         	movff	?_pad,?_xtoa
  2388  000E08  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2389  000E0C  0012               	return		;funcret
  2390  000E0E                     __end_of_xtoa:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _toupper *****************
  2394 ;; Defined at:
  2395 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  c               2    6[COMRAM] int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2    6[COMRAM] int 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2409 ;;      Params:         2       0       0       0       0       0       0
  2410 ;;      Locals:         2       0       0       0       0       0       0
  2411 ;;      Temps:          4       0       0       0       0       0       0
  2412 ;;      Totals:         8       0       0       0       0       0       0
  2413 ;;Total ram usage:        8 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    1
  2416 ;; This function calls:
  2417 ;;		_islower
  2418 ;; This function is called by:
  2419 ;;		_xtoa
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text5
  2424  0012FA                     __ptext5:
  2425                           	callstack 0
  2426  0012FA                     _toupper:
  2427                           	callstack 25
  2428  0012FA  0E9F               	movlw	159
  2429  0012FC  6E09               	movwf	??_toupper^0,c
  2430  0012FE  0EFF               	movlw	255
  2431  001300  6E0A               	movwf	(??_toupper+1)^0,c
  2432  001302  C007  F00B         	movff	toupper@c,??_toupper+2
  2433  001306  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2434  00130A  5009               	movf	??_toupper^0,w,c
  2435  00130C  260B               	addwf	(??_toupper+2)^0,f,c
  2436  00130E  500A               	movf	(??_toupper+1)^0,w,c
  2437  001310  220C               	addwfc	(??_toupper+3)^0,f,c
  2438  001312  500C               	movf	(??_toupper+3)^0,w,c
  2439  001314  E10A               	bnz	u790
  2440  001316  0E1A               	movlw	26
  2441  001318  5C0B               	subwf	(??_toupper+2)^0,w,c
  2442  00131A  A0D8               	btfss	status,0,c
  2443  00131C  EF92  F009         	goto	u791
  2444  001320  EF95  F009         	goto	u790
  2445  001324                     u791:
  2446  001324  0E01               	movlw	1
  2447  001326  EF96  F009         	goto	u800
  2448  00132A                     u790:
  2449  00132A  0E00               	movlw	0
  2450  00132C                     u800:
  2451  00132C  6E0D               	movwf	_toupper$848^0,c
  2452  00132E  6A0E               	clrf	(_toupper$848+1)^0,c
  2453  001330  500D               	movf	_toupper$848^0,w,c
  2454  001332  100E               	iorwf	(_toupper$848+1)^0,w,c
  2455  001334  B4D8               	btfsc	status,2,c
  2456  001336  EF9F  F009         	goto	u811
  2457  00133A  EFA1  F009         	goto	u810
  2458  00133E                     u811:
  2459  00133E  EFA7  F009         	goto	l1028
  2460  001342                     u810:
  2461  001342  0E5F               	movlw	95
  2462  001344  1407               	andwf	toupper@c^0,w,c
  2463  001346  6E07               	movwf	?_toupper^0,c
  2464  001348  6A08               	clrf	(?_toupper+1)^0,c
  2465  00134A  EFAB  F009         	goto	l1033
  2466  00134E                     l1028:
  2467  00134E  C007  F007         	movff	toupper@c,?_toupper
  2468  001352  C008  F008         	movff	toupper@c+1,?_toupper+1
  2469  001356                     l1033:
  2470  001356  0012               	return		;funcret
  2471  001358                     __end_of_toupper:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _islower *****************
  2475 ;; Defined at:
  2476 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  c               2    0[COMRAM] int 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2    0[COMRAM] int 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2490 ;;      Params:         2       0       0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0
  2492 ;;      Temps:          4       0       0       0       0       0       0
  2493 ;;      Totals:         6       0       0       0       0       0       0
  2494 ;;Total ram usage:        6 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_toupper
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text6
  2504  0014F6                     __ptext6:
  2505                           	callstack 0
  2506  0014F6                     _islower:
  2507                           	callstack 25
  2508  0014F6  0E9F               	movlw	159
  2509  0014F8  6E03               	movwf	??_islower^0,c
  2510  0014FA  0EFF               	movlw	255
  2511  0014FC  6E04               	movwf	(??_islower+1)^0,c
  2512  0014FE  C001  F005         	movff	islower@c,??_islower+2
  2513  001502  C002  F006         	movff	islower@c+1,??_islower+3
  2514  001506  5003               	movf	??_islower^0,w,c
  2515  001508  2605               	addwf	(??_islower+2)^0,f,c
  2516  00150A  5004               	movf	(??_islower+1)^0,w,c
  2517  00150C  2206               	addwfc	(??_islower+3)^0,f,c
  2518  00150E  5006               	movf	(??_islower+3)^0,w,c
  2519  001510  E10A               	bnz	u690
  2520  001512  0E1A               	movlw	26
  2521  001514  5C05               	subwf	(??_islower+2)^0,w,c
  2522  001516  A0D8               	btfss	status,0,c
  2523  001518  EF90  F00A         	goto	u691
  2524  00151C  EF93  F00A         	goto	u690
  2525  001520                     u691:
  2526  001520  0E01               	movlw	1
  2527  001522  EF94  F00A         	goto	u700
  2528  001526                     u690:
  2529  001526  0E00               	movlw	0
  2530  001528                     u700:
  2531  001528  6E01               	movwf	?_islower^0,c
  2532  00152A  6A02               	clrf	(?_islower+1)^0,c
  2533  00152C  0012               	return		;funcret
  2534  00152E                     __end_of_islower:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _pad *****************
  2538 ;; Defined at:
  2539 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2542 ;;		 -> sprintf@f(6), 
  2543 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2544 ;;		 -> dbuf(32), 
  2545 ;;  p               2   20[COMRAM] int 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  w               2   25[COMRAM] int 
  2548 ;;  i               2   23[COMRAM] int 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  2   16[COMRAM] int 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2558 ;;      Params:         6       0       0       0       0       0       0
  2559 ;;      Locals:         4       0       0       0       0       0       0
  2560 ;;      Temps:          1       0       0       0       0       0       0
  2561 ;;      Totals:        11       0       0       0       0       0       0
  2562 ;;Total ram usage:       11 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    3
  2565 ;; This function calls:
  2566 ;;		_fputc
  2567 ;;		_fputs
  2568 ;;		_strlen
  2569 ;; This function is called by:
  2570 ;;		_xtoa
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text7
  2575  0010A8                     __ptext7:
  2576                           	callstack 0
  2577  0010A8                     _pad:
  2578                           	callstack 23
  2579  0010A8                     
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2581  0010A8  0100               	movlb	0	; () banked
  2582  0010AA  A1A9               	btfss	_flags& (0+255),0,b
  2583  0010AC  EF5A  F008         	goto	u711
  2584  0010B0  EF5C  F008         	goto	u710
  2585  0010B4                     u711:
  2586  0010B4  EF66  F008         	goto	l1540
  2587  0010B8                     u710:
  2588  0010B8                     
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2591  0010B8  C013  F00A         	movff	pad@buf,fputs@s
  2592  0010BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2593  0010C0  C011  F00C         	movff	pad@fp,fputs@fp
  2594  0010C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2595  0010C8  ECF8  F009         	call	_fputs	;wreg free
  2596  0010CC                     l1540:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2599  0010CC  BE16               	btfsc	(pad@p+1)^0,7,c
  2600  0010CE  EF6B  F008         	goto	u721
  2601  0010D2  EF6D  F008         	goto	u720
  2602  0010D6                     u721:
  2603  0010D6  EF73  F008         	goto	l1544
  2604  0010DA                     u720:
  2605  0010DA  C015  F01A         	movff	pad@p,pad@w
  2606  0010DE  C016  F01B         	movff	pad@p+1,pad@w+1
  2607  0010E2  EF77  F008         	goto	l933
  2608  0010E6                     l1544:
  2609  0010E6  0E00               	movlw	0
  2610  0010E8  6E1B               	movwf	(pad@w+1)^0,c
  2611  0010EA  0E00               	movlw	0
  2612  0010EC  6E1A               	movwf	pad@w^0,c
  2613  0010EE                     l933:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2616  0010EE  0E00               	movlw	0
  2617  0010F0  6E19               	movwf	(pad@i+1)^0,c
  2618  0010F2  0E00               	movlw	0
  2619  0010F4  6E18               	movwf	pad@i^0,c
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2622  0010F6  EF89  F008         	goto	l1550
  2623  0010FA                     l1546:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2626  0010FA  0E00               	movlw	0
  2627  0010FC  6E02               	movwf	(fputc@c+1)^0,c
  2628  0010FE  0E20               	movlw	32
  2629  001100  6E01               	movwf	fputc@c^0,c
  2630  001102  C011  F003         	movff	pad@fp,fputc@fp
  2631  001106  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2632  00110A  ECEF  F007         	call	_fputc	;wreg free
  2633  00110E                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2635  00110E  4A18               	infsnz	pad@i^0,f,c
  2636  001110  2A19               	incf	(pad@i+1)^0,f,c
  2637  001112                     l1550:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2640  001112  501A               	movf	pad@w^0,w,c
  2641  001114  5C18               	subwf	pad@i^0,w,c
  2642  001116  5019               	movf	(pad@i+1)^0,w,c
  2643  001118  0A80               	xorlw	128
  2644  00111A  6E17               	movwf	??_pad^0,c
  2645  00111C  501B               	movf	(pad@w+1)^0,w,c
  2646  00111E  0A80               	xorlw	128
  2647  001120  5817               	subwfb	??_pad^0,w,c
  2648  001122  A0D8               	btfss	status,0,c
  2649  001124  EF96  F008         	goto	u731
  2650  001128  EF98  F008         	goto	u730
  2651  00112C                     u731:
  2652  00112C  EF7D  F008         	goto	l1546
  2653  001130                     u730:
  2654  001130                     
  2655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2656  001130  0100               	movlb	0	; () banked
  2657  001132  B1A9               	btfsc	_flags& (0+255),0,b
  2658  001134  EF9E  F008         	goto	u741
  2659  001138  EFA0  F008         	goto	u740
  2660  00113C                     u741:
  2661  00113C  EFAA  F008         	goto	l1554
  2662  001140                     u740:
  2663  001140                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2666  001140  C013  F00A         	movff	pad@buf,fputs@s
  2667  001144  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2668  001148  C011  F00C         	movff	pad@fp,fputs@fp
  2669  00114C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2670  001150  ECF8  F009         	call	_fputs	;wreg free
  2671  001154                     l1554:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2674  001154  C013  F001         	movff	pad@buf,strlen@s
  2675  001158  C014  F002         	movff	pad@buf+1,strlen@s+1
  2676  00115C  ECB3  F00A         	call	_strlen	;wreg free
  2677  001160  501A               	movf	pad@w^0,w,c
  2678  001162  2401               	addwf	?_strlen^0,w,c
  2679  001164  6E11               	movwf	?_pad^0,c
  2680  001166  501B               	movf	(pad@w+1)^0,w,c
  2681  001168  2002               	addwfc	(?_strlen+1)^0,w,c
  2682  00116A  6E12               	movwf	(?_pad+1)^0,c
  2683  00116C  0012               	return		;funcret
  2684  00116E                     __end_of_pad:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function _strlen *****************
  2688 ;; Defined at:
  2689 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2692 ;;		 -> dbuf(32), text9(5), text8(5), text7(5), 
  2693 ;;		 -> text6(5), text5(5), text4(5), text3(5), 
  2694 ;;		 -> dma(20), smh(20), text2(5), text1(5), 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2697 ;;		 -> dbuf(32), text9(5), text8(5), text7(5), 
  2698 ;;		 -> text6(5), text5(5), text4(5), text3(5), 
  2699 ;;		 -> dma(20), smh(20), text2(5), text1(5), 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2    0[COMRAM] unsigned int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2709 ;;      Params:         2       0       0       0       0       0       0
  2710 ;;      Locals:         2       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0
  2712 ;;      Totals:         4       0       0       0       0       0       0
  2713 ;;Total ram usage:        4 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;;		_pad
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text8
  2724  001566                     __ptext8:
  2725                           	callstack 0
  2726  001566                     _strlen:
  2727                           	callstack 30
  2728  001566  C001  F003         	movff	strlen@s,strlen@a
  2729  00156A  C002  F004         	movff	strlen@s+1,strlen@a+1
  2730  00156E  EFBB  F00A         	goto	l1518
  2731  001572                     l1516:
  2732  001572  4A01               	infsnz	strlen@s^0,f,c
  2733  001574  2A02               	incf	(strlen@s+1)^0,f,c
  2734  001576                     l1518:
  2735  001576  C001  FFD9         	movff	strlen@s,fsr2l
  2736  00157A  C002  FFDA         	movff	strlen@s+1,fsr2h
  2737  00157E  50DF               	movf	indf2,w,c
  2738  001580  A4D8               	btfss	status,2,c
  2739  001582  EFC5  F00A         	goto	u671
  2740  001586  EFC7  F00A         	goto	u670
  2741  00158A                     u671:
  2742  00158A  EFB9  F00A         	goto	l1516
  2743  00158E                     u670:
  2744  00158E  5003               	movf	strlen@a^0,w,c
  2745  001590  5C01               	subwf	strlen@s^0,w,c
  2746  001592  6E01               	movwf	?_strlen^0,c
  2747  001594  5004               	movf	(strlen@a+1)^0,w,c
  2748  001596  5802               	subwfb	(strlen@s+1)^0,w,c
  2749  001598  6E02               	movwf	(?_strlen+1)^0,c
  2750  00159A  0012               	return		;funcret
  2751  00159C                     __end_of_strlen:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _fputs *****************
  2755 ;; Defined at:
  2756 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2759 ;;		 -> dbuf(32), 
  2760 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2761 ;;		 -> sprintf@f(6), 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  i               2   14[COMRAM] int 
  2764 ;;  c               1   13[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  2    9[COMRAM] int 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2774 ;;      Params:         4       0       0       0       0       0       0
  2775 ;;      Locals:         3       0       0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0
  2777 ;;      Totals:         7       0       0       0       0       0       0
  2778 ;;Total ram usage:        7 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    2
  2781 ;; This function calls:
  2782 ;;		_fputc
  2783 ;; This function is called by:
  2784 ;;		_pad
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text9
  2789  0013F0                     __ptext9:
  2790                           	callstack 0
  2791  0013F0                     _fputs:
  2792                           	callstack 23
  2793  0013F0  0E00               	movlw	0
  2794  0013F2  6E10               	movwf	(fputs@i+1)^0,c
  2795  0013F4  0E00               	movlw	0
  2796  0013F6  6E0F               	movwf	fputs@i^0,c
  2797  0013F8  EF09  F00A         	goto	l1530
  2798  0013FC                     l1526:
  2799  0013FC  C00E  F001         	movff	fputs@c,fputc@c
  2800  001400  6A02               	clrf	(fputc@c+1)^0,c
  2801  001402  C00C  F003         	movff	fputs@fp,fputc@fp
  2802  001406  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2803  00140A  ECEF  F007         	call	_fputc	;wreg free
  2804  00140E  4A0F               	infsnz	fputs@i^0,f,c
  2805  001410  2A10               	incf	(fputs@i+1)^0,f,c
  2806  001412                     l1530:
  2807  001412  500F               	movf	fputs@i^0,w,c
  2808  001414  240A               	addwf	fputs@s^0,w,c
  2809  001416  6ED9               	movwf	fsr2l,c
  2810  001418  5010               	movf	(fputs@i+1)^0,w,c
  2811  00141A  200B               	addwfc	(fputs@s+1)^0,w,c
  2812  00141C  6EDA               	movwf	fsr2h,c
  2813  00141E  50DF               	movf	indf2,w,c
  2814  001420  6E0E               	movwf	fputs@c^0,c
  2815  001422  500E               	movf	fputs@c^0,w,c
  2816  001424  A4D8               	btfss	status,2,c
  2817  001426  EF17  F00A         	goto	u681
  2818  00142A  EF19  F00A         	goto	u680
  2819  00142E                     u681:
  2820  00142E  EFFE  F009         	goto	l1526
  2821  001432                     u680:
  2822  001432  0012               	return		;funcret
  2823  001434                     __end_of_fputs:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _fputc *****************
  2827 ;; Defined at:
  2828 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  c               2    0[COMRAM] int 
  2831 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2832 ;;		 -> sprintf@f(6), 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  2    0[COMRAM] int 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2844 ;;      Params:         4       0       0       0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0
  2846 ;;      Temps:          5       0       0       0       0       0       0
  2847 ;;      Totals:         9       0       0       0       0       0       0
  2848 ;;Total ram usage:        9 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    1
  2851 ;; This function calls:
  2852 ;;		_putch
  2853 ;; This function is called by:
  2854 ;;		_pad
  2855 ;;		_vfpfcnvrt
  2856 ;;		_fputs
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text10
  2861  000FDE                     __ptext10:
  2862                           	callstack 0
  2863  000FDE                     _fputc:
  2864                           	callstack 23
  2865  000FDE  5003               	movf	fputc@fp^0,w,c
  2866  000FE0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2867  000FE2  B4D8               	btfsc	status,2,c
  2868  000FE4  EFF6  F007         	goto	u631
  2869  000FE8  EFF8  F007         	goto	u630
  2870  000FEC                     u631:
  2871  000FEC  EF01  F008         	goto	l1504
  2872  000FF0                     u630:
  2873  000FF0  5003               	movf	fputc@fp^0,w,c
  2874  000FF2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2875  000FF4  A4D8               	btfss	status,2,c
  2876  000FF6  EFFF  F007         	goto	u641
  2877  000FFA  EF01  F008         	goto	u640
  2878  000FFE                     u641:
  2879  000FFE  EF06  F008         	goto	l1506
  2880  001002                     u640:
  2881  001002                     l1504:
  2882  001002  5001               	movf	fputc@c^0,w,c
  2883  001004  EC28  F00B         	call	_putch
  2884  001008  EF53  F008         	goto	l1006
  2885  00100C                     l1506:
  2886  00100C  EE20 F004          	lfsr	2,4
  2887  001010  5003               	movf	fputc@fp^0,w,c
  2888  001012  26D9               	addwf	fsr2l,f,c
  2889  001014  5004               	movf	(fputc@fp+1)^0,w,c
  2890  001016  22DA               	addwfc	fsr2h,f,c
  2891  001018  50DE               	movf	postinc2,w,c
  2892  00101A  10DE               	iorwf	postinc2,w,c
  2893  00101C  B4D8               	btfsc	status,2,c
  2894  00101E  EF13  F008         	goto	u651
  2895  001022  EF15  F008         	goto	u650
  2896  001026                     u651:
  2897  001026  EF30  F008         	goto	l1510
  2898  00102A                     u650:
  2899  00102A  EE20 F004          	lfsr	2,4
  2900  00102E  5003               	movf	fputc@fp^0,w,c
  2901  001030  26D9               	addwf	fsr2l,f,c
  2902  001032  5004               	movf	(fputc@fp+1)^0,w,c
  2903  001034  22DA               	addwfc	fsr2h,f,c
  2904  001036  EE10 F002          	lfsr	1,2
  2905  00103A  5003               	movf	fputc@fp^0,w,c
  2906  00103C  26E1               	addwf	fsr1l,f,c
  2907  00103E  5004               	movf	(fputc@fp+1)^0,w,c
  2908  001040  22E2               	addwfc	fsr1h,f,c
  2909  001042  50DE               	movf	postinc2,w,c
  2910  001044  5CE6               	subwf	postinc1,w,c
  2911  001046  50E6               	movf	postinc1,w,c
  2912  001048  0A80               	xorlw	128
  2913  00104A  6E09               	movwf	(??_fputc+4)^0,c
  2914  00104C  50DE               	movf	postinc2,w,c
  2915  00104E  0A80               	xorlw	128
  2916  001050  5809               	subwfb	(??_fputc+4)^0,w,c
  2917  001052  B0D8               	btfsc	status,0,c
  2918  001054  EF2E  F008         	goto	u661
  2919  001058  EF30  F008         	goto	u660
  2920  00105C                     u661:
  2921  00105C  EF53  F008         	goto	l1006
  2922  001060                     u660:
  2923  001060                     l1510:
  2924  001060  EE20 F002          	lfsr	2,2
  2925  001064  5003               	movf	fputc@fp^0,w,c
  2926  001066  26D9               	addwf	fsr2l,f,c
  2927  001068  5004               	movf	(fputc@fp+1)^0,w,c
  2928  00106A  22DA               	addwfc	fsr2h,f,c
  2929  00106C  CFDE F005          	movff	postinc2,??_fputc
  2930  001070  CFDD F006          	movff	postdec2,??_fputc+1
  2931  001074  C003  FFD9         	movff	fputc@fp,fsr2l
  2932  001078  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2933  00107C  CFDE F007          	movff	postinc2,??_fputc+2
  2934  001080  CFDD F008          	movff	postdec2,??_fputc+3
  2935  001084  5005               	movf	??_fputc^0,w,c
  2936  001086  2407               	addwf	(??_fputc+2)^0,w,c
  2937  001088  6ED9               	movwf	fsr2l,c
  2938  00108A  5006               	movf	(??_fputc+1)^0,w,c
  2939  00108C  2008               	addwfc	(??_fputc+3)^0,w,c
  2940  00108E  6EDA               	movwf	fsr2h,c
  2941  001090  C001  FFDF         	movff	fputc@c,indf2
  2942  001094  EE20 F002          	lfsr	2,2
  2943  001098  5003               	movf	fputc@fp^0,w,c
  2944  00109A  26D9               	addwf	fsr2l,f,c
  2945  00109C  5004               	movf	(fputc@fp+1)^0,w,c
  2946  00109E  22DA               	addwfc	fsr2h,f,c
  2947  0010A0  2ADE               	incf	postinc2,f,c
  2948  0010A2  0E00               	movlw	0
  2949  0010A4  22DD               	addwfc	postdec2,f,c
  2950  0010A6                     l1006:
  2951  0010A6  0012               	return		;funcret
  2952  0010A8                     __end_of_fputc:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _putch *****************
  2956 ;; Defined at:
  2957 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  c               1    wreg     unsigned char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  c               1    0[COMRAM] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2971 ;;      Params:         0       0       0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_fputc
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text11
  2985  001650                     __ptext11:
  2986                           	callstack 0
  2987  001650                     _putch:
  2988                           	callstack 23
  2989  001650  0012               	return		;funcret
  2990  001652                     __end_of_putch:
  2991                           	callstack 0
  2992                           
  2993 ;; *************** function _isupper *****************
  2994 ;; Defined at:
  2995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  c               2    0[COMRAM] int 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  2    0[COMRAM] int 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3009 ;;      Params:         2       0       0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0
  3011 ;;      Temps:          4       0       0       0       0       0       0
  3012 ;;      Totals:         6       0       0       0       0       0       0
  3013 ;;Total ram usage:        6 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_xtoa
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text12
  3023  00152E                     __ptext12:
  3024                           	callstack 0
  3025  00152E                     _isupper:
  3026                           	callstack 26
  3027  00152E  0EBF               	movlw	191
  3028  001530  6E03               	movwf	??_isupper^0,c
  3029  001532  0EFF               	movlw	255
  3030  001534  6E04               	movwf	(??_isupper+1)^0,c
  3031  001536  C001  F005         	movff	isupper@c,??_isupper+2
  3032  00153A  C002  F006         	movff	isupper@c+1,??_isupper+3
  3033  00153E  5003               	movf	??_isupper^0,w,c
  3034  001540  2605               	addwf	(??_isupper+2)^0,f,c
  3035  001542  5004               	movf	(??_isupper+1)^0,w,c
  3036  001544  2206               	addwfc	(??_isupper+3)^0,f,c
  3037  001546  5006               	movf	(??_isupper+3)^0,w,c
  3038  001548  E10A               	bnz	u750
  3039  00154A  0E1A               	movlw	26
  3040  00154C  5C05               	subwf	(??_isupper+2)^0,w,c
  3041  00154E  A0D8               	btfss	status,0,c
  3042  001550  EFAC  F00A         	goto	u751
  3043  001554  EFAF  F00A         	goto	u750
  3044  001558                     u751:
  3045  001558  0E01               	movlw	1
  3046  00155A  EFB0  F00A         	goto	u760
  3047  00155E                     u750:
  3048  00155E  0E00               	movlw	0
  3049  001560                     u760:
  3050  001560  6E01               	movwf	?_isupper^0,c
  3051  001562  6A02               	clrf	(?_isupper+1)^0,c
  3052  001564  0012               	return		;funcret
  3053  001566                     __end_of_isupper:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _isalpha *****************
  3057 ;; Defined at:
  3058 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  c               2    0[COMRAM] int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    0[COMRAM] int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3072 ;;      Params:         2       0       0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0
  3074 ;;      Temps:          4       0       0       0       0       0       0
  3075 ;;      Totals:         6       0       0       0       0       0       0
  3076 ;;Total ram usage:        6 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_xtoa
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text13
  3086  0014BA                     __ptext13:
  3087                           	callstack 0
  3088  0014BA                     _isalpha:
  3089                           	callstack 26
  3090  0014BA  0E9F               	movlw	159
  3091  0014BC  6E03               	movwf	??_isalpha^0,c
  3092  0014BE  0EFF               	movlw	255
  3093  0014C0  6E04               	movwf	(??_isalpha+1)^0,c
  3094  0014C2  0E20               	movlw	32
  3095  0014C4  1001               	iorwf	isalpha@c^0,w,c
  3096  0014C6  6E05               	movwf	(??_isalpha+2)^0,c
  3097  0014C8  0E00               	movlw	0
  3098  0014CA  1002               	iorwf	(isalpha@c+1)^0,w,c
  3099  0014CC  6E06               	movwf	(??_isalpha+3)^0,c
  3100  0014CE  5003               	movf	??_isalpha^0,w,c
  3101  0014D0  2605               	addwf	(??_isalpha+2)^0,f,c
  3102  0014D2  5004               	movf	(??_isalpha+1)^0,w,c
  3103  0014D4  2206               	addwfc	(??_isalpha+3)^0,f,c
  3104  0014D6  5006               	movf	(??_isalpha+3)^0,w,c
  3105  0014D8  E10A               	bnz	u770
  3106  0014DA  0E1A               	movlw	26
  3107  0014DC  5C05               	subwf	(??_isalpha+2)^0,w,c
  3108  0014DE  A0D8               	btfss	status,0,c
  3109  0014E0  EF74  F00A         	goto	u771
  3110  0014E4  EF77  F00A         	goto	u770
  3111  0014E8                     u771:
  3112  0014E8  0E01               	movlw	1
  3113  0014EA  EF78  F00A         	goto	u780
  3114  0014EE                     u770:
  3115  0014EE  0E00               	movlw	0
  3116  0014F0                     u780:
  3117  0014F0  6E01               	movwf	?_isalpha^0,c
  3118  0014F2  6A02               	clrf	(?_isalpha+1)^0,c
  3119  0014F4  0012               	return		;funcret
  3120  0014F6                     __end_of_isalpha:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function _settings *****************
  3124 ;; Defined at:
  3125 ;;		line 134 in file "newmain.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3139 ;;      Params:         0       0       0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0
  3142 ;;      Totals:         0       0       0       0       0       0       0
  3143 ;;Total ram usage:        0 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		_SettingsLCD
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text14
  3154  0013AA                     __ptext14:
  3155                           	callstack 0
  3156  0013AA                     _settings:
  3157                           	callstack 28
  3158  0013AA                     
  3159                           ;newmain.c: 135:     OSCCON = 0x72;
  3160  0013AA  0E72               	movlw	114
  3161  0013AC  6ED3               	movwf	211,c	;volatile
  3162                           
  3163                           ;newmain.c: 136:     ADCON1 = 0x0F;
  3164  0013AE  0E0F               	movlw	15
  3165  0013B0  6EC1               	movwf	193,c	;volatile
  3166  0013B2                     
  3167                           ;newmain.c: 137:     TRISCbits.RC3 = 1;
  3168  0013B2  8694               	bsf	148,3,c	;volatile
  3169  0013B4                     
  3170                           ;newmain.c: 138:     TRISCbits.RC4 = 1;
  3171  0013B4  8894               	bsf	148,4,c	;volatile
  3172                           
  3173                           ;newmain.c: 139:     SSP1STAT = 0x80;
  3174  0013B6  0E80               	movlw	128
  3175  0013B8  6EC7               	movwf	199,c	;volatile
  3176                           
  3177                           ;newmain.c: 140:     SSP1CON1 = 0x28;
  3178  0013BA  0E28               	movlw	40
  3179  0013BC  6EC6               	movwf	198,c	;volatile
  3180                           
  3181                           ;newmain.c: 141:     SSP1CON2 = 0;
  3182  0013BE  0E00               	movlw	0
  3183  0013C0  6EC5               	movwf	197,c	;volatile
  3184                           
  3185                           ;newmain.c: 142:     SSP1ADD = 0x13;
  3186  0013C2  0E13               	movlw	19
  3187  0013C4  6EC8               	movwf	200,c	;volatile
  3188                           
  3189                           ;newmain.c: 144:     TRISD = 0x00;
  3190  0013C6  0E00               	movlw	0
  3191  0013C8  6E95               	movwf	149,c	;volatile
  3192                           
  3193                           ;newmain.c: 145:     LATD = 0x00;
  3194  0013CA  0E00               	movlw	0
  3195  0013CC  6E8C               	movwf	140,c	;volatile
  3196                           
  3197                           ;newmain.c: 146:     TRISE = 0x00;
  3198  0013CE  0E00               	movlw	0
  3199  0013D0  6E96               	movwf	150,c	;volatile
  3200                           
  3201                           ;newmain.c: 147:     LATE = 0x00;
  3202  0013D2  0E00               	movlw	0
  3203  0013D4  6E8D               	movwf	141,c	;volatile
  3204  0013D6                     
  3205                           ;newmain.c: 148:     SettingsLCD(0x06);
  3206  0013D6  0E06               	movlw	6
  3207  0013D8  EC0A  F00B         	call	_SettingsLCD
  3208  0013DC                     
  3209                           ;newmain.c: 149:     SettingsLCD(0x0F);
  3210  0013DC  0E0F               	movlw	15
  3211  0013DE  EC0A  F00B         	call	_SettingsLCD
  3212  0013E2                     
  3213                           ;newmain.c: 150:     SettingsLCD(0x38);
  3214  0013E2  0E38               	movlw	56
  3215  0013E4  EC0A  F00B         	call	_SettingsLCD
  3216  0013E8                     
  3217                           ;newmain.c: 151:     SettingsLCD(0x01);
  3218  0013E8  0E01               	movlw	1
  3219  0013EA  EC0A  F00B         	call	_SettingsLCD
  3220  0013EE  0012               	return		;funcret
  3221  0013F0                     __end_of_settings:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _SettingsLCD *****************
  3225 ;; Defined at:
  3226 ;;		line 221 in file "newmain.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  word            1    wreg     unsigned char 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  word            1    1[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         0       0       0       0       0       0       0
  3241 ;;      Locals:         1       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0
  3243 ;;      Totals:         1       0       0       0       0       0       0
  3244 ;;Total ram usage:        1 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    1
  3247 ;; This function calls:
  3248 ;;		_LCD
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;;		_settings
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text15
  3256  001614                     __ptext15:
  3257                           	callstack 0
  3258  001614                     _SettingsLCD:
  3259                           	callstack 28
  3260                           
  3261                           ;incstack = 0
  3262                           ;SettingsLCD@word stored from wreg
  3263  001614  6E02               	movwf	SettingsLCD@word^0,c
  3264  001616                     
  3265                           ;newmain.c: 222:     LATEbits.LATE1 = 0;
  3266  001616  928D               	bcf	141,1,c	;volatile
  3267  001618                     
  3268                           ;newmain.c: 223:     LCD(word);
  3269  001618  5002               	movf	SettingsLCD@word^0,w,c
  3270  00161A  ECF8  F00A         	call	_LCD
  3271  00161E  0012               	return		;funcret
  3272  001620                     __end_of_SettingsLCD:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _WriteLCD *****************
  3276 ;; Defined at:
  3277 ;;		line 226 in file "newmain.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  word            1    wreg     unsigned char 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  word            1    1[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3291 ;;      Params:         0       0       0       0       0       0       0
  3292 ;;      Locals:         1       0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0
  3294 ;;      Totals:         1       0       0       0       0       0       0
  3295 ;;Total ram usage:        1 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    1
  3298 ;; This function calls:
  3299 ;;		_LCD
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text16
  3306  001620                     __ptext16:
  3307                           	callstack 0
  3308  001620                     _WriteLCD:
  3309                           	callstack 29
  3310                           
  3311                           ;incstack = 0
  3312                           ;WriteLCD@word stored from wreg
  3313  001620  6E02               	movwf	WriteLCD@word^0,c
  3314  001622                     
  3315                           ;newmain.c: 227:     LATEbits.LATE1 = 1;
  3316  001622  828D               	bsf	141,1,c	;volatile
  3317  001624                     
  3318                           ;newmain.c: 228:     LCD(word);
  3319  001624  5002               	movf	WriteLCD@word^0,w,c
  3320  001626  ECF8  F00A         	call	_LCD
  3321  00162A  0012               	return		;funcret
  3322  00162C                     __end_of_WriteLCD:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function _LCD *****************
  3326 ;; Defined at:
  3327 ;;		line 231 in file "newmain.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  data            1    wreg     unsigned char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  data            1    0[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3341 ;;      Params:         0       0       0       0       0       0       0
  3342 ;;      Locals:         1       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0
  3344 ;;      Totals:         1       0       0       0       0       0       0
  3345 ;;Total ram usage:        1 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_SettingsLCD
  3351 ;;		_WriteLCD
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text17
  3356  0015F0                     __ptext17:
  3357                           	callstack 0
  3358  0015F0                     _LCD:
  3359                           	callstack 28
  3360                           
  3361                           ;incstack = 0
  3362                           ;LCD@data stored from wreg
  3363  0015F0  6E01               	movwf	LCD@data^0,c
  3364  0015F2                     
  3365                           ;newmain.c: 232:     LATEbits.LATE0 = 1;
  3366  0015F2  808D               	bsf	141,0,c	;volatile
  3367  0015F4                     
  3368                           ;newmain.c: 233:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3369  0015F4  0E42               	movlw	66
  3370  0015F6                     u1257:
  3371  0015F6  2EE8               	decfsz	wreg,f,c
  3372  0015F8  D7FE               	bra	u1257
  3373  0015FA  D000               	nop2	
  3374  0015FC                     
  3375                           ;newmain.c: 234:     LATD = data;
  3376  0015FC  C001  FF8C         	movff	LCD@data,3980	;volatile
  3377  001600                     
  3378                           ;newmain.c: 235:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3379  001600  0E42               	movlw	66
  3380  001602                     u1267:
  3381  001602  2EE8               	decfsz	wreg,f,c
  3382  001604  D7FE               	bra	u1267
  3383  001606  D000               	nop2	
  3384  001608                     
  3385                           ;newmain.c: 236:     LATEbits.LATE0 = 0;
  3386  001608  908D               	bcf	141,0,c	;volatile
  3387  00160A                     
  3388                           ;newmain.c: 237:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3389  00160A  0E42               	movlw	66
  3390  00160C                     u1277:
  3391  00160C  2EE8               	decfsz	wreg,f,c
  3392  00160E  D7FE               	bra	u1277
  3393  001610  D000               	nop2	
  3394  001612  0012               	return		;funcret
  3395  001614                     __end_of_LCD:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _WriteI2C *****************
  3399 ;; Defined at:
  3400 ;;		line 154 in file "newmain.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  Address         1    wreg     unsigned char 
  3403 ;;  Register        1    2[COMRAM] unsigned char 
  3404 ;;  Data            2    3[COMRAM] PTR unsigned char 
  3405 ;;		 -> calendario(4), hora(3), 
  3406 ;;  bytes           2    5[COMRAM] int 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  Address         1    9[COMRAM] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3418 ;;      Params:         5       0       0       0       0       0       0
  3419 ;;      Locals:         1       0       0       0       0       0       0
  3420 ;;      Temps:          2       0       0       0       0       0       0
  3421 ;;      Totals:         8       0       0       0       0       0       0
  3422 ;;Total ram usage:        8 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    2
  3425 ;; This function calls:
  3426 ;;		_SendI2C
  3427 ;;		_StartI2C
  3428 ;;		_StopI2C
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text18
  3435  001226                     __ptext18:
  3436                           	callstack 0
  3437  001226                     _WriteI2C:
  3438                           	callstack 28
  3439                           
  3440                           ;incstack = 0
  3441                           ;WriteI2C@Address stored from wreg
  3442  001226  6E0A               	movwf	WriteI2C@Address^0,c
  3443  001228                     
  3444                           ;newmain.c: 155:     StartI2C();
  3445  001228  EC20  F00B         	call	_StartI2C	;wreg free
  3446                           
  3447                           ;newmain.c: 156:     SendI2C(Address);
  3448  00122C  500A               	movf	WriteI2C@Address^0,w,c
  3449  00122E  EC16  F00B         	call	_SendI2C
  3450                           
  3451                           ;newmain.c: 157:     SendI2C(Register);
  3452  001232  5003               	movf	WriteI2C@Register^0,w,c
  3453  001234  EC16  F00B         	call	_SendI2C
  3454  001238                     
  3455                           ;newmain.c: 158:     for(i=0; i<bytes; i++){
  3456  001238  0E00               	movlw	0
  3457  00123A  0100               	movlb	0	; () banked
  3458  00123C  6FB0               	movwf	(_i+1)& (0+255),b
  3459  00123E  0E00               	movlw	0
  3460  001240  6FAF               	movwf	_i& (0+255),b
  3461  001242  EF2F  F009         	goto	l1772
  3462  001246                     l1766:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;newmain.c: 159:         SendI2C(*Data);
  3466  001246  C004  FFD9         	movff	WriteI2C@Data,fsr2l
  3467  00124A  C005  FFDA         	movff	WriteI2C@Data+1,fsr2h
  3468  00124E  50DF               	movf	indf2,w,c
  3469  001250  EC16  F00B         	call	_SendI2C
  3470  001254                     
  3471                           ;newmain.c: 160:         Data++;
  3472  001254  4A04               	infsnz	WriteI2C@Data^0,f,c
  3473  001256  2A05               	incf	(WriteI2C@Data+1)^0,f,c
  3474  001258                     
  3475                           ;newmain.c: 161:     }
  3476  001258  0100               	movlb	0	; () banked
  3477  00125A  4BAF               	infsnz	_i& (0+255),f,b
  3478  00125C  2BB0               	incf	(_i+1)& (0+255),f,b
  3479  00125E                     l1772:
  3480                           
  3481                           ; BSR set to: 0
  3482  00125E  5006               	movf	WriteI2C@bytes^0,w,c
  3483  001260  5DAF               	subwf	_i& (0+255),w,b
  3484  001262  51B0               	movf	(_i+1)& (0+255),w,b
  3485  001264  0A80               	xorlw	128
  3486  001266  6E08               	movwf	??_WriteI2C^0,c
  3487  001268  5007               	movf	(WriteI2C@bytes+1)^0,w,c
  3488  00126A  0A80               	xorlw	128
  3489  00126C  5808               	subwfb	??_WriteI2C^0,w,c
  3490  00126E  A0D8               	btfss	status,0,c
  3491  001270  EF3C  F009         	goto	u1081
  3492  001274  EF3E  F009         	goto	u1080
  3493  001278                     u1081:
  3494  001278  EF23  F009         	goto	l1766
  3495  00127C                     u1080:
  3496  00127C                     
  3497                           ; BSR set to: 0
  3498                           ;newmain.c: 162:     StopI2C();
  3499  00127C  EC1C  F00B         	call	_StopI2C	;wreg free
  3500  001280                     
  3501                           ;newmain.c: 163:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3502  001280  0E0B               	movlw	11
  3503  001282  6E09               	movwf	(??_WriteI2C+1)^0,c
  3504  001284  0E26               	movlw	38
  3505  001286  6E08               	movwf	??_WriteI2C^0,c
  3506  001288  0E5E               	movlw	94
  3507  00128A                     u1287:
  3508  00128A  2EE8               	decfsz	wreg,f,c
  3509  00128C  D7FE               	bra	u1287
  3510  00128E  2E08               	decfsz	??_WriteI2C^0,f,c
  3511  001290  D7FC               	bra	u1287
  3512  001292  2E09               	decfsz	(??_WriteI2C+1)^0,f,c
  3513  001294  D7FA               	bra	u1287
  3514  001296  0012               	return		;funcret
  3515  001298                     __end_of_WriteI2C:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _ReadI2C *****************
  3519 ;; Defined at:
  3520 ;;		line 185 in file "newmain.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  Address         1    wreg     unsigned char 
  3523 ;;  Register        1    3[COMRAM] unsigned char 
  3524 ;;  Data            2    4[COMRAM] PTR unsigned char 
  3525 ;;		 -> DatosCalendario(4), DatosHora(3), 
  3526 ;;  bytes           2    6[COMRAM] int 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  Address         1   10[COMRAM] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3538 ;;      Params:         5       0       0       0       0       0       0
  3539 ;;      Locals:         1       0       0       0       0       0       0
  3540 ;;      Temps:          2       0       0       0       0       0       0
  3541 ;;      Totals:         8       0       0       0       0       0       0
  3542 ;;Total ram usage:        8 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    2
  3545 ;; This function calls:
  3546 ;;		_ReceiveI2C
  3547 ;;		_RepeatedStartI2C
  3548 ;;		_SendI2C
  3549 ;;		_StartI2C
  3550 ;;		_StopI2C
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text19
  3557  00116E                     __ptext19:
  3558                           	callstack 0
  3559  00116E                     _ReadI2C:
  3560                           	callstack 28
  3561                           
  3562                           ;incstack = 0
  3563                           ;ReadI2C@Address stored from wreg
  3564  00116E  6E0B               	movwf	ReadI2C@Address^0,c
  3565  001170                     
  3566                           ;newmain.c: 186:     StartI2C();
  3567  001170  EC20  F00B         	call	_StartI2C	;wreg free
  3568                           
  3569                           ;newmain.c: 187:     SendI2C(Address);
  3570  001174  500B               	movf	ReadI2C@Address^0,w,c
  3571  001176  EC16  F00B         	call	_SendI2C
  3572                           
  3573                           ;newmain.c: 188:     SendI2C(Register);
  3574  00117A  5004               	movf	ReadI2C@Register^0,w,c
  3575  00117C  EC16  F00B         	call	_SendI2C
  3576                           
  3577                           ;newmain.c: 189:     RepeatedStartI2C();
  3578  001180  EC24  F00B         	call	_RepeatedStartI2C	;wreg free
  3579                           
  3580                           ;newmain.c: 190:     SendI2C(Address|0x01);
  3581  001184  500B               	movf	ReadI2C@Address^0,w,c
  3582  001186  0901               	iorlw	1
  3583  001188  EC16  F00B         	call	_SendI2C
  3584  00118C                     
  3585                           ;newmain.c: 191:     for(i=0; i<bytes; i++){
  3586  00118C  0E00               	movlw	0
  3587  00118E  0100               	movlb	0	; () banked
  3588  001190  6FB0               	movwf	(_i+1)& (0+255),b
  3589  001192  0E00               	movlw	0
  3590  001194  6FAF               	movwf	_i& (0+255),b
  3591  001196  EFF6  F008         	goto	l1792
  3592  00119A                     l1782:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;newmain.c: 192:         if(i+1 == bytes){
  3596  00119A  0E01               	movlw	1
  3597  00119C  25AF               	addwf	_i& (0+255),w,b
  3598  00119E  6E09               	movwf	??_ReadI2C^0,c
  3599  0011A0  0E00               	movlw	0
  3600  0011A2  21B0               	addwfc	(_i+1)& (0+255),w,b
  3601  0011A4  6E0A               	movwf	(??_ReadI2C+1)^0,c
  3602  0011A6  5007               	movf	ReadI2C@bytes^0,w,c
  3603  0011A8  1809               	xorwf	??_ReadI2C^0,w,c
  3604  0011AA  E107               	bnz	u1091
  3605  0011AC  5008               	movf	(ReadI2C@bytes+1)^0,w,c
  3606  0011AE  180A               	xorwf	(??_ReadI2C+1)^0,w,c
  3607  0011B0  A4D8               	btfss	status,2,c
  3608  0011B2  EFDD  F008         	goto	u1091
  3609  0011B6  EFDF  F008         	goto	u1090
  3610  0011BA                     u1091:
  3611  0011BA  EFE9  F008         	goto	l1786
  3612  0011BE                     u1090:
  3613  0011BE                     
  3614                           ; BSR set to: 0
  3615                           ;newmain.c: 193:             *Data = ReceiveI2C(1);
  3616  0011BE  0E01               	movlw	1
  3617  0011C0  ECCE  F00A         	call	_ReceiveI2C
  3618  0011C4  C005  FFD9         	movff	ReadI2C@Data,fsr2l
  3619  0011C8  C006  FFDA         	movff	ReadI2C@Data+1,fsr2h
  3620  0011CC  6EDF               	movwf	indf2,c
  3621                           
  3622                           ;newmain.c: 194:         }else{
  3623  0011CE  EFF1  F008         	goto	l1788
  3624  0011D2                     l1786:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;newmain.c: 195:             *Data = ReceiveI2C(0);
  3628  0011D2  0E00               	movlw	0
  3629  0011D4  ECCE  F00A         	call	_ReceiveI2C
  3630  0011D8  C005  FFD9         	movff	ReadI2C@Data,fsr2l
  3631  0011DC  C006  FFDA         	movff	ReadI2C@Data+1,fsr2h
  3632  0011E0  6EDF               	movwf	indf2,c
  3633  0011E2                     l1788:
  3634                           
  3635                           ;newmain.c: 198:         Data++;
  3636  0011E2  4A05               	infsnz	ReadI2C@Data^0,f,c
  3637  0011E4  2A06               	incf	(ReadI2C@Data+1)^0,f,c
  3638  0011E6                     
  3639                           ;newmain.c: 199:     }
  3640  0011E6  0100               	movlb	0	; () banked
  3641  0011E8  4BAF               	infsnz	_i& (0+255),f,b
  3642  0011EA  2BB0               	incf	(_i+1)& (0+255),f,b
  3643  0011EC                     l1792:
  3644                           
  3645                           ; BSR set to: 0
  3646  0011EC  5007               	movf	ReadI2C@bytes^0,w,c
  3647  0011EE  5DAF               	subwf	_i& (0+255),w,b
  3648  0011F0  51B0               	movf	(_i+1)& (0+255),w,b
  3649  0011F2  0A80               	xorlw	128
  3650  0011F4  6E09               	movwf	??_ReadI2C^0,c
  3651  0011F6  5008               	movf	(ReadI2C@bytes+1)^0,w,c
  3652  0011F8  0A80               	xorlw	128
  3653  0011FA  5809               	subwfb	??_ReadI2C^0,w,c
  3654  0011FC  A0D8               	btfss	status,0,c
  3655  0011FE  EF03  F009         	goto	u1101
  3656  001202  EF05  F009         	goto	u1100
  3657  001206                     u1101:
  3658  001206  EFCD  F008         	goto	l1782
  3659  00120A                     u1100:
  3660  00120A                     
  3661                           ; BSR set to: 0
  3662                           ;newmain.c: 200:     StopI2C();
  3663  00120A  EC1C  F00B         	call	_StopI2C	;wreg free
  3664  00120E                     
  3665                           ;newmain.c: 201:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3666  00120E  0E0B               	movlw	11
  3667  001210  6E0A               	movwf	(??_ReadI2C+1)^0,c
  3668  001212  0E26               	movlw	38
  3669  001214  6E09               	movwf	??_ReadI2C^0,c
  3670  001216  0E5E               	movlw	94
  3671  001218                     u1297:
  3672  001218  2EE8               	decfsz	wreg,f,c
  3673  00121A  D7FE               	bra	u1297
  3674  00121C  2E09               	decfsz	??_ReadI2C^0,f,c
  3675  00121E  D7FC               	bra	u1297
  3676  001220  2E0A               	decfsz	(??_ReadI2C+1)^0,f,c
  3677  001222  D7FA               	bra	u1297
  3678  001224  0012               	return		;funcret
  3679  001226                     __end_of_ReadI2C:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _StopI2C *****************
  3683 ;; Defined at:
  3684 ;;		line 180 in file "newmain.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3698 ;;      Params:         0       0       0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0
  3701 ;;      Totals:         0       0       0       0       0       0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    1
  3705 ;; This function calls:
  3706 ;;		_ReadyI2C
  3707 ;; This function is called by:
  3708 ;;		_WriteI2C
  3709 ;;		_ReadI2C
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text20
  3714  001638                     __ptext20:
  3715                           	callstack 0
  3716  001638                     _StopI2C:
  3717                           	callstack 28
  3718  001638                     
  3719                           ;newmain.c: 181:     ReadyI2C();
  3720  001638  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3721  00163C                     
  3722                           ;newmain.c: 182:     PEN1 = 1;
  3723  00163C  84C5               	bsf	4037,2,c	;volatile
  3724  00163E  0012               	return		;funcret
  3725  001640                     __end_of_StopI2C:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _StartI2C *****************
  3729 ;; Defined at:
  3730 ;;		line 166 in file "newmain.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3744 ;;      Params:         0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    1
  3751 ;; This function calls:
  3752 ;;		_ReadyI2C
  3753 ;; This function is called by:
  3754 ;;		_WriteI2C
  3755 ;;		_ReadI2C
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text21
  3760  001640                     __ptext21:
  3761                           	callstack 0
  3762  001640                     _StartI2C:
  3763                           	callstack 28
  3764  001640                     
  3765                           ;newmain.c: 167:     ReadyI2C();
  3766  001640  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3767  001644                     
  3768                           ;newmain.c: 168:     SEN1 = 1;
  3769  001644  80C5               	bsf	4037,0,c	;volatile
  3770  001646  0012               	return		;funcret
  3771  001648                     __end_of_StartI2C:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function _SendI2C *****************
  3775 ;; Defined at:
  3776 ;;		line 175 in file "newmain.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  data            1    wreg     unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  data            1    1[COMRAM] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3790 ;;      Params:         0       0       0       0       0       0       0
  3791 ;;      Locals:         1       0       0       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0       0       0
  3793 ;;      Totals:         1       0       0       0       0       0       0
  3794 ;;Total ram usage:        1 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    1
  3797 ;; This function calls:
  3798 ;;		_ReadyI2C
  3799 ;; This function is called by:
  3800 ;;		_WriteI2C
  3801 ;;		_ReadI2C
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text22
  3806  00162C                     __ptext22:
  3807                           	callstack 0
  3808  00162C                     _SendI2C:
  3809                           	callstack 28
  3810                           
  3811                           ;incstack = 0
  3812                           ;SendI2C@data stored from wreg
  3813  00162C  6E02               	movwf	SendI2C@data^0,c
  3814  00162E                     
  3815                           ;newmain.c: 176:     ReadyI2C();
  3816  00162E  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3817  001632                     
  3818                           ;newmain.c: 177:     SSP1BUF = data;
  3819  001632  C002  FFC9         	movff	SendI2C@data,4041	;volatile
  3820  001636  0012               	return		;funcret
  3821  001638                     __end_of_SendI2C:
  3822                           	callstack 0
  3823                           
  3824 ;; *************** function _RepeatedStartI2C *****************
  3825 ;; Defined at:
  3826 ;;		line 204 in file "newmain.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3840 ;;      Params:         0       0       0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    1
  3847 ;; This function calls:
  3848 ;;		_ReadyI2C
  3849 ;; This function is called by:
  3850 ;;		_ReadI2C
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text23
  3855  001648                     __ptext23:
  3856                           	callstack 0
  3857  001648                     _RepeatedStartI2C:
  3858                           	callstack 28
  3859  001648                     
  3860                           ;newmain.c: 205:     ReadyI2C();
  3861  001648  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3862  00164C                     
  3863                           ;newmain.c: 206:     RSEN1 = 1;
  3864  00164C  82C5               	bsf	4037,1,c	;volatile
  3865  00164E  0012               	return		;funcret
  3866  001650                     __end_of_RepeatedStartI2C:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _ReceiveI2C *****************
  3870 ;; Defined at:
  3871 ;;		line 209 in file "newmain.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  flag            1    wreg     unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  flag            1    1[COMRAM] unsigned char 
  3876 ;;  buffer          1    2[COMRAM] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      unsigned char 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3886 ;;      Params:         0       0       0       0       0       0       0
  3887 ;;      Locals:         2       0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0
  3889 ;;      Totals:         2       0       0       0       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    1
  3893 ;; This function calls:
  3894 ;;		_ReadyI2C
  3895 ;; This function is called by:
  3896 ;;		_ReadI2C
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text24
  3901  00159C                     __ptext24:
  3902                           	callstack 0
  3903  00159C                     _ReceiveI2C:
  3904                           	callstack 28
  3905                           
  3906                           ;incstack = 0
  3907                           ;ReceiveI2C@flag stored from wreg
  3908  00159C  6E02               	movwf	ReceiveI2C@flag^0,c
  3909  00159E                     
  3910                           ;newmain.c: 210:     unsigned char buffer;;newmain.c: 211:     ReadyI2C();
  3911  00159E  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3912  0015A2                     
  3913                           ;newmain.c: 212:     RCEN1 = 1;
  3914  0015A2  86C5               	bsf	4037,3,c	;volatile
  3915                           
  3916                           ;newmain.c: 213:     ReadyI2C();
  3917  0015A4  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3918  0015A8                     
  3919                           ;newmain.c: 214:     buffer = SSPBUF;
  3920  0015A8  CFC9 F003          	movff	4041,ReceiveI2C@buffer	;volatile
  3921                           
  3922                           ;newmain.c: 215:     ReadyI2C();
  3923  0015AC  ECE5  F00A         	call	_ReadyI2C	;wreg free
  3924  0015B0                     
  3925                           ;newmain.c: 216:     ACKDT1 = flag==1? 1 : 0;
  3926  0015B0  0402               	decf	ReceiveI2C@flag^0,w,c
  3927  0015B2  B4D8               	btfsc	status,2,c
  3928  0015B4  EFDE  F00A         	goto	u1051
  3929  0015B8  EFE1  F00A         	goto	u1050
  3930  0015BC                     u1051:
  3931  0015BC  8AC5               	bsf	4037,5,c	;volatile
  3932  0015BE  EFE2  F00A         	goto	u1065
  3933  0015C2                     u1050:
  3934  0015C2  9AC5               	bcf	4037,5,c	;volatile
  3935  0015C4                     u1065:
  3936  0015C4                     
  3937                           ;newmain.c: 217:     ACKEN1 = 1;
  3938  0015C4  88C5               	bsf	4037,4,c	;volatile
  3939  0015C6                     
  3940                           ;newmain.c: 218:     return buffer;
  3941  0015C6  5003               	movf	ReceiveI2C@buffer^0,w,c
  3942  0015C8  0012               	return		;funcret
  3943  0015CA                     __end_of_ReceiveI2C:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _ReadyI2C *****************
  3947 ;; Defined at:
  3948 ;;		line 171 in file "newmain.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3962 ;;      Params:         0       0       0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0       0       0
  3964 ;;      Temps:          1       0       0       0       0       0       0
  3965 ;;      Totals:         1       0       0       0       0       0       0
  3966 ;;Total ram usage:        1 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_StartI2C
  3972 ;;		_SendI2C
  3973 ;;		_StopI2C
  3974 ;;		_RepeatedStartI2C
  3975 ;;		_ReceiveI2C
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text25
  3980  0015CA                     __ptext25:
  3981                           	callstack 0
  3982  0015CA                     _ReadyI2C:
  3983                           	callstack 28
  3984  0015CA                     l1644:
  3985  0015CA  CFC5 F001          	movff	4037,??_ReadyI2C	;volatile
  3986  0015CE  0E1F               	movlw	31
  3987  0015D0  1601               	andwf	??_ReadyI2C^0,f,c
  3988  0015D2  A4D8               	btfss	status,2,c
  3989  0015D4  EFEE  F00A         	goto	u991
  3990  0015D8  EFF0  F00A         	goto	u990
  3991  0015DC                     u991:
  3992  0015DC  EFE5  F00A         	goto	l1644
  3993  0015E0                     u990:
  3994  0015E0  B4C7               	btfsc	199,2,c	;volatile
  3995  0015E2  EFF5  F00A         	goto	u1001
  3996  0015E6  EFF7  F00A         	goto	u1000
  3997  0015EA                     u1001:
  3998  0015EA  EFE5  F00A         	goto	l1644
  3999  0015EE                     u1000:
  4000  0015EE  0012               	return		;funcret
  4001  0015F0                     __end_of_ReadyI2C:
  4002                           	callstack 0
  4003                           
  4004                           	psect	rparam
  4005  0000                     
  4006                           	psect	idloc
  4007                           
  4008                           ;Config register IDLOC0 @ 0x200000
  4009                           ;	unspecified, using default values
  4010  200000                     	org	2097152
  4011  200000  FF                 	db	255
  4012                           
  4013                           ;Config register IDLOC1 @ 0x200001
  4014                           ;	unspecified, using default values
  4015  200001                     	org	2097153
  4016  200001  FF                 	db	255
  4017                           
  4018                           ;Config register IDLOC2 @ 0x200002
  4019                           ;	unspecified, using default values
  4020  200002                     	org	2097154
  4021  200002  FF                 	db	255
  4022                           
  4023                           ;Config register IDLOC3 @ 0x200003
  4024                           ;	unspecified, using default values
  4025  200003                     	org	2097155
  4026  200003  FF                 	db	255
  4027                           
  4028                           ;Config register IDLOC4 @ 0x200004
  4029                           ;	unspecified, using default values
  4030  200004                     	org	2097156
  4031  200004  FF                 	db	255
  4032                           
  4033                           ;Config register IDLOC5 @ 0x200005
  4034                           ;	unspecified, using default values
  4035  200005                     	org	2097157
  4036  200005  FF                 	db	255
  4037                           
  4038                           ;Config register IDLOC6 @ 0x200006
  4039                           ;	unspecified, using default values
  4040  200006                     	org	2097158
  4041  200006  FF                 	db	255
  4042                           
  4043                           ;Config register IDLOC7 @ 0x200007
  4044                           ;	unspecified, using default values
  4045  200007                     	org	2097159
  4046  200007  FF                 	db	255
  4047                           
  4048                           	psect	config
  4049                           
  4050                           ; Padding undefined space
  4051  300000                     	org	3145728
  4052  300000  FF                 	db	255
  4053                           
  4054                           ;Config register CONFIG1H @ 0x300001
  4055                           ;	Oscillator Selection bits
  4056                           ;	FOSC = 0x0, user specified literal
  4057                           ;	4X PLL Enable
  4058                           ;	PLLCFG = 0x0, unprogrammed default
  4059                           ;	Primary clock enable bit
  4060                           ;	PRICLKEN = 0x1, unprogrammed default
  4061                           ;	Fail-Safe Clock Monitor Enable bit
  4062                           ;	FCMEN = 0x0, unprogrammed default
  4063                           ;	Internal/External Oscillator Switchover bit
  4064                           ;	IESO = 0x0, unprogrammed default
  4065  300001                     	org	3145729
  4066  300001  20                 	db	32
  4067                           
  4068                           ;Config register CONFIG2L @ 0x300002
  4069                           ;	unspecified, using default values
  4070                           ;	Power-up Timer Enable bit
  4071                           ;	PWRTEN = 0x1, unprogrammed default
  4072                           ;	Brown-out Reset Enable bits
  4073                           ;	BOREN = 0x3, unprogrammed default
  4074                           ;	Brown Out Reset Voltage bits
  4075                           ;	BORV = 0x3, unprogrammed default
  4076  300002                     	org	3145730
  4077  300002  1F                 	db	31
  4078                           
  4079                           ;Config register CONFIG2H @ 0x300003
  4080                           ;	Watchdog Timer Enable bits
  4081                           ;	WDTEN = 0x0, user specified literal
  4082                           ;	Watchdog Timer Postscale Select bits
  4083                           ;	WDTPS = 0xF, unprogrammed default
  4084  300003                     	org	3145731
  4085  300003  3C                 	db	60
  4086                           
  4087                           ; Padding undefined space
  4088  300004                     	org	3145732
  4089  300004  FF                 	db	255
  4090                           
  4091                           ;Config register CONFIG3H @ 0x300005
  4092                           ;	unspecified, using default values
  4093                           ;	CCP2 MUX bit
  4094                           ;	CCP2MX = 0x1, unprogrammed default
  4095                           ;	PORTB A/D Enable bit
  4096                           ;	PBADEN = 0x1, unprogrammed default
  4097                           ;	P3A/CCP3 Mux bit
  4098                           ;	CCP3MX = 0x1, unprogrammed default
  4099                           ;	HFINTOSC Fast Start-up
  4100                           ;	HFOFST = 0x1, unprogrammed default
  4101                           ;	Timer3 Clock input mux bit
  4102                           ;	T3CMX = 0x1, unprogrammed default
  4103                           ;	ECCP2 B output mux bit
  4104                           ;	P2BMX = 0x1, unprogrammed default
  4105                           ;	MCLR Pin Enable bit
  4106                           ;	MCLRE = 0x1, unprogrammed default
  4107  300005                     	org	3145733
  4108  300005  BF                 	db	191
  4109                           
  4110                           ;Config register CONFIG4L @ 0x300006
  4111                           ;	Stack Full/Underflow Reset Enable bit
  4112                           ;	STVREN = 0x1, unprogrammed default
  4113                           ;	Single-Supply ICSP Enable bit
  4114                           ;	LVP = OFF, Single-Supply ICSP disabled
  4115                           ;	Extended Instruction Set Enable bit
  4116                           ;	XINST = 0x0, unprogrammed default
  4117                           ;	Background Debug
  4118                           ;	DEBUG = 0x1, unprogrammed default
  4119  300006                     	org	3145734
  4120  300006  81                 	db	129
  4121                           
  4122                           ; Padding undefined space
  4123  300007                     	org	3145735
  4124  300007  FF                 	db	255
  4125                           
  4126                           ;Config register CONFIG5L @ 0x300008
  4127                           ;	unspecified, using default values
  4128                           ;	Code Protection Block 0
  4129                           ;	CP0 = 0x1, unprogrammed default
  4130                           ;	Code Protection Block 1
  4131                           ;	CP1 = 0x1, unprogrammed default
  4132                           ;	Code Protection Block 2
  4133                           ;	CP2 = 0x1, unprogrammed default
  4134                           ;	Code Protection Block 3
  4135                           ;	CP3 = 0x1, unprogrammed default
  4136  300008                     	org	3145736
  4137  300008  0F                 	db	15
  4138                           
  4139                           ;Config register CONFIG5H @ 0x300009
  4140                           ;	unspecified, using default values
  4141                           ;	Boot Block Code Protection bit
  4142                           ;	CPB = 0x1, unprogrammed default
  4143                           ;	Data EEPROM Code Protection bit
  4144                           ;	CPD = 0x1, unprogrammed default
  4145  300009                     	org	3145737
  4146  300009  C0                 	db	192
  4147                           
  4148                           ;Config register CONFIG6L @ 0x30000A
  4149                           ;	unspecified, using default values
  4150                           ;	Write Protection Block 0
  4151                           ;	WRT0 = 0x1, unprogrammed default
  4152                           ;	Write Protection Block 1
  4153                           ;	WRT1 = 0x1, unprogrammed default
  4154                           ;	Write Protection Block 2
  4155                           ;	WRT2 = 0x1, unprogrammed default
  4156                           ;	Write Protection Block 3
  4157                           ;	WRT3 = 0x1, unprogrammed default
  4158  30000A                     	org	3145738
  4159  30000A  0F                 	db	15
  4160                           
  4161                           ;Config register CONFIG6H @ 0x30000B
  4162                           ;	unspecified, using default values
  4163                           ;	Configuration Register Write Protection bit
  4164                           ;	WRTC = 0x1, unprogrammed default
  4165                           ;	Boot Block Write Protection bit
  4166                           ;	WRTB = 0x1, unprogrammed default
  4167                           ;	Data EEPROM Write Protection bit
  4168                           ;	WRTD = 0x1, unprogrammed default
  4169  30000B                     	org	3145739
  4170  30000B  E0                 	db	224
  4171                           
  4172                           ;Config register CONFIG7L @ 0x30000C
  4173                           ;	unspecified, using default values
  4174                           ;	Table Read Protection Block 0
  4175                           ;	EBTR0 = 0x1, unprogrammed default
  4176                           ;	Table Read Protection Block 1
  4177                           ;	EBTR1 = 0x1, unprogrammed default
  4178                           ;	Table Read Protection Block 2
  4179                           ;	EBTR2 = 0x1, unprogrammed default
  4180                           ;	Table Read Protection Block 3
  4181                           ;	EBTR3 = 0x1, unprogrammed default
  4182  30000C                     	org	3145740
  4183  30000C  0F                 	db	15
  4184                           
  4185                           ;Config register CONFIG7H @ 0x30000D
  4186                           ;	unspecified, using default values
  4187                           ;	Boot Block Table Read Protection bit
  4188                           ;	EBTRB = 0x1, unprogrammed default
  4189  30000D                     	org	3145741
  4190  30000D  40                 	db	64
  4191                           tosu	equ	0xFFF
  4192                           tosh	equ	0xFFE
  4193                           tosl	equ	0xFFD
  4194                           stkptr	equ	0xFFC
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           pcl	equ	0xFF9
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           indf0	equ	0xFEF
  4205                           postinc0	equ	0xFEE
  4206                           postdec0	equ	0xFED
  4207                           preinc0	equ	0xFEC
  4208                           plusw0	equ	0xFEB
  4209                           fsr0h	equ	0xFEA
  4210                           fsr0l	equ	0xFE9
  4211                           wreg	equ	0xFE8
  4212                           indf1	equ	0xFE7
  4213                           postinc1	equ	0xFE6
  4214                           postdec1	equ	0xFE5
  4215                           preinc1	equ	0xFE4
  4216                           plusw1	equ	0xFE3
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           bsr	equ	0xFE0
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           preinc2	equ	0xFDC
  4224                           plusw2	equ	0xFDB
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        67
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     20     148
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), text9(BANK0[5]), text8(BANK0[5]), text7(BANK0[5]), 
		 -> text6(BANK0[5]), text5(BANK0[5]), text4(BANK0[5]), text3(BANK0[5]), 
		 -> dma(BANK0[20]), smh(BANK0[20]), text2(BANK0[5]), text1(BANK0[5]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), text9(BANK0[5]), text8(BANK0[5]), text7(BANK0[5]), 
		 -> text6(BANK0[5]), text5(BANK0[5]), text4(BANK0[5]), text3(BANK0[5]), 
		 -> dma(BANK0[20]), smh(BANK0[20]), text2(BANK0[5]), text1(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S685_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    ReadI2C@Data	PTR unsigned char  size(2) Largest target is 4
		 -> DatosCalendario(BANK0[4]), DatosHora(BANK0[3]), 

    WriteI2C@Data	PTR unsigned char  size(2) Largest target is 4
		 -> calendario(BANK0[4]), hora(BANK0[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _settings->_SettingsLCD
    _SettingsLCD->_LCD
    _WriteLCD->_LCD
    _WriteI2C->_SendI2C
    _ReadI2C->_ReceiveI2C
    _StopI2C->_ReadyI2C
    _StartI2C->_ReadyI2C
    _SendI2C->_ReadyI2C
    _RepeatedStartI2C->_ReadyI2C
    _ReceiveI2C->_ReadyI2C

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10078
                                             93 COMRAM     2     2      0
                            _ReadI2C
                        _SettingsLCD
                           _WriteI2C
                           _WriteLCD
                           _settings
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    7623
                                              0 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6968
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    6613
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5175
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2    1078
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0      44
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0      44
                                              1 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (1) _WriteLCD                                             1     1      0      44
                                              1 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteI2C                                             8     3      5     567
                                              2 COMRAM     8     3      5
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (1) _ReadI2C                                              8     3      5     678
                                              3 COMRAM     8     3      5
                         _ReceiveI2C
                   _RepeatedStartI2C
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (2) _StopI2C                                              0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _StartI2C                                             0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _SendI2C                                              1     1      0      22
                                              1 COMRAM     1     1      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _RepeatedStartI2C                                     0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _ReceiveI2C                                           2     2      0      45
                                              1 COMRAM     2     2      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _ReadyI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadI2C
     _ReceiveI2C
       _ReadyI2C
     _RepeatedStartI2C
       _ReadyI2C
     _SendI2C
       _ReadyI2C
     _StartI2C
       _ReadyI2C
     _StopI2C
       _ReadyI2C
   _SettingsLCD
     _LCD
   _WriteI2C
     _SendI2C
       _ReadyI2C
     _StartI2C
       _ReadyI2C
     _StopI2C
       _ReadyI2C
   _WriteLCD
     _LCD
   _settings
     _SettingsLCD
       _LCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      34       6       20.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     14      94       4       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127       9        0.0%
DATA                 0      0     127      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 23 17:17:51 2021

                        _i 00AF                          _k 00AB                          _z 00AD  
              ReadI2C@Data 0005                        l212 15C8                        l221 1612  
                      l206 1224                        l215 161E                        l209 164E  
                      l218 162A                        l183 1296                        l192 15EE  
                      l177 13EE                        l186 1646                        l195 1636  
                      l198 163E                        l902 13A8                        l933 10EE  
                      l943 0B6C                        l936 1130                        l952 0C0A  
                      l945 0B74                        l938 116C                        l981 12F0  
                      l966 0DA8                        l982 12F8                        l991 1564  
                      l975 0FDC                        l968 0E0C                        l985 14F4  
                      _LCD 15F0                        u700 1528                        u630 0FF0  
                      u710 10B8                        u631 0FEC                        u711 10B4  
                      u640 1002                        u720 10DA                        u800 132C  
                      u641 0FFE                        u721 10D6                        u650 102A  
                      u730 1130                        u810 1342                        u651 1026  
                      u731 112C                        u811 133E                        u660 1060  
                      u740 1140                        u900 0C86                        u820 0B44  
                      u661 105C                        u741 113C                        u821 0B40  
                      u750 155E                        u670 158E                        u910 0C9C  
                      u830 0B60                        u751 1558                        u671 158A  
                      u911 0C98                        u831 0B5C                        u760 1560  
                      u680 1432                        u920 0D04                        u840 0B8A  
                      u681 142E                        u841 0B86                        u770 14EE  
                      u690 1526                        u930 0D46                        u850 0BEE  
                      u771 14E8                        u691 1520                        u931 0D42  
                      u851 0BEA                        u780 14F0                        u940 0D64  
                      u860 0C38                        u941 0D60                        u925 0CF2  
                      u861 0C32                        u790 132A                        u950 0D7E  
                      u870 0C3A                        u791 1324                        u951 0D7A  
                      u960 0D98                        u880 0C50                        u961 0D94  
                      u881 0C4C                        u970 0DA8                        u890 0C84  
                      u971 0DA4                        u891 0C7E                        u980 0DB8  
                      u981 0DB4                        u990 15E0                        u991 15DC  
                      _dma 00B1                        _pad 10A8                        _smh 00C5  
                      wreg 000FE8               ReadI2C@bytes 0007                       ?_LCD 0001  
                     l1006 10A6                       l1014 1432                       l1023 159A  
                     l1017 1650                       l1033 1356                       l1028 134E  
                     l1039 152C                       l1500 0FDE                       l1510 1060  
                     l1502 0FF0                       l1504 1002                       l1520 158E  
                     l1600 0BFE                       l1506 100C                       l1530 1412  
                     l1514 1566                       l1610 0C8A                       l1508 102A  
                     l1524 13F0                       l1516 1572                       l1540 10CC  
                     l1532 14F6                       l1620 0CCC                       l1612 0C9C  
                     l1604 0C3E                       l1700 0FCA                       l1710 1640  
                     l1526 13FC                       l1518 1576                       l1550 1112  
                     l1542 10DA                       l1630 0D98                       l1606 0C50  
                     l1614 0CB0                       l1622 0D2A                       l1712 1644  
                     l1720 163C                       l1800 1624                       l1528 140E  
                     l1552 1140                       l1544 10E6                       l1536 10A8  
                     l1632 0DB8                       l1624 0D46                       l1616 0CC0  
                     l1642 15CA                       l1730 15A8                       l1722 1648  
                     l1714 162E                       l1650 15F4                       l1706 1616  
                     l1562 14BA                       l1554 1154                       l1546 10FA  
                     l1538 10B8                       l1570 1330                       l1634 0DBE  
                     l1626 0D64                       l1618 0CC6                       l1810 1396  
                     l1802 1358                       l1644 15CA                       l1732 15B0  
                     l1724 164C                       l1716 1632                       l1652 15FC  
                     l1708 1618                       l1548 110E                       l1572 1342  
                     l1636 0DCE                       l1628 0D7E                       l1580 0B46  
                     l1660 0E0E                       l1740 1298                       l1804 136A  
                     l1900 0928                       l1820 0654                       l1646 15E0  
                     l1734 15C4                       l1726 159E                       l1718 1638  
                     l1654 1600                       l1750 13B2                       l1558 152E  
                     l1566 12FA                       l1638 0DE4                       l1590 0BBA  
                     l1582 0B60                       l1670 0E7A                       l1662 0E32  
                     l1742 12A0                       l1806 1372                       l1910 097A  
                     l1902 092E                       l1830 06A0                       l1822 066E  
                     l1814 061C                       l1736 15C6                       l1728 15A2  
                     l1656 1608                       l1648 15F2                       l1760 13E8  
                     l1752 13B4                       l1592 0BC4                       l1584 0B8A  
                     l1576 0B34                       l1672 0E9E                       l1664 0E40  
                     l1744 12AE                       l1808 137A                       l1920 09EE  
                     l1912 09A2                       l1904 0956                       l1840 06FE  
                     l1832 06B2                       l1824 067E                       l1816 0620  
                     l1770 1258                       l1762 1228                       l1658 160A  
                     l1754 13D6                       l1594 0BCA                       l1586 0B92  
                     l1578 0B44                       l1674 0EB4                       l1682 0F3A  
                     l1666 0E52                       l1746 12D4                       l1930 0A46  
                     l1922 09FA                       l1914 09AE                       l1906 0962  
                     l1850 075C                       l1842 0704                       l1834 06B8  
                     l1826 0684                       l1818 063A                       l1780 118C  
                     l1772 125E                       l1764 1238                       l1756 13DC  
                     l1748 13AA                       l1596 0BD2                       l1588 0BB2  
                     l1684 0F5E                       l1692 0F8C                       l1676 0EC2  
                     l1668 0E56                       l1940 0AA4                       l1932 0A58  
                     l1924 0A0C                       l1916 09C0                       l1908 0974  
                     l1860 07B0                       l1852 076A                       l1844 0728  
                     l1828 0694                       l1836 06E0                       l1790 11E6  
                     l1782 119A                       l1774 127C                       l1766 1246  
                     l1758 13E2                       l1598 0BEE                       l1694 0F9A  
                     l1686 0F6C                       l1678 0EFE                       l1942 0AAA  
                     l1934 0A5E                       l1926 0A12                       l1918 09C6  
                     l1870 0804                       l1862 07B8                       l1854 077C  
                     l1846 072E                       l1838 06EC                       l1784 11BE  
                     l1792 11EC                       l1776 1280                       l1768 1254  
                     l1688 0F80                       l1936 0A86                       l1928 0A3A  
                     l1880 087E                       l1864 07DE                       l1872 0828  
                     l1856 0782                       l1848 0736                       l1794 120A  
                     l1786 11D2                       l1778 1170                       l1698 0FA6  
                     l1938 0A92                       l1890 08CA                       l1946 0AD2  
                     l1882 0890                       l1874 0842                       l1866 07EC  
                     l1858 07AA                       l1796 120E                       l1788 11E2  
                     l1972 0AF2                       l1892 08DC                       l1884 0896  
                     l1876 0848                       l1868 07FE                       l1798 1622  
                     l1894 08E2                       l1878 0870                       ?_pad 0011  
                     l1896 090A                       l1888 08BE                       l1898 0916  
                     STR_1 060E                       STR_2 060E                       STR_3 0601  
                     u1000 15EE                       u1001 15EA                       u1010 0E32  
                     u1011 0E2E                       u1100 120A                       u1020 0E7A  
                     u1101 1206                       u1021 0E76                       u1030 0E9E  
                     u1110 067E                       u1031 0E9A                       u1111 067A  
                     u1040 0F5E                       u1200 099E                       u1120 0694  
                     u1041 0F5A                       u1201 099A                       u1121 0690  
                     u1050 15C2                       u1210 09EA                       u1130 06DC  
                     u1051 15BC                       u1211 09E6                       u1131 06D8  
                     u1220 0A36                       u1140 0728                       u1221 0A32  
                     u1141 0724                       u1070 12F0                       u1230 0A82  
                     u1150 07A6                       u1071 12EC                       u1231 0A7E  
                     u1151 07A2                       u1080 127C                       u1240 0ACE  
                     u1160 0828                       u1065 15C4                       u1081 1278  
                     u1241 0ACA                       u1161 0824                       u1090 11BE  
                     u1170 08BA                       u1091 11BA                       u1171 08B6  
                     u1180 0906                       u1181 0902                       u1190 0952  
                     u1191 094E                       _LATD 000F8C                       u1257 15F6  
                     _LATE 000F8D                       u1267 1602                       u1277 160C  
                     u1287 128A                       u1297 1218                       _PEN1 007E2A  
                     _SEN1 007E28                       _dbuf 0114                       _days 0060  
                     _main 061C                       _name 0067                       _hora 00A0  
                     _prec 00A7                       _nout 00A3                       pad@i 0018  
                     pad@p 0015                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9                       _xtoa 0B34                       start 0000  
              _toupper$848 000D               ___param_bank 000000            __end_of_ReadI2C 1226  
                    ??_LCD 0001            __end_of_SendI2C 1638                      ??_pad 0017  
          __end_of_StopI2C 1640                 _Clock_type 006E                      ?_main 0001  
                    ?_xtoa 001C                      _AM_PM 006D                      _RCEN1 007E2B  
             vfpfcnvrt@fmt 0045                      _RSEN1 007E29               vfpfcnvrt@llu 004D  
                    _TRISD 000F95                      _TRISE 000F96             ReadI2C@Address 000B  
                    _flags 00A9                      _fputc 0FDE            __end_of_isalpha 14F6  
                    _fputs 13F0                      _text1 0097                      _text2 0092  
                    _text3 008D                      _text4 0088                      _text5 0083  
                    _text6 007E                      _text7 0079                      _text8 0074  
                    _text9 006F                      pad@fp 0011                      _width 00A5  
                    _putch 1650            __end_of_islower 152E            __end_of_isupper 1566  
                    tablat 000FF5                      status 000FD8            __end_of_sprintf 13AA  
                    xtoa@c 0041                      xtoa@d 001E                      xtoa@i 003F  
                    xtoa@n 0037                      xtoa@p 0033                      xtoa@w 0035  
                    xtoa@x 0026            __end_of_toupper 1358          ?_RepeatedStartI2C 0001  
          __initialization 1478               __end_of_main 0B34         ??_RepeatedStartI2C 0002  
             __end_of_xtoa 0E0E           __end_of_ReadyI2C 15F0                     ??_main 005E  
               _ReceiveI2C 159C                     ??_xtoa 0027              __activetblptr 000002  
              SendI2C@data 0002           __end_of_StartI2C 1648                     _ADCON1 000FC1  
                   _ACKEN1 007E2C                     _ACKDT1 007E2D                     ?_fputc 0001  
                   ?_fputs 000A           __end_of_WriteI2C 1298                     ?_putch 0001  
         __end_of_WriteLCD 162C                     _OSCCON 000FD3                     _SSPBUF 000FC9  
                ??_ReadI2C 0009                  ??_SendI2C 0002               vfprintf@cfmt 005C  
                ??_StopI2C 0002                     _buffer 0100                     clear_0 149E  
                   clear_1 14AA                     pad@buf 0013               WriteI2C@Data 0004  
                   _strlen 1566                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isalpha 0003  
          ReadI2C@Register 0004                  ??_islower 0003               __mediumconst 0000  
            ??_SettingsLCD 0002           __end_of_settings 13F0                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                   putch@c 0001           __end_of_vfprintf 12FA                  ??_sprintf 005E  
                   xtoa@fp 001C                  ??_toupper 0009                 __accesstop 0060  
  __end_of__initialization 14B0               WriteLCD@word 0002              ___rparam_used 000001  
           __pcstackCOMRAM 0001               __pidataBANK0 1434              __end_of_fputc 10A8  
            __end_of_fputs 1434              __end_of_putch 1652                ?_ReceiveI2C 0001  
               _calendario 009C                    ??_fputc 0005                    ??_fputs 000E  
                  ??_putch 0001                    LCD@data 0001                 __pbssBANK0 00A3  
               __pbssBANK1 0100        __end_of_SettingsLCD 1620                  ?_ReadyI2C 0001  
                ?_StartI2C 0001                  ?_WriteI2C 0003                  ?_WriteLCD 0001  
                  ?_strlen 0001         __size_of_vfpfcnvrt 01D0                    _SSP1ADD 000FC8  
                  _SSP1BUF 000FC9                 ??_ReadyI2C 0001                    _ReadI2C 116E  
      __size_of_ReceiveI2C 002E                    _SendI2C 162C                    __Hparam 0000  
                  __Lparam 0000                    _StopI2C 1638                  ?_settings 0001  
               ??_StartI2C 0002                  ?_vfprintf 0056               __psmallconst 0600  
                  __pcinit 1478                 ??_WriteI2C 0008                 ??_WriteLCD 0002  
                  __ramtop 0600                    __ptext0 061C                    __ptext1 1358  
                  __ptext2 1298                    __ptext3 0E0E                    __ptext4 0B34  
                  __ptext5 12FA                    __ptext6 14F6                    __ptext7 10A8  
                  __ptext8 1566                    __ptext9 13F0               __size_of_LCD 0024  
          __size_of_strlen 0036               __size_of_pad 00C6                    _isalpha 14BA  
__size_of_RepeatedStartI2C 0008                    _islower 14F6                    _isupper 152E  
              _SettingsLCD 1614                    _sprintf 1358                    _toupper 12FA  
     end_of_initialization 14B0              WriteI2C@bytes 0006                    fputc@fp 0003  
            __Lmediumconst 0000                    fputs@fp 000C          __end_of_vfpfcnvrt 0FDE  
                  postdec1 000FE5                    postdec2 000FDD                 ??_settings 0003  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 005C                    strlen@a 0003                    strlen@s 0001  
                _TRISCbits 000F94             ReceiveI2C@flag 0002                  _DatosHora 00DD  
         WriteI2C@Register 0003                vfpfcnvrt@ap 0047                vfpfcnvrt@fp 0043  
             ??_ReceiveI2C 0002             __end_of_strlen 159C        start_initialization 1478  
              __end_of_LCD 1614                __end_of_pad 116E          __size_of_ReadyI2C 0026  
       __end_of_ReceiveI2C 15CA                vfprintf@fmt 0058                __pdataBANK0 0060  
        __size_of_StartI2C 0008                   ??_strlen 0003          __size_of_WriteI2C 0072  
        __size_of_WriteLCD 000C           _RepeatedStartI2C 1648              __pcstackBANK0 00E0  
                 ?_ReadI2C 0004                   ?_SendI2C 0001                   ?_StopI2C 0001  
        __size_of_settings 0046          __size_of_vfprintf 0062                __smallconst 0600  
                 ?_isalpha 0001                   ?_islower 0001                   ?_isupper 0001  
             ?_SettingsLCD 0001                   ?_sprintf 00E0             __size_of_fputc 00CA  
           __size_of_fputs 0044                   ?_toupper 0007             __size_of_putch 0002  
                 _LATEbits 000F8D                   _SSP1CON1 000FC6                   _SSP1CON2 000FC5  
                 _SSP1STAT 000FC7                  _vfpfcnvrt 0E0E            WriteI2C@Address 000A  
               vfpfcnvrt@c 0055                  copy_data0 148C                   _ReadyI2C 15CA  
         __size_of_ReadI2C 00B8                   __Hrparam 0000           __size_of_SendI2C 000C  
               vfprintf@ap 005A                   __Lrparam 0000                 vfprintf@fp 0056  
                 _StartI2C 1640           __size_of_StopI2C 0008                 ?_vfpfcnvrt 0043  
                 _WriteI2C 1226                   _WriteLCD 1620                 sprintf@fmt 00E2  
         __size_of_isalpha 003C           __size_of_islower 0038                   __ptext10 0FDE  
                 __ptext11 1650                   __ptext20 1638                   __ptext12 152E  
                 __ptext21 1640                   __ptext13 14BA                   __ptext22 162C  
                 __ptext14 13AA                   __ptext23 1648                   __ptext15 1614  
                 __ptext24 159C                   __ptext16 1620                   __ptext25 15CA  
                 __ptext17 15F0                   __ptext18 1226                   __ptext19 116E  
         __size_of_isupper 0038           __size_of_sprintf 0052           __size_of_toupper 005E  
            __size_of_main 0518              __size_of_xtoa 02DA   __end_of_RepeatedStartI2C 1650  
                 _settings 13AA                   _xtoa$765 002F                   _xtoa$766 0031  
                 _vfprintf 1298                   isalpha@c 0001       __size_of_SettingsLCD 000C  
                sprintf@ap 00EC                   islower@c 0001                   isupper@c 0001  
              ??_vfpfcnvrt 0049                   sprintf@f 00EE                   sprintf@s 00E0  
                 toupper@c 0007            SettingsLCD@word 0002            _DatosCalendario 00D9  
         ReceiveI2C@buffer 0003  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 23 16:50:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataBANK0
    80  001634                     __pidataBANK0:
    81                           	callstack 0
    82                           
    83                           ;initializer for _days
    84  001634  53                 	db	83
    85  001635  4D                 	db	77
    86  001636  54                 	db	84
    87  001637  57                 	db	87
    88  001638  74                 	db	116
    89  001639  46                 	db	70
    90  00163A  73                 	db	115
    91                           
    92                           ;initializer for _name
    93  00163B  44                 	db	68
    94  00163C  61                 	db	97
    95  00163D  6E                 	db	110
    96  00163E  69                 	db	105
    97  00163F  65                 	db	101
    98  001640  6C                 	db	108
    99                           
   100                           ;initializer for _AM_PM
   101  001641  05                 	db	5
   102                           
   103                           ;initializer for _Clock_type
   104  001642  06                 	db	6
   105                           
   106                           ;initializer for _text9
   107  001643  53                 	db	83
   108  001644  61                 	db	97
   109  001645  74                 	db	116
   110  001646  00                 	db	0
   111  001647  00                 	db	0
   112                           
   113                           ;initializer for _text8
   114  001648  46                 	db	70
   115  001649  72                 	db	114
   116  00164A  69                 	db	105
   117  00164B  00                 	db	0
   118  00164C  00                 	db	0
   119                           
   120                           ;initializer for _text7
   121  00164D  54                 	db	84
   122  00164E  68                 	db	104
   123  00164F  75                 	db	117
   124  001650  00                 	db	0
   125  001651  00                 	db	0
   126                           
   127                           ;initializer for _text6
   128  001652  57                 	db	87
   129  001653  65                 	db	101
   130  001654  64                 	db	100
   131  001655  00                 	db	0
   132  001656  00                 	db	0
   133                           
   134                           ;initializer for _text5
   135  001657  54                 	db	84
   136  001658  75                 	db	117
   137  001659  65                 	db	101
   138  00165A  00                 	db	0
   139  00165B  00                 	db	0
   140                           
   141                           ;initializer for _text4
   142  00165C  4D                 	db	77
   143  00165D  6F                 	db	111
   144  00165E  6E                 	db	110
   145  00165F  00                 	db	0
   146  001660  00                 	db	0
   147                           
   148                           ;initializer for _text3
   149  001661  53                 	db	83
   150  001662  75                 	db	117
   151  001663  6E                 	db	110
   152  001664  00                 	db	0
   153  001665  00                 	db	0
   154                           
   155                           ;initializer for _text2
   156  001666  41                 	db	65
   157  001667  4D                 	db	77
   158  001668  00                 	db	0
   159  001669  00                 	db	0
   160  00166A  00                 	db	0
   161                           
   162                           ;initializer for _text1
   163  00166B  50                 	db	80
   164  00166C  4D                 	db	77
   165  00166D  00                 	db	0
   166  00166E  00                 	db	0
   167  00166F  00                 	db	0
   168                           
   169                           ;initializer for _calendario
   170  001670  01                 	db	1
   171  001671  20                 	db	32
   172  001672  02                 	db	2
   173  001673  17                 	db	23
   174                           
   175                           ;initializer for _hora
   176  001674  50                 	db	80
   177  001675  59                 	db	89
   178  001676  71                 	db	113
   179  0000                     _LATEbits	set	3981
   180  0000                     _SSPBUF	set	4041
   181  0000                     _LATE	set	3981
   182  0000                     _TRISE	set	3990
   183  0000                     _LATD	set	3980
   184  0000                     _TRISD	set	3989
   185  0000                     _SSPADD	set	4040
   186  0000                     _SSPCON2	set	4037
   187  0000                     _SSPCON1	set	4038
   188  0000                     _SSPSTAT	set	4039
   189  0000                     _TRISBbits	set	3987
   190  0000                     _ADCON1	set	4033
   191  0000                     _OSCCON	set	4051
   192  0000                     _ACKEN	set	32300
   193  0000                     _ACKDT	set	32301
   194  0000                     _RCEN	set	32299
   195  0000                     _RSEN	set	32297
   196  0000                     _PEN	set	32298
   197  0000                     _SEN	set	32296
   198                           
   199                           	psect	smallconst
   200  000800                     __psmallconst:
   201                           	callstack 0
   202  000800  00                 	db	0
   203  000801                     STR_3:
   204  000801  43                 	db	67	;'C'
   205  000802  61                 	db	97	;'a'
   206  000803  6C                 	db	108	;'l'
   207  000804  3A                 	db	58	;':'
   208  000805  25                 	db	37
   209  000806  78                 	db	120	;'x'
   210  000807  2F                 	db	47
   211  000808  25                 	db	37
   212  000809  78                 	db	120	;'x'
   213  00080A  2F                 	db	47
   214  00080B  25                 	db	37
   215  00080C  78                 	db	120	;'x'
   216  00080D  00                 	db	0
   217  00080E                     STR_1:
   218  00080E  48                 	db	72	;'H'
   219  00080F  6F                 	db	111	;'o'
   220  000810  72                 	db	114	;'r'
   221  000811  3A                 	db	58	;':'
   222  000812  25                 	db	37
   223  000813  78                 	db	120	;'x'
   224  000814  3A                 	db	58	;':'
   225  000815  25                 	db	37
   226  000816  78                 	db	120	;'x'
   227  000817  3A                 	db	58	;':'
   228  000818  25                 	db	37
   229  000819  78                 	db	120	;'x'
   230  00081A  00                 	db	0
   231  00081B  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           ; #config settings
   234                           
   235                           	psect	cinit
   236  001678                     __pcinit:
   237                           	callstack 0
   238  001678                     start_initialization:
   239                           	callstack 0
   240  001678                     __initialization:
   241                           	callstack 0
   242                           
   243                           ; Initialize objects allocated to BANK0 (67 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  001678  0E34               	movlw	low __pidataBANK0
   246  00167A  6EF6               	movwf	tblptrl,c
   247  00167C  0E16               	movlw	high __pidataBANK0
   248  00167E  6EF7               	movwf	tblptrh,c
   249  001680  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  001682  6EF8               	movwf	tblptru,c
   251  001684  EE00  F060         	lfsr	0,__pdataBANK0
   252  001688  EE10 F043          	lfsr	1,67
   253  00168C                     copy_data0:
   254  00168C  0009               	tblrd		*+
   255  00168E  CFF5 FFEE          	movff	tablat,postinc0
   256  001692  50E5               	movf	postdec1,w,c
   257  001694  50E1               	movf	fsr1l,w,c
   258  001696  E1FA               	bnz	copy_data0
   259                           
   260                           ; Clear objects allocated to BANK1 (52 bytes)
   261  001698  EE01  F000         	lfsr	0,__pbssBANK1
   262  00169C  0E34               	movlw	52
   263  00169E                     clear_0:
   264  00169E  6AEE               	clrf	postinc0,c
   265  0016A0  06E8               	decf	wreg,f,c
   266  0016A2  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (61 bytes)
   269  0016A4  EE00  F0A3         	lfsr	0,__pbssBANK0
   270  0016A8  0E3D               	movlw	61
   271  0016AA                     clear_1:
   272  0016AA  6AEE               	clrf	postinc0,c
   273  0016AC  06E8               	decf	wreg,f,c
   274  0016AE  E1FD               	bnz	clear_1
   275  0016B0                     end_of_initialization:
   276                           	callstack 0
   277  0016B0                     __end_of__initialization:
   278                           	callstack 0
   279  0016B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  0016B2  6EF8               	movwf	tblptru,c
   281  0016B4  0100               	movlb	0
   282  0016B6  EF0E  F004         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssBANK0
   285  0000A3                     __pbssBANK0:
   286                           	callstack 0
   287  0000A3                     _nout:
   288                           	callstack 0
   289  0000A3                     	ds	2
   290  0000A5                     _width:
   291                           	callstack 0
   292  0000A5                     	ds	2
   293  0000A7                     _prec:
   294                           	callstack 0
   295  0000A7                     	ds	2
   296  0000A9                     _flags:
   297                           	callstack 0
   298  0000A9                     	ds	2
   299  0000AB                     _k:
   300                           	callstack 0
   301  0000AB                     	ds	2
   302  0000AD                     _z:
   303                           	callstack 0
   304  0000AD                     	ds	2
   305  0000AF                     _i:
   306                           	callstack 0
   307  0000AF                     	ds	2
   308  0000B1                     _dma:
   309                           	callstack 0
   310  0000B1                     	ds	20
   311  0000C5                     _smh:
   312                           	callstack 0
   313  0000C5                     	ds	20
   314  0000D9                     _DatosCalendario:
   315                           	callstack 0
   316  0000D9                     	ds	4
   317  0000DD                     _DatosHora:
   318                           	callstack 0
   319  0000DD                     	ds	3
   320                           
   321                           	psect	dataBANK0
   322  000060                     __pdataBANK0:
   323                           	callstack 0
   324  000060                     _days:
   325                           	callstack 0
   326  000060                     	ds	7
   327  000067                     _name:
   328                           	callstack 0
   329  000067                     	ds	6
   330  00006D                     _AM_PM:
   331                           	callstack 0
   332  00006D                     	ds	1
   333  00006E                     _Clock_type:
   334                           	callstack 0
   335  00006E                     	ds	1
   336  00006F                     _text9:
   337                           	callstack 0
   338  00006F                     	ds	5
   339  000074                     _text8:
   340                           	callstack 0
   341  000074                     	ds	5
   342  000079                     _text7:
   343                           	callstack 0
   344  000079                     	ds	5
   345  00007E                     _text6:
   346                           	callstack 0
   347  00007E                     	ds	5
   348  000083                     _text5:
   349                           	callstack 0
   350  000083                     	ds	5
   351  000088                     _text4:
   352                           	callstack 0
   353  000088                     	ds	5
   354  00008D                     _text3:
   355                           	callstack 0
   356  00008D                     	ds	5
   357  000092                     _text2:
   358                           	callstack 0
   359  000092                     	ds	5
   360  000097                     _text1:
   361                           	callstack 0
   362  000097                     	ds	5
   363  00009C                     _calendario:
   364                           	callstack 0
   365  00009C                     	ds	4
   366  0000A0                     _hora:
   367                           	callstack 0
   368  0000A0                     	ds	3
   369                           
   370                           	psect	bssBANK1
   371  000100                     __pbssBANK1:
   372                           	callstack 0
   373  000100                     _buffer:
   374                           	callstack 0
   375  000100                     	ds	20
   376  000114                     _dbuf:
   377                           	callstack 0
   378  000114                     	ds	32
   379                           
   380                           	psect	cstackBANK0
   381  0000E0                     __pcstackBANK0:
   382                           	callstack 0
   383  0000E0                     ?_sprintf:
   384                           	callstack 0
   385  0000E0                     sprintf@s:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x0
   389  0000E0                     	ds	2
   390  0000E2                     sprintf@fmt:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x2
   394  0000E2                     	ds	10
   395  0000EC                     sprintf@ap:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0xC
   399  0000EC                     	ds	2
   400  0000EE                     sprintf@f:
   401                           	callstack 0
   402                           
   403                           ; 6 bytes @ 0xE
   404  0000EE                     	ds	6
   405                           
   406                           	psect	cstackCOMRAM
   407  000001                     __pcstackCOMRAM:
   408                           	callstack 0
   409  000001                     ??_ReadyI2C:
   410  000001                     ?_strlen:
   411                           	callstack 0
   412  000001                     ?_isupper:
   413                           	callstack 0
   414  000001                     ?_isalpha:
   415                           	callstack 0
   416  000001                     ?_islower:
   417                           	callstack 0
   418  000001                     LCD@data:
   419                           	callstack 0
   420  000001                     isalpha@c:
   421                           	callstack 0
   422  000001                     isupper@c:
   423                           	callstack 0
   424  000001                     fputc@c:
   425                           	callstack 0
   426  000001                     strlen@s:
   427                           	callstack 0
   428  000001                     islower@c:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x0
   432  000001                     	ds	1
   433  000002                     SendI2C@data:
   434                           	callstack 0
   435  000002                     ReceiveI2C@flag:
   436                           	callstack 0
   437  000002                     SettingsLCD@word:
   438                           	callstack 0
   439  000002                     WriteLCD@word:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     ??_isupper:
   445  000003                     ??_isalpha:
   446  000003                     ??_islower:
   447  000003                     WriteI2C@Register:
   448                           	callstack 0
   449  000003                     ReceiveI2C@buffer:
   450                           	callstack 0
   451  000003                     fputc@fp:
   452                           	callstack 0
   453  000003                     strlen@a:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  000003                     	ds	1
   458  000004                     ReadI2C@Register:
   459                           	callstack 0
   460  000004                     WriteI2C@Data:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x3
   464  000004                     	ds	1
   465  000005                     ??_fputc:
   466  000005                     ReadI2C@Data:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x4
   470  000005                     	ds	1
   471  000006                     WriteI2C@bytes:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x5
   475  000006                     	ds	1
   476  000007                     ?_toupper:
   477                           	callstack 0
   478  000007                     ReadI2C@bytes:
   479                           	callstack 0
   480  000007                     toupper@c:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x6
   484  000007                     	ds	1
   485  000008                     ??_WriteI2C:
   486                           
   487                           ; 1 bytes @ 0x7
   488  000008                     	ds	1
   489  000009                     ??_ReadI2C:
   490  000009                     ??_toupper:
   491                           
   492                           ; 1 bytes @ 0x8
   493  000009                     	ds	1
   494  00000A                     WriteI2C@Address:
   495                           	callstack 0
   496  00000A                     fputs@s:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x9
   500  00000A                     	ds	1
   501  00000B                     ReadI2C@Address:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xA
   505  00000B                     	ds	1
   506  00000C                     fputs@fp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xB
   510  00000C                     	ds	1
   511  00000D                     _toupper$847:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xC
   515  00000D                     	ds	1
   516  00000E                     fputs@c:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xD
   520  00000E                     	ds	1
   521  00000F                     fputs@i:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xE
   525  00000F                     	ds	2
   526  000011                     ?_pad:
   527                           	callstack 0
   528  000011                     pad@fp:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x10
   532  000011                     	ds	2
   533  000013                     pad@buf:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x12
   537  000013                     	ds	2
   538  000015                     pad@p:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x14
   542  000015                     	ds	2
   543  000017                     ??_pad:
   544                           
   545                           ; 1 bytes @ 0x16
   546  000017                     	ds	1
   547  000018                     pad@i:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x17
   551  000018                     	ds	2
   552  00001A                     pad@w:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x19
   556  00001A                     	ds	2
   557  00001C                     ?_xtoa:
   558                           	callstack 0
   559  00001C                     xtoa@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x1B
   563  00001C                     	ds	2
   564  00001E                     xtoa@d:
   565                           	callstack 0
   566                           
   567                           ; 8 bytes @ 0x1D
   568  00001E                     	ds	8
   569  000026                     xtoa@x:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x25
   573  000026                     	ds	1
   574  000027                     ??_xtoa:
   575                           
   576                           ; 1 bytes @ 0x26
   577  000027                     	ds	8
   578  00002F                     _xtoa$764:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x2E
   582  00002F                     	ds	2
   583  000031                     _xtoa$765:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x30
   587  000031                     	ds	2
   588  000033                     xtoa@p:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x32
   592  000033                     	ds	2
   593  000035                     xtoa@w:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x34
   597  000035                     	ds	2
   598  000037                     xtoa@n:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x36
   602  000037                     	ds	8
   603  00003F                     xtoa@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x3E
   607  00003F                     	ds	2
   608  000041                     xtoa@c:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x40
   612  000041                     	ds	2
   613  000043                     ?_vfpfcnvrt:
   614                           	callstack 0
   615  000043                     vfpfcnvrt@fp:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x42
   619  000043                     	ds	2
   620  000045                     vfpfcnvrt@fmt:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x44
   624  000045                     	ds	2
   625  000047                     vfpfcnvrt@ap:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x46
   629  000047                     	ds	2
   630  000049                     ??_vfpfcnvrt:
   631                           
   632                           ; 1 bytes @ 0x48
   633  000049                     	ds	4
   634  00004D                     vfpfcnvrt@llu:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x4C
   638  00004D                     	ds	8
   639  000055                     vfpfcnvrt@c:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x54
   643  000055                     	ds	1
   644  000056                     ?_vfprintf:
   645                           	callstack 0
   646  000056                     vfprintf@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x55
   650  000056                     	ds	2
   651  000058                     vfprintf@fmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x57
   655  000058                     	ds	2
   656  00005A                     vfprintf@ap:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x59
   660  00005A                     	ds	2
   661  00005C                     vfprintf@cfmt:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x5B
   665  00005C                     	ds	2
   666  00005E                     ??_main:
   667                           
   668                           ; 1 bytes @ 0x5D
   669  00005E                     	ds	2
   670                           
   671 ;;
   672 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   673 ;;
   674 ;; *************** function _main *****************
   675 ;; Defined at:
   676 ;;		line 57 in file "../main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   690 ;;      Params:         0       0       0       0       0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0
   693 ;;      Totals:         2       0       0       0       0       0       0       0       0
   694 ;;Total ram usage:        2 bytes
   695 ;; Hardware stack levels required when called:    8
   696 ;; This function calls:
   697 ;;		_ReadI2C
   698 ;;		_SettingsLCD
   699 ;;		_WriteI2C
   700 ;;		_WriteLCD
   701 ;;		_settings
   702 ;;		_sprintf
   703 ;;		_strlen
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text0
   710  00081C                     __ptext0:
   711                           	callstack 0
   712  00081C                     _main:
   713                           	callstack 23
   714  00081C                     
   715                           ;../main.c: 58:     settings();
   716  00081C  ECD5  F00A         	call	_settings	;wreg free
   717  000820                     
   718                           ;../main.c: 59:     WriteI2C(0xD0,0x00,hora,3);
   719  000820  0E00               	movlw	0
   720  000822  6E03               	movwf	WriteI2C@Register^0,c
   721  000824  0EA0               	movlw	low _hora
   722  000826  6E04               	movwf	WriteI2C@Data^0,c
   723  000828  0E00               	movlw	high _hora
   724  00082A  6E05               	movwf	(WriteI2C@Data+1)^0,c
   725  00082C  0E00               	movlw	0
   726  00082E  6E07               	movwf	(WriteI2C@bytes+1)^0,c
   727  000830  0E03               	movlw	3
   728  000832  6E06               	movwf	WriteI2C@bytes^0,c
   729  000834  0ED0               	movlw	208
   730  000836  EC13  F00A         	call	_WriteI2C
   731  00083A                     
   732                           ;../main.c: 60:     WriteI2C(0xD0,0x03,calendario,4);
   733  00083A  0E03               	movlw	3
   734  00083C  6E03               	movwf	WriteI2C@Register^0,c
   735  00083E  0E9C               	movlw	low _calendario
   736  000840  6E04               	movwf	WriteI2C@Data^0,c
   737  000842  0E00               	movlw	high _calendario
   738  000844  6E05               	movwf	(WriteI2C@Data+1)^0,c
   739  000846  0E00               	movlw	0
   740  000848  6E07               	movwf	(WriteI2C@bytes+1)^0,c
   741  00084A  0E04               	movlw	4
   742  00084C  6E06               	movwf	WriteI2C@bytes^0,c
   743  00084E  0ED0               	movlw	208
   744  000850  EC13  F00A         	call	_WriteI2C
   745  000854                     l1818:
   746                           
   747                           ;../main.c: 62:         ReadI2C(0xD0,0x00,DatosHora,3);
   748  000854  0E00               	movlw	0
   749  000856  6E04               	movwf	ReadI2C@Register^0,c
   750  000858  0EDD               	movlw	low _DatosHora
   751  00085A  6E05               	movwf	ReadI2C@Data^0,c
   752  00085C  0E00               	movlw	high _DatosHora
   753  00085E  6E06               	movwf	(ReadI2C@Data+1)^0,c
   754  000860  0E00               	movlw	0
   755  000862  6E08               	movwf	(ReadI2C@bytes+1)^0,c
   756  000864  0E03               	movlw	3
   757  000866  6E07               	movwf	ReadI2C@bytes^0,c
   758  000868  0ED0               	movlw	208
   759  00086A  ECB7  F009         	call	_ReadI2C
   760  00086E                     
   761                           ;../main.c: 63:         if(DatosHora[2] & (1<<Clock_type)){
   762  00086E  0100               	movlb	0	; () banked
   763  000870  ADDF               	btfss	(_DatosHora+2)& (0+255),6,b
   764  000872  EF3D  F004         	goto	u1111
   765  000876  EF3F  F004         	goto	u1110
   766  00087A                     u1111:
   767  00087A  EFD5  F004         	goto	l1856
   768  00087E                     u1110:
   769  00087E                     
   770                           ; BSR set to: 0
   771                           ;../main.c: 64:             SettingsLCD(0x80 +14);
   772  00087E  0E8E               	movlw	142
   773  000880  EC0A  F00C         	call	_SettingsLCD
   774  000884                     
   775                           ;../main.c: 65:             if(DatosHora[2] & (1<<AM_PM)){
   776  000884  0100               	movlb	0	; () banked
   777  000886  ABDF               	btfss	(_DatosHora+2)& (0+255),5,b
   778  000888  EF48  F004         	goto	u1121
   779  00088C  EF4A  F004         	goto	u1120
   780  000890                     u1121:
   781  000890  EF70  F004         	goto	l1834
   782  000894                     u1120:
   783  000894                     
   784                           ; BSR set to: 0
   785                           ;../main.c: 66:                 for(i=0; i<=strlen(text1); i++){
   786  000894  0E00               	movlw	0
   787  000896  6FB0               	movwf	(_i+1)& (0+255),b
   788  000898  0E00               	movlw	0
   789  00089A  6FAF               	movwf	_i& (0+255),b
   790  00089C  EF5C  F004         	goto	l1832
   791  0008A0                     l1828:
   792                           
   793                           ; BSR set to: 0
   794                           ;../main.c: 67:                     WriteLCD(text1[i]);
   795  0008A0  0E97               	movlw	low _text1
   796  0008A2  25AF               	addwf	_i& (0+255),w,b
   797  0008A4  6ED9               	movwf	fsr2l,c
   798  0008A6  0E00               	movlw	high _text1
   799  0008A8  21B0               	addwfc	(_i+1)& (0+255),w,b
   800  0008AA  6EDA               	movwf	fsr2h,c
   801  0008AC  50DF               	movf	indf2,w,c
   802  0008AE  EC10  F00C         	call	_WriteLCD
   803  0008B2                     
   804                           ;../main.c: 68:                 }
   805  0008B2  0100               	movlb	0	; () banked
   806  0008B4  4BAF               	infsnz	_i& (0+255),f,b
   807  0008B6  2BB0               	incf	(_i+1)& (0+255),f,b
   808  0008B8                     l1832:
   809                           
   810                           ; BSR set to: 0
   811  0008B8  0E97               	movlw	low _text1
   812  0008BA  6E01               	movwf	strlen@s^0,c
   813  0008BC  0E00               	movlw	high _text1
   814  0008BE  6E02               	movwf	(strlen@s+1)^0,c
   815  0008C0  ECB3  F00B         	call	_strlen	;wreg free
   816  0008C4  0100               	movlb	0	; () banked
   817  0008C6  51AF               	movf	_i& (0+255),w,b
   818  0008C8  5C01               	subwf	?_strlen^0,w,c
   819  0008CA  51B0               	movf	(_i+1)& (0+255),w,b
   820  0008CC  5802               	subwfb	(?_strlen+1)^0,w,c
   821  0008CE  B0D8               	btfsc	status,0,c
   822  0008D0  EF6C  F004         	goto	u1131
   823  0008D4  EF6E  F004         	goto	u1130
   824  0008D8                     u1131:
   825  0008D8  EF50  F004         	goto	l1828
   826  0008DC                     u1130:
   827  0008DC  EF94  F004         	goto	l1842
   828  0008E0                     l1834:
   829                           
   830                           ; BSR set to: 0
   831                           ;../main.c: 71:                 for(i=0; i<=strlen(text2); i++){
   832  0008E0  0E00               	movlw	0
   833  0008E2  6FB0               	movwf	(_i+1)& (0+255),b
   834  0008E4  0E00               	movlw	0
   835  0008E6  6FAF               	movwf	_i& (0+255),b
   836  0008E8  EF82  F004         	goto	l1840
   837  0008EC                     l1836:
   838                           
   839                           ; BSR set to: 0
   840                           ;../main.c: 72:                     WriteLCD(text2[i]);
   841  0008EC  0E92               	movlw	low _text2
   842  0008EE  25AF               	addwf	_i& (0+255),w,b
   843  0008F0  6ED9               	movwf	fsr2l,c
   844  0008F2  0E00               	movlw	high _text2
   845  0008F4  21B0               	addwfc	(_i+1)& (0+255),w,b
   846  0008F6  6EDA               	movwf	fsr2h,c
   847  0008F8  50DF               	movf	indf2,w,c
   848  0008FA  EC10  F00C         	call	_WriteLCD
   849  0008FE                     
   850                           ;../main.c: 73:                 }
   851  0008FE  0100               	movlb	0	; () banked
   852  000900  4BAF               	infsnz	_i& (0+255),f,b
   853  000902  2BB0               	incf	(_i+1)& (0+255),f,b
   854  000904                     l1840:
   855                           
   856                           ; BSR set to: 0
   857  000904  0E92               	movlw	low _text2
   858  000906  6E01               	movwf	strlen@s^0,c
   859  000908  0E00               	movlw	high _text2
   860  00090A  6E02               	movwf	(strlen@s+1)^0,c
   861  00090C  ECB3  F00B         	call	_strlen	;wreg free
   862  000910  0100               	movlb	0	; () banked
   863  000912  51AF               	movf	_i& (0+255),w,b
   864  000914  5C01               	subwf	?_strlen^0,w,c
   865  000916  51B0               	movf	(_i+1)& (0+255),w,b
   866  000918  5802               	subwfb	(?_strlen+1)^0,w,c
   867  00091A  B0D8               	btfsc	status,0,c
   868  00091C  EF92  F004         	goto	u1141
   869  000920  EF94  F004         	goto	u1140
   870  000924                     u1141:
   871  000924  EF76  F004         	goto	l1836
   872  000928                     u1140:
   873  000928                     l1842:
   874                           
   875                           ; BSR set to: 0
   876                           ;../main.c: 75:             SettingsLCD(0x80);
   877  000928  0E80               	movlw	128
   878  00092A  EC0A  F00C         	call	_SettingsLCD
   879  00092E                     
   880                           ;../main.c: 76:             DatosHora[2] = DatosHora[2] & (0x1f);
   881  00092E  0100               	movlb	0	; () banked
   882  000930  51DF               	movf	(_DatosHora+2)& (0+255),w,b
   883  000932  0B1F               	andlw	31
   884  000934  6FDF               	movwf	(_DatosHora+2)& (0+255),b
   885  000936                     
   886                           ; BSR set to: 0
   887                           ;../main.c: 77:             sprintf(smh,"Hor:%x:%x:%x",DatosHora[2],DatosHora[1],DatosHo
      +                          ra[0]);
   888  000936  0EC5               	movlw	low _smh
   889  000938  6FE0               	movwf	sprintf@s& (0+255),b
   890  00093A  0E00               	movlw	high _smh
   891  00093C  6FE1               	movwf	(sprintf@s+1)& (0+255),b
   892  00093E  0E0E               	movlw	low STR_1
   893  000940  6FE2               	movwf	sprintf@fmt& (0+255),b
   894  000942  0E08               	movlw	high STR_1
   895  000944  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
   896  000946  C0DF  F0E4         	movff	_DatosHora+2,?_sprintf+4
   897  00094A  6BE5               	clrf	(?_sprintf+5)& (0+255),b
   898  00094C  C0DE  F0E6         	movff	_DatosHora+1,?_sprintf+6
   899  000950  6BE7               	clrf	(?_sprintf+7)& (0+255),b
   900  000952  C0DD  F0E8         	movff	_DatosHora,?_sprintf+8
   901  000956  6BE9               	clrf	(?_sprintf+9)& (0+255),b
   902  000958  ECAC  F00A         	call	_sprintf	;wreg free
   903  00095C                     
   904                           ;../main.c: 78:             for(i=0; i<=strlen(smh); i++){
   905  00095C  0E00               	movlw	0
   906  00095E  0100               	movlb	0	; () banked
   907  000960  6FB0               	movwf	(_i+1)& (0+255),b
   908  000962  0E00               	movlw	0
   909  000964  6FAF               	movwf	_i& (0+255),b
   910  000966  EFC1  F004         	goto	l1854
   911  00096A                     l1850:
   912                           
   913                           ; BSR set to: 0
   914                           ;../main.c: 79:                 WriteLCD(smh[i]);
   915  00096A  0EC5               	movlw	low _smh
   916  00096C  25AF               	addwf	_i& (0+255),w,b
   917  00096E  6ED9               	movwf	fsr2l,c
   918  000970  0E00               	movlw	high _smh
   919  000972  21B0               	addwfc	(_i+1)& (0+255),w,b
   920  000974  6EDA               	movwf	fsr2h,c
   921  000976  50DF               	movf	indf2,w,c
   922  000978  EC10  F00C         	call	_WriteLCD
   923  00097C                     
   924                           ;../main.c: 80:             }
   925  00097C  0100               	movlb	0	; () banked
   926  00097E  4BAF               	infsnz	_i& (0+255),f,b
   927  000980  2BB0               	incf	(_i+1)& (0+255),f,b
   928  000982                     l1854:
   929                           
   930                           ; BSR set to: 0
   931  000982  0EC5               	movlw	low _smh
   932  000984  6E01               	movwf	strlen@s^0,c
   933  000986  0E00               	movlw	high _smh
   934  000988  6E02               	movwf	(strlen@s+1)^0,c
   935  00098A  ECB3  F00B         	call	_strlen	;wreg free
   936  00098E  0100               	movlb	0	; () banked
   937  000990  51AF               	movf	_i& (0+255),w,b
   938  000992  5C01               	subwf	?_strlen^0,w,c
   939  000994  51B0               	movf	(_i+1)& (0+255),w,b
   940  000996  5802               	subwfb	(?_strlen+1)^0,w,c
   941  000998  B0D8               	btfsc	status,0,c
   942  00099A  EFD1  F004         	goto	u1151
   943  00099E  EFD3  F004         	goto	u1150
   944  0009A2                     u1151:
   945  0009A2  EFB5  F004         	goto	l1850
   946  0009A6                     u1150:
   947  0009A6  EF14  F005         	goto	l1870
   948  0009AA                     l1856:
   949                           
   950                           ; BSR set to: 0
   951                           ;../main.c: 83:             SettingsLCD(0x80);
   952  0009AA  0E80               	movlw	128
   953  0009AC  EC0A  F00C         	call	_SettingsLCD
   954  0009B0                     
   955                           ;../main.c: 84:             DatosHora[2] = DatosHora[2] & (0x3f);
   956  0009B0  0100               	movlb	0	; () banked
   957  0009B2  51DF               	movf	(_DatosHora+2)& (0+255),w,b
   958  0009B4  0B3F               	andlw	63
   959  0009B6  6FDF               	movwf	(_DatosHora+2)& (0+255),b
   960  0009B8                     
   961                           ; BSR set to: 0
   962                           ;../main.c: 85:             sprintf(smh,"Hor:%x:%x:%x",DatosHora[2],DatosHora[1],DatosHo
      +                          ra[0]);
   963  0009B8  0EC5               	movlw	low _smh
   964  0009BA  6FE0               	movwf	sprintf@s& (0+255),b
   965  0009BC  0E00               	movlw	high _smh
   966  0009BE  6FE1               	movwf	(sprintf@s+1)& (0+255),b
   967  0009C0  0E0E               	movlw	low STR_1
   968  0009C2  6FE2               	movwf	sprintf@fmt& (0+255),b
   969  0009C4  0E08               	movlw	high STR_1
   970  0009C6  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
   971  0009C8  C0DF  F0E4         	movff	_DatosHora+2,?_sprintf+4
   972  0009CC  6BE5               	clrf	(?_sprintf+5)& (0+255),b
   973  0009CE  C0DE  F0E6         	movff	_DatosHora+1,?_sprintf+6
   974  0009D2  6BE7               	clrf	(?_sprintf+7)& (0+255),b
   975  0009D4  C0DD  F0E8         	movff	_DatosHora,?_sprintf+8
   976  0009D8  6BE9               	clrf	(?_sprintf+9)& (0+255),b
   977  0009DA  ECAC  F00A         	call	_sprintf	;wreg free
   978  0009DE                     
   979                           ;../main.c: 86:             for(i=0; i<=strlen(smh); i++){
   980  0009DE  0E00               	movlw	0
   981  0009E0  0100               	movlb	0	; () banked
   982  0009E2  6FB0               	movwf	(_i+1)& (0+255),b
   983  0009E4  0E00               	movlw	0
   984  0009E6  6FAF               	movwf	_i& (0+255),b
   985  0009E8  EF02  F005         	goto	l1868
   986  0009EC                     l1864:
   987                           
   988                           ; BSR set to: 0
   989                           ;../main.c: 87:                 WriteLCD(smh[i]);
   990  0009EC  0EC5               	movlw	low _smh
   991  0009EE  25AF               	addwf	_i& (0+255),w,b
   992  0009F0  6ED9               	movwf	fsr2l,c
   993  0009F2  0E00               	movlw	high _smh
   994  0009F4  21B0               	addwfc	(_i+1)& (0+255),w,b
   995  0009F6  6EDA               	movwf	fsr2h,c
   996  0009F8  50DF               	movf	indf2,w,c
   997  0009FA  EC10  F00C         	call	_WriteLCD
   998  0009FE                     
   999                           ;../main.c: 88:             }
  1000  0009FE  0100               	movlb	0	; () banked
  1001  000A00  4BAF               	infsnz	_i& (0+255),f,b
  1002  000A02  2BB0               	incf	(_i+1)& (0+255),f,b
  1003  000A04                     l1868:
  1004                           
  1005                           ; BSR set to: 0
  1006  000A04  0EC5               	movlw	low _smh
  1007  000A06  6E01               	movwf	strlen@s^0,c
  1008  000A08  0E00               	movlw	high _smh
  1009  000A0A  6E02               	movwf	(strlen@s+1)^0,c
  1010  000A0C  ECB3  F00B         	call	_strlen	;wreg free
  1011  000A10  0100               	movlb	0	; () banked
  1012  000A12  51AF               	movf	_i& (0+255),w,b
  1013  000A14  5C01               	subwf	?_strlen^0,w,c
  1014  000A16  51B0               	movf	(_i+1)& (0+255),w,b
  1015  000A18  5802               	subwfb	(?_strlen+1)^0,w,c
  1016  000A1A  B0D8               	btfsc	status,0,c
  1017  000A1C  EF12  F005         	goto	u1161
  1018  000A20  EF14  F005         	goto	u1160
  1019  000A24                     u1161:
  1020  000A24  EFF6  F004         	goto	l1864
  1021  000A28                     u1160:
  1022  000A28                     l1870:
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;../main.c: 90:         ReadI2C(0xD0,0x03,DatosCalendario,4);
  1026  000A28  0E03               	movlw	3
  1027  000A2A  6E04               	movwf	ReadI2C@Register^0,c
  1028  000A2C  0ED9               	movlw	low _DatosCalendario
  1029  000A2E  6E05               	movwf	ReadI2C@Data^0,c
  1030  000A30  0E00               	movlw	high _DatosCalendario
  1031  000A32  6E06               	movwf	(ReadI2C@Data+1)^0,c
  1032  000A34  0E00               	movlw	0
  1033  000A36  6E08               	movwf	(ReadI2C@bytes+1)^0,c
  1034  000A38  0E04               	movlw	4
  1035  000A3A  6E07               	movwf	ReadI2C@bytes^0,c
  1036  000A3C  0ED0               	movlw	208
  1037  000A3E  ECB7  F009         	call	_ReadI2C
  1038  000A42                     
  1039                           ;../main.c: 91:         SettingsLCD(0xC0);
  1040  000A42  0EC0               	movlw	192
  1041  000A44  EC0A  F00C         	call	_SettingsLCD
  1042  000A48                     
  1043                           ;../main.c: 92:         sprintf(dma,"Cal:%x/%x/%x",DatosCalendario[1],DatosCalendario[2]
      +                          ,DatosCalendario[3]);
  1044  000A48  0EB1               	movlw	low _dma
  1045  000A4A  0100               	movlb	0	; () banked
  1046  000A4C  6FE0               	movwf	sprintf@s& (0+255),b
  1047  000A4E  0E00               	movlw	high _dma
  1048  000A50  6FE1               	movwf	(sprintf@s+1)& (0+255),b
  1049  000A52  0E01               	movlw	low STR_3
  1050  000A54  6FE2               	movwf	sprintf@fmt& (0+255),b
  1051  000A56  0E08               	movlw	high STR_3
  1052  000A58  6FE3               	movwf	(sprintf@fmt+1)& (0+255),b
  1053  000A5A  C0DA  F0E4         	movff	_DatosCalendario+1,?_sprintf+4
  1054  000A5E  6BE5               	clrf	(?_sprintf+5)& (0+255),b
  1055  000A60  C0DB  F0E6         	movff	_DatosCalendario+2,?_sprintf+6
  1056  000A64  6BE7               	clrf	(?_sprintf+7)& (0+255),b
  1057  000A66  C0DC  F0E8         	movff	_DatosCalendario+3,?_sprintf+8
  1058  000A6A  6BE9               	clrf	(?_sprintf+9)& (0+255),b
  1059  000A6C  ECAC  F00A         	call	_sprintf	;wreg free
  1060  000A70                     
  1061                           ;../main.c: 93:         for(i=0; i<=strlen(dma); i++){
  1062  000A70  0E00               	movlw	0
  1063  000A72  0100               	movlb	0	; () banked
  1064  000A74  6FB0               	movwf	(_i+1)& (0+255),b
  1065  000A76  0E00               	movlw	0
  1066  000A78  6FAF               	movwf	_i& (0+255),b
  1067  000A7A  EF4B  F005         	goto	l1882
  1068  000A7E                     l1878:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;../main.c: 94:             WriteLCD(dma[i]);
  1072  000A7E  0EB1               	movlw	low _dma
  1073  000A80  25AF               	addwf	_i& (0+255),w,b
  1074  000A82  6ED9               	movwf	fsr2l,c
  1075  000A84  0E00               	movlw	high _dma
  1076  000A86  21B0               	addwfc	(_i+1)& (0+255),w,b
  1077  000A88  6EDA               	movwf	fsr2h,c
  1078  000A8A  50DF               	movf	indf2,w,c
  1079  000A8C  EC10  F00C         	call	_WriteLCD
  1080  000A90                     
  1081                           ;../main.c: 95:         }
  1082  000A90  0100               	movlb	0	; () banked
  1083  000A92  4BAF               	infsnz	_i& (0+255),f,b
  1084  000A94  2BB0               	incf	(_i+1)& (0+255),f,b
  1085  000A96                     l1882:
  1086                           
  1087                           ; BSR set to: 0
  1088  000A96  0EB1               	movlw	low _dma
  1089  000A98  6E01               	movwf	strlen@s^0,c
  1090  000A9A  0E00               	movlw	high _dma
  1091  000A9C  6E02               	movwf	(strlen@s+1)^0,c
  1092  000A9E  ECB3  F00B         	call	_strlen	;wreg free
  1093  000AA2  0100               	movlb	0	; () banked
  1094  000AA4  51AF               	movf	_i& (0+255),w,b
  1095  000AA6  5C01               	subwf	?_strlen^0,w,c
  1096  000AA8  51B0               	movf	(_i+1)& (0+255),w,b
  1097  000AAA  5802               	subwfb	(?_strlen+1)^0,w,c
  1098  000AAC  B0D8               	btfsc	status,0,c
  1099  000AAE  EF5B  F005         	goto	u1171
  1100  000AB2  EF5D  F005         	goto	u1170
  1101  000AB6                     u1171:
  1102  000AB6  EF3F  F005         	goto	l1878
  1103  000ABA                     u1170:
  1104  000ABA  EF69  F006         	goto	l1944
  1105  000ABE                     l1886:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;../main.c: 101:                 for(i=0; i<=strlen(text3); i++){
  1109  000ABE  0E00               	movlw	0
  1110  000AC0  6FB0               	movwf	(_i+1)& (0+255),b
  1111  000AC2  0E00               	movlw	0
  1112  000AC4  6FAF               	movwf	_i& (0+255),b
  1113  000AC6  EF71  F005         	goto	l1892
  1114  000ACA                     l1888:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;../main.c: 102:                     WriteLCD(text3[i]);
  1118  000ACA  0E8D               	movlw	low _text3
  1119  000ACC  25AF               	addwf	_i& (0+255),w,b
  1120  000ACE  6ED9               	movwf	fsr2l,c
  1121  000AD0  0E00               	movlw	high _text3
  1122  000AD2  21B0               	addwfc	(_i+1)& (0+255),w,b
  1123  000AD4  6EDA               	movwf	fsr2h,c
  1124  000AD6  50DF               	movf	indf2,w,c
  1125  000AD8  EC10  F00C         	call	_WriteLCD
  1126  000ADC                     
  1127                           ;../main.c: 103:                 }
  1128  000ADC  0100               	movlb	0	; () banked
  1129  000ADE  4BAF               	infsnz	_i& (0+255),f,b
  1130  000AE0  2BB0               	incf	(_i+1)& (0+255),f,b
  1131  000AE2                     l1892:
  1132                           
  1133                           ; BSR set to: 0
  1134  000AE2  0E8D               	movlw	low _text3
  1135  000AE4  6E01               	movwf	strlen@s^0,c
  1136  000AE6  0E00               	movlw	high _text3
  1137  000AE8  6E02               	movwf	(strlen@s+1)^0,c
  1138  000AEA  ECB3  F00B         	call	_strlen	;wreg free
  1139  000AEE  0100               	movlb	0	; () banked
  1140  000AF0  51AF               	movf	_i& (0+255),w,b
  1141  000AF2  5C01               	subwf	?_strlen^0,w,c
  1142  000AF4  51B0               	movf	(_i+1)& (0+255),w,b
  1143  000AF6  5802               	subwfb	(?_strlen+1)^0,w,c
  1144  000AF8  B0D8               	btfsc	status,0,c
  1145  000AFA  EF81  F005         	goto	u1181
  1146  000AFE  EF83  F005         	goto	u1180
  1147  000B02                     u1181:
  1148  000B02  EF65  F005         	goto	l1888
  1149  000B06                     u1180:
  1150  000B06  EF2A  F004         	goto	l1818
  1151  000B0A                     l1894:
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;../main.c: 106:                 for(i=0; i<=strlen(text4); i++){
  1155  000B0A  0E00               	movlw	0
  1156  000B0C  6FB0               	movwf	(_i+1)& (0+255),b
  1157  000B0E  0E00               	movlw	0
  1158  000B10  6FAF               	movwf	_i& (0+255),b
  1159  000B12  EF97  F005         	goto	l1900
  1160  000B16                     l1896:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;../main.c: 107:                     WriteLCD(text4[i]);
  1164  000B16  0E88               	movlw	low _text4
  1165  000B18  25AF               	addwf	_i& (0+255),w,b
  1166  000B1A  6ED9               	movwf	fsr2l,c
  1167  000B1C  0E00               	movlw	high _text4
  1168  000B1E  21B0               	addwfc	(_i+1)& (0+255),w,b
  1169  000B20  6EDA               	movwf	fsr2h,c
  1170  000B22  50DF               	movf	indf2,w,c
  1171  000B24  EC10  F00C         	call	_WriteLCD
  1172  000B28                     
  1173                           ;../main.c: 108:                 }
  1174  000B28  0100               	movlb	0	; () banked
  1175  000B2A  4BAF               	infsnz	_i& (0+255),f,b
  1176  000B2C  2BB0               	incf	(_i+1)& (0+255),f,b
  1177  000B2E                     l1900:
  1178                           
  1179                           ; BSR set to: 0
  1180  000B2E  0E88               	movlw	low _text4
  1181  000B30  6E01               	movwf	strlen@s^0,c
  1182  000B32  0E00               	movlw	high _text4
  1183  000B34  6E02               	movwf	(strlen@s+1)^0,c
  1184  000B36  ECB3  F00B         	call	_strlen	;wreg free
  1185  000B3A  0100               	movlb	0	; () banked
  1186  000B3C  51AF               	movf	_i& (0+255),w,b
  1187  000B3E  5C01               	subwf	?_strlen^0,w,c
  1188  000B40  51B0               	movf	(_i+1)& (0+255),w,b
  1189  000B42  5802               	subwfb	(?_strlen+1)^0,w,c
  1190  000B44  B0D8               	btfsc	status,0,c
  1191  000B46  EFA7  F005         	goto	u1191
  1192  000B4A  EFA9  F005         	goto	u1190
  1193  000B4E                     u1191:
  1194  000B4E  EF8B  F005         	goto	l1896
  1195  000B52                     u1190:
  1196  000B52  EF2A  F004         	goto	l1818
  1197  000B56                     l1902:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;../main.c: 111:                 for(i=0; i<=strlen(text5); i++){
  1201  000B56  0E00               	movlw	0
  1202  000B58  6FB0               	movwf	(_i+1)& (0+255),b
  1203  000B5A  0E00               	movlw	0
  1204  000B5C  6FAF               	movwf	_i& (0+255),b
  1205  000B5E  EFBD  F005         	goto	l1908
  1206  000B62                     l1904:
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;../main.c: 112:                     WriteLCD(text5[i]);
  1210  000B62  0E83               	movlw	low _text5
  1211  000B64  25AF               	addwf	_i& (0+255),w,b
  1212  000B66  6ED9               	movwf	fsr2l,c
  1213  000B68  0E00               	movlw	high _text5
  1214  000B6A  21B0               	addwfc	(_i+1)& (0+255),w,b
  1215  000B6C  6EDA               	movwf	fsr2h,c
  1216  000B6E  50DF               	movf	indf2,w,c
  1217  000B70  EC10  F00C         	call	_WriteLCD
  1218  000B74                     
  1219                           ;../main.c: 113:                 }
  1220  000B74  0100               	movlb	0	; () banked
  1221  000B76  4BAF               	infsnz	_i& (0+255),f,b
  1222  000B78  2BB0               	incf	(_i+1)& (0+255),f,b
  1223  000B7A                     l1908:
  1224                           
  1225                           ; BSR set to: 0
  1226  000B7A  0E83               	movlw	low _text5
  1227  000B7C  6E01               	movwf	strlen@s^0,c
  1228  000B7E  0E00               	movlw	high _text5
  1229  000B80  6E02               	movwf	(strlen@s+1)^0,c
  1230  000B82  ECB3  F00B         	call	_strlen	;wreg free
  1231  000B86  0100               	movlb	0	; () banked
  1232  000B88  51AF               	movf	_i& (0+255),w,b
  1233  000B8A  5C01               	subwf	?_strlen^0,w,c
  1234  000B8C  51B0               	movf	(_i+1)& (0+255),w,b
  1235  000B8E  5802               	subwfb	(?_strlen+1)^0,w,c
  1236  000B90  B0D8               	btfsc	status,0,c
  1237  000B92  EFCD  F005         	goto	u1201
  1238  000B96  EFCF  F005         	goto	u1200
  1239  000B9A                     u1201:
  1240  000B9A  EFB1  F005         	goto	l1904
  1241  000B9E                     u1200:
  1242  000B9E  EF2A  F004         	goto	l1818
  1243  000BA2                     l1910:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;../main.c: 116:                 for(i=0; i<=strlen(text6); i++){
  1247  000BA2  0E00               	movlw	0
  1248  000BA4  6FB0               	movwf	(_i+1)& (0+255),b
  1249  000BA6  0E00               	movlw	0
  1250  000BA8  6FAF               	movwf	_i& (0+255),b
  1251  000BAA  EFE3  F005         	goto	l1916
  1252  000BAE                     l1912:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;../main.c: 117:                     WriteLCD(text6[i]);
  1256  000BAE  0E7E               	movlw	low _text6
  1257  000BB0  25AF               	addwf	_i& (0+255),w,b
  1258  000BB2  6ED9               	movwf	fsr2l,c
  1259  000BB4  0E00               	movlw	high _text6
  1260  000BB6  21B0               	addwfc	(_i+1)& (0+255),w,b
  1261  000BB8  6EDA               	movwf	fsr2h,c
  1262  000BBA  50DF               	movf	indf2,w,c
  1263  000BBC  EC10  F00C         	call	_WriteLCD
  1264  000BC0                     
  1265                           ;../main.c: 118:                 }
  1266  000BC0  0100               	movlb	0	; () banked
  1267  000BC2  4BAF               	infsnz	_i& (0+255),f,b
  1268  000BC4  2BB0               	incf	(_i+1)& (0+255),f,b
  1269  000BC6                     l1916:
  1270                           
  1271                           ; BSR set to: 0
  1272  000BC6  0E7E               	movlw	low _text6
  1273  000BC8  6E01               	movwf	strlen@s^0,c
  1274  000BCA  0E00               	movlw	high _text6
  1275  000BCC  6E02               	movwf	(strlen@s+1)^0,c
  1276  000BCE  ECB3  F00B         	call	_strlen	;wreg free
  1277  000BD2  0100               	movlb	0	; () banked
  1278  000BD4  51AF               	movf	_i& (0+255),w,b
  1279  000BD6  5C01               	subwf	?_strlen^0,w,c
  1280  000BD8  51B0               	movf	(_i+1)& (0+255),w,b
  1281  000BDA  5802               	subwfb	(?_strlen+1)^0,w,c
  1282  000BDC  B0D8               	btfsc	status,0,c
  1283  000BDE  EFF3  F005         	goto	u1211
  1284  000BE2  EFF5  F005         	goto	u1210
  1285  000BE6                     u1211:
  1286  000BE6  EFD7  F005         	goto	l1912
  1287  000BEA                     u1210:
  1288  000BEA  EF2A  F004         	goto	l1818
  1289  000BEE                     l1918:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;../main.c: 121:                 for(i=0; i<=strlen(text7); i++){
  1293  000BEE  0E00               	movlw	0
  1294  000BF0  6FB0               	movwf	(_i+1)& (0+255),b
  1295  000BF2  0E00               	movlw	0
  1296  000BF4  6FAF               	movwf	_i& (0+255),b
  1297  000BF6  EF09  F006         	goto	l1924
  1298  000BFA                     l1920:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;../main.c: 122:                     WriteLCD(text7[i]);
  1302  000BFA  0E79               	movlw	low _text7
  1303  000BFC  25AF               	addwf	_i& (0+255),w,b
  1304  000BFE  6ED9               	movwf	fsr2l,c
  1305  000C00  0E00               	movlw	high _text7
  1306  000C02  21B0               	addwfc	(_i+1)& (0+255),w,b
  1307  000C04  6EDA               	movwf	fsr2h,c
  1308  000C06  50DF               	movf	indf2,w,c
  1309  000C08  EC10  F00C         	call	_WriteLCD
  1310  000C0C                     
  1311                           ;../main.c: 123:                 }
  1312  000C0C  0100               	movlb	0	; () banked
  1313  000C0E  4BAF               	infsnz	_i& (0+255),f,b
  1314  000C10  2BB0               	incf	(_i+1)& (0+255),f,b
  1315  000C12                     l1924:
  1316                           
  1317                           ; BSR set to: 0
  1318  000C12  0E79               	movlw	low _text7
  1319  000C14  6E01               	movwf	strlen@s^0,c
  1320  000C16  0E00               	movlw	high _text7
  1321  000C18  6E02               	movwf	(strlen@s+1)^0,c
  1322  000C1A  ECB3  F00B         	call	_strlen	;wreg free
  1323  000C1E  0100               	movlb	0	; () banked
  1324  000C20  51AF               	movf	_i& (0+255),w,b
  1325  000C22  5C01               	subwf	?_strlen^0,w,c
  1326  000C24  51B0               	movf	(_i+1)& (0+255),w,b
  1327  000C26  5802               	subwfb	(?_strlen+1)^0,w,c
  1328  000C28  B0D8               	btfsc	status,0,c
  1329  000C2A  EF19  F006         	goto	u1221
  1330  000C2E  EF1B  F006         	goto	u1220
  1331  000C32                     u1221:
  1332  000C32  EFFD  F005         	goto	l1920
  1333  000C36                     u1220:
  1334  000C36  EF2A  F004         	goto	l1818
  1335  000C3A                     l1926:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;../main.c: 126:                 for(i=0; i<=strlen(text8); i++){
  1339  000C3A  0E00               	movlw	0
  1340  000C3C  6FB0               	movwf	(_i+1)& (0+255),b
  1341  000C3E  0E00               	movlw	0
  1342  000C40  6FAF               	movwf	_i& (0+255),b
  1343  000C42  EF2F  F006         	goto	l1932
  1344  000C46                     l1928:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;../main.c: 127:                     WriteLCD(text8[i]);
  1348  000C46  0E74               	movlw	low _text8
  1349  000C48  25AF               	addwf	_i& (0+255),w,b
  1350  000C4A  6ED9               	movwf	fsr2l,c
  1351  000C4C  0E00               	movlw	high _text8
  1352  000C4E  21B0               	addwfc	(_i+1)& (0+255),w,b
  1353  000C50  6EDA               	movwf	fsr2h,c
  1354  000C52  50DF               	movf	indf2,w,c
  1355  000C54  EC10  F00C         	call	_WriteLCD
  1356  000C58                     
  1357                           ;../main.c: 128:                 }
  1358  000C58  0100               	movlb	0	; () banked
  1359  000C5A  4BAF               	infsnz	_i& (0+255),f,b
  1360  000C5C  2BB0               	incf	(_i+1)& (0+255),f,b
  1361  000C5E                     l1932:
  1362                           
  1363                           ; BSR set to: 0
  1364  000C5E  0E74               	movlw	low _text8
  1365  000C60  6E01               	movwf	strlen@s^0,c
  1366  000C62  0E00               	movlw	high _text8
  1367  000C64  6E02               	movwf	(strlen@s+1)^0,c
  1368  000C66  ECB3  F00B         	call	_strlen	;wreg free
  1369  000C6A  0100               	movlb	0	; () banked
  1370  000C6C  51AF               	movf	_i& (0+255),w,b
  1371  000C6E  5C01               	subwf	?_strlen^0,w,c
  1372  000C70  51B0               	movf	(_i+1)& (0+255),w,b
  1373  000C72  5802               	subwfb	(?_strlen+1)^0,w,c
  1374  000C74  B0D8               	btfsc	status,0,c
  1375  000C76  EF3F  F006         	goto	u1231
  1376  000C7A  EF41  F006         	goto	u1230
  1377  000C7E                     u1231:
  1378  000C7E  EF23  F006         	goto	l1928
  1379  000C82                     u1230:
  1380  000C82  EF2A  F004         	goto	l1818
  1381  000C86                     l1934:
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;../main.c: 131:                 for(i=0; i<=strlen(text9); i++){
  1385  000C86  0E00               	movlw	0
  1386  000C88  6FB0               	movwf	(_i+1)& (0+255),b
  1387  000C8A  0E00               	movlw	0
  1388  000C8C  6FAF               	movwf	_i& (0+255),b
  1389  000C8E  EF55  F006         	goto	l1940
  1390  000C92                     l1936:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;../main.c: 132:                     WriteLCD(text9[i]);
  1394  000C92  0E6F               	movlw	low _text9
  1395  000C94  25AF               	addwf	_i& (0+255),w,b
  1396  000C96  6ED9               	movwf	fsr2l,c
  1397  000C98  0E00               	movlw	high _text9
  1398  000C9A  21B0               	addwfc	(_i+1)& (0+255),w,b
  1399  000C9C  6EDA               	movwf	fsr2h,c
  1400  000C9E  50DF               	movf	indf2,w,c
  1401  000CA0  EC10  F00C         	call	_WriteLCD
  1402  000CA4                     
  1403                           ;../main.c: 133:                 }
  1404  000CA4  0100               	movlb	0	; () banked
  1405  000CA6  4BAF               	infsnz	_i& (0+255),f,b
  1406  000CA8  2BB0               	incf	(_i+1)& (0+255),f,b
  1407  000CAA                     l1940:
  1408                           
  1409                           ; BSR set to: 0
  1410  000CAA  0E6F               	movlw	low _text9
  1411  000CAC  6E01               	movwf	strlen@s^0,c
  1412  000CAE  0E00               	movlw	high _text9
  1413  000CB0  6E02               	movwf	(strlen@s+1)^0,c
  1414  000CB2  ECB3  F00B         	call	_strlen	;wreg free
  1415  000CB6  0100               	movlb	0	; () banked
  1416  000CB8  51AF               	movf	_i& (0+255),w,b
  1417  000CBA  5C01               	subwf	?_strlen^0,w,c
  1418  000CBC  51B0               	movf	(_i+1)& (0+255),w,b
  1419  000CBE  5802               	subwfb	(?_strlen+1)^0,w,c
  1420  000CC0  B0D8               	btfsc	status,0,c
  1421  000CC2  EF65  F006         	goto	u1241
  1422  000CC6  EF67  F006         	goto	u1240
  1423  000CCA                     u1241:
  1424  000CCA  EF49  F006         	goto	l1936
  1425  000CCE                     u1240:
  1426  000CCE  EF2A  F004         	goto	l1818
  1427  000CD2                     l1944:
  1428                           
  1429                           ; BSR set to: 0
  1430  000CD2  0E60               	movlw	low _days
  1431  000CD4  25D9               	addwf	_DatosCalendario& (0+255),w,b
  1432  000CD6  6ED9               	movwf	fsr2l,c
  1433  000CD8  6ADA               	clrf	fsr2h,c
  1434  000CDA  0E00               	movlw	high _days
  1435  000CDC  22DA               	addwfc	fsr2h,f,c
  1436  000CDE  50DF               	movf	indf2,w,c
  1437  000CE0  6E5E               	movwf	??_main^0,c
  1438  000CE2  6A5F               	clrf	(??_main+1)^0,c
  1439                           
  1440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1441                           ; Switch size 1, requested type "simple"
  1442                           ; Number of cases is 1, Range of values is 0 to 0
  1443                           ; switch strategies available:
  1444                           ; Name         Instructions Cycles
  1445                           ; simple_byte            4     3 (average)
  1446                           ;	Chosen strategy is simple_byte
  1447  000CE4  505F               	movf	(??_main+1)^0,w,c
  1448  000CE6  0A00               	xorlw	0	; case 0
  1449  000CE8  B4D8               	btfsc	status,2,c
  1450  000CEA  EF79  F006         	goto	l1970
  1451  000CEE  EF2A  F004         	goto	l1818
  1452  000CF2                     l1970:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ; Switch size 1, requested type "simple"
  1456                           ; Number of cases is 7, Range of values is 70 to 116
  1457                           ; switch strategies available:
  1458                           ; Name         Instructions Cycles
  1459                           ; simple_byte           22    12 (average)
  1460                           ;	Chosen strategy is simple_byte
  1461  000CF2  505E               	movf	??_main^0,w,c
  1462  000CF4  0A46               	xorlw	70	; case 70
  1463  000CF6  B4D8               	btfsc	status,2,c
  1464  000CF8  EF1D  F006         	goto	l1926
  1465  000CFC  0A0B               	xorlw	11	; case 77
  1466  000CFE  B4D8               	btfsc	status,2,c
  1467  000D00  EF85  F005         	goto	l1894
  1468  000D04  0A1E               	xorlw	30	; case 83
  1469  000D06  B4D8               	btfsc	status,2,c
  1470  000D08  EF5F  F005         	goto	l1886
  1471  000D0C  0A07               	xorlw	7	; case 84
  1472  000D0E  B4D8               	btfsc	status,2,c
  1473  000D10  EFAB  F005         	goto	l1902
  1474  000D14  0A03               	xorlw	3	; case 87
  1475  000D16  B4D8               	btfsc	status,2,c
  1476  000D18  EFD1  F005         	goto	l1910
  1477  000D1C  0A24               	xorlw	36	; case 115
  1478  000D1E  B4D8               	btfsc	status,2,c
  1479  000D20  EF43  F006         	goto	l1934
  1480  000D24  0A07               	xorlw	7	; case 116
  1481  000D26  B4D8               	btfsc	status,2,c
  1482  000D28  EFF7  F005         	goto	l1918
  1483  000D2C  EF2A  F004         	goto	l1818
  1484  000D30  EF00  F000         	goto	start
  1485  000D34                     __end_of_main:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _sprintf *****************
  1489 ;; Defined at:
  1490 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1493 ;;		 -> dma(20), smh(20), 
  1494 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1495 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  f               6   14[BANK0 ] struct _IO_FILE
  1498 ;;  ap              2   12[BANK0 ] PTR void [1]
  1499 ;;		 -> ?_sprintf(2), 
  1500 ;;  ret             2    0        int 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[BANK0 ] int 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1510 ;;      Params:         0      10       0       0       0       0       0       0       0
  1511 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1513 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1514 ;;Total ram usage:       20 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    7
  1517 ;; This function calls:
  1518 ;;		_vfprintf
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text1
  1525  001558                     __ptext1:
  1526                           	callstack 0
  1527  001558                     _sprintf:
  1528                           	callstack 23
  1529  001558  0EE4               	movlw	low (?_sprintf+4)
  1530  00155A  0100               	movlb	0	; () banked
  1531  00155C  6FEC               	movwf	sprintf@ap& (0+255),b
  1532  00155E  0E00               	movlw	high (?_sprintf+4)
  1533  001560  6FED               	movwf	(sprintf@ap+1)& (0+255),b
  1534  001562  C0E0  F0EE         	movff	sprintf@s,sprintf@f
  1535  001566  C0E1  F0EF         	movff	sprintf@s+1,sprintf@f+1
  1536  00156A                     
  1537                           ; BSR set to: 0
  1538  00156A  0E00               	movlw	0
  1539  00156C  6FF1               	movwf	(sprintf@f+3)& (0+255),b
  1540  00156E  0E00               	movlw	0
  1541  001570  6FF0               	movwf	(sprintf@f+2)& (0+255),b
  1542  001572                     
  1543                           ; BSR set to: 0
  1544  001572  0E00               	movlw	0
  1545  001574  6FF3               	movwf	(sprintf@f+5)& (0+255),b
  1546  001576  0E00               	movlw	0
  1547  001578  6FF2               	movwf	(sprintf@f+4)& (0+255),b
  1548  00157A                     
  1549                           ; BSR set to: 0
  1550  00157A  0EEE               	movlw	low sprintf@f
  1551  00157C  6E56               	movwf	vfprintf@fp^0,c
  1552  00157E  0E00               	movlw	high sprintf@f
  1553  001580  6E57               	movwf	(vfprintf@fp+1)^0,c
  1554  001582  C0E2  F058         	movff	sprintf@fmt,vfprintf@fmt
  1555  001586  C0E3  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1556  00158A  0EEC               	movlw	low sprintf@ap
  1557  00158C  6E5A               	movwf	vfprintf@ap^0,c
  1558  00158E  0E00               	movlw	high sprintf@ap
  1559  001590  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1560  001592  EC4C  F00A         	call	_vfprintf	;wreg free
  1561  001596  0100               	movlb	0	; () banked
  1562  001598  51F0               	movf	(sprintf@f+2)& (0+255),w,b
  1563  00159A  25E0               	addwf	sprintf@s& (0+255),w,b
  1564  00159C  6ED9               	movwf	fsr2l,c
  1565  00159E  51F1               	movf	(sprintf@f+3)& (0+255),w,b
  1566  0015A0  21E1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1567  0015A2  6EDA               	movwf	fsr2h,c
  1568  0015A4  0E00               	movlw	0
  1569  0015A6  6EDF               	movwf	indf2,c
  1570  0015A8                     
  1571                           ; BSR set to: 0
  1572  0015A8  0012               	return		;funcret
  1573  0015AA                     __end_of_sprintf:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _vfprintf *****************
  1577 ;; Defined at:
  1578 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1581 ;;		 -> sprintf@f(6), 
  1582 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1583 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  1584 ;;  ap              2   89[COMRAM] PTR PTR void 
  1585 ;;		 -> sprintf@ap(2), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1588 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2   85[COMRAM] int 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1598 ;;      Params:         6       0       0       0       0       0       0       0       0
  1599 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1601 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1602 ;;Total ram usage:        8 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    6
  1605 ;; This function calls:
  1606 ;;		_vfpfcnvrt
  1607 ;; This function is called by:
  1608 ;;		_sprintf
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text2
  1613  001498                     __ptext2:
  1614                           	callstack 0
  1615  001498                     _vfprintf:
  1616                           	callstack 23
  1617  001498                     
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1619  001498  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1620  00149C  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1621  0014A0                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1623  0014A0  0E00               	movlw	0
  1624  0014A2  0100               	movlb	0	; () banked
  1625  0014A4  6FA4               	movwf	(_nout+1)& (0+255),b
  1626  0014A6  0E00               	movlw	0
  1627  0014A8  6FA3               	movwf	_nout& (0+255),b
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1630  0014AA  EF6A  F00A         	goto	l1744
  1631  0014AE                     l1742:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1635  0014AE  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1636  0014B2  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1637  0014B6  0E5C               	movlw	low vfprintf@cfmt
  1638  0014B8  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1639  0014BA  0E00               	movlw	high vfprintf@cfmt
  1640  0014BC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1641  0014BE  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1642  0014C2  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1643  0014C6  EC07  F008         	call	_vfpfcnvrt	;wreg free
  1644  0014CA  5043               	movf	?_vfpfcnvrt^0,w,c
  1645  0014CC  0100               	movlb	0	; () banked
  1646  0014CE  27A3               	addwf	_nout& (0+255),f,b
  1647  0014D0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1648  0014D2  23A4               	addwfc	(_nout+1)& (0+255),f,b
  1649  0014D4                     l1744:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1653  0014D4  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1654  0014D8  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1655  0014DC                     	if	0	;tblptru may be non-zero
  1656  0014DC                     	endif
  1657  0014DC                     	if	0	;tblptru may be non-zero
  1658  0014DC                     	endif
  1659  0014DC  0008               	tblrd		*
  1660  0014DE  50F5               	movf	tablat,w,c
  1661  0014E0  0900               	iorlw	0
  1662  0014E2  A4D8               	btfss	status,2,c
  1663  0014E4  EF76  F00A         	goto	u1071
  1664  0014E8  EF78  F00A         	goto	u1070
  1665  0014EC                     u1071:
  1666  0014EC  EF57  F00A         	goto	l1742
  1667  0014F0                     u1070:
  1668  0014F0                     
  1669                           ; BSR set to: 0
  1670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1671  0014F0  C0A3  F056         	movff	_nout,?_vfprintf
  1672  0014F4  C0A4  F057         	movff	_nout+1,?_vfprintf+1
  1673  0014F8                     
  1674                           ; BSR set to: 0
  1675  0014F8  0012               	return		;funcret
  1676  0014FA                     __end_of_vfprintf:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _vfpfcnvrt *****************
  1680 ;; Defined at:
  1681 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1684 ;;		 -> sprintf@f(6), 
  1685 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1686 ;;		 -> vfprintf@cfmt(2), 
  1687 ;;  ap              2   70[COMRAM] PTR PTR void 
  1688 ;;		 -> sprintf@ap(2), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  llu             8   76[COMRAM] unsigned long long 
  1691 ;;  ll              8    0        long long 
  1692 ;;  f               4    0        long long 
  1693 ;;  vp              3    0        PTR void 
  1694 ;;  ct              3    0        unsigned char [3]
  1695 ;;  cp              3    0        PTR unsigned char 
  1696 ;;  i               2    0        int 
  1697 ;;  done            2    0        int 
  1698 ;;  c               1   84[COMRAM] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2   66[COMRAM] int 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1708 ;;      Params:         6       0       0       0       0       0       0       0       0
  1709 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1710 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1711 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1712 ;;Total ram usage:       19 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    5
  1715 ;; This function calls:
  1716 ;;		_fputc
  1717 ;;		_xtoa
  1718 ;; This function is called by:
  1719 ;;		_vfprintf
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text3
  1724  00100E                     __ptext3:
  1725                           	callstack 0
  1726  00100E                     _vfpfcnvrt:
  1727                           	callstack 23
  1728  00100E                     
  1729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1730  00100E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731  001012  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732  001016  CFDE FFF6          	movff	postinc2,tblptrl
  1733  00101A  CFDD FFF7          	movff	postdec2,tblptrh
  1734  00101E                     	if	0	;tblptru may be non-zero
  1735  00101E                     	endif
  1736  00101E                     	if	0	;tblptru may be non-zero
  1737  00101E                     	endif
  1738  00101E  0008               	tblrd		*
  1739  001020  50F5               	movf	tablat,w,c
  1740  001022  0A25               	xorlw	37
  1741  001024  A4D8               	btfss	status,2,c
  1742  001026  EF17  F008         	goto	u1011
  1743  00102A  EF19  F008         	goto	u1010
  1744  00102E                     u1011:
  1745  00102E  EFD3  F008         	goto	l1696
  1746  001032                     u1010:
  1747  001032                     
  1748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1749  001032  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750  001036  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751  00103A  2ADE               	incf	postinc2,f,c
  1752  00103C  0E00               	movlw	0
  1753  00103E  22DD               	addwfc	postdec2,f,c
  1754  001040                     
  1755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1756  001040  0E00               	movlw	0
  1757  001042  0100               	movlb	0	; () banked
  1758  001044  6FA6               	movwf	(_width+1)& (0+255),b
  1759  001046  0E00               	movlw	0
  1760  001048  6FA5               	movwf	_width& (0+255),b
  1761  00104A  C0A5  F0A9         	movff	_width,_flags
  1762  00104E  C0A6  F0AA         	movff	_width+1,_flags+1
  1763  001052                     
  1764                           ; BSR set to: 0
  1765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1766  001052  69A7               	setf	_prec& (0+255),b
  1767  001054  69A8               	setf	(_prec+1)& (0+255),b
  1768  001056                     
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1771  001056  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1772  00105A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1773  00105E  CFDE FFF6          	movff	postinc2,tblptrl
  1774  001062  CFDD FFF7          	movff	postdec2,tblptrh
  1775  001066                     	if	0	;tblptru may be non-zero
  1776  001066                     	endif
  1777  001066                     	if	0	;tblptru may be non-zero
  1778  001066                     	endif
  1779  001066  0008               	tblrd		*
  1780  001068  50F5               	movf	tablat,w,c
  1781  00106A  0A78               	xorlw	120
  1782  00106C  B4D8               	btfsc	status,2,c
  1783  00106E  EF3B  F008         	goto	u1021
  1784  001072  EF3D  F008         	goto	u1020
  1785  001076                     u1021:
  1786  001076  EF4F  F008         	goto	l1670
  1787  00107A                     u1020:
  1788  00107A                     
  1789                           ; BSR set to: 0
  1790  00107A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1791  00107E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1792  001082  CFDE FFF6          	movff	postinc2,tblptrl
  1793  001086  CFDD FFF7          	movff	postdec2,tblptrh
  1794  00108A                     	if	0	;tblptru may be non-zero
  1795  00108A                     	endif
  1796  00108A                     	if	0	;tblptru may be non-zero
  1797  00108A                     	endif
  1798  00108A  0008               	tblrd		*
  1799  00108C  50F5               	movf	tablat,w,c
  1800  00108E  0A58               	xorlw	88
  1801  001090  A4D8               	btfss	status,2,c
  1802  001092  EF4D  F008         	goto	u1031
  1803  001096  EF4F  F008         	goto	u1030
  1804  00109A                     u1031:
  1805  00109A  EF9D  F008         	goto	l1680
  1806  00109E                     u1030:
  1807  00109E                     l1670:
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1811  00109E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  0010A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  0010A6  CFDE FFF6          	movff	postinc2,tblptrl
  1814  0010AA  CFDD FFF7          	movff	postdec2,tblptrh
  1815  0010AE                     	if	0	;tblptru may be non-zero
  1816  0010AE                     	endif
  1817  0010AE                     	if	0	;tblptru may be non-zero
  1818  0010AE                     	endif
  1819  0010AE  0008               	tblrd		*
  1820  0010B0  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1821  0010B4                     
  1822                           ; BSR set to: 0
  1823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1824  0010B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1825  0010B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1826  0010BC  2ADE               	incf	postinc2,f,c
  1827  0010BE  0E00               	movlw	0
  1828  0010C0  22DD               	addwfc	postdec2,f,c
  1829  0010C2                     
  1830                           ; BSR set to: 0
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1832  0010C2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1833  0010C6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1834  0010CA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1835  0010CE  0E02               	movlw	2
  1836  0010D0  26DE               	addwf	postinc2,f,c
  1837  0010D2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1838  0010D6  0E00               	movlw	0
  1839  0010D8  22DD               	addwfc	postdec2,f,c
  1840  0010DA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1841  0010DE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1842  0010E2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1843  0010E6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1844  0010EA  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1845  0010EE  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1846  0010F2  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1847  0010F4  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1848  0010F6  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1849  0010F8  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1850  0010FA  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1851  0010FC  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1852  0010FE                     
  1853                           ; BSR set to: 0
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1855  0010FE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1856  001102  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1857  001106  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1858  00110A  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1859  00110E  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1860  001112  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1861  001116  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1862  00111A  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1863  00111E  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1864  001122  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1865  001126  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1866  00112A  EC9A  F006         	call	_xtoa	;wreg free
  1867  00112E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1868  001132  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1869  001136  EFEE  F008         	goto	l973
  1870  00113A                     l1680:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1874  00113A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1875  00113E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1876  001142  CFDE FFF6          	movff	postinc2,tblptrl
  1877  001146  CFDD FFF7          	movff	postdec2,tblptrh
  1878  00114A                     	if	0	;tblptru may be non-zero
  1879  00114A                     	endif
  1880  00114A                     	if	0	;tblptru may be non-zero
  1881  00114A                     	endif
  1882  00114A  0008               	tblrd		*
  1883  00114C  50F5               	movf	tablat,w,c
  1884  00114E  0A25               	xorlw	37
  1885  001150  A4D8               	btfss	status,2,c
  1886  001152  EFAD  F008         	goto	u1041
  1887  001156  EFAF  F008         	goto	u1040
  1888  00115A                     u1041:
  1889  00115A  EFC6  F008         	goto	l1690
  1890  00115E                     u1040:
  1891  00115E                     
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1894  00115E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1895  001162  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1896  001166  2ADE               	incf	postinc2,f,c
  1897  001168  0E00               	movlw	0
  1898  00116A  22DD               	addwfc	postdec2,f,c
  1899  00116C                     
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1902  00116C  0E00               	movlw	0
  1903  00116E  6E02               	movwf	(fputc@c+1)^0,c
  1904  001170  0E25               	movlw	37
  1905  001172  6E01               	movwf	fputc@c^0,c
  1906  001174  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1907  001178  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1908  00117C  ECEF  F008         	call	_fputc	;wreg free
  1909  001180                     l1686:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1912  001180  0E00               	movlw	0
  1913  001182  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1914  001184  0E01               	movlw	1
  1915  001186  6E43               	movwf	?_vfpfcnvrt^0,c
  1916  001188  EFEE  F008         	goto	l973
  1917  00118C                     l1690:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1921  00118C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1922  001190  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1923  001194  2ADE               	incf	postinc2,f,c
  1924  001196  0E00               	movlw	0
  1925  001198  22DD               	addwfc	postdec2,f,c
  1926  00119A                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1929  00119A  0E00               	movlw	0
  1930  00119C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1931  00119E  0E00               	movlw	0
  1932  0011A0  6E43               	movwf	?_vfpfcnvrt^0,c
  1933  0011A2  EFEE  F008         	goto	l973
  1934  0011A6                     l1696:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1937  0011A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1938  0011AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1939  0011AE  CFDE FFF6          	movff	postinc2,tblptrl
  1940  0011B2  CFDD FFF7          	movff	postdec2,tblptrh
  1941  0011B6                     	if	0	;tblptru may be non-zero
  1942  0011B6                     	endif
  1943  0011B6                     	if	0	;tblptru may be non-zero
  1944  0011B6                     	endif
  1945  0011B6  0008               	tblrd		*
  1946  0011B8  50F5               	movf	tablat,w,c
  1947  0011BA  6E01               	movwf	fputc@c^0,c
  1948  0011BC  6A02               	clrf	(fputc@c+1)^0,c
  1949  0011BE  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1950  0011C2  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1951  0011C6  ECEF  F008         	call	_fputc	;wreg free
  1952  0011CA                     
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1954  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1955  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1956  0011D2  2ADE               	incf	postinc2,f,c
  1957  0011D4  0E00               	movlw	0
  1958  0011D6  22DD               	addwfc	postdec2,f,c
  1959  0011D8  EFC0  F008         	goto	l1686
  1960  0011DC                     l973:
  1961  0011DC  0012               	return		;funcret
  1962  0011DE                     __end_of_vfpfcnvrt:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _xtoa *****************
  1966 ;; Defined at:
  1967 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1970 ;;		 -> sprintf@f(6), 
  1971 ;;  d               8   29[COMRAM] unsigned long long 
  1972 ;;  x               1   37[COMRAM] unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  n               8   54[COMRAM] unsigned long long 
  1975 ;;  c               2   64[COMRAM] int 
  1976 ;;  i               2   62[COMRAM] int 
  1977 ;;  w               2   52[COMRAM] int 
  1978 ;;  p               2   50[COMRAM] int 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2   27[COMRAM] int 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:        11       0       0       0       0       0       0       0       0
  1989 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1990 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1991 ;;      Totals:        39       0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:       39 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    4
  1995 ;; This function calls:
  1996 ;;		_isalpha
  1997 ;;		_isupper
  1998 ;;		_pad
  1999 ;;		_toupper
  2000 ;; This function is called by:
  2001 ;;		_vfpfcnvrt
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text4
  2006  000D34                     __ptext4:
  2007                           	callstack 0
  2008  000D34                     _xtoa:
  2009                           	callstack 23
  2010  000D34                     
  2011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2012  000D34  0100               	movlb	0	; () banked
  2013  000D36  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  2014  000D38  EFA0  F006         	goto	u821
  2015  000D3C  EFA2  F006         	goto	u820
  2016  000D40                     u821:
  2017  000D40  EFA3  F006         	goto	l1578
  2018  000D44                     u820:
  2019  000D44                     
  2020                           ; BSR set to: 0
  2021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2022  000D44  93A9               	bcf	_flags& (0+255),1,b
  2023  000D46                     l1578:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2027  000D46  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  2028  000D48  EFB0  F006         	goto	u830
  2029  000D4C  51A8               	movf	(_prec+1)& (0+255),w,b
  2030  000D4E  E106               	bnz	u831
  2031  000D50  05A7               	decf	_prec& (0+255),w,b
  2032  000D52  B0D8               	btfsc	status,0,c
  2033  000D54  EFAE  F006         	goto	u831
  2034  000D58  EFB0  F006         	goto	u830
  2035  000D5C                     u831:
  2036  000D5C  EFB6  F006         	goto	l941
  2037  000D60                     u830:
  2038  000D60                     
  2039                           ; BSR set to: 0
  2040  000D60  0E00               	movlw	0
  2041  000D62  6E34               	movwf	(xtoa@p+1)^0,c
  2042  000D64  0E01               	movlw	1
  2043  000D66  6E33               	movwf	xtoa@p^0,c
  2044  000D68  EFBA  F006         	goto	l943
  2045  000D6C                     l941:
  2046                           
  2047                           ; BSR set to: 0
  2048  000D6C  C0A7  F033         	movff	_prec,xtoa@p
  2049  000D70  C0A8  F034         	movff	_prec+1,xtoa@p+1
  2050  000D74                     l943:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2054  000D74  C0A5  F035         	movff	_width,xtoa@w
  2055  000D78  C0A6  F036         	movff	_width+1,xtoa@w+1
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2058  000D7C  A9A9               	btfss	_flags& (0+255),4,b
  2059  000D7E  EFC3  F006         	goto	u841
  2060  000D82  EFC5  F006         	goto	u840
  2061  000D86                     u841:
  2062  000D86  EFC9  F006         	goto	l1584
  2063  000D8A                     u840:
  2064  000D8A                     
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2067  000D8A  0EFE               	movlw	254
  2068  000D8C  2635               	addwf	xtoa@w^0,f,c
  2069  000D8E  0EFF               	movlw	255
  2070  000D90  2236               	addwfc	(xtoa@w+1)^0,f,c
  2071  000D92                     l1584:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2075  000D92  C01E  F037         	movff	xtoa@d,xtoa@n
  2076  000D96  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  2077  000D9A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  2078  000D9E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  2079  000DA2  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  2080  000DA6  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  2081  000DAA  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  2082  000DAE  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  2083  000DB2                     
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2086  000DB2  0E00               	movlw	0
  2087  000DB4  6E40               	movwf	(xtoa@i+1)^0,c
  2088  000DB6  0E1F               	movlw	31
  2089  000DB8  6E3F               	movwf	xtoa@i^0,c
  2090  000DBA                     
  2091                           ; BSR set to: 0
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2093  000DBA  0E00               	movlw	0
  2094  000DBC  0101               	movlb	1	; () banked
  2095  000DBE  6F33               	movwf	(_dbuf+31)& (0+255),b
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2098  000DC0  EF95  F007         	goto	l1620
  2099  000DC4                     l1590:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  2102  000DC4  063F               	decf	xtoa@i^0,f,c
  2103  000DC6  A0D8               	btfss	status,0,c
  2104  000DC8  0640               	decf	(xtoa@i+1)^0,f,c
  2105  000DCA                     
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2107  000DCA  0E0F               	movlw	15
  2108  000DCC  1437               	andwf	xtoa@n^0,w,c
  2109  000DCE  6E41               	movwf	xtoa@c^0,c
  2110  000DD0  6A42               	clrf	(xtoa@c+1)^0,c
  2111  000DD2                     
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2113  000DD2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  2114  000DD4  EFF5  F006         	goto	u851
  2115  000DD8  5042               	movf	(xtoa@c+1)^0,w,c
  2116  000DDA  E109               	bnz	u850
  2117  000DDC  0E0A               	movlw	10
  2118  000DDE  5C41               	subwf	xtoa@c^0,w,c
  2119  000DE0  A0D8               	btfss	status,0,c
  2120  000DE2  EFF5  F006         	goto	u851
  2121  000DE6  EFF7  F006         	goto	u850
  2122  000DEA                     u851:
  2123  000DEA  EFFF  F006         	goto	l1598
  2124  000DEE                     u850:
  2125  000DEE  0E57               	movlw	87
  2126  000DF0  2441               	addwf	xtoa@c^0,w,c
  2127  000DF2  6E41               	movwf	xtoa@c^0,c
  2128  000DF4  0E00               	movlw	0
  2129  000DF6  2042               	addwfc	(xtoa@c+1)^0,w,c
  2130  000DF8  6E42               	movwf	(xtoa@c+1)^0,c
  2131  000DFA  EF05  F007         	goto	l950
  2132  000DFE                     l1598:
  2133  000DFE  0E30               	movlw	48
  2134  000E00  2441               	addwf	xtoa@c^0,w,c
  2135  000E02  6E41               	movwf	xtoa@c^0,c
  2136  000E04  0E00               	movlw	0
  2137  000E06  2042               	addwfc	(xtoa@c+1)^0,w,c
  2138  000E08  6E42               	movwf	(xtoa@c+1)^0,c
  2139  000E0A                     l950:
  2140  000E0A  0EBF               	movlw	191
  2141  000E0C  6E27               	movwf	??_xtoa^0,c
  2142  000E0E  0EFF               	movlw	255
  2143  000E10  6E28               	movwf	(??_xtoa+1)^0,c
  2144  000E12  5026               	movf	xtoa@x^0,w,c
  2145  000E14  6E29               	movwf	(??_xtoa+2)^0,c
  2146  000E16  6A2A               	clrf	(??_xtoa+3)^0,c
  2147  000E18  5027               	movf	??_xtoa^0,w,c
  2148  000E1A  2629               	addwf	(??_xtoa+2)^0,f,c
  2149  000E1C  5028               	movf	(??_xtoa+1)^0,w,c
  2150  000E1E  222A               	addwfc	(??_xtoa+3)^0,f,c
  2151  000E20  502A               	movf	(??_xtoa+3)^0,w,c
  2152  000E22  E10A               	bnz	u860
  2153  000E24  0E1A               	movlw	26
  2154  000E26  5C29               	subwf	(??_xtoa+2)^0,w,c
  2155  000E28  A0D8               	btfss	status,0,c
  2156  000E2A  EF19  F007         	goto	u861
  2157  000E2E  EF1C  F007         	goto	u860
  2158  000E32                     u861:
  2159  000E32  0E01               	movlw	1
  2160  000E34  EF1D  F007         	goto	u870
  2161  000E38                     u860:
  2162  000E38  0E00               	movlw	0
  2163  000E3A                     u870:
  2164  000E3A  6E2F               	movwf	_xtoa$764^0,c
  2165  000E3C  6A30               	clrf	(_xtoa$764+1)^0,c
  2166  000E3E  502F               	movf	_xtoa$764^0,w,c
  2167  000E40  1030               	iorwf	(_xtoa$764+1)^0,w,c
  2168  000E42  B4D8               	btfsc	status,2,c
  2169  000E44  EF26  F007         	goto	u881
  2170  000E48  EF28  F007         	goto	u880
  2171  000E4C                     u881:
  2172  000E4C  EF58  F007         	goto	l1612
  2173  000E50                     u880:
  2174  000E50  0E9F               	movlw	159
  2175  000E52  6E27               	movwf	??_xtoa^0,c
  2176  000E54  0EFF               	movlw	255
  2177  000E56  6E28               	movwf	(??_xtoa+1)^0,c
  2178  000E58  0E20               	movlw	32
  2179  000E5A  1041               	iorwf	xtoa@c^0,w,c
  2180  000E5C  6E29               	movwf	(??_xtoa+2)^0,c
  2181  000E5E  0E00               	movlw	0
  2182  000E60  1042               	iorwf	(xtoa@c+1)^0,w,c
  2183  000E62  6E2A               	movwf	(??_xtoa+3)^0,c
  2184  000E64  5027               	movf	??_xtoa^0,w,c
  2185  000E66  2629               	addwf	(??_xtoa+2)^0,f,c
  2186  000E68  5028               	movf	(??_xtoa+1)^0,w,c
  2187  000E6A  222A               	addwfc	(??_xtoa+3)^0,f,c
  2188  000E6C  502A               	movf	(??_xtoa+3)^0,w,c
  2189  000E6E  E10A               	bnz	u890
  2190  000E70  0E1A               	movlw	26
  2191  000E72  5C29               	subwf	(??_xtoa+2)^0,w,c
  2192  000E74  A0D8               	btfss	status,0,c
  2193  000E76  EF3F  F007         	goto	u891
  2194  000E7A  EF42  F007         	goto	u890
  2195  000E7E                     u891:
  2196  000E7E  0E01               	movlw	1
  2197  000E80  EF43  F007         	goto	u900
  2198  000E84                     u890:
  2199  000E84  0E00               	movlw	0
  2200  000E86                     u900:
  2201  000E86  6E31               	movwf	_xtoa$765^0,c
  2202  000E88  6A32               	clrf	(_xtoa$765+1)^0,c
  2203  000E8A  5031               	movf	_xtoa$765^0,w,c
  2204  000E8C  1032               	iorwf	(_xtoa$765+1)^0,w,c
  2205  000E8E  B4D8               	btfsc	status,2,c
  2206  000E90  EF4C  F007         	goto	u911
  2207  000E94  EF4E  F007         	goto	u910
  2208  000E98                     u911:
  2209  000E98  EF58  F007         	goto	l1612
  2210  000E9C                     u910:
  2211  000E9C                     
  2212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2213  000E9C  C041  F007         	movff	xtoa@c,toupper@c
  2214  000EA0  C042  F008         	movff	xtoa@c+1,toupper@c+1
  2215  000EA4  EC7D  F00A         	call	_toupper	;wreg free
  2216  000EA8  C007  F041         	movff	?_toupper,xtoa@c
  2217  000EAC  C008  F042         	movff	?_toupper+1,xtoa@c+1
  2218  000EB0                     l1612:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2221  000EB0  0E14               	movlw	low _dbuf
  2222  000EB2  243F               	addwf	xtoa@i^0,w,c
  2223  000EB4  6ED9               	movwf	fsr2l,c
  2224  000EB6  0E01               	movlw	high _dbuf
  2225  000EB8  2040               	addwfc	(xtoa@i+1)^0,w,c
  2226  000EBA  6EDA               	movwf	fsr2h,c
  2227  000EBC  C041  FFDF         	movff	xtoa@c,indf2
  2228  000EC0                     
  2229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  2230  000EC0  0633               	decf	xtoa@p^0,f,c
  2231  000EC2  A0D8               	btfss	status,0,c
  2232  000EC4  0634               	decf	(xtoa@p+1)^0,f,c
  2233  000EC6                     
  2234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  2235  000EC6  0635               	decf	xtoa@w^0,f,c
  2236  000EC8  A0D8               	btfss	status,0,c
  2237  000ECA  0636               	decf	(xtoa@w+1)^0,f,c
  2238  000ECC                     
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2240  000ECC  C037  F027         	movff	xtoa@n,??_xtoa
  2241  000ED0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  2242  000ED4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  2243  000ED8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  2244  000EDC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  2245  000EE0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  2246  000EE4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  2247  000EE8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  2248  000EEC  0E05               	movlw	5
  2249  000EEE  EF82  F007         	goto	u920
  2250  000EF2                     u925:
  2251  000EF2  90D8               	bcf	status,0,c
  2252  000EF4  322E               	rrcf	(??_xtoa+7)^0,f,c
  2253  000EF6  322D               	rrcf	(??_xtoa+6)^0,f,c
  2254  000EF8  322C               	rrcf	(??_xtoa+5)^0,f,c
  2255  000EFA  322B               	rrcf	(??_xtoa+4)^0,f,c
  2256  000EFC  322A               	rrcf	(??_xtoa+3)^0,f,c
  2257  000EFE  3229               	rrcf	(??_xtoa+2)^0,f,c
  2258  000F00  3228               	rrcf	(??_xtoa+1)^0,f,c
  2259  000F02  3227               	rrcf	??_xtoa^0,f,c
  2260  000F04                     u920:
  2261  000F04  2EE8               	decfsz	wreg,f,c
  2262  000F06  EF79  F007         	goto	u925
  2263  000F0A  C027  F037         	movff	??_xtoa,xtoa@n
  2264  000F0E  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  2265  000F12  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  2266  000F16  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  2267  000F1A  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  2268  000F1E  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  2269  000F22  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  2270  000F26  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  2271  000F2A                     l1620:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2274  000F2A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  2275  000F2C  EFA1  F007         	goto	u931
  2276  000F30  5040               	movf	(xtoa@i+1)^0,w,c
  2277  000F32  E109               	bnz	u930
  2278  000F34  0E02               	movlw	2
  2279  000F36  5C3F               	subwf	xtoa@i^0,w,c
  2280  000F38  A0D8               	btfss	status,0,c
  2281  000F3A  EFA1  F007         	goto	u931
  2282  000F3E  EFA3  F007         	goto	u930
  2283  000F42                     u931:
  2284  000F42  EFD4  F007         	goto	l964
  2285  000F46                     u930:
  2286  000F46  5037               	movf	xtoa@n^0,w,c
  2287  000F48  1038               	iorwf	(xtoa@n+1)^0,w,c
  2288  000F4A  1039               	iorwf	(xtoa@n+2)^0,w,c
  2289  000F4C  103A               	iorwf	(xtoa@n+3)^0,w,c
  2290  000F4E  103B               	iorwf	(xtoa@n+4)^0,w,c
  2291  000F50  103C               	iorwf	(xtoa@n+5)^0,w,c
  2292  000F52  103D               	iorwf	(xtoa@n+6)^0,w,c
  2293  000F54  103E               	iorwf	(xtoa@n+7)^0,w,c
  2294  000F56  A4D8               	btfss	status,2,c
  2295  000F58  EFB0  F007         	goto	u941
  2296  000F5C  EFB2  F007         	goto	u940
  2297  000F60                     u941:
  2298  000F60  EFE2  F006         	goto	l1590
  2299  000F64                     u940:
  2300  000F64  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2301  000F66  EFBF  F007         	goto	u950
  2302  000F6A  5034               	movf	(xtoa@p+1)^0,w,c
  2303  000F6C  E106               	bnz	u951
  2304  000F6E  0433               	decf	xtoa@p^0,w,c
  2305  000F70  B0D8               	btfsc	status,0,c
  2306  000F72  EFBD  F007         	goto	u951
  2307  000F76  EFBF  F007         	goto	u950
  2308  000F7A                     u951:
  2309  000F7A  EFE2  F006         	goto	l1590
  2310  000F7E                     u950:
  2311  000F7E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2312  000F80  EFCA  F007         	goto	u961
  2313  000F84  5036               	movf	(xtoa@w+1)^0,w,c
  2314  000F86  E108               	bnz	u960
  2315  000F88  0435               	decf	xtoa@w^0,w,c
  2316  000F8A  A0D8               	btfss	status,0,c
  2317  000F8C  EFCA  F007         	goto	u961
  2318  000F90  EFCC  F007         	goto	u960
  2319  000F94                     u961:
  2320  000F94  EFD4  F007         	goto	l964
  2321  000F98                     u960:
  2322  000F98  0100               	movlb	0	; () banked
  2323  000F9A  B3A9               	btfsc	_flags& (0+255),1,b
  2324  000F9C  EFD2  F007         	goto	u971
  2325  000FA0  EFD4  F007         	goto	u970
  2326  000FA4                     u971:
  2327  000FA4  EFE2  F006         	goto	l1590
  2328  000FA8                     u970:
  2329  000FA8                     l964:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2332  000FA8  0100               	movlb	0	; () banked
  2333  000FAA  A9A9               	btfss	_flags& (0+255),4,b
  2334  000FAC  EFDA  F007         	goto	u981
  2335  000FB0  EFDC  F007         	goto	u980
  2336  000FB4                     u981:
  2337  000FB4  EFF2  F007         	goto	l1636
  2338  000FB8                     u980:
  2339  000FB8                     
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2342  000FB8  063F               	decf	xtoa@i^0,f,c
  2343  000FBA  A0D8               	btfss	status,0,c
  2344  000FBC  0640               	decf	(xtoa@i+1)^0,f,c
  2345  000FBE                     
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2348  000FBE  0E14               	movlw	low _dbuf
  2349  000FC0  243F               	addwf	xtoa@i^0,w,c
  2350  000FC2  6ED9               	movwf	fsr2l,c
  2351  000FC4  0E01               	movlw	high _dbuf
  2352  000FC6  2040               	addwfc	(xtoa@i+1)^0,w,c
  2353  000FC8  6EDA               	movwf	fsr2h,c
  2354  000FCA  C026  FFDF         	movff	xtoa@x,indf2
  2355  000FCE                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2358  000FCE  063F               	decf	xtoa@i^0,f,c
  2359  000FD0  A0D8               	btfss	status,0,c
  2360  000FD2  0640               	decf	(xtoa@i+1)^0,f,c
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2363  000FD4  0E14               	movlw	low _dbuf
  2364  000FD6  243F               	addwf	xtoa@i^0,w,c
  2365  000FD8  6ED9               	movwf	fsr2l,c
  2366  000FDA  0E01               	movlw	high _dbuf
  2367  000FDC  2040               	addwfc	(xtoa@i+1)^0,w,c
  2368  000FDE  6EDA               	movwf	fsr2h,c
  2369  000FE0  0E30               	movlw	48
  2370  000FE2  6EDF               	movwf	indf2,c
  2371  000FE4                     l1636:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2375  000FE4  C01C  F011         	movff	xtoa@fp,pad@fp
  2376  000FE8  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2377  000FEC  0E14               	movlw	low _dbuf
  2378  000FEE  243F               	addwf	xtoa@i^0,w,c
  2379  000FF0  6E13               	movwf	pad@buf^0,c
  2380  000FF2  0E01               	movlw	high _dbuf
  2381  000FF4  2040               	addwfc	(xtoa@i+1)^0,w,c
  2382  000FF6  6E14               	movwf	(pad@buf+1)^0,c
  2383  000FF8  C035  F015         	movff	xtoa@w,pad@p
  2384  000FFC  C036  F016         	movff	xtoa@w+1,pad@p+1
  2385  001000  EC54  F009         	call	_pad	;wreg free
  2386  001004  C011  F01C         	movff	?_pad,?_xtoa
  2387  001008  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2388  00100C  0012               	return		;funcret
  2389  00100E                     __end_of_xtoa:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _toupper *****************
  2393 ;; Defined at:
  2394 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  c               2    6[COMRAM] int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    6[COMRAM] int 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2408 ;;      Params:         2       0       0       0       0       0       0       0       0
  2409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2410 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2411 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2412 ;;Total ram usage:        8 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		_islower
  2417 ;; This function is called by:
  2418 ;;		_xtoa
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text5
  2423  0014FA                     __ptext5:
  2424                           	callstack 0
  2425  0014FA                     _toupper:
  2426                           	callstack 25
  2427  0014FA  0E9F               	movlw	159
  2428  0014FC  6E09               	movwf	??_toupper^0,c
  2429  0014FE  0EFF               	movlw	255
  2430  001500  6E0A               	movwf	(??_toupper+1)^0,c
  2431  001502  C007  F00B         	movff	toupper@c,??_toupper+2
  2432  001506  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2433  00150A  5009               	movf	??_toupper^0,w,c
  2434  00150C  260B               	addwf	(??_toupper+2)^0,f,c
  2435  00150E  500A               	movf	(??_toupper+1)^0,w,c
  2436  001510  220C               	addwfc	(??_toupper+3)^0,f,c
  2437  001512  500C               	movf	(??_toupper+3)^0,w,c
  2438  001514  E10A               	bnz	u790
  2439  001516  0E1A               	movlw	26
  2440  001518  5C0B               	subwf	(??_toupper+2)^0,w,c
  2441  00151A  A0D8               	btfss	status,0,c
  2442  00151C  EF92  F00A         	goto	u791
  2443  001520  EF95  F00A         	goto	u790
  2444  001524                     u791:
  2445  001524  0E01               	movlw	1
  2446  001526  EF96  F00A         	goto	u800
  2447  00152A                     u790:
  2448  00152A  0E00               	movlw	0
  2449  00152C                     u800:
  2450  00152C  6E0D               	movwf	_toupper$847^0,c
  2451  00152E  6A0E               	clrf	(_toupper$847+1)^0,c
  2452  001530  500D               	movf	_toupper$847^0,w,c
  2453  001532  100E               	iorwf	(_toupper$847+1)^0,w,c
  2454  001534  B4D8               	btfsc	status,2,c
  2455  001536  EF9F  F00A         	goto	u811
  2456  00153A  EFA1  F00A         	goto	u810
  2457  00153E                     u811:
  2458  00153E  EFA7  F00A         	goto	l1026
  2459  001542                     u810:
  2460  001542  0E5F               	movlw	95
  2461  001544  1407               	andwf	toupper@c^0,w,c
  2462  001546  6E07               	movwf	?_toupper^0,c
  2463  001548  6A08               	clrf	(?_toupper+1)^0,c
  2464  00154A  EFAB  F00A         	goto	l1031
  2465  00154E                     l1026:
  2466  00154E  C007  F007         	movff	toupper@c,?_toupper
  2467  001552  C008  F008         	movff	toupper@c+1,?_toupper+1
  2468  001556                     l1031:
  2469  001556  0012               	return		;funcret
  2470  001558                     __end_of_toupper:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _islower *****************
  2474 ;; Defined at:
  2475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  c               2    0[COMRAM] int 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  2    0[COMRAM] int 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2489 ;;      Params:         2       0       0       0       0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2491 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2492 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2493 ;;Total ram usage:        6 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_toupper
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text6
  2503  0016F6                     __ptext6:
  2504                           	callstack 0
  2505  0016F6                     _islower:
  2506                           	callstack 25
  2507  0016F6  0E9F               	movlw	159
  2508  0016F8  6E03               	movwf	??_islower^0,c
  2509  0016FA  0EFF               	movlw	255
  2510  0016FC  6E04               	movwf	(??_islower+1)^0,c
  2511  0016FE  C001  F005         	movff	islower@c,??_islower+2
  2512  001702  C002  F006         	movff	islower@c+1,??_islower+3
  2513  001706  5003               	movf	??_islower^0,w,c
  2514  001708  2605               	addwf	(??_islower+2)^0,f,c
  2515  00170A  5004               	movf	(??_islower+1)^0,w,c
  2516  00170C  2206               	addwfc	(??_islower+3)^0,f,c
  2517  00170E  5006               	movf	(??_islower+3)^0,w,c
  2518  001710  E10A               	bnz	u690
  2519  001712  0E1A               	movlw	26
  2520  001714  5C05               	subwf	(??_islower+2)^0,w,c
  2521  001716  A0D8               	btfss	status,0,c
  2522  001718  EF90  F00B         	goto	u691
  2523  00171C  EF93  F00B         	goto	u690
  2524  001720                     u691:
  2525  001720  0E01               	movlw	1
  2526  001722  EF94  F00B         	goto	u700
  2527  001726                     u690:
  2528  001726  0E00               	movlw	0
  2529  001728                     u700:
  2530  001728  6E01               	movwf	?_islower^0,c
  2531  00172A  6A02               	clrf	(?_islower+1)^0,c
  2532  00172C  0012               	return		;funcret
  2533  00172E                     __end_of_islower:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _pad *****************
  2537 ;; Defined at:
  2538 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2541 ;;		 -> sprintf@f(6), 
  2542 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2543 ;;		 -> dbuf(32), 
  2544 ;;  p               2   20[COMRAM] int 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  w               2   25[COMRAM] int 
  2547 ;;  i               2   23[COMRAM] int 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2   16[COMRAM] int 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2557 ;;      Params:         6       0       0       0       0       0       0       0       0
  2558 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2559 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2560 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2561 ;;Total ram usage:       11 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		_fputc
  2566 ;;		_fputs
  2567 ;;		_strlen
  2568 ;; This function is called by:
  2569 ;;		_xtoa
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text7
  2574  0012A8                     __ptext7:
  2575                           	callstack 0
  2576  0012A8                     _pad:
  2577                           	callstack 23
  2578  0012A8                     
  2579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2580  0012A8  0100               	movlb	0	; () banked
  2581  0012AA  A1A9               	btfss	_flags& (0+255),0,b
  2582  0012AC  EF5A  F009         	goto	u711
  2583  0012B0  EF5C  F009         	goto	u710
  2584  0012B4                     u711:
  2585  0012B4  EF66  F009         	goto	l1538
  2586  0012B8                     u710:
  2587  0012B8                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2590  0012B8  C013  F00A         	movff	pad@buf,fputs@s
  2591  0012BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2592  0012C0  C011  F00C         	movff	pad@fp,fputs@fp
  2593  0012C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2594  0012C8  ECF8  F00A         	call	_fputs	;wreg free
  2595  0012CC                     l1538:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2598  0012CC  BE16               	btfsc	(pad@p+1)^0,7,c
  2599  0012CE  EF6B  F009         	goto	u721
  2600  0012D2  EF6D  F009         	goto	u720
  2601  0012D6                     u721:
  2602  0012D6  EF73  F009         	goto	l1542
  2603  0012DA                     u720:
  2604  0012DA  C015  F01A         	movff	pad@p,pad@w
  2605  0012DE  C016  F01B         	movff	pad@p+1,pad@w+1
  2606  0012E2  EF77  F009         	goto	l931
  2607  0012E6                     l1542:
  2608  0012E6  0E00               	movlw	0
  2609  0012E8  6E1B               	movwf	(pad@w+1)^0,c
  2610  0012EA  0E00               	movlw	0
  2611  0012EC  6E1A               	movwf	pad@w^0,c
  2612  0012EE                     l931:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2615  0012EE  0E00               	movlw	0
  2616  0012F0  6E19               	movwf	(pad@i+1)^0,c
  2617  0012F2  0E00               	movlw	0
  2618  0012F4  6E18               	movwf	pad@i^0,c
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2621  0012F6  EF89  F009         	goto	l1548
  2622  0012FA                     l1544:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2625  0012FA  0E00               	movlw	0
  2626  0012FC  6E02               	movwf	(fputc@c+1)^0,c
  2627  0012FE  0E20               	movlw	32
  2628  001300  6E01               	movwf	fputc@c^0,c
  2629  001302  C011  F003         	movff	pad@fp,fputc@fp
  2630  001306  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2631  00130A  ECEF  F008         	call	_fputc	;wreg free
  2632  00130E                     
  2633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2634  00130E  4A18               	infsnz	pad@i^0,f,c
  2635  001310  2A19               	incf	(pad@i+1)^0,f,c
  2636  001312                     l1548:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2639  001312  501A               	movf	pad@w^0,w,c
  2640  001314  5C18               	subwf	pad@i^0,w,c
  2641  001316  5019               	movf	(pad@i+1)^0,w,c
  2642  001318  0A80               	xorlw	128
  2643  00131A  6E17               	movwf	??_pad^0,c
  2644  00131C  501B               	movf	(pad@w+1)^0,w,c
  2645  00131E  0A80               	xorlw	128
  2646  001320  5817               	subwfb	??_pad^0,w,c
  2647  001322  A0D8               	btfss	status,0,c
  2648  001324  EF96  F009         	goto	u731
  2649  001328  EF98  F009         	goto	u730
  2650  00132C                     u731:
  2651  00132C  EF7D  F009         	goto	l1544
  2652  001330                     u730:
  2653  001330                     
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2655  001330  0100               	movlb	0	; () banked
  2656  001332  B1A9               	btfsc	_flags& (0+255),0,b
  2657  001334  EF9E  F009         	goto	u741
  2658  001338  EFA0  F009         	goto	u740
  2659  00133C                     u741:
  2660  00133C  EFAA  F009         	goto	l1552
  2661  001340                     u740:
  2662  001340                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2665  001340  C013  F00A         	movff	pad@buf,fputs@s
  2666  001344  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2667  001348  C011  F00C         	movff	pad@fp,fputs@fp
  2668  00134C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2669  001350  ECF8  F00A         	call	_fputs	;wreg free
  2670  001354                     l1552:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2673  001354  C013  F001         	movff	pad@buf,strlen@s
  2674  001358  C014  F002         	movff	pad@buf+1,strlen@s+1
  2675  00135C  ECB3  F00B         	call	_strlen	;wreg free
  2676  001360  501A               	movf	pad@w^0,w,c
  2677  001362  2401               	addwf	?_strlen^0,w,c
  2678  001364  6E11               	movwf	?_pad^0,c
  2679  001366  501B               	movf	(pad@w+1)^0,w,c
  2680  001368  2002               	addwfc	(?_strlen+1)^0,w,c
  2681  00136A  6E12               	movwf	(?_pad+1)^0,c
  2682  00136C  0012               	return		;funcret
  2683  00136E                     __end_of_pad:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _strlen *****************
  2687 ;; Defined at:
  2688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2691 ;;		 -> dbuf(32), text9(5), text8(5), text7(5), 
  2692 ;;		 -> text6(5), text5(5), text4(5), text3(5), 
  2693 ;;		 -> dma(20), smh(20), text2(5), text1(5), 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2696 ;;		 -> dbuf(32), text9(5), text8(5), text7(5), 
  2697 ;;		 -> text6(5), text5(5), text4(5), text3(5), 
  2698 ;;		 -> dma(20), smh(20), text2(5), text1(5), 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2    0[COMRAM] unsigned int 
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         2       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2712 ;;Total ram usage:        4 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;;		_pad
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text8
  2723  001766                     __ptext8:
  2724                           	callstack 0
  2725  001766                     _strlen:
  2726                           	callstack 30
  2727  001766  C001  F003         	movff	strlen@s,strlen@a
  2728  00176A  C002  F004         	movff	strlen@s+1,strlen@a+1
  2729  00176E  EFBB  F00B         	goto	l1516
  2730  001772                     l1514:
  2731  001772  4A01               	infsnz	strlen@s^0,f,c
  2732  001774  2A02               	incf	(strlen@s+1)^0,f,c
  2733  001776                     l1516:
  2734  001776  C001  FFD9         	movff	strlen@s,fsr2l
  2735  00177A  C002  FFDA         	movff	strlen@s+1,fsr2h
  2736  00177E  50DF               	movf	indf2,w,c
  2737  001780  A4D8               	btfss	status,2,c
  2738  001782  EFC5  F00B         	goto	u671
  2739  001786  EFC7  F00B         	goto	u670
  2740  00178A                     u671:
  2741  00178A  EFB9  F00B         	goto	l1514
  2742  00178E                     u670:
  2743  00178E  5003               	movf	strlen@a^0,w,c
  2744  001790  5C01               	subwf	strlen@s^0,w,c
  2745  001792  6E01               	movwf	?_strlen^0,c
  2746  001794  5004               	movf	(strlen@a+1)^0,w,c
  2747  001796  5802               	subwfb	(strlen@s+1)^0,w,c
  2748  001798  6E02               	movwf	(?_strlen+1)^0,c
  2749  00179A  0012               	return		;funcret
  2750  00179C                     __end_of_strlen:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _fputs *****************
  2754 ;; Defined at:
  2755 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2758 ;;		 -> dbuf(32), 
  2759 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2760 ;;		 -> sprintf@f(6), 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  i               2   14[COMRAM] int 
  2763 ;;  c               1   13[COMRAM] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2    9[COMRAM] int 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2773 ;;      Params:         4       0       0       0       0       0       0       0       0
  2774 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2776 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2777 ;;Total ram usage:        7 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    2
  2780 ;; This function calls:
  2781 ;;		_fputc
  2782 ;; This function is called by:
  2783 ;;		_pad
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text9
  2788  0015F0                     __ptext9:
  2789                           	callstack 0
  2790  0015F0                     _fputs:
  2791                           	callstack 23
  2792  0015F0  0E00               	movlw	0
  2793  0015F2  6E10               	movwf	(fputs@i+1)^0,c
  2794  0015F4  0E00               	movlw	0
  2795  0015F6  6E0F               	movwf	fputs@i^0,c
  2796  0015F8  EF09  F00B         	goto	l1528
  2797  0015FC                     l1524:
  2798  0015FC  C00E  F001         	movff	fputs@c,fputc@c
  2799  001600  6A02               	clrf	(fputc@c+1)^0,c
  2800  001602  C00C  F003         	movff	fputs@fp,fputc@fp
  2801  001606  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2802  00160A  ECEF  F008         	call	_fputc	;wreg free
  2803  00160E  4A0F               	infsnz	fputs@i^0,f,c
  2804  001610  2A10               	incf	(fputs@i+1)^0,f,c
  2805  001612                     l1528:
  2806  001612  500F               	movf	fputs@i^0,w,c
  2807  001614  240A               	addwf	fputs@s^0,w,c
  2808  001616  6ED9               	movwf	fsr2l,c
  2809  001618  5010               	movf	(fputs@i+1)^0,w,c
  2810  00161A  200B               	addwfc	(fputs@s+1)^0,w,c
  2811  00161C  6EDA               	movwf	fsr2h,c
  2812  00161E  50DF               	movf	indf2,w,c
  2813  001620  6E0E               	movwf	fputs@c^0,c
  2814  001622  500E               	movf	fputs@c^0,w,c
  2815  001624  A4D8               	btfss	status,2,c
  2816  001626  EF17  F00B         	goto	u681
  2817  00162A  EF19  F00B         	goto	u680
  2818  00162E                     u681:
  2819  00162E  EFFE  F00A         	goto	l1524
  2820  001632                     u680:
  2821  001632  0012               	return		;funcret
  2822  001634                     __end_of_fputs:
  2823                           	callstack 0
  2824                           
  2825 ;; *************** function _fputc *****************
  2826 ;; Defined at:
  2827 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  c               2    0[COMRAM] int 
  2830 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2831 ;;		 -> sprintf@f(6), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2    0[COMRAM] int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         4       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        9 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		_putch
  2852 ;; This function is called by:
  2853 ;;		_pad
  2854 ;;		_vfpfcnvrt
  2855 ;;		_fputs
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text10
  2860  0011DE                     __ptext10:
  2861                           	callstack 0
  2862  0011DE                     _fputc:
  2863                           	callstack 23
  2864  0011DE  5003               	movf	fputc@fp^0,w,c
  2865  0011E0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2866  0011E2  B4D8               	btfsc	status,2,c
  2867  0011E4  EFF6  F008         	goto	u631
  2868  0011E8  EFF8  F008         	goto	u630
  2869  0011EC                     u631:
  2870  0011EC  EF01  F009         	goto	l1502
  2871  0011F0                     u630:
  2872  0011F0  5003               	movf	fputc@fp^0,w,c
  2873  0011F2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2874  0011F4  A4D8               	btfss	status,2,c
  2875  0011F6  EFFF  F008         	goto	u641
  2876  0011FA  EF01  F009         	goto	u640
  2877  0011FE                     u641:
  2878  0011FE  EF06  F009         	goto	l1504
  2879  001202                     u640:
  2880  001202                     l1502:
  2881  001202  5001               	movf	fputc@c^0,w,c
  2882  001204  EC28  F00C         	call	_putch
  2883  001208  EF53  F009         	goto	l1004
  2884  00120C                     l1504:
  2885  00120C  EE20 F004          	lfsr	2,4
  2886  001210  5003               	movf	fputc@fp^0,w,c
  2887  001212  26D9               	addwf	fsr2l,f,c
  2888  001214  5004               	movf	(fputc@fp+1)^0,w,c
  2889  001216  22DA               	addwfc	fsr2h,f,c
  2890  001218  50DE               	movf	postinc2,w,c
  2891  00121A  10DE               	iorwf	postinc2,w,c
  2892  00121C  B4D8               	btfsc	status,2,c
  2893  00121E  EF13  F009         	goto	u651
  2894  001222  EF15  F009         	goto	u650
  2895  001226                     u651:
  2896  001226  EF30  F009         	goto	l1508
  2897  00122A                     u650:
  2898  00122A  EE20 F004          	lfsr	2,4
  2899  00122E  5003               	movf	fputc@fp^0,w,c
  2900  001230  26D9               	addwf	fsr2l,f,c
  2901  001232  5004               	movf	(fputc@fp+1)^0,w,c
  2902  001234  22DA               	addwfc	fsr2h,f,c
  2903  001236  EE10 F002          	lfsr	1,2
  2904  00123A  5003               	movf	fputc@fp^0,w,c
  2905  00123C  26E1               	addwf	fsr1l,f,c
  2906  00123E  5004               	movf	(fputc@fp+1)^0,w,c
  2907  001240  22E2               	addwfc	fsr1h,f,c
  2908  001242  50DE               	movf	postinc2,w,c
  2909  001244  5CE6               	subwf	postinc1,w,c
  2910  001246  50E6               	movf	postinc1,w,c
  2911  001248  0A80               	xorlw	128
  2912  00124A  6E09               	movwf	(??_fputc+4)^0,c
  2913  00124C  50DE               	movf	postinc2,w,c
  2914  00124E  0A80               	xorlw	128
  2915  001250  5809               	subwfb	(??_fputc+4)^0,w,c
  2916  001252  B0D8               	btfsc	status,0,c
  2917  001254  EF2E  F009         	goto	u661
  2918  001258  EF30  F009         	goto	u660
  2919  00125C                     u661:
  2920  00125C  EF53  F009         	goto	l1004
  2921  001260                     u660:
  2922  001260                     l1508:
  2923  001260  EE20 F002          	lfsr	2,2
  2924  001264  5003               	movf	fputc@fp^0,w,c
  2925  001266  26D9               	addwf	fsr2l,f,c
  2926  001268  5004               	movf	(fputc@fp+1)^0,w,c
  2927  00126A  22DA               	addwfc	fsr2h,f,c
  2928  00126C  CFDE F005          	movff	postinc2,??_fputc
  2929  001270  CFDD F006          	movff	postdec2,??_fputc+1
  2930  001274  C003  FFD9         	movff	fputc@fp,fsr2l
  2931  001278  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2932  00127C  CFDE F007          	movff	postinc2,??_fputc+2
  2933  001280  CFDD F008          	movff	postdec2,??_fputc+3
  2934  001284  5005               	movf	??_fputc^0,w,c
  2935  001286  2407               	addwf	(??_fputc+2)^0,w,c
  2936  001288  6ED9               	movwf	fsr2l,c
  2937  00128A  5006               	movf	(??_fputc+1)^0,w,c
  2938  00128C  2008               	addwfc	(??_fputc+3)^0,w,c
  2939  00128E  6EDA               	movwf	fsr2h,c
  2940  001290  C001  FFDF         	movff	fputc@c,indf2
  2941  001294  EE20 F002          	lfsr	2,2
  2942  001298  5003               	movf	fputc@fp^0,w,c
  2943  00129A  26D9               	addwf	fsr2l,f,c
  2944  00129C  5004               	movf	(fputc@fp+1)^0,w,c
  2945  00129E  22DA               	addwfc	fsr2h,f,c
  2946  0012A0  2ADE               	incf	postinc2,f,c
  2947  0012A2  0E00               	movlw	0
  2948  0012A4  22DD               	addwfc	postdec2,f,c
  2949  0012A6                     l1004:
  2950  0012A6  0012               	return		;funcret
  2951  0012A8                     __end_of_fputc:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _putch *****************
  2955 ;; Defined at:
  2956 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  c               1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  c               1    0[COMRAM] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_fputc
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text11
  2984  001850                     __ptext11:
  2985                           	callstack 0
  2986  001850                     _putch:
  2987                           	callstack 23
  2988  001850  0012               	return		;funcret
  2989  001852                     __end_of_putch:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _isupper *****************
  2993 ;; Defined at:
  2994 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               2    0[COMRAM] int 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  2    0[COMRAM] int 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3008 ;;      Params:         2       0       0       0       0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3010 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3011 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        6 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_xtoa
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text12
  3022  00172E                     __ptext12:
  3023                           	callstack 0
  3024  00172E                     _isupper:
  3025                           	callstack 26
  3026  00172E  0EBF               	movlw	191
  3027  001730  6E03               	movwf	??_isupper^0,c
  3028  001732  0EFF               	movlw	255
  3029  001734  6E04               	movwf	(??_isupper+1)^0,c
  3030  001736  C001  F005         	movff	isupper@c,??_isupper+2
  3031  00173A  C002  F006         	movff	isupper@c+1,??_isupper+3
  3032  00173E  5003               	movf	??_isupper^0,w,c
  3033  001740  2605               	addwf	(??_isupper+2)^0,f,c
  3034  001742  5004               	movf	(??_isupper+1)^0,w,c
  3035  001744  2206               	addwfc	(??_isupper+3)^0,f,c
  3036  001746  5006               	movf	(??_isupper+3)^0,w,c
  3037  001748  E10A               	bnz	u750
  3038  00174A  0E1A               	movlw	26
  3039  00174C  5C05               	subwf	(??_isupper+2)^0,w,c
  3040  00174E  A0D8               	btfss	status,0,c
  3041  001750  EFAC  F00B         	goto	u751
  3042  001754  EFAF  F00B         	goto	u750
  3043  001758                     u751:
  3044  001758  0E01               	movlw	1
  3045  00175A  EFB0  F00B         	goto	u760
  3046  00175E                     u750:
  3047  00175E  0E00               	movlw	0
  3048  001760                     u760:
  3049  001760  6E01               	movwf	?_isupper^0,c
  3050  001762  6A02               	clrf	(?_isupper+1)^0,c
  3051  001764  0012               	return		;funcret
  3052  001766                     __end_of_isupper:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _isalpha *****************
  3056 ;; Defined at:
  3057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  c               2    0[COMRAM] int 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  2    0[COMRAM] int 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3071 ;;      Params:         2       0       0       0       0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3073 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3074 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3075 ;;Total ram usage:        6 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_xtoa
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text13
  3085  0016BA                     __ptext13:
  3086                           	callstack 0
  3087  0016BA                     _isalpha:
  3088                           	callstack 26
  3089  0016BA  0E9F               	movlw	159
  3090  0016BC  6E03               	movwf	??_isalpha^0,c
  3091  0016BE  0EFF               	movlw	255
  3092  0016C0  6E04               	movwf	(??_isalpha+1)^0,c
  3093  0016C2  0E20               	movlw	32
  3094  0016C4  1001               	iorwf	isalpha@c^0,w,c
  3095  0016C6  6E05               	movwf	(??_isalpha+2)^0,c
  3096  0016C8  0E00               	movlw	0
  3097  0016CA  1002               	iorwf	(isalpha@c+1)^0,w,c
  3098  0016CC  6E06               	movwf	(??_isalpha+3)^0,c
  3099  0016CE  5003               	movf	??_isalpha^0,w,c
  3100  0016D0  2605               	addwf	(??_isalpha+2)^0,f,c
  3101  0016D2  5004               	movf	(??_isalpha+1)^0,w,c
  3102  0016D4  2206               	addwfc	(??_isalpha+3)^0,f,c
  3103  0016D6  5006               	movf	(??_isalpha+3)^0,w,c
  3104  0016D8  E10A               	bnz	u770
  3105  0016DA  0E1A               	movlw	26
  3106  0016DC  5C05               	subwf	(??_isalpha+2)^0,w,c
  3107  0016DE  A0D8               	btfss	status,0,c
  3108  0016E0  EF74  F00B         	goto	u771
  3109  0016E4  EF77  F00B         	goto	u770
  3110  0016E8                     u771:
  3111  0016E8  0E01               	movlw	1
  3112  0016EA  EF78  F00B         	goto	u780
  3113  0016EE                     u770:
  3114  0016EE  0E00               	movlw	0
  3115  0016F0                     u780:
  3116  0016F0  6E01               	movwf	?_isalpha^0,c
  3117  0016F2  6A02               	clrf	(?_isalpha+1)^0,c
  3118  0016F4  0012               	return		;funcret
  3119  0016F6                     __end_of_isalpha:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _settings *****************
  3123 ;; Defined at:
  3124 ;;		line 141 in file "../main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    2
  3145 ;; This function calls:
  3146 ;;		_SettingsLCD
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text14
  3153  0015AA                     __ptext14:
  3154                           	callstack 0
  3155  0015AA                     _settings:
  3156                           	callstack 28
  3157  0015AA                     
  3158                           ;../main.c: 142:     OSCCON = 0x72;
  3159  0015AA  0E72               	movlw	114
  3160  0015AC  6ED3               	movwf	211,c	;volatile
  3161                           
  3162                           ;../main.c: 143:     ADCON1 = 0x0F;
  3163  0015AE  0E0F               	movlw	15
  3164  0015B0  6EC1               	movwf	193,c	;volatile
  3165  0015B2                     
  3166                           ;../main.c: 144:     TRISBbits.RB0 = 1;
  3167  0015B2  8093               	bsf	147,0,c	;volatile
  3168  0015B4                     
  3169                           ;../main.c: 145:     TRISBbits.RB1 = 1;
  3170  0015B4  8293               	bsf	147,1,c	;volatile
  3171                           
  3172                           ;../main.c: 146:     SSPSTAT = 0x80;
  3173  0015B6  0E80               	movlw	128
  3174  0015B8  6EC7               	movwf	199,c	;volatile
  3175                           
  3176                           ;../main.c: 147:     SSPCON1 = 0x28;
  3177  0015BA  0E28               	movlw	40
  3178  0015BC  6EC6               	movwf	198,c	;volatile
  3179                           
  3180                           ;../main.c: 148:     SSPCON2 = 0;
  3181  0015BE  0E00               	movlw	0
  3182  0015C0  6EC5               	movwf	197,c	;volatile
  3183                           
  3184                           ;../main.c: 149:     SSPADD = 0x31;
  3185  0015C2  0E31               	movlw	49
  3186  0015C4  6EC8               	movwf	200,c	;volatile
  3187                           
  3188                           ;../main.c: 151:     TRISD = 0x00;
  3189  0015C6  0E00               	movlw	0
  3190  0015C8  6E95               	movwf	149,c	;volatile
  3191                           
  3192                           ;../main.c: 152:     LATD = 0x00;
  3193  0015CA  0E00               	movlw	0
  3194  0015CC  6E8C               	movwf	140,c	;volatile
  3195                           
  3196                           ;../main.c: 153:     TRISE = 0x00;
  3197  0015CE  0E00               	movlw	0
  3198  0015D0  6E96               	movwf	150,c	;volatile
  3199                           
  3200                           ;../main.c: 154:     LATE = 0x00;
  3201  0015D2  0E00               	movlw	0
  3202  0015D4  6E8D               	movwf	141,c	;volatile
  3203  0015D6                     
  3204                           ;../main.c: 155:     SettingsLCD(0x06);
  3205  0015D6  0E06               	movlw	6
  3206  0015D8  EC0A  F00C         	call	_SettingsLCD
  3207  0015DC                     
  3208                           ;../main.c: 156:     SettingsLCD(0x0F);
  3209  0015DC  0E0F               	movlw	15
  3210  0015DE  EC0A  F00C         	call	_SettingsLCD
  3211  0015E2                     
  3212                           ;../main.c: 157:     SettingsLCD(0x38);
  3213  0015E2  0E38               	movlw	56
  3214  0015E4  EC0A  F00C         	call	_SettingsLCD
  3215  0015E8                     
  3216                           ;../main.c: 158:     SettingsLCD(0x01);
  3217  0015E8  0E01               	movlw	1
  3218  0015EA  EC0A  F00C         	call	_SettingsLCD
  3219  0015EE  0012               	return		;funcret
  3220  0015F0                     __end_of_settings:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _SettingsLCD *****************
  3224 ;; Defined at:
  3225 ;;		line 228 in file "../main.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  word            1    wreg     unsigned char 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  word            1    1[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3242 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3243 ;;Total ram usage:        1 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    1
  3246 ;; This function calls:
  3247 ;;		_LCD
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;;		_settings
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text15
  3255  001814                     __ptext15:
  3256                           	callstack 0
  3257  001814                     _SettingsLCD:
  3258                           	callstack 28
  3259                           
  3260                           ;incstack = 0
  3261                           ;SettingsLCD@word stored from wreg
  3262  001814  6E02               	movwf	SettingsLCD@word^0,c
  3263  001816                     
  3264                           ;../main.c: 229:     LATEbits.LATE1 = 0;
  3265  001816  928D               	bcf	141,1,c	;volatile
  3266  001818                     
  3267                           ;../main.c: 230:     LCD(word);
  3268  001818  5002               	movf	SettingsLCD@word^0,w,c
  3269  00181A  ECF8  F00B         	call	_LCD
  3270  00181E  0012               	return		;funcret
  3271  001820                     __end_of_SettingsLCD:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _WriteLCD *****************
  3275 ;; Defined at:
  3276 ;;		line 233 in file "../main.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  word            1    wreg     unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  word            1    1[COMRAM] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0
  3291 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3293 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3294 ;;Total ram usage:        1 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    1
  3297 ;; This function calls:
  3298 ;;		_LCD
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text16
  3305  001820                     __ptext16:
  3306                           	callstack 0
  3307  001820                     _WriteLCD:
  3308                           	callstack 29
  3309                           
  3310                           ;incstack = 0
  3311                           ;WriteLCD@word stored from wreg
  3312  001820  6E02               	movwf	WriteLCD@word^0,c
  3313  001822                     
  3314                           ;../main.c: 234:     LATEbits.LATE1 = 1;
  3315  001822  828D               	bsf	141,1,c	;volatile
  3316  001824                     
  3317                           ;../main.c: 235:     LCD(word);
  3318  001824  5002               	movf	WriteLCD@word^0,w,c
  3319  001826  ECF8  F00B         	call	_LCD
  3320  00182A  0012               	return		;funcret
  3321  00182C                     __end_of_WriteLCD:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _LCD *****************
  3325 ;; Defined at:
  3326 ;;		line 238 in file "../main.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  data            1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  data            1    0[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3343 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_SettingsLCD
  3350 ;;		_WriteLCD
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text17
  3355  0017F0                     __ptext17:
  3356                           	callstack 0
  3357  0017F0                     _LCD:
  3358                           	callstack 28
  3359                           
  3360                           ;incstack = 0
  3361                           ;LCD@data stored from wreg
  3362  0017F0  6E01               	movwf	LCD@data^0,c
  3363  0017F2                     
  3364                           ;../main.c: 239:     LATEbits.LATE0 = 1;
  3365  0017F2  808D               	bsf	141,0,c	;volatile
  3366  0017F4                     
  3367                           ;../main.c: 240:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3368  0017F4  0E42               	movlw	66
  3369  0017F6                     u1257:
  3370  0017F6  2EE8               	decfsz	wreg,f,c
  3371  0017F8  D7FE               	bra	u1257
  3372  0017FA  D000               	nop2	
  3373  0017FC                     
  3374                           ;../main.c: 241:     LATD = data;
  3375  0017FC  C001  FF8C         	movff	LCD@data,3980	;volatile
  3376  001800                     
  3377                           ;../main.c: 242:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3378  001800  0E42               	movlw	66
  3379  001802                     u1267:
  3380  001802  2EE8               	decfsz	wreg,f,c
  3381  001804  D7FE               	bra	u1267
  3382  001806  D000               	nop2	
  3383  001808                     
  3384                           ;../main.c: 243:     LATEbits.LATE0 = 0;
  3385  001808  908D               	bcf	141,0,c	;volatile
  3386  00180A                     
  3387                           ;../main.c: 244:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3388  00180A  0E42               	movlw	66
  3389  00180C                     u1277:
  3390  00180C  2EE8               	decfsz	wreg,f,c
  3391  00180E  D7FE               	bra	u1277
  3392  001810  D000               	nop2	
  3393  001812  0012               	return		;funcret
  3394  001814                     __end_of_LCD:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _WriteI2C *****************
  3398 ;; Defined at:
  3399 ;;		line 161 in file "../main.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  Address         1    wreg     unsigned char 
  3402 ;;  Register        1    2[COMRAM] unsigned char 
  3403 ;;  Data            2    3[COMRAM] PTR unsigned char 
  3404 ;;		 -> calendario(4), hora(3), 
  3405 ;;  bytes           2    5[COMRAM] int 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  Address         1    9[COMRAM] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3417 ;;      Params:         5       0       0       0       0       0       0       0       0
  3418 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3420 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3421 ;;Total ram usage:        8 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    2
  3424 ;; This function calls:
  3425 ;;		_SendI2C
  3426 ;;		_StartI2C
  3427 ;;		_StopI2C
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text18
  3434  001426                     __ptext18:
  3435                           	callstack 0
  3436  001426                     _WriteI2C:
  3437                           	callstack 28
  3438                           
  3439                           ;incstack = 0
  3440                           ;WriteI2C@Address stored from wreg
  3441  001426  6E0A               	movwf	WriteI2C@Address^0,c
  3442  001428                     
  3443                           ;../main.c: 162:     StartI2C();
  3444  001428  EC20  F00C         	call	_StartI2C	;wreg free
  3445                           
  3446                           ;../main.c: 163:     SendI2C(Address);
  3447  00142C  500A               	movf	WriteI2C@Address^0,w,c
  3448  00142E  EC16  F00C         	call	_SendI2C
  3449                           
  3450                           ;../main.c: 164:     SendI2C(Register);
  3451  001432  5003               	movf	WriteI2C@Register^0,w,c
  3452  001434  EC16  F00C         	call	_SendI2C
  3453  001438                     
  3454                           ;../main.c: 165:     for(i=0; i<bytes; i++){
  3455  001438  0E00               	movlw	0
  3456  00143A  0100               	movlb	0	; () banked
  3457  00143C  6FB0               	movwf	(_i+1)& (0+255),b
  3458  00143E  0E00               	movlw	0
  3459  001440  6FAF               	movwf	_i& (0+255),b
  3460  001442  EF2F  F00A         	goto	l1770
  3461  001446                     l1764:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;../main.c: 166:         SendI2C(*Data);
  3465  001446  C004  FFD9         	movff	WriteI2C@Data,fsr2l
  3466  00144A  C005  FFDA         	movff	WriteI2C@Data+1,fsr2h
  3467  00144E  50DF               	movf	indf2,w,c
  3468  001450  EC16  F00C         	call	_SendI2C
  3469  001454                     
  3470                           ;../main.c: 167:         Data++;
  3471  001454  4A04               	infsnz	WriteI2C@Data^0,f,c
  3472  001456  2A05               	incf	(WriteI2C@Data+1)^0,f,c
  3473  001458                     
  3474                           ;../main.c: 168:     }
  3475  001458  0100               	movlb	0	; () banked
  3476  00145A  4BAF               	infsnz	_i& (0+255),f,b
  3477  00145C  2BB0               	incf	(_i+1)& (0+255),f,b
  3478  00145E                     l1770:
  3479                           
  3480                           ; BSR set to: 0
  3481  00145E  5006               	movf	WriteI2C@bytes^0,w,c
  3482  001460  5DAF               	subwf	_i& (0+255),w,b
  3483  001462  51B0               	movf	(_i+1)& (0+255),w,b
  3484  001464  0A80               	xorlw	128
  3485  001466  6E08               	movwf	??_WriteI2C^0,c
  3486  001468  5007               	movf	(WriteI2C@bytes+1)^0,w,c
  3487  00146A  0A80               	xorlw	128
  3488  00146C  5808               	subwfb	??_WriteI2C^0,w,c
  3489  00146E  A0D8               	btfss	status,0,c
  3490  001470  EF3C  F00A         	goto	u1081
  3491  001474  EF3E  F00A         	goto	u1080
  3492  001478                     u1081:
  3493  001478  EF23  F00A         	goto	l1764
  3494  00147C                     u1080:
  3495  00147C                     
  3496                           ; BSR set to: 0
  3497                           ;../main.c: 169:     StopI2C();
  3498  00147C  EC1C  F00C         	call	_StopI2C	;wreg free
  3499  001480                     
  3500                           ;../main.c: 170:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3501  001480  0E0B               	movlw	11
  3502  001482  6E09               	movwf	(??_WriteI2C+1)^0,c
  3503  001484  0E26               	movlw	38
  3504  001486  6E08               	movwf	??_WriteI2C^0,c
  3505  001488  0E5E               	movlw	94
  3506  00148A                     u1287:
  3507  00148A  2EE8               	decfsz	wreg,f,c
  3508  00148C  D7FE               	bra	u1287
  3509  00148E  2E08               	decfsz	??_WriteI2C^0,f,c
  3510  001490  D7FC               	bra	u1287
  3511  001492  2E09               	decfsz	(??_WriteI2C+1)^0,f,c
  3512  001494  D7FA               	bra	u1287
  3513  001496  0012               	return		;funcret
  3514  001498                     __end_of_WriteI2C:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _ReadI2C *****************
  3518 ;; Defined at:
  3519 ;;		line 192 in file "../main.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  Address         1    wreg     unsigned char 
  3522 ;;  Register        1    3[COMRAM] unsigned char 
  3523 ;;  Data            2    4[COMRAM] PTR unsigned char 
  3524 ;;		 -> DatosCalendario(4), DatosHora(3), 
  3525 ;;  bytes           2    6[COMRAM] int 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  Address         1   10[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3537 ;;      Params:         5       0       0       0       0       0       0       0       0
  3538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3539 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3540 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        8 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    2
  3544 ;; This function calls:
  3545 ;;		_ReceiveI2C
  3546 ;;		_RepeatedStartI2C
  3547 ;;		_SendI2C
  3548 ;;		_StartI2C
  3549 ;;		_StopI2C
  3550 ;; This function is called by:
  3551 ;;		_main
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text19
  3556  00136E                     __ptext19:
  3557                           	callstack 0
  3558  00136E                     _ReadI2C:
  3559                           	callstack 28
  3560                           
  3561                           ;incstack = 0
  3562                           ;ReadI2C@Address stored from wreg
  3563  00136E  6E0B               	movwf	ReadI2C@Address^0,c
  3564  001370                     
  3565                           ;../main.c: 193:     StartI2C();
  3566  001370  EC20  F00C         	call	_StartI2C	;wreg free
  3567                           
  3568                           ;../main.c: 194:     SendI2C(Address);
  3569  001374  500B               	movf	ReadI2C@Address^0,w,c
  3570  001376  EC16  F00C         	call	_SendI2C
  3571                           
  3572                           ;../main.c: 195:     SendI2C(Register);
  3573  00137A  5004               	movf	ReadI2C@Register^0,w,c
  3574  00137C  EC16  F00C         	call	_SendI2C
  3575                           
  3576                           ;../main.c: 196:     RepeatedStartI2C();
  3577  001380  EC24  F00C         	call	_RepeatedStartI2C	;wreg free
  3578                           
  3579                           ;../main.c: 197:     SendI2C(Address|0x01);
  3580  001384  500B               	movf	ReadI2C@Address^0,w,c
  3581  001386  0901               	iorlw	1
  3582  001388  EC16  F00C         	call	_SendI2C
  3583  00138C                     
  3584                           ;../main.c: 198:     for(i=0; i<bytes; i++){
  3585  00138C  0E00               	movlw	0
  3586  00138E  0100               	movlb	0	; () banked
  3587  001390  6FB0               	movwf	(_i+1)& (0+255),b
  3588  001392  0E00               	movlw	0
  3589  001394  6FAF               	movwf	_i& (0+255),b
  3590  001396  EFF6  F009         	goto	l1790
  3591  00139A                     l1780:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;../main.c: 199:         if(i+1 == bytes){
  3595  00139A  0E01               	movlw	1
  3596  00139C  25AF               	addwf	_i& (0+255),w,b
  3597  00139E  6E09               	movwf	??_ReadI2C^0,c
  3598  0013A0  0E00               	movlw	0
  3599  0013A2  21B0               	addwfc	(_i+1)& (0+255),w,b
  3600  0013A4  6E0A               	movwf	(??_ReadI2C+1)^0,c
  3601  0013A6  5007               	movf	ReadI2C@bytes^0,w,c
  3602  0013A8  1809               	xorwf	??_ReadI2C^0,w,c
  3603  0013AA  E107               	bnz	u1091
  3604  0013AC  5008               	movf	(ReadI2C@bytes+1)^0,w,c
  3605  0013AE  180A               	xorwf	(??_ReadI2C+1)^0,w,c
  3606  0013B0  A4D8               	btfss	status,2,c
  3607  0013B2  EFDD  F009         	goto	u1091
  3608  0013B6  EFDF  F009         	goto	u1090
  3609  0013BA                     u1091:
  3610  0013BA  EFE9  F009         	goto	l1784
  3611  0013BE                     u1090:
  3612  0013BE                     
  3613                           ; BSR set to: 0
  3614                           ;../main.c: 200:             *Data = ReceiveI2C(1);
  3615  0013BE  0E01               	movlw	1
  3616  0013C0  ECCE  F00B         	call	_ReceiveI2C
  3617  0013C4  C005  FFD9         	movff	ReadI2C@Data,fsr2l
  3618  0013C8  C006  FFDA         	movff	ReadI2C@Data+1,fsr2h
  3619  0013CC  6EDF               	movwf	indf2,c
  3620                           
  3621                           ;../main.c: 201:         }else{
  3622  0013CE  EFF1  F009         	goto	l1786
  3623  0013D2                     l1784:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;../main.c: 202:             *Data = ReceiveI2C(0);
  3627  0013D2  0E00               	movlw	0
  3628  0013D4  ECCE  F00B         	call	_ReceiveI2C
  3629  0013D8  C005  FFD9         	movff	ReadI2C@Data,fsr2l
  3630  0013DC  C006  FFDA         	movff	ReadI2C@Data+1,fsr2h
  3631  0013E0  6EDF               	movwf	indf2,c
  3632  0013E2                     l1786:
  3633                           
  3634                           ;../main.c: 205:         Data++;
  3635  0013E2  4A05               	infsnz	ReadI2C@Data^0,f,c
  3636  0013E4  2A06               	incf	(ReadI2C@Data+1)^0,f,c
  3637  0013E6                     
  3638                           ;../main.c: 206:     }
  3639  0013E6  0100               	movlb	0	; () banked
  3640  0013E8  4BAF               	infsnz	_i& (0+255),f,b
  3641  0013EA  2BB0               	incf	(_i+1)& (0+255),f,b
  3642  0013EC                     l1790:
  3643                           
  3644                           ; BSR set to: 0
  3645  0013EC  5007               	movf	ReadI2C@bytes^0,w,c
  3646  0013EE  5DAF               	subwf	_i& (0+255),w,b
  3647  0013F0  51B0               	movf	(_i+1)& (0+255),w,b
  3648  0013F2  0A80               	xorlw	128
  3649  0013F4  6E09               	movwf	??_ReadI2C^0,c
  3650  0013F6  5008               	movf	(ReadI2C@bytes+1)^0,w,c
  3651  0013F8  0A80               	xorlw	128
  3652  0013FA  5809               	subwfb	??_ReadI2C^0,w,c
  3653  0013FC  A0D8               	btfss	status,0,c
  3654  0013FE  EF03  F00A         	goto	u1101
  3655  001402  EF05  F00A         	goto	u1100
  3656  001406                     u1101:
  3657  001406  EFCD  F009         	goto	l1780
  3658  00140A                     u1100:
  3659  00140A                     
  3660                           ; BSR set to: 0
  3661                           ;../main.c: 207:     StopI2C();
  3662  00140A  EC1C  F00C         	call	_StopI2C	;wreg free
  3663  00140E                     
  3664                           ;../main.c: 208:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  3665  00140E  0E0B               	movlw	11
  3666  001410  6E0A               	movwf	(??_ReadI2C+1)^0,c
  3667  001412  0E26               	movlw	38
  3668  001414  6E09               	movwf	??_ReadI2C^0,c
  3669  001416  0E5E               	movlw	94
  3670  001418                     u1297:
  3671  001418  2EE8               	decfsz	wreg,f,c
  3672  00141A  D7FE               	bra	u1297
  3673  00141C  2E09               	decfsz	??_ReadI2C^0,f,c
  3674  00141E  D7FC               	bra	u1297
  3675  001420  2E0A               	decfsz	(??_ReadI2C+1)^0,f,c
  3676  001422  D7FA               	bra	u1297
  3677  001424  0012               	return		;funcret
  3678  001426                     __end_of_ReadI2C:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _StopI2C *****************
  3682 ;; Defined at:
  3683 ;;		line 187 in file "../main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    1
  3704 ;; This function calls:
  3705 ;;		_ReadyI2C
  3706 ;; This function is called by:
  3707 ;;		_WriteI2C
  3708 ;;		_ReadI2C
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text20
  3713  001838                     __ptext20:
  3714                           	callstack 0
  3715  001838                     _StopI2C:
  3716                           	callstack 28
  3717  001838                     
  3718                           ;../main.c: 188:     ReadyI2C();
  3719  001838  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3720  00183C                     
  3721                           ;../main.c: 189:     PEN = 1;
  3722  00183C  84C5               	bsf	4037,2,c	;volatile
  3723  00183E  0012               	return		;funcret
  3724  001840                     __end_of_StopI2C:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _StartI2C *****************
  3728 ;; Defined at:
  3729 ;;		line 173 in file "../main.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3747 ;;Total ram usage:        0 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    1
  3750 ;; This function calls:
  3751 ;;		_ReadyI2C
  3752 ;; This function is called by:
  3753 ;;		_WriteI2C
  3754 ;;		_ReadI2C
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text21
  3759  001840                     __ptext21:
  3760                           	callstack 0
  3761  001840                     _StartI2C:
  3762                           	callstack 28
  3763  001840                     
  3764                           ;../main.c: 174:     ReadyI2C();
  3765  001840  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3766  001844                     
  3767                           ;../main.c: 175:     SEN = 1;
  3768  001844  80C5               	bsf	4037,0,c	;volatile
  3769  001846  0012               	return		;funcret
  3770  001848                     __end_of_StartI2C:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _SendI2C *****************
  3774 ;; Defined at:
  3775 ;;		line 182 in file "../main.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  data            1    wreg     unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  data            1    1[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:        1 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    1
  3796 ;; This function calls:
  3797 ;;		_ReadyI2C
  3798 ;; This function is called by:
  3799 ;;		_WriteI2C
  3800 ;;		_ReadI2C
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text22
  3805  00182C                     __ptext22:
  3806                           	callstack 0
  3807  00182C                     _SendI2C:
  3808                           	callstack 28
  3809                           
  3810                           ;incstack = 0
  3811                           ;SendI2C@data stored from wreg
  3812  00182C  6E02               	movwf	SendI2C@data^0,c
  3813  00182E                     
  3814                           ;../main.c: 183:     ReadyI2C();
  3815  00182E  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3816  001832                     
  3817                           ;../main.c: 184:     SSPBUF = data;
  3818  001832  C002  FFC9         	movff	SendI2C@data,4041	;volatile
  3819  001836  0012               	return		;funcret
  3820  001838                     __end_of_SendI2C:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _RepeatedStartI2C *****************
  3824 ;; Defined at:
  3825 ;;		line 211 in file "../main.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		_ReadyI2C
  3848 ;; This function is called by:
  3849 ;;		_ReadI2C
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text23
  3854  001848                     __ptext23:
  3855                           	callstack 0
  3856  001848                     _RepeatedStartI2C:
  3857                           	callstack 28
  3858  001848                     
  3859                           ;../main.c: 212:     ReadyI2C();
  3860  001848  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3861  00184C                     
  3862                           ;../main.c: 213:     RSEN = 1;
  3863  00184C  82C5               	bsf	4037,1,c	;volatile
  3864  00184E  0012               	return		;funcret
  3865  001850                     __end_of_RepeatedStartI2C:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _ReceiveI2C *****************
  3869 ;; Defined at:
  3870 ;;		line 216 in file "../main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  flag            1    wreg     unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  flag            1    1[COMRAM] unsigned char 
  3875 ;;  buffer          1    2[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3888 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        2 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    1
  3892 ;; This function calls:
  3893 ;;		_ReadyI2C
  3894 ;; This function is called by:
  3895 ;;		_ReadI2C
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text24
  3900  00179C                     __ptext24:
  3901                           	callstack 0
  3902  00179C                     _ReceiveI2C:
  3903                           	callstack 28
  3904                           
  3905                           ;incstack = 0
  3906                           ;ReceiveI2C@flag stored from wreg
  3907  00179C  6E02               	movwf	ReceiveI2C@flag^0,c
  3908  00179E                     
  3909                           ;../main.c: 217:     unsigned char buffer;;../main.c: 218:     ReadyI2C();
  3910  00179E  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3911  0017A2                     
  3912                           ;../main.c: 219:     RCEN = 1;
  3913  0017A2  86C5               	bsf	4037,3,c	;volatile
  3914                           
  3915                           ;../main.c: 220:     ReadyI2C();
  3916  0017A4  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3917  0017A8                     
  3918                           ;../main.c: 221:     buffer = SSPBUF;
  3919  0017A8  CFC9 F003          	movff	4041,ReceiveI2C@buffer	;volatile
  3920                           
  3921                           ;../main.c: 222:     ReadyI2C();
  3922  0017AC  ECE5  F00B         	call	_ReadyI2C	;wreg free
  3923  0017B0                     
  3924                           ;../main.c: 223:     ACKDT = flag==1? 1 : 0;
  3925  0017B0  0402               	decf	ReceiveI2C@flag^0,w,c
  3926  0017B2  B4D8               	btfsc	status,2,c
  3927  0017B4  EFDE  F00B         	goto	u1051
  3928  0017B8  EFE1  F00B         	goto	u1050
  3929  0017BC                     u1051:
  3930  0017BC  8AC5               	bsf	4037,5,c	;volatile
  3931  0017BE  EFE2  F00B         	goto	u1065
  3932  0017C2                     u1050:
  3933  0017C2  9AC5               	bcf	4037,5,c	;volatile
  3934  0017C4                     u1065:
  3935  0017C4                     
  3936                           ;../main.c: 224:     ACKEN = 1;
  3937  0017C4  88C5               	bsf	4037,4,c	;volatile
  3938  0017C6                     
  3939                           ;../main.c: 225:     return buffer;
  3940  0017C6  5003               	movf	ReceiveI2C@buffer^0,w,c
  3941  0017C8  0012               	return		;funcret
  3942  0017CA                     __end_of_ReceiveI2C:
  3943                           	callstack 0
  3944                           
  3945 ;; *************** function _ReadyI2C *****************
  3946 ;; Defined at:
  3947 ;;		line 178 in file "../main.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3961 ;;      Params:         0       0       0       0       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3963 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3964 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3965 ;;Total ram usage:        1 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_StartI2C
  3971 ;;		_SendI2C
  3972 ;;		_StopI2C
  3973 ;;		_RepeatedStartI2C
  3974 ;;		_ReceiveI2C
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text25
  3979  0017CA                     __ptext25:
  3980                           	callstack 0
  3981  0017CA                     _ReadyI2C:
  3982                           	callstack 28
  3983  0017CA                     l1642:
  3984  0017CA  CFC5 F001          	movff	4037,??_ReadyI2C	;volatile
  3985  0017CE  0E1F               	movlw	31
  3986  0017D0  1601               	andwf	??_ReadyI2C^0,f,c
  3987  0017D2  A4D8               	btfss	status,2,c
  3988  0017D4  EFEE  F00B         	goto	u991
  3989  0017D8  EFF0  F00B         	goto	u990
  3990  0017DC                     u991:
  3991  0017DC  EFE5  F00B         	goto	l1642
  3992  0017E0                     u990:
  3993  0017E0  B4C7               	btfsc	199,2,c	;volatile
  3994  0017E2  EFF5  F00B         	goto	u1001
  3995  0017E6  EFF7  F00B         	goto	u1000
  3996  0017EA                     u1001:
  3997  0017EA  EFE5  F00B         	goto	l1642
  3998  0017EE                     u1000:
  3999  0017EE  0012               	return		;funcret
  4000  0017F0                     __end_of_ReadyI2C:
  4001                           	callstack 0
  4002                           
  4003                           	psect	rparam
  4004  0000                     
  4005                           	psect	idloc
  4006                           
  4007                           ;Config register IDLOC0 @ 0x200000
  4008                           ;	unspecified, using default values
  4009  200000                     	org	2097152
  4010  200000  FF                 	db	255
  4011                           
  4012                           ;Config register IDLOC1 @ 0x200001
  4013                           ;	unspecified, using default values
  4014  200001                     	org	2097153
  4015  200001  FF                 	db	255
  4016                           
  4017                           ;Config register IDLOC2 @ 0x200002
  4018                           ;	unspecified, using default values
  4019  200002                     	org	2097154
  4020  200002  FF                 	db	255
  4021                           
  4022                           ;Config register IDLOC3 @ 0x200003
  4023                           ;	unspecified, using default values
  4024  200003                     	org	2097155
  4025  200003  FF                 	db	255
  4026                           
  4027                           ;Config register IDLOC4 @ 0x200004
  4028                           ;	unspecified, using default values
  4029  200004                     	org	2097156
  4030  200004  FF                 	db	255
  4031                           
  4032                           ;Config register IDLOC5 @ 0x200005
  4033                           ;	unspecified, using default values
  4034  200005                     	org	2097157
  4035  200005  FF                 	db	255
  4036                           
  4037                           ;Config register IDLOC6 @ 0x200006
  4038                           ;	unspecified, using default values
  4039  200006                     	org	2097158
  4040  200006  FF                 	db	255
  4041                           
  4042                           ;Config register IDLOC7 @ 0x200007
  4043                           ;	unspecified, using default values
  4044  200007                     	org	2097159
  4045  200007  FF                 	db	255
  4046                           
  4047                           	psect	config
  4048                           
  4049                           ;Config register CONFIG1L @ 0x300000
  4050                           ;	unspecified, using default values
  4051                           ;	PLL Prescaler Selection bits
  4052                           ;	PLLDIV = 0x0, unprogrammed default
  4053                           ;	System Clock Postscaler Selection bits
  4054                           ;	CPUDIV = 0x0, unprogrammed default
  4055                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4056                           ;	USBDIV = 0x0, unprogrammed default
  4057  300000                     	org	3145728
  4058  300000  00                 	db	0
  4059                           
  4060                           ;Config register CONFIG1H @ 0x300001
  4061                           ;	Oscillator Selection bits
  4062                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  4063                           ;	Fail-Safe Clock Monitor Enable bit
  4064                           ;	FCMEN = 0x0, unprogrammed default
  4065                           ;	Internal/External Oscillator Switchover bit
  4066                           ;	IESO = 0x0, unprogrammed default
  4067  300001                     	org	3145729
  4068  300001  0B                 	db	11
  4069                           
  4070                           ;Config register CONFIG2L @ 0x300002
  4071                           ;	unspecified, using default values
  4072                           ;	Power-up Timer Enable bit
  4073                           ;	PWRT = 0x1, unprogrammed default
  4074                           ;	Brown-out Reset Enable bits
  4075                           ;	BOR = 0x3, unprogrammed default
  4076                           ;	Brown-out Reset Voltage bits
  4077                           ;	BORV = 0x3, unprogrammed default
  4078                           ;	USB Voltage Regulator Enable bit
  4079                           ;	VREGEN = 0x0, unprogrammed default
  4080  300002                     	org	3145730
  4081  300002  1F                 	db	31
  4082                           
  4083                           ;Config register CONFIG2H @ 0x300003
  4084                           ;	Watchdog Timer Enable bit
  4085                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4086                           ;	Watchdog Timer Postscale Select bits
  4087                           ;	WDTPS = 0xF, unprogrammed default
  4088  300003                     	org	3145731
  4089  300003  1E                 	db	30
  4090                           
  4091                           ; Padding undefined space
  4092  300004                     	org	3145732
  4093  300004  FF                 	db	255
  4094                           
  4095                           ;Config register CONFIG3H @ 0x300005
  4096                           ;	unspecified, using default values
  4097                           ;	CCP2 MUX bit
  4098                           ;	CCP2MX = 0x1, unprogrammed default
  4099                           ;	PORTB A/D Enable bit
  4100                           ;	PBADEN = 0x1, unprogrammed default
  4101                           ;	Low-Power Timer 1 Oscillator Enable bit
  4102                           ;	LPT1OSC = 0x0, unprogrammed default
  4103                           ;	MCLR Pin Enable bit
  4104                           ;	MCLRE = 0x1, unprogrammed default
  4105  300005                     	org	3145733
  4106  300005  83                 	db	131
  4107                           
  4108                           ;Config register CONFIG4L @ 0x300006
  4109                           ;	Stack Full/Underflow Reset Enable bit
  4110                           ;	STVREN = 0x1, unprogrammed default
  4111                           ;	Single-Supply ICSP Enable bit
  4112                           ;	LVP = OFF, Single-Supply ICSP disabled
  4113                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4114                           ;	ICPRT = 0x0, unprogrammed default
  4115                           ;	Extended Instruction Set Enable bit
  4116                           ;	XINST = 0x0, unprogrammed default
  4117                           ;	Background Debugger Enable bit
  4118                           ;	DEBUG = 0x1, unprogrammed default
  4119  300006                     	org	3145734
  4120  300006  81                 	db	129
  4121                           
  4122                           ; Padding undefined space
  4123  300007                     	org	3145735
  4124  300007  FF                 	db	255
  4125                           
  4126                           ;Config register CONFIG5L @ 0x300008
  4127                           ;	unspecified, using default values
  4128                           ;	Code Protection bit
  4129                           ;	CP0 = 0x1, unprogrammed default
  4130                           ;	Code Protection bit
  4131                           ;	CP1 = 0x1, unprogrammed default
  4132                           ;	Code Protection bit
  4133                           ;	CP2 = 0x1, unprogrammed default
  4134                           ;	Code Protection bit
  4135                           ;	CP3 = 0x1, unprogrammed default
  4136  300008                     	org	3145736
  4137  300008  0F                 	db	15
  4138                           
  4139                           ;Config register CONFIG5H @ 0x300009
  4140                           ;	unspecified, using default values
  4141                           ;	Boot Block Code Protection bit
  4142                           ;	CPB = 0x1, unprogrammed default
  4143                           ;	Data EEPROM Code Protection bit
  4144                           ;	CPD = 0x1, unprogrammed default
  4145  300009                     	org	3145737
  4146  300009  C0                 	db	192
  4147                           
  4148                           ;Config register CONFIG6L @ 0x30000A
  4149                           ;	unspecified, using default values
  4150                           ;	Write Protection bit
  4151                           ;	WRT0 = 0x1, unprogrammed default
  4152                           ;	Write Protection bit
  4153                           ;	WRT1 = 0x1, unprogrammed default
  4154                           ;	Write Protection bit
  4155                           ;	WRT2 = 0x1, unprogrammed default
  4156                           ;	Write Protection bit
  4157                           ;	WRT3 = 0x1, unprogrammed default
  4158  30000A                     	org	3145738
  4159  30000A  0F                 	db	15
  4160                           
  4161                           ;Config register CONFIG6H @ 0x30000B
  4162                           ;	unspecified, using default values
  4163                           ;	Configuration Register Write Protection bit
  4164                           ;	WRTC = 0x1, unprogrammed default
  4165                           ;	Boot Block Write Protection bit
  4166                           ;	WRTB = 0x1, unprogrammed default
  4167                           ;	Data EEPROM Write Protection bit
  4168                           ;	WRTD = 0x1, unprogrammed default
  4169  30000B                     	org	3145739
  4170  30000B  E0                 	db	224
  4171                           
  4172                           ;Config register CONFIG7L @ 0x30000C
  4173                           ;	unspecified, using default values
  4174                           ;	Table Read Protection bit
  4175                           ;	EBTR0 = 0x1, unprogrammed default
  4176                           ;	Table Read Protection bit
  4177                           ;	EBTR1 = 0x1, unprogrammed default
  4178                           ;	Table Read Protection bit
  4179                           ;	EBTR2 = 0x1, unprogrammed default
  4180                           ;	Table Read Protection bit
  4181                           ;	EBTR3 = 0x1, unprogrammed default
  4182  30000C                     	org	3145740
  4183  30000C  0F                 	db	15
  4184                           
  4185                           ;Config register CONFIG7H @ 0x30000D
  4186                           ;	unspecified, using default values
  4187                           ;	Boot Block Table Read Protection bit
  4188                           ;	EBTRB = 0x1, unprogrammed default
  4189  30000D                     	org	3145741
  4190  30000D  40                 	db	64
  4191                           tosu	equ	0xFFF
  4192                           tosh	equ	0xFFE
  4193                           tosl	equ	0xFFD
  4194                           stkptr	equ	0xFFC
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           pcl	equ	0xFF9
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           indf0	equ	0xFEF
  4205                           postinc0	equ	0xFEE
  4206                           postdec0	equ	0xFED
  4207                           preinc0	equ	0xFEC
  4208                           plusw0	equ	0xFEB
  4209                           fsr0h	equ	0xFEA
  4210                           fsr0l	equ	0xFE9
  4211                           wreg	equ	0xFE8
  4212                           indf1	equ	0xFE7
  4213                           postinc1	equ	0xFE6
  4214                           postdec1	equ	0xFE5
  4215                           preinc1	equ	0xFE4
  4216                           plusw1	equ	0xFE3
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           bsr	equ	0xFE0
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           preinc2	equ	0xFDC
  4224                           plusw2	equ	0xFDB
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        67
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     20     148
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), text9(BANK0[5]), text8(BANK0[5]), text7(BANK0[5]), 
		 -> text6(BANK0[5]), text5(BANK0[5]), text4(BANK0[5]), text3(BANK0[5]), 
		 -> dma(BANK0[20]), smh(BANK0[20]), text2(BANK0[5]), text1(BANK0[5]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), text9(BANK0[5]), text8(BANK0[5]), text7(BANK0[5]), 
		 -> text6(BANK0[5]), text5(BANK0[5]), text4(BANK0[5]), text3(BANK0[5]), 
		 -> dma(BANK0[20]), smh(BANK0[20]), text2(BANK0[5]), text1(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S684_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> dma(BANK0[20]), smh(BANK0[20]), 

    ReadI2C@Data	PTR unsigned char  size(2) Largest target is 4
		 -> DatosCalendario(BANK0[4]), DatosHora(BANK0[3]), 

    WriteI2C@Data	PTR unsigned char  size(2) Largest target is 4
		 -> calendario(BANK0[4]), hora(BANK0[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _settings->_SettingsLCD
    _SettingsLCD->_LCD
    _WriteLCD->_LCD
    _WriteI2C->_SendI2C
    _ReadI2C->_ReceiveI2C
    _StopI2C->_ReadyI2C
    _StartI2C->_ReadyI2C
    _SendI2C->_ReadyI2C
    _RepeatedStartI2C->_ReadyI2C
    _ReceiveI2C->_ReadyI2C

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10078
                                             93 COMRAM     2     2      0
                            _ReadI2C
                        _SettingsLCD
                           _WriteI2C
                           _WriteLCD
                           _settings
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    7623
                                              0 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6968
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    6613
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5175
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2    1078
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0      44
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0      44
                                              1 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (1) _WriteLCD                                             1     1      0      44
                                              1 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteI2C                                             8     3      5     567
                                              2 COMRAM     8     3      5
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (1) _ReadI2C                                              8     3      5     678
                                              3 COMRAM     8     3      5
                         _ReceiveI2C
                   _RepeatedStartI2C
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (2) _StopI2C                                              0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _StartI2C                                             0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _SendI2C                                              1     1      0      22
                                              1 COMRAM     1     1      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _RepeatedStartI2C                                     0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _ReceiveI2C                                           2     2      0      45
                                              1 COMRAM     2     2      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _ReadyI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadI2C
     _ReceiveI2C
       _ReadyI2C
     _RepeatedStartI2C
       _ReadyI2C
     _SendI2C
       _ReadyI2C
     _StartI2C
       _ReadyI2C
     _StopI2C
       _ReadyI2C
   _SettingsLCD
     _LCD
   _WriteI2C
     _SendI2C
       _ReadyI2C
     _StartI2C
       _ReadyI2C
     _StopI2C
       _ReadyI2C
   _WriteLCD
     _LCD
   _settings
     _SettingsLCD
       _LCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      94       5       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      20        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 23 16:50:33 2021

                        _i 00AF                          _k 00AB                          _z 00AD  
              ReadI2C@Data 0005                        l210 17C8                        l204 1424  
                      l213 181E                        l207 184E                        l216 182A  
                      l219 1812                        l181 1496                        l190 17EE  
                      l175 15EE                        l184 1846                        l193 1836  
                      l196 183E                        l900 15A8                        l931 12EE  
                      l941 0D6C                        l934 1330                        l950 0E0A  
                      l943 0D74                        l936 136C                        l964 0FA8  
                      l980 14F8                        l973 11DC                        l966 100C  
                      l983 16F4                        l979 14F0                        l989 1764  
                      _LCD 17F0                        _PEN 007E2A                        u700 1728  
                      u630 11F0                        u710 12B8                        u631 11EC  
                      u711 12B4                        u640 1202                        u720 12DA  
                      u800 152C                        u641 11FE                        u721 12D6  
                      u650 122A                        u730 1330                        u810 1542  
                      u651 1226                        u731 132C                        u811 153E  
                      u660 1260                        u740 1340                        u900 0E86  
                      u820 0D44                        _SEN 007E28                        u661 125C  
                      u741 133C                        u821 0D40                        u750 175E  
                      u670 178E                        u910 0E9C                        u830 0D60  
                      u751 1758                        u671 178A                        u911 0E98  
                      u831 0D5C                        u760 1760                        u680 1632  
                      u920 0F04                        u840 0D8A                        u681 162E  
                      u841 0D86                        u770 16EE                        u690 1726  
                      u930 0F46                        u850 0DEE                        u771 16E8  
                      u691 1720                        u931 0F42                        u851 0DEA  
                      u780 16F0                        u940 0F64                        u860 0E38  
                      u941 0F60                        u925 0EF2                        u861 0E32  
                      u790 152A                        u950 0F7E                        u870 0E3A  
                      u791 1524                        u951 0F7A                        u960 0F98  
                      u880 0E50                        u961 0F94                        u881 0E4C  
                      u970 0FA8                        u890 0E84                        u971 0FA4  
                      u891 0E7E                        u980 0FB8                        u981 0FB4  
                      u990 17E0                        u991 17DC                        _dma 00B1  
                      _pad 12A8                        _smh 00C5                        wreg 000FE8  
             ReadI2C@bytes 0007                       ?_LCD 0001                       l1004 12A6  
                     l1012 1632                       l1021 179A                       l1015 1850  
                     l1031 1556                       l1026 154E                       l1037 172C  
                     l1500 11F0                       l1502 1202                       l1504 120C  
                     l1512 1766                       l1506 122A                       l1522 15F0  
                     l1514 1772                       l1530 16F6                       l1610 0E9C  
                     l1602 0E3E                       l1508 1260                       l1524 15FC  
                     l1516 1776                       l1540 12DA                       l1604 0E50  
                     l1612 0EB0                       l1620 0F2A                       l1710 1844  
                     l1526 160E                       l1518 178E                       l1550 1340  
                     l1542 12E6                       l1534 12A8                       l1630 0FB8  
                     l1622 0F46                       l1614 0EC0                       l1640 17CA  
                     l1720 1848                       l1712 182E                       l1704 1816  
                     l1560 16BA                       l1528 1612                       l1552 1354  
                     l1544 12FA                       l1536 12B8                       l1632 0FBE  
                     l1624 0F64                       l1616 0EC6                       l1608 0E8A  
                     l1800 1558                       l1642 17CA                       l1730 17B0  
                     l1722 184C                       l1714 1832                       l1650 17FC  
                     l1706 1818                       l1546 130E                       l1538 12CC  
                     l1570 1542                       l1634 0FCE                       l1626 0F7E  
                     l1618 0ECC                       l1802 156A                       l1644 17E0  
                     l1732 17C4                       l1724 179E                       l1708 1840  
                     l1716 1838                       l1652 1800                       l1556 172E  
                     l1548 1312                       l1564 14FA                       l1636 0FE4  
                     l1628 0F98                       l1580 0D60                       l1660 1032  
                     l1740 14A0                       l1804 1572                       l1900 0B2E  
                     l1820 086E                       l1812 081C                       l1734 17C6  
                     l1726 17A2                       l1718 183C                       l1654 1808  
                     l1646 17F2                       l1750 15B4                       l1590 0DC4  
                     l1582 0D8A                       l1574 0D34                       l1670 109E  
                     l1662 1040                       l1742 14AE                       l1806 157A  
                     l1910 0BA2                       l1902 0B56                       l1830 08B2  
                     l1822 087E                       l1814 0820                       l1728 17A8  
                     l1760 1428                       l1656 180A                       l1648 17F4  
                     l1752 15D6                       l1568 1530                       l1592 0DCA  
                     l1584 0D92                       l1576 0D44                       l1672 10B4  
                     l1680 113A                       l1664 1052                       l1744 14D4  
                     l1808 1596                       l1920 0BFA                       l1912 0BAE  
                     l1904 0B62                       l1840 0904                       l1832 08B8  
                     l1824 0884                       l1816 083A                       l1770 145E  
                     l1762 1438                       l1754 15DC                       l1746 15AA  
                     l1498 11DE                       l1594 0DD2                       l1586 0DB2  
                     l1578 0D46                       l1682 115E                       l1690 118C  
                     l1674 10C2                       l1666 1056                       l1658 100E  
                     l1738 1498                       l1930 0C58                       l1922 0C0C  
                     l1914 0BC0                       l1906 0B74                       l1850 096A  
                     l1842 0928                       l1826 0894                       l1834 08E0  
                     l1818 0854                       l1780 139A                       l1772 147C  
                     l1764 1446                       l1756 15E2                       l1748 15B2  
                     l1596 0DEE                       l1588 0DBA                       l1692 119A  
                     l1684 116C                       l1676 10FE                       l1668 107A  
                     l1940 0CAA                       l1932 0C5E                       l1924 0C12  
                     l1916 0BC6                       l1908 0B7A                       l1860 09B8  
                     l1852 097C                       l1844 092E                       l1836 08EC  
                     l1828 08A0                       l1782 13BE                       l1790 13EC  
                     l1774 1480                       l1766 1454                       l1758 15E8  
                     l1598 0DFE                       l1686 1180                       l1934 0C86  
                     l1926 0C3A                       l1918 0BEE                       l1862 09DE  
                     l1870 0A28                       l1854 0982                       l1846 0936  
                     l1838 08FE                       l1792 140A                       l1784 13D2  
                     l1776 1370                       l1768 1458                       l1696 11A6  
                     l1936 0C92                       l1928 0C46                       l1944 0CD2  
                     l1880 0A90                       l1872 0A42                       l1864 09EC  
                     l1848 095C                       l1856 09AA                       l1794 140E  
                     l1786 13E2                       l1778 138C                       l1698 11CA  
                     l1970 0CF2                       l1938 0CA4                       l1890 0ADC  
                     l1882 0A96                       l1874 0A48                       l1866 09FE  
                     l1858 09B0                       l1788 13E6                       l1796 1822  
                     l1892 0AE2                       l1876 0A70                       l1868 0A04  
                     l1798 1824                       l1894 0B0A                       l1886 0ABE  
                     l1878 0A7E                       ?_pad 0011                       l1896 0B16  
                     l1888 0ACA                       l1898 0B28                       STR_1 080E  
                     STR_2 080E                       STR_3 0801                       u1000 17EE  
                     u1001 17EA                       u1010 1032                       u1011 102E  
                     u1100 140A                       u1020 107A                       u1101 1406  
                     u1021 1076                       u1030 109E                       u1110 087E  
                     u1031 109A                       u1111 087A                       u1040 115E  
                     u1200 0B9E                       u1120 0894                       u1041 115A  
                     u1201 0B9A                       u1121 0890                       u1050 17C2  
                     u1210 0BEA                       u1130 08DC                       u1051 17BC  
                     u1211 0BE6                       u1131 08D8                       u1220 0C36  
                     u1140 0928                       u1221 0C32                       u1141 0924  
                     u1070 14F0                       u1230 0C82                       u1150 09A6  
                     u1071 14EC                       u1231 0C7E                       u1151 09A2  
                     u1080 147C                       u1240 0CCE                       u1160 0A28  
                     u1065 17C4                       u1081 1478                       u1241 0CCA  
                     u1161 0A24                       u1090 13BE                       u1170 0ABA  
                     u1091 13BA                       u1171 0AB6                       u1180 0B06  
                     u1181 0B02                       u1190 0B52                       u1191 0B4E  
                     _LATD 000F8C                       u1257 17F6                       _LATE 000F8D  
                     u1267 1802                       u1277 180C                       u1287 148A  
                     u1297 1418                       _RCEN 007E2B                       _RSEN 007E29  
                     _dbuf 0114                       _days 0060                       _main 081C  
                     _name 0067                       _hora 00A0                       _prec 00A7  
                     _nout 00A3                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001A                       fsr2l 000FD9  
                     _xtoa 0D34                       start 0000                _toupper$847 000D  
             ___param_bank 000000            __end_of_ReadI2C 1426                      ??_LCD 0001  
          __end_of_SendI2C 1838                      ??_pad 0017            __end_of_StopI2C 1840  
               _Clock_type 006E                      ?_main 0001                      _ACKEN 007E2C  
                    _ACKDT 007E2D                      ?_xtoa 001C                      _AM_PM 006D  
             vfpfcnvrt@fmt 0045               vfpfcnvrt@llu 004D                      _TRISD 000F95  
                    _TRISE 000F96             ReadI2C@Address 000B                      _flags 00A9  
                    _fputc 11DE            __end_of_isalpha 16F6                      _fputs 15F0  
                    _text1 0097                      _text2 0092                      _text3 008D  
                    _text4 0088                      _text5 0083                      _text6 007E  
                    _text7 0079                      _text8 0074                      _text9 006F  
                    pad@fp 0011                      _width 00A5                      _putch 1850  
          __end_of_islower 172E            __end_of_isupper 1766                      tablat 000FF5  
                    status 000FD8            __end_of_sprintf 15AA                      xtoa@c 0041  
                    xtoa@d 001E                      xtoa@i 003F                      xtoa@n 0037  
                    xtoa@p 0033                      xtoa@w 0035                      xtoa@x 0026  
          __end_of_toupper 1558          ?_RepeatedStartI2C 0001            __initialization 1678  
             __end_of_main 0D34         ??_RepeatedStartI2C 0002               __end_of_xtoa 100E  
         __end_of_ReadyI2C 17F0                     ??_main 005E                 _ReceiveI2C 179C  
                   ??_xtoa 0027              __activetblptr 000002                SendI2C@data 0002  
         __end_of_StartI2C 1848                     _ADCON1 000FC1                     ?_fputc 0001  
                   ?_fputs 000A           __end_of_WriteI2C 1498                     ?_putch 0001  
         __end_of_WriteLCD 182C                     _OSCCON 000FD3                     _SSPADD 000FC8  
                   _SSPBUF 000FC9                  ??_ReadI2C 0009                  ??_SendI2C 0002  
             vfprintf@cfmt 005C                  ??_StopI2C 0002                     _buffer 0100  
                   clear_0 169E                     clear_1 16AA                     pad@buf 0013  
             WriteI2C@Data 0004                     _strlen 1766                     fputc@c 0001  
                   fputs@c 000E                     fputs@i 000F                     fputs@s 000A  
                ??_isalpha 0003            ReadI2C@Register 0004                  ??_islower 0003  
             __mediumconst 0000              ??_SettingsLCD 0002           __end_of_settings 15F0  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                     putch@c 0001           __end_of_vfprintf 14FA  
                ??_sprintf 005E                     xtoa@fp 001C                  ??_toupper 0009  
               __accesstop 0060    __end_of__initialization 16B0               WriteLCD@word 0002  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 1634  
            __end_of_fputc 12A8              __end_of_fputs 1634              __end_of_putch 1852  
              ?_ReceiveI2C 0001                 _calendario 009C                    ??_fputc 0005  
                  ??_fputs 000E                    ??_putch 0001                    LCD@data 0001  
               __pbssBANK0 00A3                 __pbssBANK1 0100        __end_of_SettingsLCD 1820  
                ?_ReadyI2C 0001                  ?_StartI2C 0001                  ?_WriteI2C 0003  
                ?_WriteLCD 0001                    ?_strlen 0001         __size_of_vfpfcnvrt 01D0  
                  _SSPCON1 000FC6                    _SSPCON2 000FC5                    _SSPSTAT 000FC7  
               ??_ReadyI2C 0001                    _ReadI2C 136E        __size_of_ReceiveI2C 002E  
                  _SendI2C 182C                    __Hparam 0000                    __Lparam 0000  
                  _StopI2C 1838                  ?_settings 0001                 ??_StartI2C 0002  
                ?_vfprintf 0056               __psmallconst 0800                    __pcinit 1678  
               ??_WriteI2C 0008                 ??_WriteLCD 0002                    __ramtop 0800  
                  __ptext0 081C                    __ptext1 1558                    __ptext2 1498  
                  __ptext3 100E                    __ptext4 0D34                    __ptext5 14FA  
                  __ptext6 16F6                    __ptext7 12A8                    __ptext8 1766  
                  __ptext9 15F0               __size_of_LCD 0024            __size_of_strlen 0036  
             __size_of_pad 00C6                    _isalpha 16BA  __size_of_RepeatedStartI2C 0008  
                  _islower 16F6                    _isupper 172E                _SettingsLCD 1814  
                  _sprintf 1558                    _toupper 14FA       end_of_initialization 16B0  
            WriteI2C@bytes 0006                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C          __end_of_vfpfcnvrt 11DE                    postdec1 000FE5  
                  postdec2 000FDD                 ??_settings 0003                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 005C  
                  strlen@a 0003                    strlen@s 0001                  _TRISBbits 000F93  
           ReceiveI2C@flag 0002                  _DatosHora 00DD           WriteI2C@Register 0003  
              vfpfcnvrt@ap 0047                vfpfcnvrt@fp 0043               ??_ReceiveI2C 0002  
           __end_of_strlen 179C        start_initialization 1678                __end_of_LCD 1814  
              __end_of_pad 136E          __size_of_ReadyI2C 0026         __end_of_ReceiveI2C 17CA  
              vfprintf@fmt 0058                __pdataBANK0 0060          __size_of_StartI2C 0008  
                 ??_strlen 0003          __size_of_WriteI2C 0072          __size_of_WriteLCD 000C  
         _RepeatedStartI2C 1848              __pcstackBANK0 00E0                   ?_ReadI2C 0004  
                 ?_SendI2C 0001                   ?_StopI2C 0001          __size_of_settings 0046  
        __size_of_vfprintf 0062                __smallconst 0800                   ?_isalpha 0001  
                 ?_islower 0001                   ?_isupper 0001               ?_SettingsLCD 0001  
                 ?_sprintf 00E0             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_toupper 0007             __size_of_putch 0002                   _LATEbits 000F8D  
                _vfpfcnvrt 100E            WriteI2C@Address 000A                 vfpfcnvrt@c 0055  
                copy_data0 168C                   _ReadyI2C 17CA           __size_of_ReadI2C 00B8  
                 __Hrparam 0000           __size_of_SendI2C 000C                 vfprintf@ap 005A  
                 __Lrparam 0000                 vfprintf@fp 0056                   _StartI2C 1840  
         __size_of_StopI2C 0008                 ?_vfpfcnvrt 0043                   _WriteI2C 1426  
                 _WriteLCD 1820                 sprintf@fmt 00E2           __size_of_isalpha 003C  
         __size_of_islower 0038                   __ptext10 11DE                   __ptext11 1850  
                 __ptext20 1838                   __ptext12 172E                   __ptext21 1840  
                 __ptext13 16BA                   __ptext22 182C                   __ptext14 15AA  
                 __ptext23 1848                   __ptext15 1814                   __ptext24 179C  
                 __ptext16 1820                   __ptext25 17CA                   __ptext17 17F0  
                 __ptext18 1426                   __ptext19 136E           __size_of_isupper 0038  
         __size_of_sprintf 0052           __size_of_toupper 005E              __size_of_main 0518  
            __size_of_xtoa 02DA   __end_of_RepeatedStartI2C 1850                   _settings 15AA  
                 _xtoa$764 002F                   _xtoa$765 0031                   _vfprintf 1498  
                 isalpha@c 0001       __size_of_SettingsLCD 000C                  sprintf@ap 00EC  
                 islower@c 0001                   isupper@c 0001                ??_vfpfcnvrt 0049  
                 sprintf@f 00EE                   sprintf@s 00E0                   toupper@c 0007  
          SettingsLCD@word 0002            _DatosCalendario 00D9           ReceiveI2C@buffer 0003  
